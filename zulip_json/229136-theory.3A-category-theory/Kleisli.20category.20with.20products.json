[
    {
        "content": "<p>What structure on a monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> do we need such that its Kleisli category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">K</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Kl}(T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Kl</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span> is cartesian?</p>\n<p>I'm noticing that the Kleisli category of the powerset monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">K</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Kl}(\\mathcal{P})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Kl</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mclose\">)</span></span></span></span> has products (given by disjoint union of sets). On the other hand, Kleisli categories of any of the usual probability monads don't have products.</p>\n<p>Both of these Kleisli categories describe kinds of nondeterministic processes, and it was my understanding nondeterminism =&gt; noncartesianity.<br>\nFor instance, Markov categories are famously non-deterministic, and the subcategory of their deterministic processes is precisely the cartesian subcategory.</p>\n<p>But in the case of the Kleisli category of the powerset monad (i.e. the category of relations) that intuition seems to be violated.</p>",
        "id": 305209264,
        "sender_full_name": "Bruno GavranoviÄ‡",
        "timestamp": 1666289456
    },
    {
        "content": "<p>The forgetful functor from the Kleisli category for a monad T creates products when T preserves them, so that's a sufficient condition.</p>",
        "id": 305215875,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1666291692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276875\">Bruno Gavranovic</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Kleisli.20category.20with.20products/near/305209264\">said</a>:</p>\n<blockquote>\n<p>What structure on a monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> do we need such that its Kleisli category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">K</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Kl}(T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Kl</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span> is cartesian?</p>\n<p>I'm noticing that the Kleisli category of the powerset monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">K</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Kl}(\\mathcal{P})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Kl</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mclose\">)</span></span></span></span> has products (given by disjoint union of sets). On the other hand, Kleisli categories of any of the usual probability monads don't have products.</p>\n<p>Both of these Kleisli categories describe kinds of nondeterministic processes, and it was my understanding nondeterminism =&gt; noncartesianity.<br>\nFor instance, Markov categories are famously non-deterministic, and the subcategory of their deterministic processes is precisely the cartesian subcategory.</p>\n<p>But in the case of the Kleisli category of the powerset monad (i.e. the category of relations) that intuition seems to be violated.</p>\n</blockquote>\n<p>Part of the structure of Markov category is a (specified) tensor product. <br>\nWhen you form a Kleisli category (of a commutative monad over a cartesian category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>) and consider it a Markov category, you are taking as monoidal product the one induced by the cartesian product of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>. In the case of the power set monad, that's the one induced by the cartesian product of sets. <br>\nIf you take another monoidal product on the Kleisli category, for example the disjoint union, then you have a different Markov category, with different structure and interpretation.</p>",
        "id": 305301067,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1666340280
    },
    {
        "content": "<p>If the Kleisli category is <a href=\"https://ncatlab.org/nlab/show/biproduct\">semiadditive</a>, then finite coproducts and finite products coincide. The Kleisli category has finite coproducts so long as the underlying category for the monad has finite coproducts, so in this case it will also have finite products. This gives a large class of examples which includes the powerset monad (if the powerset monad is the one I think it is -- with algebras the complete lattices).</p>\n<p>Beyond that, one case where you have products is if <a href=\"https://mathoverflow.net/questions/157974/varieties-where-every-algebra-is-free\">every algebra is free</a> (and the underlying category has products).  But this doesn't happen too often. The monad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span> whose algebras are pointed sets is an example. So is the monad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span> whose algebras are \"torsors over a varying division algebra\".</p>",
        "id": 305560867,
        "sender_full_name": "Tim Campion",
        "timestamp": 1666457477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276875\">Bruno Gavranovic</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Kleisli.20category.20with.20products/near/305209264\">said</a>:</p>\n<blockquote>\n<p>What structure on a monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> do we need such that its Kleisli category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">K</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Kl}(T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Kl</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span> is cartesian?</p>\n<p>I'm noticing that the Kleisli category of the powerset monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">K</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Kl}(\\mathcal{P})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Kl</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mclose\">)</span></span></span></span> has products (given by disjoint union of sets). On the other hand, Kleisli categories of any of the usual probability monads don't have products.</p>\n<p>Both of these Kleisli categories describe kinds of nondeterministic processes, and it was my understanding nondeterminism =&gt; noncartesianity.<br>\nFor instance, Markov categories are famously non-deterministic, and the subcategory of their deterministic processes is precisely the cartesian subcategory.</p>\n<p>But in the case of the Kleisli category of the powerset monad (i.e. the category of relations) that intuition seems to be violated.</p>\n</blockquote>\n<p>it helps to make the question more precise. first off, the category of all algebras (usually the EM-presentation) inherits the cartesian product from the base category, so one situation to get out of the way is the question when does the inclusion of free algebras into all algebras (ie KL into EM) reflect products. for the product of free algebras to be even just a tensor product the monad must be commutative. that is if and only if. (if it is not commutative but just strong, we get john power's and edmund robinson's premonoidal structure.) now for that monoidal structure to be cartesian, we need the diagonals and the projections (which are always inherited) to be natural. the first obviously boils down to the monad unit being cartesian. the second seems like a separation of the algebraic operations (like the commutativity of the monad is the commutativity of the operations). it must have been spelled out in universal algebra papers from the 70s, gratzer or people like that. maybe even in johnstone's papers about varieties.</p>\n<p>but you are asking a more general question: when is the kleisli category itself cartesian, without the requirement that the cartesian product of free algebras is the same as the product of algebras.<br>\nsince free algebras of course always inherit the coproducts from the base category, if the coproducts happen to be biproducts, there we go. that covers your example of free semilattices, also free abelian monoids (ie the powerset and the multiset monads). the category of free abelian monoids is the free category with biproducts and the category of relations is the free one with biproducts and idempotent scalars. but those examples are of course very special. the general property that there is a free algebra that is universal for pairs of homomorphisms into free algebras seems like an interesting question in universal algebra. it involves the separation property within the signature like above, but maybe it gets complicated down the road. not sure. could be a paper in it.</p>\n<p>the idea that \"Markov categories are famously nondeterministic\" seems wrongheaded to me. take the category of pointed sets, or partial functions (which are the same over decidable sets). this is of course a kleisli category, and it couldn't be more deterministic. take its slice into 1. this is a markov category. it still couldn't be more deterministic, could it? everything in it is single-valued. take the slice into 1 of <em>any</em> kleisli category over a cartesian category -- you get a markov category. nondeterminism is incidental to whatever monad you start from.</p>\n<p>it is of course important to always think of examples. but in this case it is interesting how examples can be misleading :)</p>\n<p>in any case, you have been asking nice questions recently :)</p>",
        "id": 305583283,
        "sender_full_name": "dusko",
        "timestamp": 1666470285
    },
    {
        "content": "<p>A silly terminological point: in a Markov category, the monoidal unit is required to be terminal. In other words, every morphism in a Markov category is total. The category of partial functions is therefore not a Markov category (with respect to cartesian product as monoidal structure). What <span class=\"user-mention\" data-user-id=\"294557\">@dusko</span> calls a \"Markov category\" is known as a <a href=\"https://link.springer.com/article/10.1023/A:1008647417502\">gs-monoidal category</a> or <a href=\"https://arxiv.org/abs/1709.00322\">CD category</a>.</p>\n<p>So <span class=\"user-mention\" data-user-id=\"276875\">@Bruno Gavranovic</span> is right with his statement that Markov categories are all about nondeterminism. To be more precise, a Markov category in which all morphisms are deterministic is the same thing as a cartesian monoidal category, and these are quite boring and degenerate as Markov categories.</p>",
        "id": 305639197,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1666516938
    },
    {
        "content": "<p>I'm not saying that Markov categories are necessarily more interesting than the gs-monoidal categories that Dusko seems to have in mind. I'm just trying to clarify the terminology.</p>",
        "id": 305639253,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1666516999
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276702\">Tobias Fritz</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Kleisli.20category.20with.20products/near/305639197\">said</a>:</p>\n<blockquote>\n<p>A silly terminological point: in a Markov category, the monoidal unit is required to be terminal. In other words, every morphism in a Markov category is total. The category of partial functions is therefore not a Markov category (with respect to cartesian product as monoidal structure). What <span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> calls a \"Markov category\" is known as a <a href=\"https://link.springer.com/article/10.1023/A:1008647417502\">gs-monoidal category</a> or <a href=\"https://arxiv.org/abs/1709.00322\">CD category</a>.</p>\n<p>So <span class=\"user-mention silent\" data-user-id=\"276875\">Bruno Gavranovic</span> is right with his statement that Markov categories are all about nondeterminism. To be more precise, a Markov category in which all morphisms are deterministic is the same thing as a cartesian monoidal category, and these are quite boring and degenerate as Markov categories.</p>\n</blockquote>\n<p>if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\cal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> is a monoidal category with tensor unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>, then the slice category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"normal\">/</mi><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">{\\cal C}/I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> is a monoidal category whose tensor unit is terminal. for any commutative monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> over a cartesian category, the kleisli category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mi>l</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Kl(T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span> is monoidal, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mi>l</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">Kl(T)/1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mord\">/1</span></span></span></span> has the identity on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> as the terminal object. the slice <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>f</mi><mi>n</mi><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">Pfn/1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">/1</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>f</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">Pfn</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">n</span></span></span></span> is the category of partial functions, has the identity on 1 as the terminal object. it satisfies all axioms of a markov category. ah, i see, the diagonal was natural already in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>f</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">Pfn</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">n</span></span></span></span>, so now we have a cartesian category. but this is incidental. <em>any commutative monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> what.so.ever gives a markov category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mi>l</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">Kl(T)/1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mord\">/1</span></span></span></span>.</em> are we saying that all commutative monads whatsoever accommodate markov chains and probability theory? last time i mentioned that  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>l</mi><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">Rel/1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\">/1</span></span></span></span> is a completely nondegenerate example of a markov category. andrey markov introduced the markov chains to study conditional probabilities of words in pushkin's \"eveniy oniegin\" back in 1906. there are no markov chains in  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>l</mi><mi mathvariant=\"normal\">/</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">Rel/1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\">/1</span></span></span></span>. with all due respect to your otherwise thorough and much appreciated work, it's unfair to markov to distract from his work by attaching his name to a framework where he couldn't count the word frequencies. it distracts from his ideas, used by kolmogorov and shannon and GPT3 and attracts attention to the long-standing tradition of categorical terminological infelicities.</p>\n<p>\"cartesian monoidal categories\" is another example. it seems to suggest that there are cartesian non-monoidal categories. someone said that the qualifier \"cartesian monoidal\" is justified by the fact that peter freyd used \"cartesian\" for \"finitely complete\", and ptj adopted it in the elephants. so \"cartesian monoidal\" then does not imply \"cartesian\" anymore.</p>\n<p>it would be nice if you would mention somewhere that monoidal categories with a chosen comonoid on every object have been classified to some degree of detail in the \"classical  and quantum structuralism\" paper by bob coecke and eric paquette and me, back in the 2000s (on arxiv i am sure). none of us will mind if we need to call them gs-monoidal or CD, but saying that the categories with comonoids where the counit is terminal characterize probability is a little optimistic.</p>",
        "id": 305697680,
        "sender_full_name": "dusko",
        "timestamp": 1666552573
    },
    {
        "content": "<p>PS i was also a little optimistic above. bob and eric and i bob and eric i did characterize stochastic operators in the structuralism paper a bit more tightly --- BUT using the classical (basis) structures, which are not just comonoids but frobenius algebras. so so the question is: can we characterize  positive maps without a dagger? that is i guess what already alberti and uhlmann in their book had been struggling with...</p>",
        "id": 305702924,
        "sender_full_name": "dusko",
        "timestamp": 1666555416
    },
    {
        "content": "<p>Right. Note that I've never claimed that Markov categories characterize probability or that all commutative monads accommodate Markov chains and probability (whatever that means exactly). And as you're rightly intuiting, that's far from true! For example, we've proven de Finetti's theorem in purely categorical terms based on a number of additional axioms, among which the existence of conditionals is the most important. And then there are other Markov categories, in particular versions of Rel, in which de Finetti's theorem can be formulated but ends up being false. Nevertheless, I think that it's a useful intuition to think of a morphism in an arbitrary Markov category as an <em>abstract generalization</em> of a Markov kernel.</p>\n<p>Perhaps embarrassingly, I don't know much about Markov's work at all, so maybe you're right that the name \"Markov category\" is a big stretch relative to that. That being said, there are also other relevant considerations in addition to historical accuracy, in particular how useful and evocative a term is for us in the present and in the future. And in that respect, \"Markov category\" seems to perform better than the terms \"affine CD category\" (Cho &amp; Jacobs 2017) and \"category of information transformers\" (Golubtsov, late 90's, modulo some technical differences).</p>\n<p>Perhaps you would have similar reservations about the term \"abelian category\"? I personally think that it's a perfectly good name, and better than \"model category\" for sure.</p>\n<p>Yes, I'm aware of a lot of other literature that involves Frobenius structures and/or daggers, in particular by Bob and various sets of coauthors. As far as classical probability is concerned, the problem with that is that it cannot accommodate measure-theoretic probability.</p>",
        "id": 305755676,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1666593492
    },
    {
        "content": "<p>Thanks for all the responses! I think I understand what my confusion was after <span class=\"user-mention\" data-user-id=\"275989\">@Paolo Perrone</span>'s answer.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"275989\">Paolo Perrone</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Kleisli.20category.20with.20products/near/305301067\">said</a>:</p>\n<blockquote>\n<p>Part of the structure of Markov category is a (specified) tensor product. <br>\nWhen you form a Kleisli category (of a commutative monad over a cartesian category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>) and consider it a Markov category, you are taking as monoidal product the one induced by the cartesian product of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>. In the case of the power set monad, that's the one induced by the cartesian product of sets. <br>\nIf you take another monoidal product on the Kleisli category, for example the disjoint union, then you have a different Markov category, with different structure and interpretation.</p>\n</blockquote>\n<p>Right, I was confused about the fact that the monoidal product I had in mind of the Kleisli category of the powerset monad is cartesian, but I was forgetting that it was induced in a different way than we usually induce the monoidal product of the Kleisli category of the distribution monad. The latter is induced by the cartesian product in the base, whereas in the former I used the coproduct.</p>\n<p>So this makes a bit more sense now</p>",
        "id": 306020060,
        "sender_full_name": "Bruno GavranoviÄ‡",
        "timestamp": 1666702016
    }
]