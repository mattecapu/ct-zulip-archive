[
    {
        "content": "<p>Hello,<br>\nI'm having to deal with <a href=\"https://ncatlab.org/nlab/show/double%20profunctors\">[[double profunctors]]</a> recently and it's not clear to me what are the problems with their composition. There's very limited sources on the topic, so I thought to ask here.<br>\nThe nLab says double profunctors cannot be composed as their composition involves commuting colimits and pullbacks in Cat, which we know doesn't work in general since non every functor is exponentiable. More precisely, the composition of two double profunctors can be defined but the resulting composition operation doesn't seem to be associative.<br>\nNow, recently I've been talking with <span class=\"user-mention\" data-user-id=\"276823\">@Brandon Shapiro</span> who explained to me that the definition of profunctors as <a href=\"https://ncatlab.org/joyalscatlab/published/Distributors+and+barrels\">barrels</a> (which are nothing but functors into the walking arrow) can be generalized to the case of double categories. In this way we recover three kinds of double profunctors: horizontal double profunctors are double functors into the walking horizontal arrow, vertical double profunctors are double functors into the walking vertical arrow, and finally 'square' double profunctors are double functors into the walking square.<br>\nI didn't check explicitly but Brandon's claim seems very plausible to me. Take the case of a horizontal double profunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">B</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">B</span></span></span></span> is embodied by a double functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">A</mi><mi>P</mi><mi mathvariant=\"double-struck\">B</mi><mo>→</mo><mi>h</mi><mn mathvariant=\"bold\">2</mn></mrow><annotation encoding=\"application/x-tex\">\\mathbb AP\\mathbb B \\to h\\bf 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathbb\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord\"><span class=\"mord mathbf\">2</span></span></span></span></span> whose fibers are, respectively <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">B</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">B</span></span></span></span>. The data and functoriality of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> correspond to that of the hom-set of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">A</mi><mi>P</mi><mi mathvariant=\"double-struck\">B</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb AP\\mathbb B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathbb\">B</span></span></span></span>.<br>\nNow one can compose double profunctors represented in this way in the same exact way one composes profunctors represented in this way, which is represented by this diagram (this is composition of profunctors in Cat):<br>\n<a href=\"/user_uploads/21317/592KbAqd2CaaSCzdwyE3RTkL/image.png\">image.png</a> <br>\nHere <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> is the walking object, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> is the walking arrow, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> is the walking composable pair of arrows, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mo>:</mo><mn>2</mn><mo>→</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">comp : 2 \\to 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> maps the only arrow in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> to the composite arrow in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>.<br>\nBasically you take a pushout and then pullback the resulting functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>P</mi><mi>B</mi><mi>Q</mi><mi>C</mi><mo>→</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">APBQC \\to 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">PBQC</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> along <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">comp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span></span></span></span>, forgetting about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>.<br>\nWhen I look at this I see why composition of profunctors is not associative: we are pulling back a pushout, and we are doing it along the <a href=\"https://ncatlab.org/nlab/show/Conduch%C3%A9+functor\">archetypal *non-exponentiable* functor</a>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">comp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span></span></span></span>. Except this I described is composition of profunctors of categories, which is well-defined and associative!<br>\nSo something is making up for the this lack of commutativity between pushout and pullback here. And it seems that this thing is lacking in the category of double categories and double functors, otherwise we could use the same procedure to define an associative composition of double profunctors (replacing everything in the diagram above suitably).<br>\nWhat is it?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/592KbAqd2CaaSCzdwyE3RTkL/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/592KbAqd2CaaSCzdwyE3RTkL/image.png\"></a></div>",
        "id": 304117493,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1665781803
    },
    {
        "content": "<p>Instead of pulling back along comp, it's better to consider that last step to be <em>factoring</em> the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>+</mo><mi>C</mi><mo>→</mo><mi>A</mi><mi>P</mi><mi>B</mi><mi>Q</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A+C \\to APBQC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">PBQC</span></span></span></span> as an essentially surjective functor followed by a fully faithful one.  Then the whole construction is a dual form of the bicategory of relations in a regular category.  In a general 2-category, the \"cospans that should be collages of profunctors\" can be characterized as the two-sided <a href=\"https://ncatlab.org/nlab/show/codiscrete%20cofibrations\">[[codiscrete cofibrations]]</a>, and then what you need is a suitable factorization system to do the composition.  Now the stability condition that holds in Cat to make this associative is clear: fully faithful functors are closed under pushout (a dual of the fact that regular epimorphisms in a regular category are closed under pullback); on the nLab page <a href=\"https://ncatlab.org/nlab/show/codiscrete%20cofibration\">[[codiscrete cofibration]]</a> this is called an \"equippable factorization system\" on a 2-category.   I presume this condition is what fails in Dbl, although I haven't written out the details.</p>",
        "id": 304119598,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665782813
    },
    {
        "content": "<p>Hi Mike, thanks for your reply!<br>\n<span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/double.20profunctors/near/304119598\">said</a>:</p>\n<blockquote>\n<p>Instead of pulling back along comp, it's better to consider that last step to be <em>factoring</em> the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>+</mo><mi>C</mi><mo>→</mo><mi>A</mi><mi>P</mi><mi>B</mi><mi>Q</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A+C \\to APBQC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">PBQC</span></span></span></span> as an essentially surjective functor followed by a fully faithful one.  </p>\n</blockquote>\n<p>I presume the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>+</mo><mi>C</mi><mo>→</mo><mi>A</mi><mi>P</mi><mi>B</mi><mi>Q</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A+C \\to APBQC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">PBQC</span></span></span></span> is given by the two inclusions, how does the factorization give me a map into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>?</p>",
        "id": 304123872,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1665784900
    },
    {
        "content": "<p>Just forget about 2.  A cospan is the collage of a profunctor just when it's a two-sided codiscrete cofibration.</p>",
        "id": 304128262,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665787107
    },
    {
        "content": "<p>However, if you really insist, you can use the fact that 1+1 -&gt; 2 -&gt; 3 is an analogous factorization and the factorization system is functorial.</p>",
        "id": 304128394,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665787176
    },
    {
        "content": "<p>Hi Matteo and Mike! I hadn't thought about the factorization perspective on this before, that's really interesting. After thinking about these for a while though I still feel like the composition should be associative, for the reasons below. I figure I'm missing something though, and I'd love to better understand what goes wrong here.</p>\n<ul>\n<li>\n<p>In the pullback-along-comp version of ordinary profunctor composition, even though comp itself is not exponentiable, the functors APBQC -&gt; 3, APBQCRD -&gt; 4, etc are exponentiable, and this can be used to prove associativity as the pushout Push(2 &lt;- 1 -&gt; 2) = 3 is preserved when pulling back comp_1 : 3 -&gt; 4 along APBQCRD -&gt; 4 to get A(P;Q)CRD. This is used to show that both associations agree with the ternary composite defined this way using comp : 2 -&gt; 4. I don't see why this would be any different when the walking arrows in Cat are replaced by the walking horizontal arrows in DoubleCat (this is admittedly vague, but I'm happy to say more about it when I'm not in transit)</p>\n</li>\n<li>\n<p>In terms of factorizations, it seems relevant here that the pushouts we're considering don't add any new vertical composites. When gluing together P and Q along B, we add in horizontal composites of the heteromorphisms and heterosquares, but on both objects and vertical morphisms the pushout is simply a pushout of inclusions of sets. Maybe this is the most short and intuitive reason why I feel like horizontal double profunctors should compose just as nicely as ordinary profunctors.</p>\n</li>\n</ul>",
        "id": 304131871,
        "sender_full_name": "Brandon Shapiro",
        "timestamp": 1665789156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275932\">@Matteo Capucci (he/him)</span>: have you looked at Paré's papers <a href=\"http://www.tac.mta.ca/tac/volumes/25/17/25-17abs.html\">Yoneda theory for double categories</a> and <a href=\"http://www.tac.mta.ca/tac/volumes/27/16/27-16abs.html\">Composition of modules for lax functors</a>? These discuss the topic of double profunctors quite extensively.</p>",
        "id": 304132153,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1665789356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> I don't think Paré's \"modules\" are the same as the double profunctors we're talking about here.  His are a kind of transformation between two parallel lax double functors.</p>",
        "id": 304133789,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665790340
    },
    {
        "content": "<p>Oh whoops, you're right! He just calls them profunctors, and his modules are something else. Thanks for pointing that out; I should have double-checked.</p>",
        "id": 304133981,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1665790504
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276823\">Brandon Shapiro</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/double.20profunctors/near/304131871\">said</a>:</p>\n<blockquote>\n<p>In terms of factorizations, it seems relevant here that the pushouts we're considering don't add any new vertical composites. When gluing together P and Q along B, we add in horizontal composites of the heteromorphisms and heterosquares, but on both objects and vertical morphisms the pushout is simply a pushout of inclusions of sets.</p>\n</blockquote>\n<p>I don't think this is true.  The quotienting that happens on heteromorphisms means that some heterosquares that were not previously composable will become so, and thus new vertical composites of heterosquares appear.  <a href=\"/user_uploads/21317/u-XaGu83YzNtvryaRCyNeCXl/double-profunctor-non-associativity.pdf\">Here</a> is a sketch of how this gives rise to non-associativity.</p>",
        "id": 304135203,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665791343
    },
    {
        "content": "<blockquote>\n<p>Instead of pulling back along comp, it's better to consider that last step to be <em>factoring</em> the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>+</mo><mi>C</mi><mo>→</mo><mi>A</mi><mi>P</mi><mi>B</mi><mi>Q</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A+C \\to APBQC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">PBQC</span></span></span></span> as an essentially surjective functor followed by a fully faithful one.  Then the whole construction is a dual form of the bicategory of relations in a regular category.  In a general 2-category, the \"cospans that should be collages of profunctors\" can be characterized as the two-sided <a href=\"https://ncatlab.org/nlab/show/codiscrete%20cofibrations\">[[codiscrete cofibrations]]</a>, and then what you need is a suitable factorization system to do the composition.  Now the stability condition that holds in Cat to make this associative is clear: fully faithful functors are closed under pushout (a dual of the fact that regular epimorphisms in a regular category are closed under pullback); on the nLab page <a href=\"https://ncatlab.org/nlab/show/codiscrete%20cofibration\">[[codiscrete cofibration]]</a> this is called an \"equippable factorization system\" on a 2-category.   I presume this condition is what fails in Dbl, although I haven't written out the details.</p>\n</blockquote>\n<p>Ok I should have read the nLab page you linked before, I now see what you mean here.</p>",
        "id": 304137395,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1665793158
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276823\">Brandon Shapiro</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/double.20profunctors/near/304131871\">said</a>:</p>\n<blockquote>\n<p>In terms of factorizations, it seems relevant here that the pushouts we're considering don't add any new vertical composites. When gluing together P and Q along B, we add in horizontal composites of the heteromorphisms and heterosquares, but on both objects and vertical morphisms the pushout is simply a pushout of inclusions of sets.</p>\n</blockquote>\n<p>I don't think this is true.  The quotienting that happens on heteromorphisms means that some heterosquares that were not previously composable will become so, and thus new vertical composites of heterosquares appear.  <a href=\"/user_uploads/21317/u-XaGu83YzNtvryaRCyNeCXl/double-profunctor-non-associativity.pdf\">Here</a> is a sketch of how this gives rise to non-associativity.</p>\n</blockquote>\n<p>But any way, this really nails it! <span aria-label=\"exploding head\" class=\"emoji emoji-1f92f\" role=\"img\" title=\"exploding head\">:exploding_head:</span></p>",
        "id": 304137414,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1665793180
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/double.20profunctors/near/304135203\">said</a>:</p>\n<blockquote>\n<p>I don't think this is true.  The quotienting that happens on heteromorphisms means that some heterosquares that were not previously composable will become so, and thus new vertical composites of heterosquares appear.  <a href=\"/user_uploads/21317/u-XaGu83YzNtvryaRCyNeCXl/double-profunctor-non-associativity.pdf\">Here</a> is a sketch of how this gives rise to non-associativity.</p>\n</blockquote>\n<p>I see, that makes it very clear where the problem is. Thanks!</p>",
        "id": 304138012,
        "sender_full_name": "Brandon Shapiro",
        "timestamp": 1665793755
    },
    {
        "content": "<p>Hm, this sketch is interesting. For <em>fibrant</em> double categories, we can compose <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mn>1</mn><mi>b</mi></msub><mo>∘</mo><mi>c</mi><mi>a</mi><mi>r</mi><msub><mi>t</mi><msub><mi>v</mi><mi>o</mi></msub></msub><mo>∘</mo><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">1_b\\circ cart_{v_o}\\circ \\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8652em;vertical-align:-0.2501em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span></span></span></span>, the identity of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> composed with \"bending\" of the left vertical arrow of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span></span></span></span> (the cartesian cell of its companion) composed with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span></span></span></span>. So these zig-zags are not obstructions to associative composition of profunctors of FDCs.</p>",
        "id": 304241789,
        "sender_full_name": "Christian Williams",
        "timestamp": 1665866263
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/JhHFTWtC1u6cIUsp7fT9JO82/prof-comp-assoc-issue.png\">prof-comp-assoc-issue.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/JhHFTWtC1u6cIUsp7fT9JO82/prof-comp-assoc-issue.png\" title=\"prof-comp-assoc-issue.png\"><img src=\"/user_uploads/21317/JhHFTWtC1u6cIUsp7fT9JO82/prof-comp-assoc-issue.png\"></a></div>",
        "id": 304242532,
        "sender_full_name": "Christian Williams",
        "timestamp": 1665866978
    },
    {
        "content": "<p>Yes, that's true.</p>",
        "id": 304248844,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665872592
    },
    {
        "content": "<p>So, this seems to be a serious limitation of non-fibrant double categories. What notions of profunctor have been used? I'll search  around.</p>",
        "id": 304345232,
        "sender_full_name": "Christian Williams",
        "timestamp": 1665949354
    },
    {
        "content": "<p>it's not easy to find much online; I'm only seeing <a href=\"https://ncatlab.org/nlab/show/double+profunctor\">nLab: double profunctor</a></p>",
        "id": 304346049,
        "sender_full_name": "Christian Williams",
        "timestamp": 1665949823
    },
    {
        "content": "<p>yeah, I'm not even seeing double profunctors in those references of Pare. but I'm pretty sure I've seen some from Shulman.</p>",
        "id": 304346936,
        "sender_full_name": "Christian Williams",
        "timestamp": 1665950451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/double.20profunctors/near/304346936\">said</a>:</p>\n<blockquote>\n<p>yeah, I'm not even seeing double profunctors in those references of Pare. but I'm pretty sure I've seen some from Shulman.</p>\n</blockquote>\n<p>They're simply defined to be (lax) double functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">B</mi><mtext>op</mtext></msup><mo>×</mo><mi mathvariant=\"double-struck\">A</mi><mo>→</mo><mi mathvariant=\"double-struck\">S</mi><mrow><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb B^{\\text{op}} \\times \\mathbb A \\to \\mathbb S\\mathrm{et}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">op</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mord\"><span class=\"mord mathrm\">et</span></span></span></span></span> in the paper. He doesn't use the terminology \"double profunctor\".</p>",
        "id": 304356643,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1665959236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/double.20profunctors/near/304346049\">said</a>:</p>\n<blockquote>\n<p>it's not easy to find much online; I'm only seeing <a href=\"https://ncatlab.org/nlab/show/double+profunctor\">nLab: double profunctor</a></p>\n</blockquote>\n<p>yeah there's pretty much nothing</p>",
        "id": 304828331,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1666122250
    },
    {
        "content": "<p>I added the counterexample to associativity to the nLab page <a href=\"https://ncatlab.org/nlab/show/double%20profunctor\">[[double profunctor]]</a>.</p>",
        "id": 305057065,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1666221296
    }
]