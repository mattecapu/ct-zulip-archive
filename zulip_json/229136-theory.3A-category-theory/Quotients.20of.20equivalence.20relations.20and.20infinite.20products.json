[
    {
        "content": "<p>Famously, reflexive coequalizers (or, what's almost the same thing, quotients of reflexive relations) commute with finite but not infinite products in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span>. There are no analogous examples of shapes of diagrams which commute with infinite products other than appropriately filtered categories; in particular, quotients of reflexive relations don't commute with infinite products. This is because you can have reflexive relations for which the shortest path of relators between two points, connected in the quotient, is of unboudned length, and in an infinite product of such relations there is no sufficient length for a path between tuples that are pointwise connected by zigzags of unbounded length. But the long-zigzag problem doesn't occur for quotients of equivalence relations, or indeed for any absolute coequalizers.</p>",
        "id": 535763044,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1755901296
    },
    {
        "content": "<p>Hence my question: do infinite product functors preserve quotients by equivalence relations in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span>? More generally, does <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Π</mi><mo>:</mo><msup><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><mi>X</mi></msup><mo>→</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\Pi:\\mathbf{Set}^X\\to \\mathbf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Π</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9173em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9173em;\"><span style=\"top:-3.139em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span> preserve <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Π</mi></mrow><annotation encoding=\"application/x-tex\">\\Pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Π</span></span></span></span>-absolute coequalizers? (It does not reflect them due only, I think, to cases when some factor in the product is empty.)</p>",
        "id": 535763058,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1755901307
    },
    {
        "content": "<p>OK, the equivalence relation case is mentioned by <a href=\"https://cmuc.karlin.mff.cuni.cz/pdf/cmuc0003/adamvele.pdf\">Adámek</a> and friends and is obvious-in-retrospect, but I'm still curious about the absolute coequalizer generalization. It seems like it's going to work so I'm more curious whether this fits into some known story.</p>",
        "id": 535765071,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1755902784
    }
]