[
    {
        "content": "<p>I have a question: is there a standard direction for 'invertible' constraints such as unitor?<br>\nnLab lists <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>:</mo><mn>1</mn><mo>⊗</mo><mi>x</mi><mo>→</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda : 1 \\otimes x \\to x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>:</mo><mi>x</mi><mo>⊗</mo><mn>1</mn><mo>→</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\rho : x \\otimes 1 \\to x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> (apparently following MacLane), but then in this paper of Marmolejo for example, right and left unitors of a pseudomonad (another instance of pseudomonoid) are defined to point in different directions:<br>\n<a href=\"/user_uploads/21317/V_T9TjRsL-LXq1xtWsuYFxkT/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/V_T9TjRsL-LXq1xtWsuYFxkT/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/V_T9TjRsL-LXq1xtWsuYFxkT/image.png\"></a></div>",
        "id": 271855973,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858049
    },
    {
        "content": "<p>For pseudoalgebras, Marmolejo seems to prefer the 'left' convention: <a href=\"/user_uploads/21317/gXaGA-Gi5duxcBMu_sQ98WOa/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/gXaGA-Gi5duxcBMu_sQ98WOa/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/gXaGA-Gi5duxcBMu_sQ98WOa/image.png\"></a></div>",
        "id": 271856167,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858132
    },
    {
        "content": "<p>(look at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span>, going <em>into</em> the identity)</p>",
        "id": 271856438,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858248
    },
    {
        "content": "<p>I notice that I actually tend to do like Marmolejo and dualize my unitors, it feels 'nicer'. But is there any formal reason that justifies this asymmetry/duality?</p>",
        "id": 271856556,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858324
    },
    {
        "content": "<p>I think the Mac Lane one is pretty common. It seems natural to imagine reducing from more complicated expressions. I believe there is no  conceptual difference so long as these maps are invertible.</p>",
        "id": 271856713,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1644858384
    },
    {
        "content": "<p>The direction of the structural transformations comes from the axioms for a skew-monoidal category (more generally, lax-monoidal, but the skew-monoidal ones are the most well-behaved). It doesn't matter which of left-skew or right-skew you choose, but it makes sense to choose directions consistent with one of them.</p>",
        "id": 271857077,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1644858537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271855973\">said</a>:</p>\n<blockquote>\n<p>I have a question: is there a standard direction for 'invertible' constraints such as unitor?<br>\nnLab lists <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>:</mo><mn>1</mn><mo>⊗</mo><mi>x</mi><mo>→</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda : 1 \\otimes x \\to x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>:</mo><mi>x</mi><mo>⊗</mo><mn>1</mn><mo>→</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\rho : x \\otimes 1 \\to x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> (apparently following MacLane)</p>\n</blockquote>\n<p>That's the standard one - use that.   It's the direction of 'simplification' and I believe people use it because it's more natural.   For example if you wrote the laws of a monoid I think you'd write</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi>x</mi><mo>=</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">1 x = x </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span></p>\n<p>not</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x = 1x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">x</span></span></span></span></p>",
        "id": 271857125,
        "sender_full_name": "John Baez",
        "timestamp": 1644858562
    },
    {
        "content": "<p>By the way, I believe it was my student Toby Bartels who invented the word 'unitor' to match 'associator'.   Before, people said 'unit constraint'.    (If Toby only <em>re</em>invented it, I'd like to know.)</p>",
        "id": 271857350,
        "sender_full_name": "John Baez",
        "timestamp": 1644858656
    },
    {
        "content": "<p>Some later student invented 'leftor' and 'rightor' but I don't think those have caught on - people say 'left unitor' and 'right unitor'.</p>",
        "id": 271857435,
        "sender_full_name": "John Baez",
        "timestamp": 1644858694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271857077\">said</a>:</p>\n<blockquote>\n<p>The direction of the structural transformations comes from the axioms for a skew-monoidal category (more generally, lax-monoidal, but the skew-monoidal ones are the most well-behaved). It doesn't matter which of left-skew or right-skew you choose, but it makes sense to choose directions consistent with one of them.</p>\n</blockquote>\n<p>Can you elaborate on this? What are you referring to with 'structural transformations'?</p>",
        "id": 271857612,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858750
    },
    {
        "content": "<p>Associator, left and right unitor.</p>",
        "id": 271857815,
        "sender_full_name": "John Baez",
        "timestamp": 1644858842
    },
    {
        "content": "<p>Mmh ok, that was a silly question indeed</p>",
        "id": 271858024,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858920
    },
    {
        "content": "<p>In a skew-monoidal category we make these morphisms non-invertible, and then choosing good conventions for directions becomes really crucial, because there are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span> conceivable conventions, and I guess not all are equally good.</p>",
        "id": 271858036,
        "sender_full_name": "John Baez",
        "timestamp": 1644858928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271858036\">said</a>:</p>\n<blockquote>\n<p>In a skew-monoidal category we make these morphisms non-invertible, and then choosing good conventions for directions becomes really crucial, because there are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span> conceivable conventions, and I guess not all are equally good.</p>\n</blockquote>\n<p>Indeed</p>",
        "id": 271858152,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858965
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/wdOHYqycl5Dew3zCJbMBksQX/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/wdOHYqycl5Dew3zCJbMBksQX/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/wdOHYqycl5Dew3zCJbMBksQX/image.png\"></a></div>",
        "id": 271858160,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858968
    },
    {
        "content": "<p>This is the first thing I checked and I was like 'nevermind'</p>",
        "id": 271858180,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644858977
    },
    {
        "content": "<p>Ugh, names for all 8.  <span aria-label=\"frowning\" class=\"emoji emoji-1f626\" role=\"img\" title=\"frowning\">:frowning:</span></p>",
        "id": 271858256,
        "sender_full_name": "John Baez",
        "timestamp": 1644859017
    },
    {
        "content": "<p>I'm more interested in why 2 are 'best' - the left and right skew monoidal categories.  I've never looked into it.  Maybe someone here can explain it in a human-friendly manner.</p>",
        "id": 271858328,
        "sender_full_name": "John Baez",
        "timestamp": 1644859059
    },
    {
        "content": "<p>In general it seems that 'lax' structures have maps that <em>pick</em>, e.g. a lax monoidal functor has a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo>→</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J \\to F(I)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mclose\">)</span></span></span></span>, while oplax structures have maps that <em>reduce</em>, e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>I</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">F(I) \\to J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span></p>",
        "id": 271858363,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644859079
    },
    {
        "content": "<p>The easiest way for me to remember what's a lax monoidal functor is that a lax monoidal functor does exactly the right thing to map monoid objects to monoid objects.</p>",
        "id": 271859595,
        "sender_full_name": "John Baez",
        "timestamp": 1644859668
    },
    {
        "content": "<p>(This is fun to work out two or three times, say once every 4 years.)</p>",
        "id": 271859712,
        "sender_full_name": "John Baez",
        "timestamp": 1644859717
    },
    {
        "content": "<p>Similarly, an oplax monoidal functor maps comonoid objects to comonoid objects.</p>",
        "id": 271859755,
        "sender_full_name": "John Baez",
        "timestamp": 1644859742
    },
    {
        "content": "<p>Also, a lax monoidal functor from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> to a bicategory picks out a monad in that bicategory.</p>",
        "id": 271859922,
        "sender_full_name": "John Baez",
        "timestamp": 1644859804
    },
    {
        "content": "<p>So \"lax monoidal\" goes nicely with \"monoid\" and \"monad\".</p>",
        "id": 271859969,
        "sender_full_name": "John Baez",
        "timestamp": 1644859827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271859595\">said</a>:</p>\n<blockquote>\n<p>The easiest way for me to remember what's a lax monoidal functor is that a lax monoidal functor does exactly the right thing to map monoid objects to monoid objects.</p>\n</blockquote>\n<p>indeed</p>",
        "id": 271862618,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644861020
    },
    {
        "content": "<p>I also associate 'lax' with 'monoid/monad' in my head, and oplax with the dual</p>",
        "id": 271862698,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1644861065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271858328\">said</a>:</p>\n<blockquote>\n<p>I'm more interested in why 2 are 'best' - the left and right skew monoidal categories.  I've never looked into it.  Maybe someone here can explain it in a human-friendly manner.</p>\n</blockquote>\n<p>The axioms for skew-monoidal categories give rise to nicer induced structures. For instance, in a left-skew-monoidal category, tensoring with the unit has the structure of a comonad, and the Kleisli morphisms (i.e. morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⊗</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">I \\otimes A \\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>) can be considered a notion of \"weak morphism\", which is useful for various applications. This is a theme, say, of Bourke and Lack's work on skew-monoidal categories.</p>",
        "id": 271862978,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1644861196
    },
    {
        "content": "<p>Skew-monoidal structure also arises in many examples, whereas I haven't come across any real examples of lax-monoidal categories more generally (though perhaps someone can provide some).</p>",
        "id": 271863092,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1644861246
    },
    {
        "content": "<p>Lax monoidal categories appear in <a href=\"https://arxiv.org/abs/0909.4715\">https://arxiv.org/abs/0909.4715</a>.</p>",
        "id": 271865697,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1644862297
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271857435\">said</a>:</p>\n<blockquote>\n<p>Some later student invented 'leftor' and 'rightor' but I don't think those have caught on - people say 'left unitor' and 'right unitor'.</p>\n</blockquote>\n<p>I think I was that later student, but it didn't even catch on with me <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 271875465,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1644866574
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/unitors.20to.20the.20left.20of.20me.2C.20unitors.20to.20the.20right/near/271862978\">said</a>:</p>\n<blockquote>\n<p>The axioms for skew-monoidal categories give rise to nicer induced structures. For instance, in a left-skew-monoidal category, tensoring with the unit has the structure of a comonad, and the Kleisli morphisms (i.e. morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⊗</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">I \\otimes A \\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>) can be considered a notion of \"weak morphism\", which is useful for various applications.</p>\n</blockquote>\n<p>Personally, I would prefer to axiomatize the weak morphisms directly, if that's what we're interested in, and then recover the skew tensor product as a representing object with a certain universal property.  Bourke and Lack did something along these lines in <a href=\"https://arxiv.org/abs/1708.06088\">https://arxiv.org/abs/1708.06088</a>, and I suggested a more general context for it in <a href=\"https://arxiv.org/abs/2106.15042\">https://arxiv.org/abs/2106.15042</a>.  This also helps to explain the bizarre -looking orientations of the \"associativity\" and \"unit\" morphisms for the skew tensor, which are revealed as \"actually\" having some extra functors stuck in there breaking the obvious notion of associativity.</p>",
        "id": 271875988,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1644866782
    }
]