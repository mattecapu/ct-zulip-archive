[
    {
        "content": "<p>A question that has been on my mind for quite a time is: can one recover Yoneda lemma from the existence of Yoneda embedding?<br>\nClearly the question is really: <em>how much</em> should we know about the Yoneda embedding to be able to conclude Yoneda lemma holds?<br>\nA simple embedding is too weak. A natural thing that comes to mind is to see <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>よ</mtext></mrow><annotation encoding=\"application/x-tex\">よ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">よ</span></span></span></span> as the unit of the free small cocompletion pseudomonad, i.e. the embedding of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord mathbf\">C</span></span></span></span> into its own free small cocompletion. Since the latter is given by taking small presheaves over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord mathbf\">C</span></span></span></span>, then it is a category of presheaves and we can indeed embed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord mathbf\">C</span></span></span></span> in it by sending <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> to its representable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>よ</mtext><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">よX</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.<br>\nNow it's tempting to say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mtext>よ</mtext><mi>Y</mi><mo separator=\"true\">,</mo><mi>P</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mtext>よ</mtext><mi>Y</mi><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">m</mi></mrow><mtext>よ</mtext><msub><mi>X</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">m</mi></mrow><mtext> </mtext><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mtext>よ</mtext><mi>Y</mi><mo separator=\"true\">,</mo><mtext>よ</mtext><msub><mi>X</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">m</mi></mrow><mi mathvariant=\"bold\">C</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Nat}(よY, P) = \\mathrm{Nat}(よY, \\mathrm{colim} よX_i) = \\mathrm{colim}\\, \\mathrm{Nat}(よY, よX_i) = \\mathrm{colim} \\mathbf C(Y, X_i) = P(Y)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">m</span></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">m</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">m</span></span><span class=\"mord mathbf\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span>, but this is a circular argument: the interchange of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Nat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">m</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{colim}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">m</span></span></span></span></span> is, afaik, a consequence of Yoneda lemma itself, so...<br>\nWhat do you think? Is that interchange true for some other reasons or is this approach just doomed? Shall I just be more coendy, i.e. ninja?</p>",
        "id": 218631430,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1606949314
    },
    {
        "content": "<p>What properties does \"embedding\" entail? Usually it is said that the important thing about the Yoneda lemma is that the embedding is fully-faithful.</p>",
        "id": 218632155,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606949751
    },
    {
        "content": "<p>I'm not sure if even that is sufficient, though.</p>",
        "id": 218632663,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606950022
    },
    {
        "content": "<p>Embedding means fully faithful, yes. And it doesn't seem sufficient to say that <img alt=\":yo:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/21317/emoji/images/19189.png\" title=\"yo\"> is a an embedding since there are many embeddings for which Yoneda lemma doesn't work!</p>",
        "id": 218635695,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1606952135
    },
    {
        "content": "<p>I do think some sort of universality should be involved. For instance, there's Martin Escardo's writeup about how the Yoneda lemma is similar to the J rule for Martin-löf identity types.</p>",
        "id": 218638536,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606954012
    },
    {
        "content": "<p>And you can instead present identity types with a Yoneda-like lemma.</p>",
        "id": 218638560,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606954040
    },
    {
        "content": "<p>So it is not just saying that the embedding is an embedding, but it's somehow 'inductive', I suppose.</p>",
        "id": 218638937,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606954371
    },
    {
        "content": "<p><a href=\"https://www.cs.bham.ac.uk/~mhe/yoneda/yoneda.html\">This is</a> the article.</p>",
        "id": 218639154,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606954575
    },
    {
        "content": "<p>I think, running the exposition backwards, the Yoneda lemma is saying that the embedding is 'inductively generated' by the identity arrow.</p>",
        "id": 218639538,
        "sender_full_name": "Dan Doel",
        "timestamp": 1606954948
    },
    {
        "content": "<p>Do you know about <a href=\"https://www.sciencedirect.com/science/article/pii/0021869378901606\">yoneda structures</a> which axiomatise Yoneda in a way that generalises to a wider 2-categorical setting? I haven't read the paper in detail, but it seems to be providing sufficient conditions for the Yoneda lemma to be recoverable from a generalised Yoneda embedding?</p>",
        "id": 218671548,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1606988769
    },
    {
        "content": "<p>I would guess that proving the interchange of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Nat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> with colimits is more difficult than proving the Yoneda Lemma itself. So I agree that it is a bit a circular argument.</p>\n<p>But I still think the interchange of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Nat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> with colimits is a useful, geometric way to think about it. In a locally small category, an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> is called <a href=\"https://ncatlab.org/nlab/show/tiny+object\">tiny</a> if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}(C,-)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span> preserves colimits. So Yoneda Lemma says that each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>よ</mtext><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">よX</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is tiny (or, using topos terminology, indecomposable projective).</p>\n<p>Geometrically this means that they are really the most basic/rigid kind of \"building blocks\" (like bricks, maybe). As opposed to other, weaker kinds of building blocks, like the ones such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}(C,-)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span> only preserves filtered colimits or direct sums.</p>",
        "id": 218678964,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1606993578
    },
    {
        "content": "<p>I like the example of the category of directed graphs (digraphs), which is a category of presheaves.</p>\n<p>Each directed graph is in a canonical way:</p>\n<ul>\n<li>a colimit of points and arrows; or</li>\n<li>a quotient of a \"bunch of points and arrows\" (seen as digraph); or</li>\n<li>a coproduct of connected digraphs; or</li>\n<li>a filtered colimit of finite digraphs.</li>\n</ul>\n<p>This corresponds to the situations where you take as building blocks respectively:</p>\n<ul>\n<li>the indecomposable projective digraphs (aka the \"tiny\" ones, in this case only the point and the arrow);</li>\n<li>the projective digraphs (the ones such that each component is a point or an arrow);</li>\n<li>the indecomposable/connected digraphs;</li>\n<li>the finitely presented digraphs (which are the finite ones).</li>\n</ul>\n<p>The Yoneda Lemma then says geometrically that you are in the first situation of the four.</p>",
        "id": 218684662,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1606997349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277473\">@[Mod] Morgan Rogers</span> I hoped I could avoid to resort to Yoneda structures, yet it's probably a lost fight</p>",
        "id": 218729775,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1607017774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282722\">@Jens Hemelaer</span> that's a neat perspective!</p>",
        "id": 218729796,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1607017786
    },
    {
        "content": "<p>It’d be interesting to see if you can assume what you’re looking for and try and derive a yoneda-structure-like thing</p>",
        "id": 218733117,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1607019244
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/yoneda.20lemma.20.26.20yoneda.20embedding/near/218729775\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277473\">[Mod] Morgan Rogers</span> I hoped I could avoid to resort to Yoneda structures, yet it's probably a lost fight</p>\n</blockquote>\n<p>It's just a matter of translation back into the specific case of Cat, which may even be included in the paper? I'm guessing here <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 218740340,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1607022639
    }
]