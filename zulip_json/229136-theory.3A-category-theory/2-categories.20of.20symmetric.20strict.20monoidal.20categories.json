[
    {
        "content": "<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span></span></span></span> be the (strict) 2-category of symmetric strict monoidal categories, symmetric strict monoidal functors, and monoidal natural transformations. Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{SMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span></span></span></span> be the version of this where the 1-cells are instead symmetric <em>strong</em> monoidal functors. </p>\n<p>Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span></span></span></span> equivalent to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{SMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span></span></span></span>? </p>\n<p>If we take lax monoidal functors then I know we get an adjunction (strictification theorem). We certainly get that here as well, but I'm wondering if asking for the 1-cells to be strong monoidal is enough to make it an equivalence. </p>\n<p>Some evidence against is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{SMC}(\\mathbb{X},\\mathbb{Y})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Y</span><span class=\"mclose\">)</span></span></span></span> is symmetric strict monoidal with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>⊗</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">F \\otimes G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> defined as in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>F</mi><mo>⊗</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mi>X</mi><mo>⊗</mo><mi>G</mi><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">(F \\otimes G)(X) = FX \\otimes GX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">FX</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">GX</span></span></span></span>, but that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}(\\mathbb{X},\\mathbb{Y})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Y</span><span class=\"mclose\">)</span></span></span></span> is not, since this would mean that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>A</mi><mo>⊗</mo><mi>G</mi><mi>A</mi><mo>⊗</mo><mi>F</mi><mi>B</mi><mo>⊗</mo><mi>G</mi><mi>B</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>F</mi><mo>⊗</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>⊗</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mi>A</mi><mo>⊗</mo><mi>F</mi><mi>B</mi><mo>⊗</mo><mi>G</mi><mi>A</mi><mo>⊗</mo><mi>G</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">FA \\otimes GA \\otimes FB \\otimes GB = (F \\otimes G)(A \\otimes B) = FA \\otimes FB \\otimes GA \\otimes GB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">FB</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">GB</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">FB</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">GB</span></span></span></span>, which isn't true in general. Is this enough to show that they're not equivalent?</p>",
        "id": 274394741,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646661604
    },
    {
        "content": "<p>For context, I've been working through <a href=\"/user_uploads/21317/_xrUA7PhslupQ8bqZmq2LcDA/schmitt-2007-tensor-product-for-symmetric-monoidal-categories.pdf\">this paper</a> on tensor product structure for symmetric monoidal categories. While it deals with the lax monoidal case of this situation, much of it also applies to the strong monoidal case. In particular we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo>⊗</mo><mi mathvariant=\"double-struck\">Y</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Y</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}(\\mathbb{X} \\otimes \\mathbb{Y}, \\mathbb{Z}) \\cong \\mathsf{SMC}(\\mathbb{X},\\mathsf{SMC}(\\mathbb{Y},\\mathbb{Z}))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mclose\">))</span></span></span></span> -- an isomorphism!</p>",
        "id": 274395315,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646661821
    },
    {
        "content": "<p>I was kind of expecting an equivalence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo>⊗</mo><mi mathvariant=\"double-struck\">Y</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo><mo>≃</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Y</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{SMC}(\\mathbb{X} \\otimes \\mathbb{Y},\\mathbb{Z}) \\simeq \\mathsf{SMC}(\\mathbb{X},\\mathsf{SMC}(\\mathbb{Y},\\mathbb{Z}))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mclose\">))</span></span></span></span>, and I don't really understand why this isn't true (if indeed it is not).</p>",
        "id": 274395514,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646661908
    },
    {
        "content": "<p>I don't have a counterexample to hand, but in general the answer to this sort of thing is no.</p>",
        "id": 274408077,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1646667232
    },
    {
        "content": "<p>Thanks! This is still very helpful.</p>",
        "id": 274408166,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646667262
    },
    {
        "content": "<p>Cartesian products give (2-categorical) biproducts for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{SMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span></span></span></span>, see e.g. the appendix of <a href=\"https://arxiv.org/abs/1908.02633\">this</a>. As cartesian products are products also in  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span></span></span></span>, to prove that the two 2-categories not equivalent it should be sufficient to show that the product is not a biproduct in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span></span></span></span>. First of all, the injection maps are defined by their projections so we can assume they behave in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span></span></span></span> as they do in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{SMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">SMC</span></span></span></span></span>,  i.e. the left injection sends an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>I</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(A,I)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mclose\">)</span></span></span></span> and similarly for the right injection. One can then cook up situations where there is no symmetrict strict monoidal map from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>×</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C\\times D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> that makes the required diagrams commute up to iso, even when the starting maps from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> are strict (for instance, the \"codiagonal\" corresponds to the monoidal product, which is rarely isomorphic to a symmetric strict monoidal functor). Thus the product fails to be a coproduct in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span></span></span></span>.</p>",
        "id": 274426379,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1646673963
    },
    {
        "content": "<p>Nice argument!  I \"knew\" these 2-categories couldn't be equivalent, but it would have taken me work to find a proof.   </p>\n<p>So you're saying that for a strict symmetric monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, the monoidal product <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo><mo>:</mo><mi>C</mi><mo>×</mo><mi>C</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\otimes : C \\times C \\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> is usually not monoidally naturally isomorphic to a symmetric <em>strict</em> monoidal functor.  </p>\n<p>Let me think about why.    For it to actually <em>be</em> a strict monoidal functor we'd need</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mo>⊗</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mo>⊗</mo><mo stretchy=\"false\">(</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊗</mo><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>⊗</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>d</mi><mo>⊗</mo><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (c \\otimes d) \\otimes (c&#x27; \\otimes d&#x27;) = (c \\otimes c&#x27;) \\otimes (d \\otimes d&#x27;) </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>and various related things.   So these are the things we want to break.</p>",
        "id": 274429219,
        "sender_full_name": "John Baez",
        "timestamp": 1646675081
    },
    {
        "content": "<p>I guess there's still some work left to do: the monoidal product is rarely strict itself, but now we must make cook up a situation where it's not even isomorphic to a strict monoidal functor.</p>",
        "id": 274439864,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1646679168
    },
    {
        "content": "<p>Now I'm curious about strict symmetric monoidal categories where the monoidal product is strict monoidal.  I know <em>commutative</em> monoidal categories are of this sort - those are symmetric monoidal categories where the symmetry, or braiding, is the identity.  But are there others?</p>",
        "id": 274441638,
        "sender_full_name": "John Baez",
        "timestamp": 1646679846
    },
    {
        "content": "<p>I ask because I know plenty of strict symmetric monoidal categories that are not equivalent commutative monoidal categories, like strictified versions of the category of finite sets, or finite-dimensional vector spaces.</p>",
        "id": 274441740,
        "sender_full_name": "John Baez",
        "timestamp": 1646679908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277285\">@Martti Karvonen</span> Excellent, thanks!</p>",
        "id": 274442516,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646680251
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/2-categories.20of.20symmetric.20strict.20monoidal.20categories/near/274441638\">said</a>:</p>\n<blockquote>\n<p>Now I'm curious about monoidal categories where the monoidal product is strict monoidal.  I know <em>commutative</em> monoidal categories are of this sort - those are symmetric monoidal categories where the symmetry, or braiding, is the identity.  But are there others?</p>\n</blockquote>\n<p>Are you asking about <em>symmetric</em> monoidal categories or non-symmetric ones?</p>",
        "id": 274443530,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1646680729
    },
    {
        "content": "<p>Sorry, I actually meant strict symmetric ones - that's what's relevant here.  I'll correct my comment.</p>",
        "id": 274444745,
        "sender_full_name": "John Baez",
        "timestamp": 1646681268
    },
    {
        "content": "<p>Shouldn't Eckman-Hilton imply that these are exactly the commutative ones?</p>",
        "id": 274445476,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1646681605
    },
    {
        "content": "<p>unless you meant \"is monoidally isomorphic to a strict monoidal functor\"</p>",
        "id": 274446180,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1646681939
    },
    {
        "content": "<p>I guess you're right, they're just the commutative ones.</p>",
        "id": 274446359,
        "sender_full_name": "John Baez",
        "timestamp": 1646682012
    },
    {
        "content": "<p>I was momentarily confused by the existence of medial semigroups that aren't commutative, where a semigroup is <strong><a href=\"https://en.wikipedia.org/wiki/Medial_magma\">medial</a></strong> if it obeys (cd)(c'd') = (cc')(dd').   But a medial semigroup with an identity element is commutative (obviously), so this is irrelevant.</p>",
        "id": 274446701,
        "sender_full_name": "John Baez",
        "timestamp": 1646682149
    },
    {
        "content": "<p>I did not mean \"monoidally isomorphic\", I meant \"equals\".</p>",
        "id": 274446766,
        "sender_full_name": "John Baez",
        "timestamp": 1646682175
    },
    {
        "content": "<p>But I was leading up to a conjecture like this: if a symmetric monoidal category is not symmetric monoidal equivalent to a commutative one, it's not symmetric monoidal equivalent to one for which the tensor product is a strict monoidal functor.</p>",
        "id": 274447003,
        "sender_full_name": "John Baez",
        "timestamp": 1646682282
    },
    {
        "content": "<p>It's interesting that for props <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">X</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{X},\\mathbb{Y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;vertical-align:-0.1944em;\"></span><span class=\"mord mathbb\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Y</span></span></span></span> the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">M</mi><mi mathvariant=\"sans-serif\">C</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">X</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{StrSMC}(\\mathbb{X},\\mathbb{Y})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">StrSMC</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Y</span><span class=\"mclose\">)</span></span></span></span> doesn't seem to be symmetric monoidal in this way. In particular the object monoid of a prop is commutative for silly reasons and so we have that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>⊗</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">F \\otimes G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> as defined above is strict monoidal at the level of objects. However, the arrow  monoid of a prop need not be commutative and so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>⊗</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">F \\otimes G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> fails to be a strict monoidal functor...</p>",
        "id": 274687291,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646832737
    },
    {
        "content": "<p>I'm confused about this today: In <a href=\"/user_uploads/21317/WGaTEC_HMEG6uuPdUAlLvIgF/hackney-robertson-2014-on-the-category-of-props.pdf\">Hackney and Robertson's paper</a> they claim that the category of props is self-enriched, and we seem to be talking about the same things.</p>",
        "id": 274687528,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646832858
    },
    {
        "content": "<p>Am I missing something, or is that not true?</p>",
        "id": 274687590,
        "sender_full_name": "Chad Nester",
        "timestamp": 1646832884
    },
    {
        "content": "<p>I'm convinced that there is indeed an error in \"On the Category of PROPs\" by Hackney and Robertson.</p>\n<p>In the single-coloured case they state that their notion of PROP is equivalently a symmetric strict monoidal category generated by a single object (top of page 3), and their notion of PROP homomorphism (Definition 7) is pretty clearly a symmetric strict monoidal functor. Their category of PROP transformations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">H</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">R</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Hom}(\\mathcal{R},\\mathcal{T})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.25417em;\">T</span><span class=\"mclose\">)</span></span></span></span> defines the tensor product on objects pointwise in the manner discussed above.</p>\n<p>It follows that their Proposition 24 -- that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">H</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">R</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Hom}(\\mathcal{R},\\mathcal{T})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.25417em;\">T</span><span class=\"mclose\">)</span></span></span></span> is a PROP, is in fact false, as discussed above.  It also follows that the category of PROPs is not in fact self-enriched. Similarly, Proposition 38 and Theorem 39 do not in fact hold.  Theorem 39 -- that the category of PROPs is monoidal closed -- is a major contribution of the paper, which has been cited 20 times. This is somewhat concerning.</p>",
        "id": 276326284,
        "sender_full_name": "Chad Nester",
        "timestamp": 1648038982
    },
    {
        "content": "<p>It doesn't seem like we can expect the situation with PROPs to be significantly simpler than the general one described by Schmitt.</p>",
        "id": 276326661,
        "sender_full_name": "Chad Nester",
        "timestamp": 1648039202
    },
    {
        "content": "<p>That is, the 2-category of PROPs, strong monoidal functors, and monoidal transformations ought to admit a \"lax symmetric monoidal 2-categorical structure\", and to be \"lax closed\" with respect to it.</p>",
        "id": 276327151,
        "sender_full_name": "Chad Nester",
        "timestamp": 1648039465
    },
    {
        "content": "<p>You should email the authors. I know for a fact that Philip would like to chat about this. And he’s nice!</p>",
        "id": 276329227,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1648040537
    },
    {
        "content": "<p>That's a good idea :)</p>",
        "id": 276335143,
        "sender_full_name": "Chad Nester",
        "timestamp": 1648043179
    },
    {
        "content": "<p>I chatted with <span class=\"user-mention\" data-user-id=\"276114\">@Chad Nester</span>  and I think we worked out what's going on here. The set of colors of the internal hom between two props is the set of prop maps. But if you regard this internal hom as a symmetric strict monoidal category, then its set of objects consists of <em>finite ordered lists</em> of prop maps. i.e. apply the free monoid monad to the set of colors to get the set of objects.</p>",
        "id": 279293646,
        "sender_full_name": "philip hackney",
        "timestamp": 1650293656
    },
    {
        "content": "<p>So one doesn't need to worry about evaluating the tensor product of two prop maps at an object or a morphism, since the tensor product of two prop maps isn't itself a prop map.</p>",
        "id": 279293657,
        "sender_full_name": "philip hackney",
        "timestamp": 1650293665
    },
    {
        "content": "<p>We didn't emphasize this point about the internal hom in the paper since we were usually thinking about props as props and not as symmetric strict monoidal categories.</p>",
        "id": 279293931,
        "sender_full_name": "philip hackney",
        "timestamp": 1650293881
    }
]