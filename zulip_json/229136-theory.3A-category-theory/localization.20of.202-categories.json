[
    {
        "content": "<p>If we forget size issues then we can localize a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> at <em>any</em> class of morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> by zig-zags. No fractions or further conditions needed; these only address size issues.</p>\n<p>Is there an analogous procedure for localizing a <em>2-</em>category at a class of <em>1-</em>morphisms? Pronk does it for some 2-fractions condition, some people do it for model categories, but we haven't found a general procedure. It wouldn't seem that crazy to write it down, except that it seems hard to formally turn \"morphisms into equivalences\", since that's like extra data</p>",
        "id": 444494293,
        "sender_full_name": "Daniel Teixeira",
        "timestamp": 1718292690
    },
    {
        "content": "<p>You can do it abstractly, taking the 2-categorical pushout of the wide subcategory you want to invert along its groupoidification. I don't know if that helps?</p>",
        "id": 444499271,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1718293809
    },
    {
        "content": "<p>Yes existence would suffice. However, your suggestion seems to respect conservation of difficulty since  \"groupoidification\" is localizing the wide subcategory at all morphisms...</p>",
        "id": 444506719,
        "sender_full_name": "Daniel Teixeira",
        "timestamp": 1718295702
    },
    {
        "content": "<p>You can do better than that: let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>:</mo><mi>I</mi><mo>→</mo><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">i:I\\to E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> be the inclusion of the walking arrow into the walking equivalence. Given a class <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> of morphisms in a 2-category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> you want to invert, you get a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊔</mo><mi>I</mi><mo>→</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">\\sqcup I \\to K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">⊔</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> with as many factors in the coproducts as there are elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">W.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\">.</span></span></span></span> Then just push out this map along <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊔</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">\\sqcup I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">⊔</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>! There’s no need to put these arrows together into a wide sub-2-category or anything as detailed as that, as long as you don’t care about actually, like, understanding anything detailed about the result.</p>",
        "id": 444534196,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1718303794
    },
    {
        "content": "<p>this sounds reasonable!</p>",
        "id": 444534564,
        "sender_full_name": "Daniel Teixeira",
        "timestamp": 1718303910
    }
]