[
    {
        "content": "<p>I'm curious about the relationship(s) between sheaves and (colored) operads.</p>\n<p>It seems like like a site <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(C,J)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose\">)</span></span></span></span> should define an operad with objects from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and morphisms from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>. Then a sheaf <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>∈</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">h</mi></mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F\\in \\mathrm{Sh}(C,J)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Sh</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose\">)</span></span></span></span> would give an algebra determined by gluing.</p>\n<p>I would be happy to hear about elaborations on this basic setup (or why this isn't a useful perspective). Clearly this isn't the whole story given that restriction maps haven't made an appearance.</p>\n<p>I'm also interested in other touchpoints (like <a href=\"https://www.math.uchicago.edu/~may/PAPERS/Esheaf.pdf\">this one</a> that I haven't dug into yet). Thanks!</p>",
        "id": 376961392,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1689856377
    },
    {
        "content": "<p>Some background: I've been thinking about a topic recently from a sheaf-y perspective and came across a nice reference attacking a similar problem from an operadic perspective. Thinking about how to transfer or extend those results made me wonder about the relationship more generally.</p>",
        "id": 376962241,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1689856538
    },
    {
        "content": "<p>I would also be interested in relationships that point the other way. Some operads, like wiring diagrams, have a very geometric flavor and I would be interested in constructions for turning these into spaces (perhaps for computational purposes).</p>",
        "id": 376963427,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1689856791
    },
    {
        "content": "<p>How is the induced operad defined?</p>",
        "id": 377275785,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1689941288
    },
    {
        "content": "<p>Well, presumably you can reverse-engineer it from the sheafification monad, provided such a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>-colored operad exists.  I feel like it's going to only exist in relatively rare cases, because generally a cover is going to have overlaps and the gluing operation for a nontrivially overlapping cover should have a sort of arity only found in an <a href=\"https://ncatlab.org/nlab/show/essentially%20algebraic%20theory\">[[essentially algebraic theory]]</a>.  Besides the gluing operations, it will have restriction operations that equip algebras with the structure of a presheaf of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, rather than just a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">O</mi><mi mathvariant=\"normal\">b</mi></mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Ob}(C)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Ob</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>-colored set.</p>",
        "id": 377287706,
        "sender_full_name": "James Deikun",
        "timestamp": 1689943558
    },
    {
        "content": "<p>That's a very interesting question Spencer</p>",
        "id": 379200715,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690470853
    },
    {
        "content": "<p>To me it looks like a site <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{C}, J)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose\">)</span></span></span></span> defines an operad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}_{(\\mathcal{C},J)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0385em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span></span></span></span> whose objects are the same of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> and whose operations are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>-coverings. That is, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>U</mi><mi>n</mi></msub><mo separator=\"true\">;</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">{</mo><msub><mi>f</mi><mi>i</mi></msub><mo>:</mo><msub><mi>U</mi><mi>i</mi></msub><mo>→</mo><mi>X</mi><mo stretchy=\"false\">}</mo><mo>∈</mo><mi>J</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}_{(\\mathcal{C},J)}(U_1, \\ldots, U_n ; X) = \\{\\{f_i : U_i \\to X\\} \\in J\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose\">}</span></span></span></span></p>",
        "id": 379201882,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690471047
    },
    {
        "content": "<p>Which is what you've written too I guess</p>",
        "id": 379204094,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690471403
    },
    {
        "content": "<p>It's not clear to me how to define a sheaf as an algebra. You have an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal O_{(\\mathcal C,J)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0385em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span></span></span></span>-algebra <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> giving you a set for every object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> and then for every covering family <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>U</mi><mi>n</mi></msub><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">f:U_1, \\ldots, U_n \\to X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> you'd need a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>×</mo><mo>⋯</mo><mo>×</mo><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>→</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(U_1) \\times \\cdots \\times F(U_n) \\to F(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>. But glueing defines such a map only on a subset of the domain -- compatible families of sections.<br>\nYou do get a map in the other direction, given by restriction though.</p>",
        "id": 379214719,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690473052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/379201882\">said</a>:</p>\n<blockquote>\n<p>To me it looks like a site <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{C}, J)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose\">)</span></span></span></span> defines an operad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}_{(\\mathcal{C},J)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0385em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span></span></span></span> whose objects are the same of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> and whose operations are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>-coverings. That is, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">O</mi><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>J</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>U</mi><mi>n</mi></msub><mo separator=\"true\">;</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">{</mo><msub><mi>f</mi><mi>i</mi></msub><mo>:</mo><msub><mi>U</mi><mi>i</mi></msub><mo>→</mo><mi>X</mi><mo stretchy=\"false\">}</mo><mo>∈</mo><mi>J</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}_{(\\mathcal{C},J)}(U_1, \\ldots, U_n ; X) = \\{\\{f_i : U_i \\to X\\} \\in J\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mclose\">}</span></span></span></span></p>\n</blockquote>\n<p>I guess that is an operad, but the significance confuses me.  Forgetting about restrictions for the moment, it also leaves out all the infinite coverings.  And the algebras of this operad don't seem to do anything in particular.  In particular, sheaves only give partial algebras because the arity of the operad's operations doesn't enforce matching on overlaps.</p>",
        "id": 379215469,
        "sender_full_name": "James Deikun",
        "timestamp": 1690473169
    },
    {
        "content": "<p>The finitariety doesn't scare (should it?), I see no harm in allowing the operations to have infinite arity</p>",
        "id": 379217586,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690473540
    },
    {
        "content": "<p>The rest of the things you say is true, but still... one can ponder</p>",
        "id": 379217777,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690473573
    },
    {
        "content": "<p>Agreed that the \"algebra\" I wrote down won't work without doing something drastic (e.g., replace Set by partial functions). Thanks for the replies!</p>\n<p><span class=\"user-mention\" data-user-id=\"438995\">@James Deikun</span> wrote something interesting about using essentially algebraic theories to characterize the compatibility requirements, but I didn't quite follow. Is the idea to replace the list monad in the construction of multicategories by something fancier?</p>",
        "id": 379296510,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1690490138
    },
    {
        "content": "<p>Basically you can read the <a href=\"https://ncatlab.org/nlab/show/essentially%20algebraic%20theory\">[[essentially algebraic theory]]</a> off of the description of sheafification as a <a href=\"https://ncatlab.org/nlab/show/left%20exact\">[[left exact]]</a> reflection on the presheaf category.  It might still be a very high arity theory though.</p>",
        "id": 379580477,
        "sender_full_name": "James Deikun",
        "timestamp": 1690564535
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278008\">Spencer Breiner</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/379296510\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> wrote something interesting about using essentially algebraic theories to characterize the compatibility requirements, but I didn't quite follow. Is the idea to replace the list monad in the construction of multicategories by something fancier?</p>\n</blockquote>\n<p>To add to James' answer (and he will correct me if I'm wrong), the idea is to see a sheaf as an algebraic structure with operations whose arities are given by the covers. For instance, if I had a cover of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> given by two disjoint opens <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">U_1,U_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, then this means the corresponding algebraic structures will come with a 'glueing operation' of type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><msub><mi>U</mi><mn>1</mn></msub><mo>×</mo><mi>F</mi><msub><mi>U</mi><mn>2</mn></msub><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">FU_1 \\times FU_2 \\to X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>. If all covers were disjoint like this, then all the glueing operations would be of algebraic type (<a href=\"https://ncatlab.org/nlab/show/algebraic%20theory\">[[algebraic theory]]</a>), i.e. the domains would be simply products (bc the compatibility conditions for disjoint covers are trivial). In general covers overlap though, so one's theory of glueing is only an <a href=\"https://ncatlab.org/nlab/show/essentially%20algebraic%20theory\">[[essentially algebraic theory]]</a>, whose operations have domain which can be arbitrary finite limits (IIRC), such as the pullbacks defining the compatibility conditions for the glueing data of a sheaf.</p>",
        "id": 380325073,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690807028
    },
    {
        "content": "<p>So I guess the idea here would be to associate to every site its 'essential algebraic theory of glueing', whose operations are glueing of covers in the topology of the site. Then a model for this theory would be exactly a sheaf on the site we started from.</p>",
        "id": 380325620,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690807129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/379580477\">said</a>:</p>\n<blockquote>\n<p>Basically you can read the <a href=\"https://ncatlab.org/nlab/show/essentially%20algebraic%20theory\">[[essentially algebraic theory]]</a> off of the description of sheafification as a <a href=\"https://ncatlab.org/nlab/show/left%20exact\">[[left exact]]</a> reflection on the presheaf category.  It might still be a very high arity theory though.</p>\n</blockquote>\n<p>This isn't very clear to me, <span class=\"user-mention\" data-user-id=\"438995\">@James Deikun</span>. The localization should give the models of the essentially algebraic theory (EAT) we are after, but how does it give me the theory itself?</p>",
        "id": 380327371,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690807432
    },
    {
        "content": "<p>Via <a href=\"https://ncatlab.org/nlab/show/Gabriel-Ulmer%20duality\">[[Gabriel-Ulmer duality]]</a>.</p>",
        "id": 380453489,
        "sender_full_name": "James Deikun",
        "timestamp": 1690828561
    },
    {
        "content": "<p>uhm so the idea is that a topos of sheaves is locally finitely presentable, hence by duality we get an EAT it is the category of models of?</p>",
        "id": 380617200,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690881362
    },
    {
        "content": "<p>that's so cool!</p>",
        "id": 380617254,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1690881365
    },
    {
        "content": "<p>But toposes of sheaves are not locally <em>finitely</em> presentable in general...</p>",
        "id": 380622313,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1690882297
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/locally+presentable+category\">Locally presentable</a> means locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-presentable for some regular cardinal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>.  Does <a href=\"https://ncatlab.org/nlab/show/Gabriel%E2%80%93Ulmer+duality\">Gabriel-Ulmer duality</a>, the contravariant equivalence between</p>\n<ul>\n<li>the 2-category of finitely presentable categories</li>\n</ul>\n<p>and</p>\n<ul>\n<li>the 2-category of finitely cocomplete categories</li>\n</ul>\n<p>generalize to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-presentable case?</p>\n<p>If so Matteo's idea should still work.</p>",
        "id": 380635543,
        "sender_full_name": "John Baez",
        "timestamp": 1690884825
    },
    {
        "content": "<p>(When I have time I add links explaining some terms to make it a bit easier for beginners to jump aboard the conversation.  Very often I myself am one of these beginners: e.g. I'm no expert on Gabriel-Ulmer duality though I get the basic idea.)</p>",
        "id": 380635977,
        "sender_full_name": "John Baez",
        "timestamp": 1690884899
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/380635543\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://ncatlab.org/nlab/show/locally+presentable+category\">Locally presentable</a> means locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-presentable for some regular cardinal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>.  Does <a href=\"https://ncatlab.org/nlab/show/Gabriel%E2%80%93Ulmer+duality\">Gabriel-Ulmer duality</a>, the contravariant equivalence between</p>\n<ul>\n<li>the 2-category of finitely presentable categories</li>\n</ul>\n<p>and</p>\n<ul>\n<li>the 2-category of finitely cocomplete categories</li>\n</ul>\n<p>generalize to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-presentable case?</p>\n<p>If so Matteo's idea should still work.</p>\n</blockquote>\n<p>Yes:<br>\n<span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Gabriel-Ulmer.20duality/near/200305161\">said</a>:</p>\n<blockquote>\n<p>Yes, this follows from the general duality theorem of Centazzo–Vitale's <a href=\"http://www.tac.mta.ca/tac/volumes/10/20/10-20.pdf\">A duality relative to a limit doctrine</a>, where the limit doctrine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">D</span></span></span></span> is chosen to be the doctrine of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-small limits (see Adámek–Borceux–Lack–Rosický's <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.28.3481&amp;rep=rep1&amp;type=pdf\">A classification of accessible categories</a>).</p>\n</blockquote>",
        "id": 380638790,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1690885388
    },
    {
        "content": "<p>The restriction of Gabriel–Ulmer duality to Grothendieck toposes was explored in the paper <a href=\"https://arxiv.org/abs/1902.09391\">Gabriel-Ulmer duality for topoi and its relation with site presentations</a> by <span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span> and <span class=\"user-mention\" data-user-id=\"316468\">@Julia Ramos</span>.</p>",
        "id": 380639308,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1690885482
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 380646418,
        "sender_full_name": "John Baez",
        "timestamp": 1690886815
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/380635543\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://ncatlab.org/nlab/show/locally+presentable+category\">Locally presentable</a> means locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-presentable for some regular cardinal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>.  Does <a href=\"https://ncatlab.org/nlab/show/Gabriel%E2%80%93Ulmer+duality\">Gabriel-Ulmer duality</a>, the contravariant equivalence between</p>\n<ul>\n<li>the 2-category of finitely presentable categories</li>\n</ul>\n<p>and</p>\n<ul>\n<li>the 2-category of finitely cocomplete categories</li>\n</ul>\n<p>generalize to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-presentable case?</p>\n<p>If so Matteo's idea should still work.</p>\n</blockquote>\n<p>FWIW, the Gabriel-Ulmer duality extends to the duality of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-accessible categories and sketches with limit and colimit cones of size <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>. This is worked in the Makkai-Pare book on accessible categories, also earlier but in less detail by Lair in Diagrammes. This is the most general version of functorial semantics: basically the functorial semantics for all of infinitary first order logic. The finitary version was in a paper by Adamek, Johnstone, Makowski, and someone (whose name i stupidly forget)...</p>\n<p>the reason i studied this recently is that you have this universe of everything that can be expressed in first order logic, formalized as a 2-category, and this universe is in a formal sense <em>computable</em> because <em>the theory of sketches is a first order theory, i.e. sketchable</em>. the sketch of sketch morphisms and dually of the model morphisms can be viewed as a programming language, making everything in this universe computable. so while every static theory expressive enough to encode its own formulas is incomplete, per goedel, applying the computable fixpoint constructions on first order theories we can always construct theories that confirm previously false statements. so dynamic logic supports, in a sense, the opposite of goedel's incompleteness theorem, and this arises from general functorial semantics, just a step above the lfp-theories and the geometric theories. i think the construction even applies to geometric theories alone, ie on the 2-category (actually bicategory) of toposes, but i didn't work that out. it all got conjectured by my daughter, observing how people construct new theories to confirm old lies:<br>\n<a href=\"https://arxiv.org/abs/2303.14338v2\">https://arxiv.org/abs/2303.14338v2</a></p>",
        "id": 380772909,
        "sender_full_name": "dusko",
        "timestamp": 1690908208
    },
    {
        "content": "<p>Cool!</p>",
        "id": 380775657,
        "sender_full_name": "John Baez",
        "timestamp": 1690908733
    },
    {
        "content": "<p>... Adamek, Johnstone, Makowski, and <em>Rosicky</em> of course :)</p>",
        "id": 380777765,
        "sender_full_name": "dusko",
        "timestamp": 1690909133
    },
    {
        "content": "<p>It is true that a category is accessible iff it is sketchable. But the case of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>-accessible categories for a specific <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span> is not straightforward, as in the locally presentable case, and in particular does not correspond to ketches with limit and colimit cones of size <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>κ</mi></mrow><annotation encoding=\"application/x-tex\">\\kappa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">κ</span></span></span></span>.</p>\n<p>Also, I don't know how to make the correspondence between accessible and sketchable categories into a duality, in the sense of a contravariant biequivalence of 2-categories, in a non-tautological way. What are the morphisms of sketches? You can <strong>define</strong> them to correspond to accessible functors between the categories of models (this or something like it is what I mean by tautological), but  otherwise what do you do? There can be many sketches for the same accessible category.</p>",
        "id": 380861625,
        "sender_full_name": "Steve Lack",
        "timestamp": 1690933081
    },
    {
        "content": "<p>Regarding the original question about sheaves and operads, it might be worth looking at the notion of <strong>operadic category</strong> due to Batanin and Markl.  This has a framework in which one can see presheaves as operads. There might be a way to incorporate a topology into the setup. (Full disclosure: I haven't looked at this in a while, and it's very possible that this just doesn't work.)</p>",
        "id": 380862205,
        "sender_full_name": "Steve Lack",
        "timestamp": 1690933411
    },
    {
        "content": "<p>morphisms of sketches were studied by bastiani and ehresmann in their 100 page paper from 1972. then coppey and lair proceeded to generalize these morphisms to capture the functors between the corresponding accessible categories. (the correspondence is certainly not straightforward, as it is not even the case that the sketch cones capture the universal quantifiers like the cocones capture the existential, as lair and guitart immediately showed.) then makkai and pare spelled out the model theory of sketches more precisely, and then makkai proceeded to study the model theory of sketch morphisms in a series of papers, which i think appeared at some point in JPAA. he also had a paper on <strong>stone duality</strong> for first order logic, not in terms of sketches, and was going to put it all together into a generalized GU-duality (as i think explicitly announced in the book) --- but got tired of it all. it is difficult to present genuinely new results in the world full of reviewers who believe that the party line that they have learned by heart completely explains the world and that everything that looks like they didn't know it must be either wrong or trivial.</p>",
        "id": 380880584,
        "sender_full_name": "dusko",
        "timestamp": 1690941374
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"618510\">Steve Lack</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/380861625\">said</a>:</p>\n<blockquote>\n<p>There can be many sketches for the same accessible category.</p>\n</blockquote>\n<p>that is precisely why the computational constructions apply in this framework. there are many type-checkers for each type, many programs for each computable function, many oracles for each degree... infinitely many in each nontrivial case.</p>",
        "id": 380881693,
        "sender_full_name": "dusko",
        "timestamp": 1690941779
    },
    {
        "content": "<p>aha, i remembered a more direct answer than to send you to bastiani and ehresmann and foltz and lair for morphisms.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"618510\">Steve Lack</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Sheaves.20and.20operads.2Fmulticategories/near/380861625\">said</a>:</p>\n<blockquote>\n<p>What are the morphisms of sketches? You can <strong>define</strong> them to correspond to accessible functors between the categories of models (this or something like it is what I mean by tautological), but  otherwise what do you do? </p>\n</blockquote>\n<p>think of sketches as software specifications and their models as implementations. the morphisms between the implementations are the meaning preserving interfaces (aka the software connectors). </p>\n<p>a vanilla interpretation of software specifications maps signature to signature and axioms to axioms. but there are of course very few such things. you want to be able to map the terms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to <em>derived</em> terms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and that should map the axioms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to <em>theorems</em> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. but that is precisely an interface between the models! spelling out the \"tautological\" correspondence between the model morphisms and the theory morphisms is the heart of functorial semantics.</p>",
        "id": 380885225,
        "sender_full_name": "dusko",
        "timestamp": 1690943090
    },
    {
        "content": "<p>Hi Dusko. That does indeed sound like what I was calling \"tautological\". Of course almost anything in mathematics can be seen as tautological if you look at it from the right (wrong?) point of view.  </p>\n<p>With regards Makkai duality, as I understand it, this is not  (as you say) done in terms of sketches; nor does it involve accessible categories. At least in the general case, it relies on knowing more than just the category of models in order to reconstruct the theory. That is where the \"ultracategories\" come in. </p>\n<p>For some fragments of logic, this is not necessary. For example, you can recover a Barr-exact category from its category of models.</p>",
        "id": 380895546,
        "sender_full_name": "Steve Lack",
        "timestamp": 1690947800
    },
    {
        "content": "<p>Hi Steve. I got covid. While the RNA viruses are still unlikely to spread through chat lists, the brain fog might. So beware of the following clarifications :))</p>\n<p>re the TAUTOLOGY. A tautology is a statement provable from logical axioms alone. But concepts and notations have to be defined, and the definitions are used in the proofs of tautologies. So if on one side we define an algebra as a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> with a family of operations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi>n</mi></msup><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A^n\\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> satisfying some equations, and on the other side we have a definition of product-preserving functors and of clones of operations and equations, then the equivalence of categories of algebras and categories of product-preserving functors from corresponding clones is proved from logical axioms alone, by unfolding the definitions. Some deep insights are expressed as definitions rather than axioms, rendering some deep theorems as tautologies. I think Wittgenstein was writing about such things. Moreover, SAT-solvers seem to be telling us that proving tautologies can be hard. </p>\n<p>re the DUALITY. I mentioned the functorial semantics of sketches because people were talking about the Gabriel-Ulmer duality --- but Temmie's and my paper does not depend on it. Our constructions are built on one side of this general (albeit tautological) duality: within a universe of logical theories with reference models, as beliefs about the states of the world. </p>\n<p>(* People tend to describe their beliefs as first order theories, each with a reference model. General relativity is a first order theory, with the measurements that support it as the reference model. My grandmother's view of WW2 could be written down as a list of first order statements, and the documents that she had about it were the reference model. Her sister might have a different view of the world, and a different reference model. They interpret each other's first order theories, and reconcile the assignments to their respective reference models through some communication interface. Now if we present their first order theories as sketches and their communication interfaces as morphisms, we have a category. Doug Smith and Peter Pepper and I wrote some of this up in some automated software engineering papers from 2000s. A tool based on this was built and they built real software systems using also wrote some papers against all odds... *) </p>\n<p>The new insight is that this universe of logical theories is programmable, because there is a logical theory of logical theories. That theory can be used as a programming language (viz a universal machine). We spell out some some program schemas people developed for <strong>programming influence and for lying</strong>. </p>\n<p>It seemed convenient to present this universe in terms of sketches. But every computable function can be programmed in infinitely many ways, every model is described by infinitely many theories, and every theory is a model of the theory of theories in infinitely many ways. So our theory of the theory of theories can be formalized in infinitely many other ways besides sketches. Maybe we should rework the story.</p>\n<p>But any reworking will probably fit under teh high-level view in the slides we used at WoLLIC: <a href=\"https://www.mathstat.dal.ca/wollic2023/\">https://www.mathstat.dal.ca/wollic2023/</a> (also tutorial, which was a bit of a laugh)</p>",
        "id": 381322801,
        "sender_full_name": "dusko",
        "timestamp": 1691023800
    }
]