[
    {
        "content": "<p>Is there a way to thinkg about regular grammars, context-free grammars and context-sensitive grammars in terms of categories?</p>\n<p>A regular grammar is representered by a finite (weighted) automata which is ~= a group representation of the free monoid on a finite alphabet I think? <br>\nSo it might make sense taht context-sensitive grammars might be related to representations of categories maybe?<br>\nThankful for any pointers</p>",
        "id": 390054680,
        "sender_full_name": "Alexander Gietelink Oldenziel",
        "timestamp": 1694283052
    },
    {
        "content": "<p>This may not answer your question exactly, but this paper may contain some related ideas which interest you: <br>\n<a href=\"https://arxiv.org/abs/2212.09060\">Parsing as a lifting problem and the Chomsky-Schützenberger representation theorem</a> - Paul-André Melliès, Noam Zeilberger</p>",
        "id": 390056711,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1694285238
    },
    {
        "content": "<p>Eilenberg's work on category theory, grammars and automata, and subsequent followups, seem relevant.  <a href=\"https://math.stackexchange.com/questions/105091/eilenbergs-rational-hierarchy-of-nonrational-automata-languages\">David Lewis</a> wrote:</p>\n<blockquote>\n<p>In the preface to his very influential books <em>Automata, Languages and Machines</em> (Volumes A, B), Samuel Eilenberg tantalizingly promised a Volume C dealing with \"a hierarchy (called the rational hierarchy) of the nonrational phenomena... using rational relations as a tool for comparison. Rational sets are at the bottom of this hierarchy. Moving upward one encounters 'algebraic phenomena,'\" which lead to \"to the context-free grammars and context-free languages of Chomsky, and to several related topics.\"</p>\n</blockquote>\n<blockquote>\n<p>But Eilenberg never published volume C. He did leave preliminary handwritten notes for the first few chapters (<a href=\"http://www-igm.univ-mlv.fr/~berstel/EilenbergVolumeC.html\">http://www-igm.univ-mlv.fr/~berstel/EilenbergVolumeC.html</a>) complete with scratchouts, question marks, side notes and gaps.</p>\n</blockquote>\n<blockquote>\n<p>Finally, the question -- does anyone know of work along the same lines to possibly reconstruct what Eilenberg had in mind? If not, what material is likely closest to his ideas?</p>\n</blockquote>\n<p>J.-E. Pin replied:</p>\n<blockquote>\n<p>It would be hazardous to guess what Eilenberg had in mind, but a reasonable answer to your question </p>\n<blockquote>\n<p>What material is likely closest to his ideas?</p>\n</blockquote>\n<p>might be the theory of <a href=\"http://en.wikipedia.org/wiki/Cone_(formal_languages)\">cones</a> (also called <a href=\"http://en.wikipedia.org/wiki/Abstract_family_of_languages\">full trios</a>).  An excellent reference on the part of this theory related to context-free languages is Berstel's book <em><a href=\"http://www-igm.univ-mlv.fr/~berstel/LivreTransductions/Transductions_1979.djvu\">Transductions and Context-Free Languages</a></em>, Teuber 1979.</p>\n<p>An alternative answer (still for context-free languages) can be found in the little known but very inspiring article by J. Berstel and L. Boasson, <a href=\"http://www-igm.univ-mlv.fr/~berstel/Articles/1996AlgebraicTheory.pdf\">Towards an algebraic theory of context-free languages</a>, 1996, Fundamenta Informaticae, 25(3):217-239, 1996.</p>\n<p>To quote your introduction, the first reference is using \"rational relations as a tool for comparison\" and the second one really \"encounters algebraic phenomena which lead to the context-free grammars and context-free languages\".</p>\n</blockquote>",
        "id": 390056935,
        "sender_full_name": "John Baez",
        "timestamp": 1694285476
    },
    {
        "content": "<p>Micha&euml;l Cadilhac provided another reference:</p>\n<blockquote>\n<p>I recommend Behle, Krebs, and Reifferscheid's recent work on extending Eilenberg's fundamental theorem (that is, the correspondence between pseudovarieties of monoids and varieties of languages) to non-regular languages (<a href=\"https://doi.org/10.1007/978-3-642-21493-6_6\">link</a>).  They point out previous works in this line (in particular, Sakarovitch's on CFL).</p>\n</blockquote>",
        "id": 390057142,
        "sender_full_name": "John Baez",
        "timestamp": 1694285673
    },
    {
        "content": "<p>I would like to study this stuff sometime.</p>",
        "id": 390057166,
        "sender_full_name": "John Baez",
        "timestamp": 1694285713
    },
    {
        "content": "<p>Also possibly relevant is this paper on generalizations of regular grammars by <span class=\"user-mention\" data-user-id=\"277812\">@Matt Earnshaw</span>  and <span class=\"user-mention\" data-user-id=\"281251\">@Pawel Sobocinski</span>:<br>\n<a href=\"https://arxiv.org/abs/2207.00526\">https://arxiv.org/abs/2207.00526</a></p>",
        "id": 390078943,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1694306824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278660\">Alexander Gietelink Oldenziel</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Chomsky.20hierarchy.20and.20Categories/near/390054680\">said</a>:</p>\n<blockquote>\n<p>Is there a way to thinkg about regular grammars, context-free grammars and context-sensitive grammars in terms of categories?</p>\n</blockquote>\n<p>there is more than one way to present the chomsky hierarchy in any cartesian category. i think the simplest way is in terms of state machines. (if we want to start from grammars, each of the 4 families of grammars is equivalent to a natural family of state machines along its version of the myhill-nerode-type of theorem.)</p>\n<p>a state machine is of course a coalgebra in the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>×</mo><mi>A</mi><mo>→</mo><mi>X</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X\\times A\\to X\\times B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. (ok, the official coalgebra <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>×</mo><mi>B</mi><msup><mo stretchy=\"false\">)</mo><mi>A</mi></msup></mrow><annotation encoding=\"application/x-tex\">X\\to (X\\times B)^A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span></span></span></span></span></span></span> requires the closed structure. but when a slightl relaxed definition hugely expands the scope of applications, then most people relax the definition. both coalgebra books think of coalgebras as stateful functions, not state destructors.) the correspondence is then:</p>\n<p>3) regular languages are recognized by finite-state automata (machines with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">B=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>)<br>\n2) context-free languages are recognized by pushdown automata<br>\n1) context-sensitive languages are recognized by linearly bounded TMs and<br>\n0) recursively enumerable languages are recognized (and generated) by general TMs.</p>\n<p>the TMs in a cartesian categories were written down in many papers. my mmory goes to my monoidal computer III, and in my \"testing equivalences\" with mike mislove from 2006 (my son was born!). getting from state machines to the corresponding language is also  described in that paper. both are on <a href=\"http://dusko.org\">dusko.org</a> and on arxiv. [PS the published version of the testing paper cut off the appendix wit the TMs, but the version on <a href=\"http://dusko.org\">dusko.org</a> has it.] a TM in a cartesian category is just a state machine with the tape modeled as an external state space. the linearly bounded TMs are the TMs where the tape lenght is linearly bounded. (this goes back to kuroda in the early 60s, before space complexity was defined.)</p>\n<p><em>IMPORTANT</em> <br>\ni think that segregating category theory from the rest of math by asking \"does the basic concept X have a categorical version\" works against both sides. the tacit assumption that a state machine someone wrote down must be a set and that it is worth a bunch of papers to spell out a \"categorical version\" hides the fact that, more often than not, the original structural definition was a diagram in some category, and that defining what it does with the elements of some sets required additional work, leading away from the original structure. <strong>everything has a categorical version!!</strong> if the \"categorical version\" is not obvious, it is because people added some convenient theology (like when zermelo replaced cantor's wellorderings, which arise by counting, by the axiom of choice, which arises from nothing...)</p>",
        "id": 390229353,
        "sender_full_name": "dusko",
        "timestamp": 1694404340
    },
    {
        "content": "<p>note that the cartesian structure suffices for the machien definitions, but that running them causes computational effects, which take us outside the cartesian structure. most computational effects induce commutative monads, and then the types become free algebras in the cartesian category form a monoidal category with data services (a commutative comonoid) ie a choice of a basis of copiable and deletable data over each type.</p>",
        "id": 390230131,
        "sender_full_name": "dusko",
        "timestamp": 1694404821
    },
    {
        "content": "<p>(what i call \"monoidal categories with data services\" was called GS-monoidal categories in fabio gaducci's thesis from i think 96, and people seem to continue to use this name. i forgot that and started calling the comonoids that copy and delete data <em>the data services</em> in the lectures in the late 90s. i don't like to rename things and woudn't if i remembered. but still,  calling things by acronyms is probably better avoided (WHO-monoids, USSR-naturality, KZ-monads?) the nice part is that (fabio tells me) the GS-Monoidal categories got their name in reference to the GSM protocol for mobile phones, that was emerging at the time. old people like history, so i will totally try switch to that :)))</p>",
        "id": 390230236,
        "sender_full_name": "dusko",
        "timestamp": 1694404867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278660\">Alexander Gietelink Oldenziel</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Chomsky.20hierarchy.20and.20Categories/near/390054680\">said</a>:</p>\n<blockquote>\n<p>A regular grammar is representered by a finite (weighted) automata which is ~= a group representation of the free monoid on a finite alphabet I think? <br>\nSo it might make sense taht context-sensitive grammars might be related to representations of categories maybe?</p>\n</blockquote>\n<p>can you explain this a little more?<br>\non one hand, the view of an automaton monoid action doesn't seem to be particularly informative. if we form the free algebra over states by applying <em>any strong monad whatsoever</em>, the automaton induces the action of the alphabet on that free algebra.<br>\non the other hand, category representations usually go into presheaves, and lots of people have used presheaves to analyze computational behaviors. so your intuition could be leading to something useful...</p>",
        "id": 390232338,
        "sender_full_name": "dusko",
        "timestamp": 1694406213
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Chomsky.20hierarchy.20and.20Categories/near/390229353\">said</a>:</p>\n<blockquote>\n<p><em>IMPORTANT</em> <br>\ni think that segregating category theory from the rest of math by asking \"does the basic concept X have a categorical version\" works against both sides. the tacit assumption that a state machine someone wrote down must be a set and that it is worth a bunch of papers to spell out a \"categorical version\" hides the fact that, more often than not, the original structural definition was a diagram in some category, and that defining what it does with the elements of some sets required additional work, leading away from the original structure. <strong>everything has a categorical version!!</strong> if the \"categorical version\" is not obvious, it is because people added some convenient theology (like when zermelo replaced cantor's wellorderings, which arise by counting, by the axiom of choice, which arises from nothing...)</p>\n</blockquote>\n<p>Category theory is to a large extent a tool for abstraction, and often \"the categorical version of something\" is in particular a category-theoretic abstraction of it. It's much more common in science (and pedagogy) to go from the concrete to the abstract than to go from the abstract to the concrete. So criticizing mathematicians for studying and understanding set-theoretic models and then translating this into categorical language sounds like \"Oh you should have done it the abstract way from the beginning.\" In my experience this is usually not how people learn or think or reason.</p>",
        "id": 390232395,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1694406244
    },
    {
        "content": "<p>The stuff about \"theology\" and \"leading away from the original structure\" is too strong of a claim. I worry that this kind of polemic has the side effect of being dismissive of the work done by these mathematicians. </p>\n<p>I remember that in the Pacific Journal of Mathematics controversy, Paul Halmos said about the model theorists' work (paraphrasing) \"Well this is all very well and good but you have deliberately obscured things by insisting for unexplainable reasons on phrasing it in your own idiosyncratic language, which adds no value at all but only distracts from the real mathematical content\" and this was his excuse for translating their proof from a model-theoretic proof into a more purely analytical proof and publishing it independently at the same time. The obvious problem there is that it's much easier to come up with a second proof once the first proof is known.</p>\n<p>Accusing set theoretic reasoning of leading us astray from the real mathematical structure contradicts mathematical history. Taking point-set topology for example as a central branch of set-theoretical mathematics, without Brouwer's work on point-set topology, there is no modern differential geometry, there is no solution to Hilbert's fifth problem, no proof of the invariance of domain.</p>",
        "id": 390233402,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1694406985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"424412\">Patrick Nicodemus</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Chomsky.20hierarchy.20and.20Categories/near/390232395\">said</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>Category theory is to a large extent a tool for abstraction, and often &quot;the categorical version of something&quot; is in particular a category-theoretic abstraction of it. It&#39;s much more common in science (and pedagogy) to go from the concrete to the abstract than to go from the abstract to the concrete.\n</code></pre></div>\n<p>the idea that thinking goes from concrete to abstract is common, but not espoused either in cognitive science or in theory of science. e.g., the cognitive apparatus in children definitely goes from abstract to concrete: from \"hungry\", or \"happy\" to \"spoon\" and \"toy\".</p>\n<p>in fact, the two directions are thought to present the difference between the human and the animal lexicons. dogs generalize from leash to walk, and from bowl to eating. people apparently go the other way around. people as different as chomsky and wittgenstein agree about this.</p>",
        "id": 390233453,
        "sender_full_name": "dusko",
        "timestamp": 1694407031
    },
    {
        "content": "<p>(sorry, dinner time :)</p>",
        "id": 390233566,
        "sender_full_name": "dusko",
        "timestamp": 1694407109
    },
    {
        "content": "<p>I guess the PJM controversy is the one described in this paper <a href=\"https://arxiv.org/abs/1607.00149\">https://arxiv.org/abs/1607.00149</a> ?</p>",
        "id": 390240867,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1694411549
    },
    {
        "content": "<p>Yes, that is the controversy I am referring to. My paraphrase was in turn of the paraphrase given by the authors of this paper in section 3.2</p>",
        "id": 390242264,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1694412321
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"424412\">Patrick Nicodemus</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/Chomsky.20hierarchy.20and.20Categories/near/390233402\">said</a>:</p>\n<blockquote>\n<p>Accusing set theoretic reasoning of leading us astray from the real mathematical structure contradicts mathematical history. Taking point-set topology for example as a central branch of set-theoretical mathematics, without Brouwer's work on point-set topology, there is no modern differential geometry, there is no solution to Hilbert's fifth problem, no proof of the invariance of domain.</p>\n</blockquote>\n<p>your general point that i shouldn't accuse people is well taken. i didn't mean to.</p>\n<p>but history is not a story of progress, and going astray from history is sometimes useful.</p>\n<p>you mention point set topology.  euclid begins the story about space by defining points, which occupy no space. we could observe points as line intersections --- <em>if</em> we could observe lines, which have no breadth or depth. they also occupy no space. so we observe lines as intersections of planes... so our studies of space the first couple of thousand years were based on points. so much for your impression that abstract concepts come about by generalizing concrete concepts. a potato is concrete, but it was easier to develop the theory of space in terms of things that occupy no space, and to even keep drawing these things in sand, on perchment, and on blackboards, imagining that they are infinitely small and invisible. point set topology helped us understand surfaces that we can see in terms of simpler things that we cannot. then came grothendieck and spaces where points are not distinguishable by any observable neighborhoods were in the way. so he realized that we actually don't really need the points. they are a \"vanishing point\" of what we can observe: the perfect ideals of neighborhoods. but it was easier to reason with the vanishing points than with the neighborhoods that we observe in the concrete world. so we now went astray from history, and know that the point set topology can be replaced by the point-free topology... but most people still like their points.</p>\n<p>i read cantor's correspondence with dedekind (edited by emmy noether). that makes me talk about theology that the community tends to impose its members. theology of points. theology of choice. cantor didn't think of sets as sets of points. he thought of sets <em>up to bijections</em>. specified by various forms of recursion. so sets ended up well-ordered. dedekind convinced him that the order types should be abandoned, and used recursion in his Zahlbericht, where goedel got it from. then zermelo edited cantor's collected work, said that the well-ordering assumption was unfounded, and published a couple of papers how to found it on the axiom of choice. discovering that sets should really be considered up to bijection, like cantor did, waited for eilenberg and maclane, who needed natural equivalences... </p>\n<p>i was really astonished that history could be so wasteful. but then i remembered it's driven by wars. wastefulness is the whole point of it. we just need to remember to always go astray.</p>",
        "id": 390245625,
        "sender_full_name": "dusko",
        "timestamp": 1694414298
    },
    {
        "content": "<p>this is surely more than anyone wanted to hear about this but in case anyone wants to see how cantor's constructions, criticized by dedekind and zermelo, give us a useful family of <em>program-closed</em> categories, check ch 8 of my book (type \"programs as diagrams\" in amazon). i also gave a talk about it in the CUNY seminar (type \"program-closed\" in youtube).</p>",
        "id": 390246273,
        "sender_full_name": "dusko",
        "timestamp": 1694414673
    },
    {
        "content": "<p>I think you both have good points about respecting the original mathematical work, dusko that usually the original work has an abstract and categorical core before it gets situated in set theory, Patrick that often a lot of the important mathematical work around this core concept happens after the thing has been situated firmly in the category of sets and freely uses the assumptions thereof so it takes real intellectual work to untangle it from this context.</p>",
        "id": 390263129,
        "sender_full_name": "James Deikun",
        "timestamp": 1694422185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278660\">@Alexander Gietelink Oldenziel</span> </p>\n<p>I have just been introduced to Automata Theory by the recent EMS's handbook.  (It's a great book!) <br>\nIn my thought, it is very natural that we regard nodes in automata as objects in category and transitions as morphisms. <br>\nIn this setting, a brief thinking make us clear that a category can be made into an automata but not the vice versa (an automata is not a category since there is automata which does not contain identities). </p>\n<p>Category theory is kind of linear algebra. (imagine e.g. morphisms in category of chain complexes)  <br>\nAnd, Automata theory too. For each automata (word automata), there is a matrix ( over semiring ). <br>\nThe transition matrix is very simple. If there is a transition from Node i to Node j labelled by Alphabet 'a',   the matrix is just defined by </p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> M_{ij} = a </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> . </p>\n<p>This is very natural if we know graph representation matrices. </p>\n<p>In the setting, if we take a preorder of generalization; <br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>g</mi><mi>o</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>s</mi><mo>&lt;</mo><mi>A</mi><mi>u</mi><mi>t</mi><mi>o</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> Categories &lt;  Automata </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">es</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span></span></span></span></p>\n<p>In the same sense, there is a tree automata version, i.e. <br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>c</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>g</mi><mi>o</mi><mi>r</mi><mi>i</mi><mi>e</mi><mi>s</mi><mo>&lt;</mo><mi>T</mi><mi>r</mi><mi>e</mi><mi>e</mi><mtext> </mtext><mi>A</mi><mi>u</mi><mi>t</mi><mi>o</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> Multi categories &lt; Tree \\ Automata </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">lt</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">es</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">ree</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span></span></span></span>  </p>\n<p>Given a category, we always do not know where to start computation. Whereas, automata give the way of the computation and using infinity more precisely or formally.  Given an equivalence between sSet and Top<br>\n in categories, where to start the computation ?</p>\n<p>In the sense of computation, automata seems more precise and general. <br>\nAnd, it's just a beginner's thought.</p>",
        "id": 394382210,
        "sender_full_name": "GhaS Shee",
        "timestamp": 1696241007
    },
    {
        "content": "<p>it's always a pleasure for the eye to read dusko's answers</p>",
        "id": 394384370,
        "sender_full_name": "fosco",
        "timestamp": 1696241605
    }
]