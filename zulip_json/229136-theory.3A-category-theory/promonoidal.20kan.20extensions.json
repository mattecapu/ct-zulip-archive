[
    {
        "content": "<p>Sorry, I dunno if I'm Zuliping correctly here. Does anyone know if there are references for promonoidal <em>right</em> Kan extensions? I was looking at older stuff by Day and Street and it seems like they do a lot of with promonoidal left Kan extensions. Does something go wrong with right Kan extensions?</p>",
        "id": 372774775,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688622462
    },
    {
        "content": "<p>What does the \"pro\" in \"promonoidal\" refer to?</p>",
        "id": 372778112,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1688623604
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/promonoidal.20kan.20extensions/near/372778112\">said</a>:</p>\n<blockquote>\n<p>What does the \"pro\" in \"promonoidal\" refer to?</p>\n</blockquote>\n<p>It's the same \"pro\" as in \"profunctor\", because a <a href=\"https://ncatlab.org/nlab/show/promonoidal%20category\">[[promonoidal category]]</a> is what you get when you replace the functors in a definition of a monoidal category with profunctors (though what <em>that</em> \"pro\" strands for is not entirely clear).</p>",
        "id": 372779860,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1688624164
    },
    {
        "content": "<p>Whatever it stands for, it's not the same as the \"pro\" in a <a href=\"https://ncatlab.org/nlab/show/pro-object\">[[pro-object]]</a>.  But I think both of them are just supposed to mean \"not quite\".</p>",
        "id": 372782543,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1688625014
    },
    {
        "content": "<p>Aha. <span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span> would you mind elaborating on what the left Kan extensions look like in this context? Sorry for the naive questions, but I suspect that with enough context I could answer the original question <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 372787634,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1688626561
    },
    {
        "content": "<p>Could it be that Day and Street are working at a high enough level of generality, with enough \"op\" symmetry around, that they discussed only promonoidal <em>left</em> Kan extensions because you can automatically deduce the corresponding results for promonoidal <em>right</em> Kan extensions just by formally taking the \"op\" of every category (or enriched category, or whatever) involved?   </p>\n<p>Just a thought.</p>",
        "id": 372851729,
        "sender_full_name": "John Baez",
        "timestamp": 1688641024
    },
    {
        "content": "<p>Right. I think one could most concisely state it as saying a promonoid is a pseudomonoid in the bicategory of categories and profunctors between them</p>",
        "id": 372963572,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688661966
    },
    {
        "content": "<p>That's a good idea John. I was secretly hoping someone had already checked all the details and I could just find a statement like \"Promonoidal right Kan extensions exist if ...\" But oh well, maybe I'll actually have to go \"read\" something.</p>",
        "id": 372963851,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688662030
    },
    {
        "content": "<p>Wow the mobile interface is really bad</p>",
        "id": 372964593,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688662219
    },
    {
        "content": "<p>Or maybe it's just the interface plus my phone</p>",
        "id": 372964699,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688662243
    },
    {
        "content": "<p>I am surprised <em>left</em> extension even exist, usually it's right extensions and lifts that exist in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>r</mi><mi>o</mi><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">Prof</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>, can you provide more context for what's in the old stuff?</p>\n<p>also, <span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> : <a href=\"https://en.wiktionary.org/wiki/πρό#Ancient_Greek\">https://en.wiktionary.org/wiki/πρό#Ancient_Greek</a></p>",
        "id": 373003111,
        "sender_full_name": "fosco",
        "timestamp": 1688672133
    },
    {
        "content": "<p>the <em>pro-</em> in profunctor stands for \"a 1-cell that acts on behalf of, or similarly to, a functor\"</p>",
        "id": 373003342,
        "sender_full_name": "fosco",
        "timestamp": 1688672190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282822\">@fosco</span> here's the paper about left promonoidal extensions <a href=\"http://www.tac.mta.ca/tac/volumes/1995/n4/v1n4.pdf\">http://www.tac.mta.ca/tac/volumes/1995/n4/v1n4.pdf</a></p>",
        "id": 373003584,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688672278
    },
    {
        "content": "<p>I was not aware of that paper; \"one always has to learn\"</p>",
        "id": 373003860,
        "sender_full_name": "fosco",
        "timestamp": 1688672365
    },
    {
        "content": "<p>actually maybe i'm misunderstanding the basic idea of that paper.... like, what they mean by \"left kan extension is promonoidal\" or whatever. what i want to have is two promonoidal functors F:C→D and G:C→E and I want the right kan extension of F along G to give a promonoidal functor E→D</p>",
        "id": 373004260,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688672480
    },
    {
        "content": "<p>but i did have the same thought. Prof has all right kan extensions, but not necessarily left, I guess?</p>",
        "id": 373005900,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688672988
    },
    {
        "content": "<p>i wonder if the bicategory of promonoidal categories also has all right extensions and if they give the usual right kan extension on underlying categories</p>",
        "id": 373006122,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688673044
    },
    {
        "content": "<p>oh <span class=\"user-mention\" data-user-id=\"282822\">@fosco</span> you have this question: <a href=\"https://mathoverflow.net/questions/352843/promonoidal-categories-as-s-algebras\">https://mathoverflow.net/questions/352843/promonoidal-categories-as-s-algebras</a></p>\n<p>Is this at all answered by remark 2.2 here <br>\n<a href=\"/user_uploads/21317/U43RIklvW0fAdlEiEjwunnVR/Day-promonoidal-functor-categories.pdf\">Day-promonoidal-functor-categories.pdf</a></p>",
        "id": 373007056,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688673338
    },
    {
        "content": "<p>I'll look into that! I know it exists. Never really understood it. My bad. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 373007315,
        "sender_full_name": "fosco",
        "timestamp": 1688673421
    },
    {
        "content": "<p>What goes wrong with left extensions in Prof? Does it only break for profunctors over some interesting enrichment base, or are you saying even over Set?</p>",
        "id": 373010646,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688674346
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"609515\">Kevin Arlin</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/promonoidal.20kan.20extensions/near/373010646\">said</a>:</p>\n<blockquote>\n<p>What goes wrong with left extensions in Prof? Does it only break for profunctors over some interesting enrichment base, or are you saying even over Set?</p>\n</blockquote>\n<p>left Kan extensions tend to not exist globally, i.e. as an adjoint to precomposition, because precomposition tends to fail preserving limits (colimits, no problem): after all, composition is <em>defined as</em> a colimit!</p>",
        "id": 373011234,
        "sender_full_name": "fosco",
        "timestamp": 1688674536
    },
    {
        "content": "<p>Ah, right, interesting! Is it more or less only profunctors representable by functors you can left extend along?</p>",
        "id": 373011623,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688674671
    },
    {
        "content": "<p>I wrote this as an MO question, in case anyone comes up with an answer and wants it to be on the books: <a href=\"https://mathoverflow.net/q/450316/11546\">https://mathoverflow.net/q/450316/11546</a></p>",
        "id": 373011945,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688674767
    },
    {
        "content": "<p>One could try to answer the related question: if we have a monoidal bicategory C with all right Kan extensions is it true that the bicategory of pseudomonoids in C also has all right Kan extensions and, if so, are the computed in C?</p>",
        "id": 373012168,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688674833
    },
    {
        "content": "<p>Incidentally, it doesn't feel to me like the issue of extensions in Prof is relevant here, since we're talking about promonoidal <em>functors</em>, which are really a special case of monoidal functors, not about monoidal profunctors or something, no?</p>",
        "id": 373014197,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688675522
    },
    {
        "content": "<p>hmmmm, so in the specific case i'm interested in, i've got actual functors between promonoidal categories</p>",
        "id": 373014410,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688675586
    },
    {
        "content": "<p>but i don't think they're special cases of monoidal functors, since, again in my special case, the domain category is not in fact monoidal</p>",
        "id": 373014563,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688675617
    },
    {
        "content": "<p>but, yeah, all the profunctors are in fact functors</p>",
        "id": 373014586,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688675626
    },
    {
        "content": "<p>I mean via the Day convolution. But yeah, we're on the same page on the other point I think.</p>",
        "id": 373014618,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688675638
    },
    {
        "content": "<p>i don't know, maybe i should just write down what my actual question is in case there's some better way to do it</p>",
        "id": 373014668,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688675643
    },
    {
        "content": "<p>(ie ProMon is the same as the bicategory of monoidal presheaf categories where the monoidal product is cocontinuous in each variable, right?)</p>",
        "id": 373014870,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688675702
    },
    {
        "content": "<p>errrrrr, haha, i don't know. is this basically by taking the monoidal completion?</p>",
        "id": 373014994,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688675738
    },
    {
        "content": "<p>I'd be interested in the actual question. I've been thinking about the equipments of (co)multicategories lately, which seems closely related.</p>",
        "id": 373015009,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688675744
    },
    {
        "content": "<p>so my question is suuuuuper basic, so i suspect it will not be useful for difficult technical questions that actually arise in category theory, but i'll write it down</p>",
        "id": 373015142,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688675777
    },
    {
        "content": "<p>Oh, wait, I take it back. I was thinking about the Day convolution but not every cocontinuous monoidal functor between Day convolutions will come from promonoidal functors between the original promonoidal categories.</p>",
        "id": 373015208,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1688675799
    },
    {
        "content": "<p>I was thinking recently about the construction of taking a commutative monoid A and producing from it the special Γ-space (really just a Γ-set), let's call it HA:Γ°→Set_∗, which takes &lt;n&gt; to Aⁿ, and the various maps are built from the multiplication on A, the unit of A, and the projections. Let me just write Γ instead of Γ° from now on, to cut down on the notation. It's known that if A is a commutative monoid then HA is lax monoidal, or in other words, is a monoid in the Day convolution monoidal structure of ΓSet. You can just check this explicitly on HA. But there seems to be something more general going on. </p>\n<p>HA is basically determined by what it does on &lt;0&gt;, &lt;1&gt;, &lt;2&gt; and maps between them. That gives you the addition structure and the unit and tells you they play well together. So you might ask about restricting HA to the full subcategory of Γ spanned by &lt;0&gt;, &lt;1&gt; and &lt;2&gt;. This full subcategory, I'll call it Γ₂. Now, Γ₂ is not monoidal, since it's not closed under smash product, but it still has a partially defined monoidal structure that tells me how to construct &lt;1&gt;Λ&lt;1&gt;, &lt;1&gt;Λ&lt;2&gt; and &lt;2&gt;Λ&lt;1&gt;. I'm thinking of this as a promonoidal structure on Γ₂. With respect to this, the inclusion Γ₂→Γ is promonoidal as well. And of course HA:Γ→Set_∗ is promonoidal because it's actually monoidal, and I THINK that HA restricted to Γ₂ will also give a promonoidal functor Γ₂→Set_*.</p>\n<p>Another fact is that HA can be constructed from HA restricted to Γ₂ by right Kan extension along Γ₂→Γ.  So is the fact that HA is (pro)monoidal recoverable from the fact that HA is constructed by extending a promonoidal functor HA:Γ₂→Set_*, along another promonoidal functor Γ₂→Γ?</p>",
        "id": 373016808,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688676297
    },
    {
        "content": "<p>I think there's really a very general underlying question here which is something like: if I restrict a monoidal functor to a full subcategory of a monoidal category (which I think should be promonoidal) and then Kan extend back again, do I get a (pro)monoidal functor back?</p>",
        "id": 373017130,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1688676381
    },
    {
        "content": "<p>alright i think this is probably easier than proving some generic thing about promonoidal right kan extensions. specifically, suppose I've got two categories, one symmetric monoidal and one symmetric promonoidal, say C and D, and a symmetric promonoidal <em>functor</em> (not a profunctor) functor F:C→D. now I can take the category of symmetric (pro)monoidal functors to some symmetric monoidal category E, SymMon(D,E), and ask about the restriction F':SymMon(D,E)→SymMon(C,E). I feel like F' must also be symmetric monoidal (w/r/t Day convolution). then one can ask (i) is it a left adjoint, say right adjoint R? and (ii) if so, for some symmetric promonoidal functor f:C→E is Rf equivalent to what I'd get if I computed the right Kan extension of f just as a functor?</p>",
        "id": 374025499,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1689007674
    },
    {
        "content": "<p>And even better, in my case, the functor F is fully faithful</p>",
        "id": 374025593,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1689007685
    }
]