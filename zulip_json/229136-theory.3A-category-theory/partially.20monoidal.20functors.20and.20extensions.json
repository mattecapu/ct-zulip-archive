[
    {
        "content": "<p>In light of my complete failure to prove what seemed like a straightforward thing (cf. <a class=\"stream-topic\" data-stream-id=\"229136\" href=\"/#narrow/stream/229136-theory.3A-category-theory/topic/.E2.9C.94.20pullback.20in.20functor.202-category\">#theory: category theory &gt; ✔ pullback in functor 2-category</a>), maybe someone here has an idea. Maybe since people around here like applied category theory, where partially monoidal categories sometimes show up, this will be generally interesting to folks. </p>\n<p>The question is the following: Say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is a symmetric monoidal category and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⊆</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">C\\subseteq A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is a full subcategory containing the unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mn>1</mn><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">1_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> inherits a <em>partially monoidal structure,</em> and the inclusion functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>C</mi><mo>↪</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">i\\colon C\\hookrightarrow A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6943em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is (strong) partially monoidal.   Now suppose I've got some other symmetric monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and a (strong) partially monoidal functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>C</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">F\\colon C\\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. I would like to right Kan extend <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> and get a (lax) monoidal functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>F</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">RF\\colon A\\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">RF</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. Obviously this might just not be true in general, and I think the linked topic suggests it's not....but maybe there's something simple I'm just not seeing?</p>",
        "id": 409478080,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1703199454
    },
    {
        "content": "<p>This is essentially the topic of algebraic Kan extensions, which has been widely studied (though usually one assumes full monoidal structure, rather than partial monoidal structure). For instance, see <span class=\"user-mention\" data-user-id=\"276702\">@Tobias Fritz</span> and <span class=\"user-mention\" data-user-id=\"275989\">@Paolo Perrone</span>'s <a href=\"https://arxiv.org/abs/1809.10481\">A Criterion for Kan Extensions of Lax Monoidal Functors</a> and the related work section therein.</p>",
        "id": 409478610,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1703199697
    },
    {
        "content": "<p>(In general, it is not true that the Kan extension of a monoidal functor along another monoidal functor is monoidal.)</p>",
        "id": 409478725,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1703199732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/partially.20monoidal.20functors.20and.20extensions/near/409478610\">said</a>:</p>\n<blockquote>\n<p>This is essentially the topic of algebraic Kan extensions, which has been widely studied (though usually one assumes full monoidal structure, rather than partial monoidal structure). For instance, see <span class=\"user-mention silent\" data-user-id=\"276702\">Tobias Fritz</span> and <span class=\"user-mention silent\" data-user-id=\"275989\">Paolo Perrone</span>'s <a href=\"https://arxiv.org/abs/1809.10481\">A Criterion for Kan Extensions of Lax Monoidal Functors</a> and the related work section therein.</p>\n</blockquote>\n<p>Thanks. My investigation of this sort of thing seems to always land in people studying <em>left</em> Kan extensions. For instance, there's a paper (I think of Day and Street, or maybe Lack and Street?) looking at left Kan extensions of promonoidal functors, but it says nothing about right Kan extensions.</p>",
        "id": 409478851,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1703199799
    },
    {
        "content": "<p>My question is spelled out in horrifying detail here: <a href=\"https://mathoverflow.net/questions/452394/lax-monoidal-structure-on-the-right-kan-extension-of-a-partially-monoidal-%ce%93-set\">https://mathoverflow.net/questions/452394/lax-monoidal-structure-on-the-right-kan-extension-of-a-partially-monoidal-%ce%93-set</a></p>",
        "id": 409479188,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1703199978
    },
    {
        "content": "<p>Ah, I recall now <a href=\"#narrow/stream/229136-theory.3A-category-theory/topic/promonoidal.20kan.20extensions/near/372774775\">there was an earlier thread</a>.</p>",
        "id": 409479819,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1703200382
    },
    {
        "content": "<p>heh yeah.... god I guess I really am repeating myself. In that situation I <em>thought</em> that one could replace a partially monoidal category with a promonoidal one freely. But <span class=\"user-mention\" data-user-id=\"318918\">@James Hefford</span> and <span class=\"user-mention\" data-user-id=\"295673\">@Aleks Kissinger</span> disabused me of that notion via email.</p>",
        "id": 409482565,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1703202228
    },
    {
        "content": "<p>Given a symmetric monoidal category there's always the induced ``trace promonoidal structure'' on the subcategory, but I sort of think that's not the right thing. Though I'm not sure.</p>",
        "id": 409482663,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1703202281
    },
    {
        "content": "<p>But the other convo with Mike Shulman indicates that pulling back along a strong symmetric monoidal functor isn't strong symmetric monoidal (w/r/t Day convolution) anyway, so there's no way it's going to come from some formal reason (as I hypothesized in my MO post). But maybe one gets lucky if one is actually Kan extending from a <em>subcategory</em>.</p>",
        "id": 409483114,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1703202611
    }
]