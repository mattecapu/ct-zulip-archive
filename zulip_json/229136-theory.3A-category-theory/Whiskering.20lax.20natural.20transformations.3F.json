[
    {
        "content": "<p>I've heard from several places that <a href=\"https://ncatlab.org/nlab/show/lax%20natural%20transformation\">[[lax natural transformation]]</a> s don't form the 2-cells of a tricategory, and Johnson &amp; Yau explain in their book (e.g. when motivating icons) where some of the difficulties lie. However, as one can under suitable conditions whisker lax natural transformations  and even modifications between them, there should be _some_ kind of categorical structure that describes how this composition works. What is it? </p>\n<p>For what it's worth, in the context this comes up for me I have a bunch of 2-functors around (most are strict, some are pseudo), and all the transformations are pseudo (at times even strict) except that I want to consider lax endomorphisms of a certain (strict) 2-functor and whisker them along other stuff. After numerous tedious hands-on calculations, everything seems to work just fine in my case, but I'd like to understand conceptually why. As \"this is happening in a tricategory\" apparently can't be the explanation, I'd like to understand what (if anything) would explain things working as well as they do.</p>",
        "id": 260278571,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1636036798
    },
    {
        "content": "<p>In <a href=\"https://golem.ph.utexas.edu/category/2009/12/the_problem_with_lax_functors.html#c030246\">this comment</a> Mike Shulman says that 2-categories with pseudofunctors and lax transformations form something like a 3-category but with a lax version of interchange.</p>",
        "id": 260287933,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1636040242
    },
    {
        "content": "<p>Thanks, that does help. It's still weird though, since some instances of interchange that seemingly should hold only laxly seem to hold strictly in my setting, but perhaps it's just an artifact of various triangles commuting strictly and so on.</p>",
        "id": 260290443,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1636041174
    }
]