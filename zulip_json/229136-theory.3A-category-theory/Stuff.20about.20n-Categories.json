[
    {
        "content": "<p>Whenever I say \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-category\" I'm really thinking of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\infty, n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span>-categories, so I apologize if the things I say don't strictly (pun intended) make sense in the world of ordinary n-categories. Let me start in the case <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n = 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> for concreteness. There are a few different notions of co/limits: 2-co/limits over 2-categories (or 1-categories considered as 2-categories with no non-invertible 2-cells), lax co/limits over 1-categories, and general weighted co/limits, of which the first two are examples. </p>\n<p>It seems to me that lax co/limits and 2-co/limits are \"orthogonal\", in the same way that finite and filtered colimits are. A 1-category has all colimits if it has finite colimits and filtered colimits. Is a statement of the following form true?</p>\n<p><strong>Desideratum:</strong> <em>A 2-category has all weighted colimits if it has all lax colimits and all 2-colimits.</em></p>\n<p>Much more generally, whenever <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">m &lt; n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>, we can think about \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span>-lax co/limits\" over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span>-categories in $n$-categories; then maybe a statement of the following form is true?</p>\n<p><strong>Desideratum:</strong> <em>An <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-category has all weighted colimits if it has all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span>-lax colimits for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>m</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1 \\leq m &lt; n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> and all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-colimits.</em></p>",
        "id": 194315976,
        "sender_full_name": "Reuben Stern (they/them)",
        "timestamp": 1587048694
    },
    {
        "content": "<p>I'm not very good at this lax stuff. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> is a 1-category and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is an object of a 2-category, is the tensor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⊗</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">C \\otimes X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> the same as the lax colimit of the constant diagram on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> (or maybe <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span>) with value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> (when they exist)?</p>",
        "id": 194318802,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587049784
    },
    {
        "content": "<p>I think it's true for lax limits in Cat, so I guess the answer is yes by representability?</p>",
        "id": 194319437,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587050001
    },
    {
        "content": "<p>I think you're right. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi mathvariant=\"script\">C</mi><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">a</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">F: \\mathcal{C} \\to {\\mathsf {Cat}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">C</span><span class=\"mord mathsf\">a</span><span class=\"mord mathsf\">t</span></span></span></span></span></span> is constant at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">X</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{X}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span>, is the unstraightening <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi><mo>→</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{E} \\to \\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> the tensor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mo>⊗</mo><mi mathvariant=\"script\">X</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} \\otimes \\mathcal{X}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span>?</p>",
        "id": 194320399,
        "sender_full_name": "Reuben Stern (they/them)",
        "timestamp": 1587050335
    },
    {
        "content": "<p>In Cat the tensor product is the cartesian product, so I'm pretty sure the answer is yes.</p>",
        "id": 194321012,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587050534
    },
    {
        "content": "<p>Then yeah, your claim is right (by Gepner--Haugseng--Nikolaus, but maybe it's easier)</p>",
        "id": 194321255,
        "sender_full_name": "Reuben Stern (they/them)",
        "timestamp": 1587050626
    },
    {
        "content": "<p>In that case I would guess that you can express weighted colimits in terms of ordinary/conical ones together with tensors, but my mind has blocked out whatever little I used to know about this.</p>",
        "id": 194322348,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587050965
    },
    {
        "content": "<p>You're absolutely right! Thanks.</p>",
        "id": 194325941,
        "sender_full_name": "Reuben Stern (they/them)",
        "timestamp": 1587052316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194322348\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194322348\">said</a>:</p>\n<blockquote>\n<p>you can express weighted colimits in terms of ordinary/conical ones together with tensors</p>\n</blockquote>\n<p>This is a standard fact in enriched category theory (it must be in Kelly's book), which carries over to higher categories.  However, it's worth noting that a particular weighted colimit in a particular category can exist even though the copowers (nee tensors) and conical colimits in terms of which it could be constructed don't individually exist.</p>",
        "id": 194326232,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587052411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194326232\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194326232\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194322348\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194322348\">said</a>:</p>\n<blockquote>\n<p>you can express weighted colimits in terms of ordinary/conical ones together with tensors</p>\n</blockquote>\n<p>This is a standard fact in enriched category theory (it must be in Kelly's book), which carries over to higher categories.  However, it's worth noting that a particular weighted colimit in a particular category can exist even though the copowers (nee tensors) and conical colimits in terms of which it could be constructed don't individually exist.</p>\n</blockquote>\n<p>Nice, thanks.</p>",
        "id": 194326462,
        "sender_full_name": "Reuben Stern (they/them)",
        "timestamp": 1587052488
    },
    {
        "content": "<p>Can one dualise HoTT the way Constructive Logics  have been dualisted into <a href=\"https://math.stackexchange.com/questions/3621660/examples-of-co-implication-a-k-a-co-exponential/3624965#3624965\" title=\"https://math.stackexchange.com/questions/3621660/examples-of-co-implication-a-k-a-co-exponential/3624965#3624965\">co-constructive logics (and type theories)</a>? Would that give us a falsificationist Homotopy Type Theory, more apt for material reasoning? Just wondering...</p>",
        "id": 194334353,
        "sender_full_name": "Henry Story",
        "timestamp": 1587055815
    },
    {
        "content": "<p>well, the standard semantics for cubical type theory <em>are</em> in a presheaf category, and im told that those always have bi-heyting structure (at least in a classical metatheory? i should work out if it's true in a constructive metatheory...)</p>",
        "id": 194338940,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587057907
    },
    {
        "content": "<p>no idea whether there's a sensible way to reflect it into the syntax <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 194338980,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587057925
    },
    {
        "content": "<p>and there <em>are</em> a bunch of restrictions on which presheaves are sensible to use as types, so actually i guess maybe it's not really \"in a presheaf category\"... hmmmm....</p>",
        "id": 194339127,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587057978
    },
    {
        "content": "<p>What do you mean by \"material reasoning\"?</p>",
        "id": 194342789,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587059651
    },
    {
        "content": "<p>\"Material Reasoning\" is a term I have found in <a href=\"https://link.springer.com/book/10.1007%2F978-3-319-91149-6\" title=\"https://link.springer.com/book/10.1007%2F978-3-319-91149-6\">Immanent Reasoning or Equality in Action</a>, a book that gives a Dialogical explanation of Constructive Type Theory. The two last chapters speak about Material Dialogues, as opposed to Formal Dialogues. Formal Dialogues are what mathematics and logic tend to do more. You build a structure which is a proof. Material reasoning concern empirical examples I think, where Popper argued one can only falsify.</p>",
        "id": 194346363,
        "sender_full_name": "Henry Story",
        "timestamp": 1587061147
    },
    {
        "content": "<p>Actually that book gives a dialogical view of CTT with dependent types. It refers to the book by Trafford <a href=\"https://www.springer.com/gp/book/9783319472041\" title=\"https://www.springer.com/gp/book/9783319472041\">Meaning in Dialogue</a> which looks at co-intutionistic logic, and argues that is what is needed for explaining dialogue, as well as making some arguments in terms of Category Theory (regarding co-exponentials). One sees the same type of inversions in \"Immanent Reasoning...\"s formal dialogues as Trafford argues for. <br>\nIf there is a dual to HoTT, then that could perhaps be used to extend  the dialogical explanation of CTT to HoTT.</p>",
        "id": 194347188,
        "sender_full_name": "Henry Story",
        "timestamp": 1587061520
    },
    {
        "content": "<p>I don't know of any useful way to dualize a dependent type theory, so I'd be interested to hear more.  What I do know how to do is incorporate both proofs and refutations in a single affine logic <a href=\"https://arxiv.org/abs/1805.07518\" title=\"https://arxiv.org/abs/1805.07518\">via a Chu construction</a>; that can certainly be done proof-relevantly (although there's only one remark about that possibility in the paper) but as far as I know only at the \"top level\" rather than allowing anything else to depend on it.</p>",
        "id": 194352041,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587063668
    },
    {
        "content": "<p>I do recall hearing from Favonia about some recent work in game semantics for dependent type theory, but I don't know anything about it.</p>",
        "id": 194352078,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587063691
    },
    {
        "content": "<p>The dual construction starts with selecting the subobject classifier <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>:</mo><mn>1</mn><mo>→</mo><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">false: 1 \\to \\Omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> of a Topos, as the subobject classifier for creating the dual topos, from which the dual-heyting structure arises. Perhaps something similar can be also done in an (infinity,1)-topos? <br>\nThe Category Theoretic work seems to come from here <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.360.6163\" title=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.360.6163\">Complement-Topoi and Dual Intuitionistic Logic</a></p>",
        "id": 194388959,
        "sender_full_name": "Henry Story",
        "timestamp": 1587088986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194388959\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194388959\">said</a>:</p>\n<blockquote>\n<p>The dual construction starts with selecting the subobject classifier <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">e</mi></mrow><mo>:</mo><mn>1</mn><mo>→</mo><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{false}: 1 \\to \\Omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">e</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> of a Topos, as the subobject classifier...</p>\n</blockquote>\n<p>As I've explained before, you don't get to \"select\" the subobject classifier of a category: it either has one or it doesn't.  And if you have a topos, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">e</mi></mrow><mo>:</mo><mn>1</mn><mo>→</mo><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{false}: 1 \\to \\Omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">e</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> is not a subobject classifier.</p>\n<p>You may be wanting to invent a concept of <em>non</em>-subobject classifier, or subobject \"unclassifier\".</p>",
        "id": 194522830,
        "sender_full_name": "John Baez",
        "timestamp": 1587179203
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194522830\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194522830\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194388959\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Stuff.20about.20n-Categories/near/194388959\">said</a>:</p>\n<blockquote>\n<p>The dual construction starts with selecting the subobject classifier <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">e</mi></mrow><mo>:</mo><mn>1</mn><mo>→</mo><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{false}: 1 \\to \\Omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">e</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> of a Topos, as the subobject classifier...</p>\n</blockquote>\n<p>As I've explained before, you don't get to \"select\" the subobject classifier of a category: it either has one or it doesn't.  And if you have a topos, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">f</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">e</mi></mrow><mo>:</mo><mn>1</mn><mo>→</mo><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{false}: 1 \\to \\Omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">e</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> is not a subobject classifier.</p>\n<p>You may be wanting to invent a concept of <em>non</em>-subobject classifier, or subobject \"unclassifier\".</p>\n</blockquote>\n<p>Yes, one has to be careful to get the naming right.  Luis Estrada-Gonzalez in <a href=\"https://link.springer.com/content/pdf/10.1007%2F978-81-322-2719-9_18.pdf\" title=\"https://link.springer.com/content/pdf/10.1007%2F978-81-322-2719-9_18.pdf\">The Evil Twin: The Basics of Complement-Toposes</a> looks at this problem in detail. There a dual-classifier appears, as well as anti-extensions, anti-comprehension axiom, dual characteristic morphism...<br>\n He develops the theory carefully and looks at the philosophical implications too (mentioning Hegel, Lawvere, ...)</p>",
        "id": 194545514,
        "sender_full_name": "Henry Story",
        "timestamp": 1587217650
    },
    {
        "content": "<p>At the end of the paper <a href=\"https://link.springer.com/content/pdf/10.1007%2F978-81-322-2719-9_18.pdf\" title=\"https://link.springer.com/content/pdf/10.1007%2F978-81-322-2719-9_18.pdf\">The Evil Twin: The Basics of Complement Toposes</a> Estrada Gonzalez points out that the difference between Toposes and complement Toposes is not structural. It has to do with our naming (\"Skolemization\") of certain functions as true and false.</p>\n<blockquote>\n<p>The mainstream topos-theorist can correctly insist on the categorial indistinguishableness between standard toposes and complement-toposes, but this amounts rather to a proof that both kinds of toposes equally deserve the name “topos,” since for all mathematical purposes they have the same constituents independently of Skolemization for the morphisms whose codomain is 􏰆. However, the internal logic induced is in fact different in each case, true, not by differences in the categorial structure, but in the way that categorial structure is described.<br>\nAlthough it sounds repetitive, it must be emphasized that the claim is not that complement-toposes are categorically different from toposes, nor to say that standard connectives acquire further categorial properties qua morphisms after the being renamed, but rather to stress the fact that the same categorial stuff, which is essentially equational with variables, can be described in at least two different ways.</p>\n</blockquote>",
        "id": 194562116,
        "sender_full_name": "Henry Story",
        "timestamp": 1587241664
    },
    {
        "content": "<p>This duality of trying to verifiy, construct or prove one one hand and disprove, falsify (deconstruct?) on the other does work very nicely for the dialogical view of logic.</p>",
        "id": 194562324,
        "sender_full_name": "Henry Story",
        "timestamp": 1587241976
    },
    {
        "content": "<p>To bring it back to this thread, in his introduction Estrada-Gonzalez writes about the limitation of his paper </p>\n<blockquote>\n<p>Perhaps, the most important of them is that, although the new notions and constructions<br>\nintroduced here do apply to first- or higher-order topos logic, for simplicity most<br>\nof my examples use only zero-order topos logic, so the reader will have to figure<br>\nout the higher-order cases.</p>\n</blockquote>\n<p>So it looks like it should be quite possible to apply this to find a complement-HoTT, based I guess on inequalities?</p>",
        "id": 194583942,
        "sender_full_name": "Henry Story",
        "timestamp": 1587281307
    },
    {
        "content": "<p>I don't think \"higher-order topos logic\" refers to \"higher toposes\", but to aspects of the internal logic of  1-toposes  that use the power objects and exponentials.</p>",
        "id": 194589142,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587290005
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> . That is beyond my abilities to judge, but it's getting me very interested in the area. I have a little Twitter thread on the topic <a href=\"https://twitter.com/bblfish/status/1251808172546949120\" title=\"https://twitter.com/bblfish/status/1251808172546949120\">https://twitter.com/bblfish/status/1251808172546949120</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/bblfish/status/1251808172546949120\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1004326761608417281/HjxjS9BX_normal.jpg\"></a><p>The intuition on complement Topoï comes from Topology. \nConstructive Logics work in Open Sets, inconsistent-tolerant Logics in closed sets (CSL). \nIs that because CSL include the border? \nRefutation logic aiming to disprove would be the one that sets the borders? <a href=\"https://t.co/R68UHa5o1o\" title=\"https://t.co/R68UHa5o1o\">https://twitter.com/bblfish/status/1251808172546949120/photo/1</a></p><span>- The 🐟‍‍ BabelFish (@bblfish)</span><div class=\"twitter-image\"><a href=\"https://t.co/R68UHa5o1o\" title=\"https://t.co/R68UHa5o1o\"><img src=\"https://pbs.twimg.com/media/EV9OD4HXYAEZar6.jpg:thumb\"></a></div></div></div>",
        "id": 194590733,
        "sender_full_name": "Henry Story",
        "timestamp": 1587292543
    },
    {
        "content": "<p>For instance, the higher-topos/HoTT analogue of a subobject classifier <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>→</mo><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">1\\to \\Omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> starts with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><mo>∗</mo></msub><mo>→</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Set}_* \\to \\mathrm{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span></span></span></span>, the projection from the groupoid of pointed sets to the groupoid of sets.  Unlike the inclusion of \"true\" into truth values (it's kind of just an accident that there is exactly one \"pointed truth value\") there is no obvious \"complementary inclusion of false\".</p>",
        "id": 194592335,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587294967
    },
    {
        "content": "<p>Perhaps by looking at Abramsky's 2015 article  <a href=\"https://link.springer.com/chapter/10.1007/978-3-662-47666-6_3\" title=\"https://link.springer.com/chapter/10.1007/978-3-662-47666-6_3\">Games for Dependent Types</a> one may find a way to understand how to think of a complement Topos for HoTT. <br>\nMy thought is as follows: Trafford in <a href=\"https://www.springer.com/gp/book/9783319472041\" title=\"https://www.springer.com/gp/book/9783319472041\">Meaning and Dialogue</a> uses the dual nature of a Topos to argue that it the co-Heyting algebra gives the logic of an Opponent.  <a href=\"https://link.springer.com/book/10.1007%2F978-3-319-91149-6\" title=\"https://link.springer.com/book/10.1007%2F978-3-319-91149-6\">Immanent Reasoning or Equality in Action</a> also gives a dialogical explanation of CTT with dependent types, and is quite easy to read. It does not mention complement Topoï, but the same patterns appear there when the Opponent plays.  Abramsky does think his work is applicable to HoTT though, and that it can solve some outstanding problems. I did not understand the details when I read it a year ago. I am very slowly working my way toward it.</p>",
        "id": 194608135,
        "sender_full_name": "Henry Story",
        "timestamp": 1587316058
    }
]