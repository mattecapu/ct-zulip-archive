[
    {
        "content": "<p>A coherence theorem often says something like \"every pseudo-structure is equivalent to a strict one.\" There is a thread of formalizing of this vague sentence via 2-monad theory that proves, in great generality (though not quite covering all accessible 2-monads on locally presentable 2-categories), that you in fact have a left 2-adjoint to the inclusion of strict algebras into pseudo-algebras, so you have an extremely natural equivalence as in the quoted sentence.</p>",
        "id": 516104441,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1746418931
    },
    {
        "content": "<p>It's often a surprise to students meeting this material for the first time that this theorem is almost totally irrelevant to the coherence theorems that are the most interesting historically and in practice, such as Mac Lane's theorem that every monoidal category can be strictified, because pseudo-algebras for the 2-monad whose strict algebras are strict monoidal categories, i.e. the free monoid monad, involve a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> with a structure map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>:</mo><mi>T</mi><mi>C</mi><mo>→</mo><mi>C</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha: TC\\to C,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">TC</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>C</mi><mo>=</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo>:</mo><mi mathvariant=\"double-struck\">N</mi></mrow></msub><msup><mi>C</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">TC=\\sum_{i:\\mathbb N} C^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">TC</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1244em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1825em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">:</span><span class=\"mord mathbb mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>; thus there is an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>-ary multiplication for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> on every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">i,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span></span></span></span> all of which commute with each other in nice ways. This is an <em>unbiased</em> monoidal category, and the content of Mac Lane's proof that \"every diagram commutes\" can be interpreted at least as well as saying that every monoidal category in the usual presentation is equivalent to an <em>unbiased</em> one as to a strict one!</p>",
        "id": 516104497,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1746418994
    },
    {
        "content": "<p>Locally, let's call an <strong>unbiasing theorem</strong> such a theorem that every biased structure of some kind is equivalent to an unbiased one--in terms of 2-monads, that strict algebras for some finitely presented 2-monad are equivalent to pseudo-algebras for some other 2-monad, I guess. I can give textbook references for such theorems for monoidal categories, bicategories, and (pseudo) double categories, but I realized recently that I have more or less no idea about a general framework into which to fit such theorems. (I thought a bit about flexible 2-monads, but again I don't see how it helps. I suppose we ought to be able to say something to the effect that the 2-monad for monoidal categories is a flexible replacement for that for strict monoidal categories, but that still doesn't help prove that the usual presentation is correct, does it?)</p>",
        "id": 516104526,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1746419013
    },
    {
        "content": "<p>To stop my yammering, the question is: <strong>what general framework do unbiasing theorems fit into</strong>? Do we know lots of them, or do they all require a bunch of concrete combinatorial work that doesn't readily generalize to new presentations of new 2-monads?</p>",
        "id": 516104532,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1746419015
    },
    {
        "content": "<p>I don't know of any \"general unbiasing theorem\" that includes all or most of the known examples.  There could be general classes of them, e.g. perhaps there is an unbiasing theorem that applies to algebras over any Cat-operad, but my instinct is that there'll be combinatorial work in each case.</p>",
        "id": 516111094,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1746423370
    },
    {
        "content": "<p>Without having any thing meaningful to contribute on the side of references, I want to say that \"unbiasing theorem\" is a great name, and I would like very much for it to stick.</p>",
        "id": 516124968,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1746429884
    },
    {
        "content": "<p>Contrarily I think there very well <em>could</em> be general unbiasing theorems strong enough to be useful, since they're extremely unremarkable for 1-monads.  I feel like the reason they don't seem to exist is that the mindsets for doing deep work on 2-monads and for working with finite presentations of algebras don't really cohere very easily and so the subfield is waiting for the right kind of interdisciplinary person to break it open.</p>",
        "id": 516139417,
        "sender_full_name": "James Deikun",
        "timestamp": 1746434442
    },
    {
        "content": "<p>The core of MacLane’s theorem can be reduced to normalisation for monoids:  <a href=\"https://www.cse.chalmers.se/~peterd/papers/Coherence_Monoidal.pdf\">see here</a>. This makes me feel that general unbiasing theorems really arise from a normalisation result for the theory presenting the corresponding 2-monad combined with the general strictification result Kevin mentions. Normalisation is well known to be highly non-trivial when possible and seldom possible, which probably explains why we don’t have a general unbiasing theorem.</p>",
        "id": 516163773,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1746442539
    },
    {
        "content": "<p>It would be very interesting to try and make this precise</p>",
        "id": 516163806,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1746442552
    },
    {
        "content": "<p>I mean, normalization is also used to prove that two presentations present the same theory at the 0-level, but that doesn't prevent there from being strong metatheoretic results that every biased presentation has an (easily constructed, if large) unbiased equivalent.  I think MacLane's theorem actually serves a lot of roles and it can be hard to untangle them.</p>",
        "id": 516188517,
        "sender_full_name": "James Deikun",
        "timestamp": 1746449767
    },
    {
        "content": "<p>The role of normalisation here is to compute the chain of coherence isomorphisms. Just having an equivalent unbiased presentation is not enough to give you this.</p>",
        "id": 516190669,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1746450267
    },
    {
        "content": "<p>You don't have to actually compute the chain for every case to know it exists.  There could definitely be other ways of knowing things like the h-level of the paths generated by a given set of generators and equations.</p>",
        "id": 516193523,
        "sender_full_name": "James Deikun",
        "timestamp": 1746450918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"609515\">Kevin Carlson</span> <a href=\"#narrow/channel/229136-theory.3A-category-theory/topic/unbiasing.20theorems/near/516104441\">said</a>:</p>\n<blockquote>\n<p>A coherence theorem often says something like \"every pseudo-structure is equivalent to a strict one.\"</p>\n</blockquote>\n<p>People do often call statements of this kind \"coherence theorems\", but I think this is inaccurate: they should be called \"strictification theorems\" (and indeed some authors do maintain this distinction). Then it's less clear to me whether there is a meaningful difference between coherence theorems (which give characterisations of when diagrams in free structures commute) and \"unbiasing theorems\" (or more simply \"biasing theorems\").</p>",
        "id": 516235090,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1746459771
    },
    {
        "content": "<p>For coherence theorems at least, Kelly's work on clubs was specifically developed for this purpose. Kelly shows how to obtain coherence theorems for several 2-algebraic structures, but as far as I know, no-one has really taken his approach much further subsequently (although he left open various questions).</p>",
        "id": 516235307,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1746459828
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/channel/229136-theory.3A-category-theory/topic/unbiasing.20theorems/near/516188517\">said</a>:</p>\n<blockquote>\n<p>every biased presentation has an (easily constructed, if large) unbiased equivalent</p>\n</blockquote>\n<p>I would say that the construction of a 2-monad from a presentation is the construction of an unbiased equivalent to a biased presentation.  The question as I understood it was rather if, given an <em>unbiased</em> theory, can we construct a <em>biased</em> one that is \"minimal\" in some sense.</p>",
        "id": 516274918,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1746471628
    },
    {
        "content": "<p>Hmm, I see what you're saying, but I'm not sure that's all I was wanting. You can construct a 2-monad from any presentation via general nonsense, but \"there exists a 2-monad whose strict algebras are monoidal categories\" is again not the interesting result, right? It's proving that that 2-monad is <em>equivalent</em> to the free monoid monad.</p>",
        "id": 516275412,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1746471801
    },
    {
        "content": "<p>But I guess that folds roughly into the question as you formulated it, with the shift that I'm probably more interested in understanding how to check that an arbitrary proposed presentation is correct than just in constructing or verifying minimal ones.</p>",
        "id": 516275597,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1746471856
    },
    {
        "content": "<p>I was thinking of something similar, not finding minimal presentations which is hard even for 1-monads, but checking that two presentations generate the same 2-monad.</p>",
        "id": 516276026,
        "sender_full_name": "James Deikun",
        "timestamp": 1746472013
    },
    {
        "content": "<p>(In this case the monoid-triangle-pentagon presentation and the \"all arity products and all isomorphisms and all equations between isomorphisms\" presentation.)</p>",
        "id": 516276267,
        "sender_full_name": "James Deikun",
        "timestamp": 1746472101
    },
    {
        "content": "<p>Sure.  Of course, checking that two presentations generate the same thing is <a href=\"https://en.wikipedia.org/wiki/Word_problem_for_groups\">undecidable in general</a>.</p>",
        "id": 516281385,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1746473888
    },
    {
        "content": "<p>True, but people still do it a lot.  It's not really considered an extreme endeavor for \"typical\" presentations.</p>",
        "id": 516289757,
        "sender_full_name": "James Deikun",
        "timestamp": 1746476791
    },
    {
        "content": "<p>Of course, for <em>specific</em> presentations.  But my point is that the undecidability means it'll be tricky to prove <em>general</em> theorems.</p>",
        "id": 516320406,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1746491087
    }
]