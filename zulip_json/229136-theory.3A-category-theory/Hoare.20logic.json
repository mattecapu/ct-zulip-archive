[
    {
        "content": "<p>Let's say one has {P}A{Q} and {P}B{Q}.  Could there be any significant concept of a homotopy between A and B?</p>",
        "id": 196839846,
        "sender_full_name": "Hendrik Boom",
        "timestamp": 1588891648
    },
    {
        "content": "<p>I like this question.  Perhaps one gets directed 2 cells from program-rewrite rules?</p>\n<p>However,  it might be better to work in the more \"point-free\" formalism of weakest preconditions instead of mentioning specific predicate pairs.  Indeed, each program A imposes a relation between possible predicates P and Q.  While a morphism determines its source and target, a program does not determine its pre and post conditions.  Does this make sense? <span class=\"user-mention\" data-user-id=\"299803\">@Hendrik Boom</span></p>",
        "id": 196840519,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588892121
    },
    {
        "content": "<p>Indeed, Dijkstra (\"A Discipline Of Programming\", 1976) regards the weakest precondition operator (and hence the semantics) of a program as an endofunctor F on the lattice C of predicates (that satisfies some axioms such as preserving meets).  (He doesn't use this language).  From this viewpoint, one can ask questions about natural transformations between these functors.</p>",
        "id": 196840787,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588892332
    },
    {
        "content": "<p>Yeah, so in this setting, a natural map between two functors (two programs A, B) is just an assertion that \"for any post condition Q: {the weakest precondition that through A guarantees Q} implies {the weakest precondition that through B guarantees Q}\", i.e. that \"for all P and Q: if {P}A{Q}, then {P}B{Q}\".  This is a relation between programs that might help us compare two programs that \"do the same thing\" except one of them doesn't always terminate.</p>",
        "id": 196841477,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588892803
    },
    {
        "content": "<p>there's a nice setup you can get which i was just mentioning in the topic for my talk which is semi relevant to this</p>",
        "id": 196841613,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588892921
    },
    {
        "content": "<p>form a category H where the objects are assertions, and Hom(P, Q) is the set of true hoare triples {P} C {Q}</p>",
        "id": 196841636,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588892943
    },
    {
        "content": "<p>composition is {P} C {Q} ; {Q} D {R} ↦ {P} C; D {R} and identity is {P} skip {P}</p>",
        "id": 196841663,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588892980
    },
    {
        "content": "<p>Cool!  Where can I learn more about this?  (was this a talk in the MIT categories seminar?)</p>",
        "id": 196841664,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588892981
    },
    {
        "content": "<p>it's in the <a class=\"stream\" data-stream-id=\"229966\" href=\"/#narrow/stream/229966-ACT.40UCR-seminar\">#ACT@UCR seminar</a> stream!</p>",
        "id": 196841677,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893000
    },
    {
        "content": "<p>Oh darn it.  I wish I hadn't missed it!</p>",
        "id": 196841729,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588893020
    },
    {
        "content": "<p>more info here <a href=\"https://johncarlosbaez.wordpress.com/2020/05/05/separation-logic-through-a-new-lens/\" title=\"https://johncarlosbaez.wordpress.com/2020/05/05/separation-logic-through-a-new-lens/\">https://johncarlosbaez.wordpress.com/2020/05/05/separation-logic-through-a-new-lens/</a></p>",
        "id": 196841737,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> in this formalism, does \"homotopy\" between two programs mean something (per <span class=\"user-mention\" data-user-id=\"299803\">@Hendrik Boom</span> 's question)?</p>",
        "id": 196841759,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588893060
    },
    {
        "content": "<p>i don't have that, no :) but such a homotopy would naturally fit as a notion of higher morphism in this category</p>",
        "id": 196841776,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893086
    },
    {
        "content": "<p>anyway, there's a bit more to say: you have a projection from H to the monoid of commands, which forgets the pre &amp; post</p>",
        "id": 196841791,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893110
    },
    {
        "content": "<p>weakest pre and strongest post are exactly cleavages witnessing that this projection is a fibration and opfibration!</p>",
        "id": 196841849,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893161
    },
    {
        "content": "<p>if you come at this starting the other way around: weakest pre and strongest post give functors from the monoid of commands to the category of categories, which send the unique object to the proset of assertions, and the endomorphism C to the wp_C or sp_C functor</p>",
        "id": 196842023,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893333
    },
    {
        "content": "<p>and then H arises as the grothendieck construction of either</p>",
        "id": 196842036,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893347
    },
    {
        "content": "<p>What's a proset?</p>",
        "id": 196842115,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588893382
    },
    {
        "content": "<p>preordered set</p>",
        "id": 196842120,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893385
    },
    {
        "content": "<p>finally, without privileging either variance: you can put it as a <em>lax</em> functor from the monoid of commands to the category of <em>profunctors</em>, which sends C to the profunctor H_C from assertions to assertions such that H_C(P, Q) is a singleton if {P} C {Q} is true and empty otherwise</p>",
        "id": 196842187,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893464
    },
    {
        "content": "<p>and this is a \"displayed category\" since it sends the identity to the identity profunctor</p>",
        "id": 196842260,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893497
    },
    {
        "content": "<p>Cool!  I wonder whether it is ever useful to consider enriching over something other than Bool.  This would give enough structure to address <span class=\"user-mention\" data-user-id=\"299803\">@Hendrik Boom</span> 's question in nontrivial ways, I think.</p>",
        "id": 196842265,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588893502
    },
    {
        "content": "<p>anyway, there's one more perspective, which was pointed out by <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> in a question at my talk yesterday: in addition to H being a bifibration over the monoid of commands, it's also a promonad over the proset of assertions</p>",
        "id": 196842334,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893567
    },
    {
        "content": "<p>a promonad on a category C is a monad on C in the bicategory of profunctors Prof, and it's equivalent to another category on the same objects of C equipped with a functor from C</p>",
        "id": 196842445,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893662
    },
    {
        "content": "<p>so H is a category on the same objects as the proset of assertions, and all of the old morphisms—the entailments—become new morphisms—the hoare triples for skip. but we also have new morphisms</p>",
        "id": 196842542,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893741
    },
    {
        "content": "<p>as a morphism in Prof, the promonad is the profunctor H from assertions to assertions where H(P, Q) is the set of commands C such that {P} C {D}</p>",
        "id": 196842684,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588893823
    },
    {
        "content": "<p>(I'm not familiar with a lot of the words here.  And that's okay!  I'll learn slowly.)  So can the story of \"adding new morphisms to just the entailments\" be understood as emphasizing the rule of consequence ({P}C{Q} implies {P'}C{Q'} when P'&lt;P, Q&lt;Q', which looks lensy?)</p>",
        "id": 196842919,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1588894002
    },
    {
        "content": "<p>not sure</p>",
        "id": 196842959,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894033
    },
    {
        "content": "<p>rule of consequence states that H_C above is a profunctor though</p>",
        "id": 196842971,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894044
    },
    {
        "content": "<p>Not sure how I feel about the word \"promonad\".  Especially when combined with \"proset\", where the \"pro\" means something entirely different...</p>",
        "id": 196843008,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894073
    },
    {
        "content": "<p>yeah, it's a little unfortunate :( but some people at least seem to have started using it...</p>",
        "id": 196843057,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894097
    },
    {
        "content": "<p>grouse at <span class=\"user-mention\" data-user-id=\"282822\">@fosco</span> about it rather than me <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 196843080,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894118
    },
    {
        "content": "<p>and like \"pro\" as a prefix for profunctor-y stuff has some other uses too i mean, like promonoidal or proarrow</p>",
        "id": 196843133,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894185
    },
    {
        "content": "<p>I guess my suggestion would be to stop using \"proset\", especially since it has <a href=\"https://ncatlab.org/nlab/show/pro-set\" title=\"https://ncatlab.org/nlab/show/pro-set\">another totally different meaning</a>.  I think just \"preorder\" is much more common in my experience.</p>",
        "id": 196843271,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894295
    },
    {
        "content": "<p>:( but people distinguish between \"poset\" and \"partial order\"...</p>",
        "id": 196843349,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894339
    },
    {
        "content": "<p>perhaps dropping \"proset\" is a better solution though</p>",
        "id": 196843395,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894370
    },
    {
        "content": "<p>i think part of why i started saying \"proset\" all the time may have been purely because i needed a name to avoid an identifier clash with \"preorder\" itself in a coq development since computers are worse at that kind of overloading than humans &gt;.&gt;</p>",
        "id": 196843454,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894424
    },
    {
        "content": "<p>I think of posets and partial orders as synonyms too.</p>",
        "id": 196843545,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588894464
    },
    {
        "content": "<p>huh, i would say the former is a structure while the latter is a relation</p>",
        "id": 196843559,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894489
    },
    {
        "content": "<p>i'm a huge pedant though</p>",
        "id": 196843569,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894496
    },
    {
        "content": "<p>Certainly a partial order can be a relation, but it's not uncommon to use it to refer to the structure too.</p>",
        "id": 196843613,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894543
    },
    {
        "content": "<p>fair enough</p>",
        "id": 196843673,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894567
    },
    {
        "content": "<p>(Ironically, this is an abuse that makes more sense in material set theory, where the relation itself, as a set, completely determines the carrier.)</p>",
        "id": 196843700,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894597
    },
    {
        "content": "<p>hah</p>",
        "id": 196843727,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894617
    },
    {
        "content": "<p>One can always say \"preordered set\".  Or \"thin category\"...</p>",
        "id": 196843749,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894633
    },
    {
        "content": "<p>... or \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-category\"... (yes, I remember you having a conversation about that here on zulip before your talk)</p>",
        "id": 196843773,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196843559\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196843559\">said</a>:</p>\n<blockquote>\n<p>huh, i would say the former is a structure while the latter is a relation</p>\n</blockquote>\n<p>It's a little difficult to talk about a relation in isolation of the set it's defined on.</p>",
        "id": 196843777,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588894677
    },
    {
        "content": "<p>Similarly to how a monoid is a set with operations, not just the operations themselves.</p>",
        "id": 196843861,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588894740
    },
    {
        "content": "<p>sure! i mean that it would sound odd to me to say something like \"3 is an element of the partial order N\"</p>",
        "id": 196843869,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894748
    },
    {
        "content": "<p>In practice I think it's pretty common to say \"poset\" for \"set equipped with a preorder\" (I certainly do this)--assuming you only want to consider your preorders = (0,1)-categories up to equivalence this shouldn't do much harm.</p>",
        "id": 196843877,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588894754
    },
    {
        "content": "<p>to me, ≤ is the partial order, while N is a poset</p>",
        "id": 196843895,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894777
    },
    {
        "content": "<p>but. this has become a huge tangent on a not-super-important (afaict) point</p>",
        "id": 196843910,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894796
    },
    {
        "content": "<p>plus i need to eat dinner... bbl</p>",
        "id": 196843949,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588894803
    },
    {
        "content": "<p>Or common among category theorists, at any rate.</p>",
        "id": 196843973,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588894821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span> Yes, I agree this is reasonably common among category theorists.  But there are certainly other people that it rubs the wrong way...</p>",
        "id": 196844052,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588894916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281272\">Sam Tenka</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196842919\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196842919\">said</a>:</p>\n<blockquote>\n<p>(I'm not familiar with a lot of the words here.  And that's okay!  I'll learn slowly.) </p>\n</blockquote>\n<p>As someone for whom the notation in the question at the top of the thread was meaningless, I strongly relate.</p>",
        "id": 196875131,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588930908
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281272\">Sam Tenka</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196841477\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196841477\">said</a>:</p>\n<blockquote>\n<p>Yeah, so in this setting, a natural map between two functors (two programs A, B) is just an assertion that \"for any post condition Q: {the weakest precondition that through A guarantees Q} implies {the weakest precondition that through B guarantees Q}\", i.e. that \"for all P and Q: if {P}A{Q}, then {P}B{Q}\".  This is a relation between programs that might help us compare two programs that \"do the same thing\" except one of them doesn't always terminate.</p>\n</blockquote>\n<p>The cleavages that <span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> mentioned means that we could just as well talk about the implication on the other side, which is to say \"for any pre-condition P: {the strongest post-condition that through A is guaranteed by P} implies {the strongest post-condition that through B is guaranteed by P}\". To me this feel a lot like lifting the implications between conditions by applying quantifiers-as-adjunctions, and I suspect that intuition can be made formal. However, unless the structure of the relations between conditions can be enriched, there's not much hope of getting richer structure on these transformations.<br>\nAnother option would be to explore substitution rules for the commands, which abstractly amounts to replacing the composition of commands with the monoidal product in a monoidal category. The morphisms in this category give candidate 2-cells in the category H that <span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> described.</p>",
        "id": 196876315,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588931766
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281272\">Sam Tenka</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196841729\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Hoare.20logic/near/196841729\">said</a>:</p>\n<blockquote>\n<p>Oh darn it.  I wish I hadn't missed it!</p>\n</blockquote>\n<p>It's been recorded:</p>\n<p><a href=\"https://www.youtube.com/watch?v=Aie82xGks-k&amp;feature=emb_logo\" title=\"https://www.youtube.com/watch?v=Aie82xGks-k&amp;feature=emb_logo\">https://www.youtube.com/watch?v=Aie82xGks-k&amp;feature=emb_logo</a></p>\n<p>and slides are here:</p>\n<p><a href=\"http://math.ucr.edu/home/baez/mathematical/ACTUCR/Rovner-Frydman_Separation_Logic.pdf\" title=\"http://math.ucr.edu/home/baez/mathematical/ACTUCR/Rovner-Frydman_Separation_Logic.pdf\">http://math.ucr.edu/home/baez/mathematical/ACTUCR/Rovner-Frydman_Separation_Logic.pdf</a></p>\n<p>Almost as good as being there.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"Aie82xGks-k\" href=\"https://www.youtube.com/watch?v=Aie82xGks-k&amp;feature=emb_logo\" title=\"https://www.youtube.com/watch?v=Aie82xGks-k&amp;feature=emb_logo\"><img src=\"https://i.ytimg.com/vi/Aie82xGks-k/default.jpg\"></a></div>",
        "id": 196928001,
        "sender_full_name": "John Baez",
        "timestamp": 1588960176
    }
]