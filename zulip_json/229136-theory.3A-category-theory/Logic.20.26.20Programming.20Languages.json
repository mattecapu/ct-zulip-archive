[
    {
        "content": "<p>oh my god i just spent ages typing up a message to ask about some kind of bizarre universal property i had noticed and couldn't quite phrase right and i figured it out while typing and it's just \"this universal property of everything in set A also applies to everything in this subset of A\" <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 191977171,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585285527
    },
    {
        "content": "<p>well, i'll post what i typed anyway because it's a fun little set of adjunctions and stuff</p>",
        "id": 191977238,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585285581
    },
    {
        "content": "<p>Fix a heyting algebra <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>:</p>\n<ol>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mo>⊢</mo><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg \\vdash \\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span></span></span></span> is a contravariant self-adjunction whose monad is the closure operator <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span></span></span></span>. Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> be the set of algebras/fixed-points of this operator, the \"regular elements\"—explicitly, those with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi><mo>≤</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg P \\le P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>. Then by standard properties of Galois connections (or of idempotent monads if u wanna b fancy), <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is exactly the image of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span></span></span></span> is in fact left adjoint to the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>↪</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">Reg(H) \\hookrightarrow H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>.</p>\n</li>\n<li>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> be the set of <em>decidable</em> elements—i.e., those satisfying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>∨</mo><mi mathvariant=\"normal\">¬</mi><mi>P</mi><mo>=</mo><mi mathvariant=\"normal\">⊤</mi></mrow><annotation encoding=\"application/x-tex\">P \\lor \\neg P = \\top</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">⊤</span></span></span></span>. We have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>⊆</mo><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H) \\subseteq Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>, but this can be strict (having <em>all</em> instances of double negation elimination (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">Reg(H) = H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>) implies that we have <em>all</em> instances of excluded middle (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">Dec(H) = H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>), but individual instances need not give individual decisions). I don't think the inclusion of this into either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> as a whole has adjoints on either the left or the right in general.</p>\n</li>\n<li>\n<p>There is nonetheless some kind of adjoint-y relationship between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>, because for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>∈</mo><mi>H</mi><mo separator=\"true\">,</mo><mi>Q</mi><mo>∈</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P \\in H, Q \\in Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>, we have...</p>\n</li>\n</ol>",
        "id": 191977249,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585285608
    },
    {
        "content": "<p>(and then i realized that the property was literally just \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>⊆</mo><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H) \\subseteq Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>, so the universal property of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span></span></span></span> applies to things in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> too\")</p>",
        "id": 191977276,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585285648
    },
    {
        "content": "<p>Nice!   Open sets in a topological space form a Heyting algebra.  Is there some nice topological way to think about the \"decidable\" and \"regular\" ones, and a nice topological example of a regular one that's not decidable?</p>",
        "id": 191978311,
        "sender_full_name": "John Baez",
        "timestamp": 1585287363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191977249\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191977249\">said</a>:</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is exactly the image of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span></span></span></span> is in fact left adjoint to the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>↪</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">Reg(H) \\hookrightarrow H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>.</p>\n</blockquote>\n<p>Hm, I need to think about this. I thought for a Galois connection we had <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi><mo>=</mo><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg \\neg \\neg P = \\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>; i.e. any element of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is \"regular\". but you're saying the regular elements are ones that look like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg \\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>. I'm probably remembering something wrong.</p>",
        "id": 191978419,
        "sender_full_name": "Christian Williams",
        "timestamp": 1585287584
    },
    {
        "content": "<p>both are true!</p>",
        "id": 191979363,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585288842
    },
    {
        "content": "<p>anything of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is also <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg\\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>, so in particular it's the double negation of itself, and anything of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is the negation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>, so something is a double negation iff it is a single negation</p>",
        "id": 191979386,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585288875
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191978311\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191978311\">said</a>:</p>\n<blockquote>\n<p>Nice!   Open sets in a topological space form a Heyting algebra.  Is there some nice topological way to think about the \"decidable\" and \"regular\" ones, and a nice topological example of a regular one that's not decidable?</p>\n</blockquote>\n<p>negation in the algebra of opens is exterior iirc (i.e., complement minus boundary)<br>\nso the decidable opens are the ones such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo>∪</mo><mi>E</mi><mi>x</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">U \\cup Ext(U) = X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">t</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>—a little fiddling shows that this is true iff <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span></span></span></span> has no boundary, i.e. is clopen</p>\n<p>the regular ones i think are a little subtler<br>\nan open can fail to be regular if adding part of its boundary gives something that is still open, i think<br>\nin <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>, notorious examples of irregulars are sets missing a few isolated points, but intervals, for example, are regular i think</p>",
        "id": 191979580,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585289122
    },
    {
        "content": "<p>honestly though you don't need to turn to topology or work externally to see regular propositions that aren't decidable<br>\nany negation is regular, but only a select few negations are decidable!</p>",
        "id": 191979693,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585289269
    },
    {
        "content": "<p>btw, a fun fact: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">Reg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span> extends to a functor from the category of heyting algebras to the category of boolean algebras—<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is always a boolean algebra (but its disjunction is not the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>'s)!—and this functor is in fact the left adjoint to the inclusion from boolean algebras to heyting algebras 🤯<br>\nthe unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo>↠</mo><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H \\twoheadrightarrow Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69687em;vertical-align:-0.01354em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">↠</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is exactly double negation<br>\nso it's, like, an adjunction inside an adjunction</p>",
        "id": 191979818,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585289412
    },
    {
        "content": "<p>this is the semantic end of the double negation translation i guess</p>",
        "id": 191979824,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585289433
    },
    {
        "content": "<p>i've meant for a while now to work thru it in a lot more detail but ive never gotten around to it...</p>",
        "id": 191979827,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585289445
    },
    {
        "content": "<p>hmm, for some reason i thought the unit of a reflective subcategory was called the \"reflector\", is that not the term <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 191980607,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585290595
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191535628\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191535628\">said</a>:</p>\n<blockquote>\n<p>i really fuckin need to read the coend book one of these days <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>\n</blockquote>\n<p>God me too . . . i think this might be a good candidate for a reading group topic if more people are interested</p>",
        "id": 191980983,
        "sender_full_name": "nadia esquivel márquez",
        "timestamp": 1585291095
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191979818\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191979818\">said</a>:</p>\n<blockquote>\n<p>btw, a fun fact: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">Reg</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span> extends to a functor from the category of heyting algebras to the category of boolean algebras—<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is always a boolean algebra (but its disjunction is not the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>'s)!—and this functor is in fact the left adjoint to the inclusion from boolean algebras to heyting algebras 🤯<br>\nthe reflector <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo>↪</mo><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H \\hookrightarrow Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is exactly double negation<br>\nso it's, like, an adjunction inside an adjunction</p>\n</blockquote>\n<p>Great!  This sounds like the nice modern way to talk about what people traditionally call the <a href=\"https://en.wikipedia.org/wiki/Double-negation_translation\" title=\"https://en.wikipedia.org/wiki/Double-negation_translation\">double-negation translation</a> relating classical and intuitionistic logic.  I like this modern version!</p>\n<p>Here's a puzzle I've never figured out, which you seem like the perfect person to solve:</p>\n<p>The opposite of a Heyting algebra is called a <strong><a href=\"https://ncatlab.org/nlab/show/co-Heyting+algebra\" title=\"https://ncatlab.org/nlab/show/co-Heyting+algebra\">co-Heyting algebra</a></strong>: a poset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> with finite limits and colimits where for each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">p \\in P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>, the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∨</mo><mo>−</mo><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mi>P</mi><mo>→</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">p \\vee - \\colon P \\to P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> has a left adjoint.   Just as Heyting algebras formalize the intuitionistic propositional calculus where we drop the law of excluded middle, co-Heyting algebras formalize the paraconsistent propositional calculus where we drop the principle of noncontradiction.   A poset that's both a Heyting algebra and co-Heyting algebra is called a <strong>bi-Heyting algebra</strong>.</p>\n<p><strong>Puzzle.</strong>  What's an example of a bi-Heyting algebra that's not a Boolean algebra?</p>\n<p>I've heard that examples exist, but I've never seen one that I could understand.</p>",
        "id": 191980995,
        "sender_full_name": "John Baez",
        "timestamp": 1585291120
    },
    {
        "content": "<p>double-negation translation is a syntactic thing! what i'm describing is semantic!</p>",
        "id": 191981099,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291317
    },
    {
        "content": "<p>it's possible that you can recover it by applying this to some free algebra or something, but it's not quite the same thing a priori</p>",
        "id": 191981146,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291345
    },
    {
        "content": "<p>(also, i already said so <span aria-label=\"mischievous\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"mischievous\">:mischievous:</span>)<br>\n<span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191979824\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191979824\">said</a>:</p>\n<blockquote>\n<p>this is the semantic end of the double negation translation i guess</p>\n</blockquote>",
        "id": 191981165,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291387
    },
    {
        "content": "<p>hmm, interesting that examples apparently exist</p>",
        "id": 191981237,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291478
    },
    {
        "content": "<p>i think ive heard that if a category is an elementary topos and so is its opposite, then it has to be trivial, and this seems like a truncation of that</p>\n<p>EDIT: aha, it was</p>\n<blockquote>\n<p>Any category which is both cartesian closed and co-cartesian co-closed is a preorder</p>\n</blockquote>\n<p>so that should imply what i said, but certainly isn't a dealbreaker when working with preorders</p>",
        "id": 191981266,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291505
    },
    {
        "content": "<p>maybe the triviality is just because of size issues that dont come into play here, like how the adjoint functor theorem works for posets <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 191981285,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291525
    },
    {
        "content": "<p>Okay, so \"semantic end of the double negation translation\" is a more precise way to say what I said, namely \"modern version\".  It's a bit like how Lawvere theories take universal algebra and strip off some of the distracting syntactic fussiness.</p>",
        "id": 191981318,
        "sender_full_name": "John Baez",
        "timestamp": 1585291556
    },
    {
        "content": "<p>if \"modern\" means \"semantic, neglecting the syntactic end\", then i want no part of modernity <span aria-label=\"triumph\" class=\"emoji emoji-1f624\" role=\"img\" title=\"triumph\">:triumph:</span></p>",
        "id": 191981395,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291595
    },
    {
        "content": "<p>I want it.</p>",
        "id": 191981410,
        "sender_full_name": "John Baez",
        "timestamp": 1585291608
    },
    {
        "content": "<p>well, my specialty is programming languages, so perhaps i'm biased :)</p>",
        "id": 191981434,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291633
    },
    {
        "content": "<p>Yes, if you talk to computers a lot you've gotta care about syntax.   I mainly talk to people precisely for this reason.</p>",
        "id": 191981572,
        "sender_full_name": "John Baez",
        "timestamp": 1585291774
    },
    {
        "content": "<p>(I'm sort of kidding; I used to study formal logic...)</p>",
        "id": 191981583,
        "sender_full_name": "John Baez",
        "timestamp": 1585291798
    },
    {
        "content": "<p>trying to make sense of a left adjoint to - ∨ R</p>",
        "id": 191981692,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291931
    },
    {
        "content": "<p>hmm</p>",
        "id": 191981694,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585291936
    },
    {
        "content": "<p>Yes, it's really freaky at first!  I eventually got used to it, and now I've sort of forgotten it.</p>",
        "id": 191981772,
        "sender_full_name": "John Baez",
        "timestamp": 1585292054
    },
    {
        "content": "<p>(also: syntax is an incredibly powerful tool for manufacturing adjunctions, but i'll let that argument go <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>)</p>",
        "id": 191981799,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292150
    },
    {
        "content": "<p>All I mean is that I'm <em>usually</em> more interested in groups than group presentations, more interested in Lawvere theories than universal algebra as described by a chosen set of function symbols obeying a chosen set of axioms, more interested in posets than ways of writing these posets as sets of equivalence classes of symbols strings, and so on - the thing presented has more symmetry than the presentation.</p>",
        "id": 191981953,
        "sender_full_name": "John Baez",
        "timestamp": 1585292352
    },
    {
        "content": "<p>but how much do you learn about groups from the study of their presentations, and from the fact that group presentations are a thing?</p>",
        "id": 191981982,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292402
    },
    {
        "content": "<p>A lot!</p>",
        "id": 191982031,
        "sender_full_name": "John Baez",
        "timestamp": 1585292412
    },
    {
        "content": "<p>But I think of that as a tool for studying something I'm interested in, not the thing I'm interested in.</p>",
        "id": 191982042,
        "sender_full_name": "John Baez",
        "timestamp": 1585292435
    },
    {
        "content": "<p>hmm :)</p>",
        "id": 191982053,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292463
    },
    {
        "content": "<p>when it comes to groups, there's maybe a stronger argument</p>",
        "id": 191982068,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292493
    },
    {
        "content": "<p>but i think heyting algebras were invented in order to give semantics to intuitionistic logic</p>",
        "id": 191982077,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292511
    },
    {
        "content": "<p>regardless, though—</p>",
        "id": 191982081,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292518
    },
    {
        "content": "<p>i prefer to avoid thinking of either as purely a tool for studying the other</p>",
        "id": 191982128,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292546
    },
    {
        "content": "<p>they push on each other!</p>",
        "id": 191982132,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292549
    },
    {
        "content": "<p>Yes, that's very reasonable.</p>",
        "id": 191982140,
        "sender_full_name": "John Baez",
        "timestamp": 1585292565
    },
    {
        "content": "<p>I just find logicians and programmers are too much into syntax for me to ever really be one - just a matter of taste.</p>",
        "id": 191982167,
        "sender_full_name": "John Baez",
        "timestamp": 1585292639
    },
    {
        "content": "<p>no accounting for it</p>",
        "id": 191982208,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292656
    },
    {
        "content": "<p>Said the accountant to the mathematician...</p>",
        "id": 191982218,
        "sender_full_name": "John Baez",
        "timestamp": 1585292675
    },
    {
        "content": "<p><span aria-label=\"weary\" class=\"emoji emoji-1f629\" role=\"img\" title=\"weary\">:weary:</span></p>",
        "id": 191982228,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292698
    },
    {
        "content": "<p>Anyway, that nLab page on co-Heyting algebras has a bunch of fun stuff about that left adjoint, which they call \"subtraction\".</p>",
        "id": 191982237,
        "sender_full_name": "John Baez",
        "timestamp": 1585292721
    },
    {
        "content": "<p>But it's probably more fun to think about it oneself for a while.</p>",
        "id": 191982243,
        "sender_full_name": "John Baez",
        "timestamp": 1585292732
    },
    {
        "content": "<p>oh that's fucked up because i decided on a minus sign to write it while messing around</p>",
        "id": 191982246,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292740
    },
    {
        "content": "<p>on the right track &gt;:)</p>",
        "id": 191982248,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292746
    },
    {
        "content": "<p>or maybe i just remembered having seen it vaguely</p>",
        "id": 191982254,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585292757
    },
    {
        "content": "<p>Part of why it'd be so cool to have bi-Heyting algebras that weren't boolean is that you've have this extra logical operation that's weirdly dual to implication and not have it reduce to other things... it seems like a kind of wonderland of adjoints.</p>",
        "id": 191982417,
        "sender_full_name": "John Baez",
        "timestamp": 1585292934
    },
    {
        "content": "<p>(P ∨ forall x, Q x) &lt;-&gt; (forall x, P ∨ Q x)<br>\n^this is unsettling</p>",
        "id": 191982446,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293001
    },
    {
        "content": "<p>and rather classical-looking</p>",
        "id": 191982486,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293011
    },
    {
        "content": "<p>actually it makes me suspicious of whether it's reasonable to expect to be able to find non-boolean co-heyting algebras with very much completeness in a constructive metatheory</p>",
        "id": 191982625,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293169
    },
    {
        "content": "<p>suppose we knew there was a complete co-heyting algebra <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>—then let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> be an arbitrary subsingleton set, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">⊤</mi><mo stretchy=\"false\">)</mo><mo>∨</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">⊥</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">⊤</mi><mo stretchy=\"false\">)</mo><mo>∨</mo><mi mathvariant=\"normal\">⊥</mi><mo>=</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">⊤</mi><mo>=</mo><mi mathvariant=\"normal\">⊤</mi></mrow><annotation encoding=\"application/x-tex\">(\\exists x \\in S. \\top) \\lor (\\forall x \\in S. \\bot) = \\forall x \\in S. (\\exists x \\in S. \\top) \\lor \\bot = \\forall x \\in S. \\exists x \\in S. \\top = \\top</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">⊤</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">⊥</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">⊤</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">⊥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">⊤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">⊤</span></span></span></span></p>",
        "id": 191982890,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293469
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">⊤</mi></mrow><annotation encoding=\"application/x-tex\">\\exists S. \\top</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">⊤</span></span></span></span> is basically the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>-internal statement \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is inhabited\", and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">⊥</mi></mrow><annotation encoding=\"application/x-tex\">\\forall x \\in S. \\bot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">.</span><span class=\"mord\">⊥</span></span></span></span> is basically the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>-internal statement \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is empty\"</p>",
        "id": 191983043,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293609
    },
    {
        "content": "<p>so if we take this embedding of external truth values into an arbitrary complete lattice, then if that complete lattice is in fact a co-heyting algebra, we must have a strong excluded middle in it for those embedded truth values, which i find incredibly suspect, because in constructive metatheories most complete lattices get their completeness from power sets</p>",
        "id": 191983104,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293716
    },
    {
        "content": "<p>buuuuuuut i suppose this is a big sidetrack.</p>",
        "id": 191983153,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293742
    },
    {
        "content": "<p>it's almost 3:30am, i don't have the patience for this, i'm gonna go look on the nlab page <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 191983272,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293875
    },
    {
        "content": "<blockquote>\n<p>Co-Heyting algebras were initially called Brouwerian algebras.</p>\n</blockquote>\n<p>hahahaaha poor brouwer must be rolling over in his grave</p>",
        "id": 191983366,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585293969
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/Wj6umWARq9zsLDpHExTYKYMa/image.png\" title=\"image.png\">image.png</a><br>\n<span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Wj6umWARq9zsLDpHExTYKYMa/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Wj6umWARq9zsLDpHExTYKYMa/image.png\"></a></div>",
        "id": 191983536,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585294180
    },
    {
        "content": "<p>i should, like, learn some quantum mechanics</p>",
        "id": 191983608,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585294205
    },
    {
        "content": "<p>beyond the point of \"solve this time-independent schrödinger equation we gave you in order to figure out some energy eigenstates for a particle in a box\"</p>",
        "id": 191983656,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585294275
    },
    {
        "content": "<p>actually, this co-heyting algebra stuff &amp; this boundary operator &amp; whatnot are interesting—i guess double co-heyting-negation would be interior instead of closure?</p>",
        "id": 191983776,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585294363
    },
    {
        "content": "<p>i was thinking recently about the fact that a lawvere-tierney topology defines a closure rather than an interior</p>",
        "id": 191983949,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585294500
    },
    {
        "content": "<p>ok this has gotten very far from \"universal constructions\"</p>",
        "id": 191984069,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585294589
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191980995\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191980995\">said</a>:</p>\n<blockquote>\n<p><strong>Puzzle.</strong>  What's an example of a bi-Heyting algebra that's not a Boolean algebra?</p>\n<p>I've heard that examples exist, but I've never seen one that I could understand.</p>\n</blockquote>\n<p>OK, according to popular sources, every totally ordered set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>P</mi><mo separator=\"true\">,</mo><mo>≤</mo><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (P, \\leq, 1, 0) </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> is a Heyting algebra where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>⇒</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>≗</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">(a \\Rightarrow b)  \\circeq 1 </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≗</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\"> a \\leq b </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span>,   <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>⇒</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>≗</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">(a \\Rightarrow b)  \\circeq b </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≗</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> otherwise. Which gave me an idea <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span>.</p>\n<p>We dually set the subtraction  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>−</mo><mi>b</mi><mo>≗</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">a - b \\circeq 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.95916em;vertical-align:-0.22958em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≗</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\"> a \\leq b </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> a </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span> (!!!) otherwise. This satisfies the adjointness condition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>z</mi><mi mathvariant=\"normal\">.</mi><mi>a</mi><mo>−</mo><mi>b</mi><mo>≤</mo><mi>z</mi><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mi>a</mi><mo>≤</mo><mi>b</mi><mo>∨</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\"> \\forall z. a - b  \\leq z\\iff a \\leq b \\vee z </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord\">.</span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.549em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span>.  I'll do the  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇐</mo></mrow><annotation encoding=\"application/x-tex\"> \\Leftarrow </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇐</span></span></span></span> case. So we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi><mo>∨</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\"> a \\leq b \\vee z </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span>. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\"> a \\leq b </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>−</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\"> a - b = 0 </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>  and so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\"> 0 \\leq z </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span>. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>&lt;</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> b &lt; a </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span> then  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>−</mo><mi>b</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> a - b  = a </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span>. Between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>∨</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> a \\leq (b \\vee z) </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>&lt;</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> b &lt; a </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span>, it has to be that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\"> a \\leq z </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span>, thus completing the direction.</p>\n<p>Now suppose this totally ordered set of ours has a \"dangling\" element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\"> d </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">d</span></span></span></span>, such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>d</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; d &lt; 1 </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>. That means that our totally ordered set is absolutely <em>not</em> a Boolean algebra! In fact, this dangling element is also \"paraconsistent\" as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>∧</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> a \\wedge (1 - a) = a </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.55556em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span>. Where do we find such a set with a dangling element? Well, my (borrowed) counterexample to the first puzzle was exactly that!</p>",
        "id": 192028372,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585320747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191980995\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/191980995\">said</a>:</p>\n<blockquote>\n<p>I've heard that examples exist, but I've never seen one that I could understand.</p>\n</blockquote>\n<p>OK, my example should work (unless I made a mistake), but do we actually understand it? What's the lesson here? For me, the lesson is that I should stop trying to make logical sense (in the \"classical\" meaning of logic) of these sets because them not being Boolean algebras prohibits one from doing so! Free oneself from such constraints, and these funny elements in the sets make perfect sense :).</p>",
        "id": 192029297,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585321146
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/TJxDwHrUeZ5ZrQ4PldLzs1YZ/image.png\" title=\"image.png\">image.png</a><br>\nyknow, it had vaguely occurred to me that you might be able to get coheyting stuff out of a model of linear logic in the same way that you get heyting stuff—and i think im gonna do that in a minute—but it just occurred to me that ive seen this before!!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/TJxDwHrUeZ5ZrQ4PldLzs1YZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/TJxDwHrUeZ5ZrQ4PldLzs1YZ/image.png\"></a></div>",
        "id": 192029393,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321179
    },
    {
        "content": "<p>or, well, something similar to it</p>",
        "id": 192029485,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192029393\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192029393\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/21317/TJxDwHrUeZ5ZrQ4PldLzs1YZ/image.png\" title=\"image.png\">image.png</a><br>\nyknow, it had vaguely occurred to me that you might be able to get coheyting stuff out of a model of linear logic in the same way that you get heyting stuff—and i think im gonna do that in a minute—but it just occurred to me that ive seen this before!!</p>\n</blockquote>\n<p>I hardly know any linear logic, but I've made a quick read in (<a href=\"https://golem.ph.utexas.edu/category/2018/05/linear_logic_for_constructive.html\" title=\"https://golem.ph.utexas.edu/category/2018/05/linear_logic_for_constructive.html\">https://golem.ph.utexas.edu/category/2018/05/linear_logic_for_constructive.html</a>) and it looks like these are weakened compared to Heyting algebras. So I would guess that you might be able to get a similarly weakened co-Heyting thing :P.</p>",
        "id": 192029857,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585321354
    },
    {
        "content": "<p>the intuitionistic implication in linear logic is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">!</mo><mi>P</mi><mo>⊸</mo><mi>Q</mi><mo>=</mo><mo stretchy=\"false\">?</mo><msup><mi>P</mi><mo>⊥</mo></msup><mtext>⅋</mtext><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">!P \\multimap Q = ?P^\\perp ⅋ Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">!</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊸</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.043548em;vertical-align:-0.19444em;\"></span><span class=\"mclose\">?</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span></span></span></span></span><span class=\"mord\">⅋</span><span class=\"mord mathdefault\">Q</span></span></span></span>, which here is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mo stretchy=\"false\">?</mo><mi>P</mi><mo>+</mo><mi>Q</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min(1, ?P + Q)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\">?</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mclose\">)</span></span></span></span>, where ? is dual to !</p>",
        "id": 192030277,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321503
    },
    {
        "content": "<p>also, that screenshot is from the same paper :)</p>",
        "id": 192030314,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321514
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192030314\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192030314\">said</a>:</p>\n<blockquote>\n<p>also, that screenshot is from the same paper :)</p>\n</blockquote>\n<p>Hahahah what a delightful coincidence!</p>",
        "id": 192030408,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585321556
    },
    {
        "content": "<p>i really recommend taking a look at it! iirc andrej bauer (i <em>think</em> it was him?) said he thought it was the most important paper in constructivism in the last... well, i dont want to misquote what time period he said, but it was probably some number of years</p>",
        "id": 192030516,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321582
    },
    {
        "content": "<p>plus it gives an extremely useful viewpoint on linear logic other than the \"logic of resources\" one, which i think is sorely needed in popularization</p>",
        "id": 192030640,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321630
    },
    {
        "content": "<p>Will do then, thanks for the recommendation :).</p>",
        "id": 192030696,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585321651
    },
    {
        "content": "<p>er, i cant remember whether it <em>invents</em> that viewpoint, but it certainly presents it</p>",
        "id": 192030718,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192030640\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192030640\">said</a>:</p>\n<blockquote>\n<p>plus it gives an extremely useful viewpoint on linear logic other than the \"logic of resources\" one, which i think is sorely needed in popularization</p>\n</blockquote>\n<p>I have a bunch of colleagues in my uni that are messing around with linear logic exactly because they think they accurately represent programmer's intentions when wanting to pass on \"resources\" in a secure manner. Hmmm...</p>",
        "id": 192030920,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585321728
    },
    {
        "content": "<p>no, it's good for that! it's just that that's the only one i usually hear people talk about, except maybe in actual brass tacks linear logic papers</p>",
        "id": 192031023,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321774
    },
    {
        "content": "<p>i'd love to see more of its facets acknowledged in its popular image</p>",
        "id": 192031076,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585321795
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192031023\" title=\"#narrow/stream/229136-category-theory/topic/universal.20constructions/near/192031023\">said</a>:</p>\n<blockquote>\n<p>no, it's good for that! it's just that that's the only one i usually hear people talk about, except maybe in actual brass tacks linear logic papers</p>\n</blockquote>\n<p>I agree! The biggest problem is that they're looking to also implement a processor with linear logic primitives (linear capabilities) as hardware primitives. Which is a <em>very</em> touch task, if you want the performance to be somewhat tolerable. And, alas, without decent performance, it's tough convincing people on the practical side of things through formal arguments alone :/.</p>",
        "id": 192032368,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585322235
    },
    {
        "content": "<p>I should convince them to join the zulip! Most likely they'll go \"Oh no, not this again\" and roll their eyes. Bah, plebs!</p>",
        "id": 192032597,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585322334
    },
    {
        "content": "<p>i honestly dont know whats reasonable in this day and age, cpus are insane</p>",
        "id": 192033220,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585322576
    },
    {
        "content": "<p>although to be fair, insane cpus are usually designed by companies like intel</p>",
        "id": 192033256,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585322595
    },
    {
        "content": "<p>okay this is WAY off topic from \"universal constructions\" :|</p>",
        "id": 192033680,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585322769
    },
    {
        "content": "<p>is there a way to fork a topic</p>",
        "id": 192033694,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585322776
    },
    {
        "content": "<p>Fork a topic <em>fast</em>? I don't know. But we can just modify the topics.</p>",
        "id": 192033820,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585322827
    },
    {
        "content": "<p>But it's cool, nobody will notice hihi. <span aria-label=\"zip it\" class=\"emoji emoji-1f910\" role=\"img\" title=\"zip it\">:zip_it:</span></p>",
        "id": 192033922,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585322866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>: yes, if you edit a post, you can change the topic name to fork it into a separate topic</p>",
        "id": 192034154,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585322947
    },
    {
        "content": "<p>you can actually edit the topics of anyone's posts, which makes it easier to clean things up</p>",
        "id": 192034202,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585322976
    },
    {
        "content": "<p>oh neat</p>",
        "id": 192034218,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585322985
    },
    {
        "content": "<p>don't mind if i do...</p>",
        "id": 192034245,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585322997
    },
    {
        "content": "<p>(though, it'd be super neat to be able to just select exactly which messages you want to fork)</p>",
        "id": 192034367,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585323039
    },
    {
        "content": "<p>hope no one minds, honestly this is basically what i derailed to</p>",
        "id": 192034633,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585323144
    },
    {
        "content": "<p>as i always do &gt;.&gt;</p>",
        "id": 192034666,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585323153
    },
    {
        "content": "<p>Oh, the off-topicness was going waaaaay back! OK, that's cool :).</p>",
        "id": 192034897,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585323246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>  What does <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\"> Reg </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span> stand for?</p>",
        "id": 192034992,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585323292
    },
    {
        "content": "<p>\"regular\"—i did mention that, but it was probably easy to miss</p>",
        "id": 192035045,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585323319
    },
    {
        "content": "<p>btw here's my source for the stuff i saw saying about adjunctions w/ boolean algebras <a href=\"https://ncatlab.org/nlab/show/Heyting+algebra#ToBooleanAlgebras\" title=\"https://ncatlab.org/nlab/show/Heyting+algebra#ToBooleanAlgebras\">https://ncatlab.org/nlab/show/Heyting+algebra#ToBooleanAlgebras</a></p>",
        "id": 192035127,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585323360
    },
    {
        "content": "<p>Thanks! :)</p>",
        "id": 192035473,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585323493
    },
    {
        "content": "<p>Sub(1) in a presheaf topos would be an example of a bi-heyting algebra that's not boolean, wouldn't it?</p>",
        "id": 192036926,
        "sender_full_name": "vikraman",
        "timestamp": 1585324090
    },
    {
        "content": "<p>what makes it bi-heyting?</p>",
        "id": 192037820,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585324424
    },
    {
        "content": "<p>It is bi-heyting for the same reason that powersets are bi-heyting, I think of these as intuitionistic powersets. The nLab page on bi-heyting toposes cites a slick proof.</p>",
        "id": 192060059,
        "sender_full_name": "vikraman",
        "timestamp": 1585333502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276098\">vikraman</span> <a href=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192060059\" title=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192060059\">said</a>:</p>\n<blockquote>\n<p>It is bi-heyting for the same reason that powersets are bi-heyting, I think of these as intuitionistic powersets. The nLab page on bi-heyting toposes cites a slick proof.</p>\n</blockquote>\n<p>It is a very slick proof! So the next question is: what's the co-Heyting operation?</p>",
        "id": 192060632,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1585333781
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>∪</mo><mi>A</mi><mo>⊇</mo><mi>B</mi><mo>⇔</mo><mi>X</mi><mo>⊇</mo><mi>B</mi><mo>∖</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\"> X \\cup A \\supseteq B \\Leftrightarrow X \\supseteq B \\setminus A </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊇</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊇</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span></p>",
        "id": 192060776,
        "sender_full_name": "vikraman",
        "timestamp": 1585333843
    },
    {
        "content": "<p>I'm unable to type in the LaTeX but I think this is the structure</p>",
        "id": 192060842,
        "sender_full_name": "vikraman",
        "timestamp": 1585333882
    },
    {
        "content": "<p>(you need two dollar signs)</p>",
        "id": 192060858,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585333888
    },
    {
        "content": "<p>(also the last <code>\\superseteq</code> is misspelled)</p>",
        "id": 192060901,
        "sender_full_name": "Ben Steffan",
        "timestamp": 1585333909
    },
    {
        "content": "<p>it's <code>supseteq</code>, I think: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>∪</mo><mi>A</mi><mo>⊇</mo><mi>B</mi><mo>⇔</mo><mi>X</mi><mo>⊇</mo><mi>B</mi><mo>∖</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">X \\cup A \\supseteq B \\Leftrightarrow X \\supseteq B \\setminus A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊇</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊇</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span></p>",
        "id": 192060973,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585333934
    },
    {
        "content": "<p>and <code>\\setminus</code> for backslash</p>",
        "id": 192061231,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585334062
    },
    {
        "content": "<p>(the joys of LaTeX!)</p>",
        "id": 192061591,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585334231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276098\">vikraman</span> <a href=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192060776\" title=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192060776\">said</a>:</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>∪</mo><mi>A</mi><mo>⊇</mo><mi>B</mi><mo>⇔</mo><mi>X</mi><mo>⊇</mo><mi>B</mi><mo>∖</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\"> X \\cup A \\supseteq B \\Leftrightarrow X \\supseteq B \\setminus A </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊇</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊇</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span></p>\n</blockquote>\n<p>That's the definition of a co-Heyting operation, but I was trying to ask \"what does the co-Heyting operation concretely do in a given presheaf topos?\" If I take the simplest non-Boolean example of presheaves on the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\"> A \\to B </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, for instance, what is the co-Heyting operation on a subobject lattice Sub(X)?</p>",
        "id": 192064160,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1585335229
    },
    {
        "content": "<p>In terms of sieves or cribles? I don't have a good intuition for those but I will try to think.</p>",
        "id": 192064873,
        "sender_full_name": "vikraman",
        "timestamp": 1585335554
    },
    {
        "content": "<p><del>that's not co-heyting, that's the formula for a <em>right</em> adjoint to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∪</mo></mrow><annotation encoding=\"application/x-tex\">\\cup</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.55556em;vertical-align:0em;\"></span><span class=\"mord\">∪</span></span></span></span></del> i can't fucking read</p>",
        "id": 192067153,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585336587
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∪</mo></mrow><annotation encoding=\"application/x-tex\">\\cup</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.55556em;vertical-align:0em;\"></span><span class=\"mord\">∪</span></span></span></span> is a product in the dual and has a right adjoint, making it a co-heyting algebra, isn't that correct?</p>",
        "id": 192067735,
        "sender_full_name": "vikraman",
        "timestamp": 1585336840
    },
    {
        "content": "<p>So, I <a href=\"https://twitter.com/johncarlosbaez/status/1243560612757565441\" title=\"https://twitter.com/johncarlosbaez/status/1243560612757565441\">tweeted about bi-Heyting algebras</a>, as one does, and I learned something that it seems you folks have already learned:</p>\n<p>Any totally ordered set with a top and bottom element is a bi-Heyting algebra, and if this set has more than 2 elements it's not a Boolean algebra.</p>\n<p>So, a very nice bi-Heyting but non-Boolean algebra is the totally ordered set {false, maybe, true}.  A very simple 3-valued logic!</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/johncarlosbaez/status/1243560612757565441\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1224941370885828608/Ktaz9JLB_normal.jpg\"></a><p>It may seem hard to think and do math while avoiding the \"law of excluded middle\" - the axiom that says for any proposition P, either P or not P.\n\nIn fact you can get used to avoiding it.  I know lots of mathematicians who can.  It's an ability you can turn on and off.\n\n(1/n)</p><span>- John Carlos Baez (@johncarlosbaez)</span></div></div>",
        "id": 192068513,
        "sender_full_name": "John Baez",
        "timestamp": 1585337179
    },
    {
        "content": "<p>yeah, i misread supseteq as subseteq</p>",
        "id": 192068553,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585337209
    },
    {
        "content": "<p>This is the subobject classifier in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><msup><mi>t</mi><mo lspace=\"0em\" rspace=\"0em\">→</mo></msup></mrow><annotation encoding=\"application/x-tex\">Set^{\\rightarrow}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord\"><span class=\"mord mathdefault\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6198089999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">→</span></span></span></span></span></span></span></span></span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi mathvariant=\"normal\">Δ</mi><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><mo stretchy=\"true\">^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\widehat{\\Delta[1]}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span><span class=\"svg-align\" style=\"top:-3.75em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span style=\"height:0.3em;\"><svg height=\"0.3em\" preserveAspectRatio=\"none\" viewBox=\"0 0 2364 360\" width=\"100%\"><path d=\"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10 -11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25em;\"><span></span></span></span></span></span></span></span></span></p>",
        "id": 192069872,
        "sender_full_name": "vikraman",
        "timestamp": 1585337943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192068513\" title=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192068513\">said</a>:</p>\n<blockquote>\n<p>So, I <a href=\"https://twitter.com/johncarlosbaez/status/1243560612757565441\" title=\"https://twitter.com/johncarlosbaez/status/1243560612757565441\">tweeted about bi-Heyting algebras</a>, as one does, and I learned something that it seems you folks have already learned:</p>\n<p>Any totally ordered set with a top and bottom element is a bi-Heyting algebra, and if this set has more than 2 elements it's not a Boolean algebra.</p>\n<p>So, a very nice bi-Heyting but non-Boolean algebra is the totally ordered set {false, maybe, true}.  A very simple 3-valued logic!</p>\n</blockquote>\n<p>Yes, that looks about right :).</p>",
        "id": 192070486,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1585338302
    },
    {
        "content": "<p>hmm, so i wonder</p>",
        "id": 192099225,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585360076
    },
    {
        "content": "<p>if a bi-heyting algebra is supposed to allow you to talk about both closures and interiors, is there some way of getting an interesting bi-heyting algebra out of a topological space? i was gonna suggest the borel algebra but that's boolean (in classical foundations at least)</p>",
        "id": 192099282,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585360150
    },
    {
        "content": "<p>oh, you know what i wanna know now? <em>what is the computational content of all this</em></p>",
        "id": 192099545,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585360481
    },
    {
        "content": "<p>okay so it probably all comes back to linear logic, i never did think that thru...</p>",
        "id": 192099550,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585360493
    },
    {
        "content": "<p>I don't know how to get a bi-Heyting algebra out of a topological space in an interesting way.  </p>\n<p>But this nLab article is nice:</p>\n<p><a href=\"https://ncatlab.org/nlab/show/bi-Heyting+topos\" title=\"https://ncatlab.org/nlab/show/bi-Heyting+topos\">https://ncatlab.org/nlab/show/bi-Heyting+topos</a></p>\n<p>It shows the lattice of subobjects of any object in any presheaf category is bi-Heyting!  </p>\n<p>For example the lattice of subgraphs of a graph (using the category theorist's definition of \"graph\".)</p>\n<p>So I now have vast numbers of bi-Heyting algebras to play with.  <span aria-label=\"cowboy\" class=\"emoji emoji-1f920\" role=\"img\" title=\"cowboy\">:cowboy:</span></p>",
        "id": 192100370,
        "sender_full_name": "John Baez",
        "timestamp": 1585361874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> in particular, your example of 3-valued logic is also an instance of this, since it is the subobject classifier of presheaves over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\Delta[1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Δ</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></p>",
        "id": 192100611,
        "sender_full_name": "vikraman",
        "timestamp": 1585362302
    },
    {
        "content": "<p>Great, I was wondering about this and failing miserably to see how it was an example.</p>",
        "id": 192100832,
        "sender_full_name": "John Baez",
        "timestamp": 1585362703
    },
    {
        "content": "<p>So all totally ordered sets with top and bottom are also an instance of this.</p>",
        "id": 192100965,
        "sender_full_name": "John Baez",
        "timestamp": 1585362802
    },
    {
        "content": "<p>But it seems much more fun now to have non-totally-ordered bi-Heyting algebras.</p>",
        "id": 192101012,
        "sender_full_name": "John Baez",
        "timestamp": 1585362842
    },
    {
        "content": "<p>I haven't worked this through, but I think I can give another large class from the description. We know that finite joins distributing over potentially infinite meets = complete heyting algebra. Dually, finite meets over potentially infinite joins must = complete co-heyting algebra. When both hold, you get a bi-heyting algebra. A nice large case when both hold is any finite distributive lattice.</p>",
        "id": 192104683,
        "sender_full_name": "Gershom",
        "timestamp": 1585369204
    },
    {
        "content": "<p>haha i googled \"finite distributive lattice\" and <a href=\"/user_uploads/21317/04t4YY13gLr_nCj4FgLA6goT/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/04t4YY13gLr_nCj4FgLA6goT/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/04t4YY13gLr_nCj4FgLA6goT/image.png\"></a></div>",
        "id": 192104848,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585369482
    },
    {
        "content": "<p>Nice!  That's a big class, the finite distributive lattices.  It's also nice that the opposite category of FinDistLat is FinPoset, so any finite poset gives a finite distributive lattice and thus a bi-Heyting algebra.</p>\n<p>To get the finite distributive lattice corresponding to a finite poset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>, first form the poset of upsets in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> with the reverse ordering (this is the free finite meet completion on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>).  Then form the distributive lattice of downsets in that.  This is the free distributive lattice on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>.</p>\n<p>I'm sort of quoting the nLab, but I sort of wrote this part, to help me remember it.</p>",
        "id": 192107999,
        "sender_full_name": "John Baez",
        "timestamp": 1585375296
    },
    {
        "content": "<p>Right, that's the free distributive lattice. But that's not the birkhoff duality you describe. For that, just form the downsets, and you're done! (In the other direction, take the join-irreducible/join-prime elements to get the poset back).</p>\n<p>(you can also do the same thing with upsets and meets if you prefer).</p>",
        "id": 192108202,
        "sender_full_name": "Gershom",
        "timestamp": 1585375675
    },
    {
        "content": "<p>i saw the word \"downset\" so just a quick note to anyone who might not know: <strong><em>downward-closed sets are (0, 1)-presheaves and taking x↓ is the (0, 1)-yoneda embedding</em></strong></p>",
        "id": 192109165,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585377514
    },
    {
        "content": "<p>(and the inclusions of downward-closed sets are some sort of fibration, maybe even the discrete ones... need to work that out (and whether \"discrete\" makes sense in this context))</p>",
        "id": 192109265,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585377732
    },
    {
        "content": "<blockquote>\n<p>Right, that's the free distributive lattice. But that's not the birkhoff duality you describe. For that, just form the downsets, and you're done! (In the other direction, take the join-irreducible/join-prime elements to get the poset back.</p>\n</blockquote>\n<p>Hmm, then perhaps I screwed up the nLab page.   Oh, no, maybe I just misread it.  Maybe you could check it:</p>\n<ul>\n<li><a href=\"https://ncatlab.org/nlab/show/distributive+lattice#OppositeCategory\" title=\"https://ncatlab.org/nlab/show/distributive+lattice#OppositeCategory\">Finite distributive lattices</a></li>\n</ul>\n<p>and either fix errors or tell me about them.  It would be nice to make the explanation better, too.</p>",
        "id": 192133349,
        "sender_full_name": "John Baez",
        "timestamp": 1585416667
    },
    {
        "content": "<p>i just realized that the universal property i was thinking about with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> might <em>not</em> have been as trivial as i decided after all</p>",
        "id": 192137355,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585422704
    },
    {
        "content": "<p>well, ok, so what got me thinking about it again is that coq's <code>ssreflect</code> library defines a thing called <code>classically</code> like so:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">Definition</span> <span class=\"n\">classically</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"k\">forall</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">bool</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">-&gt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">b</span><span class=\"o\">.</span>\n</pre></div>",
        "id": 192137415,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585422790
    },
    {
        "content": "<p>(there's a coercion registered from <code>bool</code> to <code>Prop</code> so that <code>b</code> can be written there as if it were a proposition)</p>",
        "id": 192137424,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585422809
    },
    {
        "content": "<p>now, this is easily equivalent to double negation</p>",
        "id": 192137434,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585422830
    },
    {
        "content": "<p>because it's the same as <code>((P -&gt; true) -&gt; true) /\\ ((P -&gt; false) -&gt; false)</code>, and <code>false &lt;-&gt; False</code> (where lowercase <code>true</code> and <code>false</code> are booleans being coerced to propositions, while uppercase <code>True</code> and <code>False</code> are fundamentally propositions, so logically equivalent but not judgmentally equal)</p>",
        "id": 192137498,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585422891
    },
    {
        "content": "<p>but the reason why it's defined this way is for convenience of use—say you want to prove a goal which is a boolean coerced into a proposition, and you know <code>H : classically P</code>; then you can just apply <code>H</code> directly to your goal <code>b</code> and now you need to prove <code>P -&gt; b</code>—you've weakened your goal using <code>H</code></p>",
        "id": 192137583,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423008
    },
    {
        "content": "<p>whereas if it were defined as double negation, this use case would have to be a lemma</p>",
        "id": 192137593,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423033
    },
    {
        "content": "<p>but anyway: this felt to me like it was saying something like...</p>",
        "id": 192137617,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423064
    },
    {
        "content": "<p>\"<code>P</code> as perceived by booleans is indistinguishable from <code>~ ~ P</code>\"</p>",
        "id": 192137680,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423100
    },
    {
        "content": "<p>which <em>would</em> be the criterion for a reflection, except that <code>~ ~ P</code> need not be decidable, so i thought something odd was going on</p>",
        "id": 192137687,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423123
    },
    {
        "content": "<p>and then i decided that it was as simple as what i said earlier, but... now i'm suspicious again, because it seems as though we can maybe say that the reflection of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is somehow \"generated\" by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 192137719,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423199
    },
    {
        "content": "<p>so, ok, if we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>∈</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">P \\in H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> we can contravariantly yoneda-embed it to get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>c</mi><mi>o</mi><mi>P</mi><mi>S</mi><mi>h</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(P) \\in coPSh(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">h</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>, then we can restrict that along the inclusion of either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> or of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> to get a copresheaf on one of those. the fact that we have a reflection into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> says that restricting along the inclusion into there gives us <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(\\neg\\neg P)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span> (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">¬</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">\\neg\\neg P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">¬</span><span class=\"mord\">¬</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is considered as an element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>), but it's possible that the restriction to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is not representable at all.</p>",
        "id": 192137951,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423538
    },
    {
        "content": "<p>i swear i was going somewhere with this...</p>",
        "id": 192138081,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423716
    },
    {
        "content": "<p>oh!</p>",
        "id": 192138144,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423817
    },
    {
        "content": "<p>i think maybe we have something like... \"if restricting <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(P)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(Q)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">Q</span><span class=\"mclose\">)</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> gives the same thing, then it already does when you restrict to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span>\"</p>",
        "id": 192138161,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423886
    },
    {
        "content": "<p>or rather, i think thats the correct statement of what i vaguely wanted to say the whole time, but now im no longer sure it's actually true <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 192138205,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585423941
    },
    {
        "content": "<p>OKAY, here's a question!</p>",
        "id": 192140690,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585428025
    },
    {
        "content": "<p>say a poset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is <strong><em>markovian</em></strong> if for any monotone function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>P</mi><mo>→</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">f : P \\to 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>, we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">¬</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\neg\\forall x. f(x) = 1) \\to \\exists x. \\neg(f(x) = 1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">¬</span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">.</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">.</span><span class=\"mord\">¬</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 192140752,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585428158
    },
    {
        "content": "<p>of course, classically every poset is markovian</p>",
        "id": 192140768,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585428204
    },
    {
        "content": "<p>markov's principle states that the discrete poset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> is markovian</p>",
        "id": 192140772,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585428219
    },
    {
        "content": "<p>now: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is markovian, does it follow that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">P^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> is markovian?? or does anybody have a brouwerian counterexample?</p>",
        "id": 192140815,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585428246
    },
    {
        "content": "<p>neither is instantly obvious to me, and i'm wondering if maybe i should instead define markovian as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">¬</mi><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">¬</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">(\\neg\\forall x. \\neg(f(x) = 1)) \\to \\exists x. f(x) = 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">¬</span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">.</span><span class=\"mord\">¬</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">.</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>, which i believe is equivalent to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">P^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> being markovian under my current definition</p>",
        "id": 192140845,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585428348
    },
    {
        "content": "<p>I wonder if this is the right topic, but I've just implemented Lawvere topologies (in Grothendieck toposes) in Scala: <a href=\"https://github.com/vpatryshev/Categories/blob/master/src/main/scala/math/cat/topos/LawvereTopology.scala\" title=\"https://github.com/vpatryshev/Categories/blob/master/src/main/scala/math/cat/topos/LawvereTopology.scala\">https://github.com/vpatryshev/Categories/blob/master/src/main/scala/math/cat/topos/LawvereTopology.scala</a><br>\nComments/contributions welcome.</p>",
        "id": 192209255,
        "sender_full_name": "Vlad Patryshev",
        "timestamp": 1585541239
    },
    {
        "content": "<p>ok i found my brouwerian counterexample <span aria-label=\"triumph\" class=\"emoji emoji-1f624\" role=\"img\" title=\"triumph\">:triumph:</span></p>",
        "id": 192337242,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618201
    },
    {
        "content": "<p>constructively: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">N</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> is markovian (as is anything with a greatest element), but if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span> under the standard ordering  is markovian, then it also is when it is discrete, which is just markov's principle</p>",
        "id": 192337347,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618269
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 192337350,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618279
    },
    {
        "content": "<p>this is a pain...</p>",
        "id": 192337446,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618369
    },
    {
        "content": "<p>i wanted to be able to state \"this satisfies LPO\" as \"decidable propositions are closed under quantification by monotone functions from this thing\"</p>",
        "id": 192337554,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618537
    },
    {
        "content": "<p>but i think that's not equivalent to \"we can decide between forall holds and exists counterexample\"</p>",
        "id": 192337562,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618560
    },
    {
        "content": "<p>because converting between them hinges on being able to instantiate w/ a negated version, but that switches variance!</p>",
        "id": 192337605,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618581
    },
    {
        "content": "<p>does anybody know if there's work on generalizations of omniscience principles to ordered domains of discourse?</p>",
        "id": 192337659,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618648
    },
    {
        "content": "<p>is martin escardo maybe on this server...? :-)</p>",
        "id": 192337663,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585618654
    },
    {
        "content": "<p>What is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>? I thought <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">N</mi></mrow><annotation encoding=\"application/x-tex\">ℕ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord amsrm\">N</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\leq</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span> would require that every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">N</mi><mo>→</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">ℕ → 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord amsrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> is constant.</p>",
        "id": 192340068,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585621892
    },
    {
        "content": "<p>So it would be Markovian, just like the opposite.</p>",
        "id": 192340077,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585621916
    },
    {
        "content": "<p>Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> actually the Sierpinski space?</p>",
        "id": 192340152,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585622017
    },
    {
        "content": "<p>sorry yeah</p>",
        "id": 192340596,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585622702
    },
    {
        "content": "<p>well no</p>",
        "id": 192340601,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585622709
    },
    {
        "content": "<p>it's the Sierpinski space in the sense that it has the ordering you're thinking of</p>",
        "id": 192340606,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585622724
    },
    {
        "content": "<p>but it's not the Sierpinski space in the sense that it's not the power set of the singleton, since we're working intuitionistically</p>",
        "id": 192340609,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585622738
    },
    {
        "content": "<p>Yeah. The walking arrow or whatever.</p>",
        "id": 192340793,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585623008
    },
    {
        "content": "<p>Btw John, thanks for the push. I fixed things up a bit and added some more tidbits.</p>",
        "id": 192358050,
        "sender_full_name": "Gershom",
        "timestamp": 1585643064
    },
    {
        "content": "<p>this seems like a possibly good place to mention that for a while now ive been working on a coq development of all kinds of depleted category theory (term ive coined for truth-value enriched / (0, 1)-category theory / category theory specialized to preorders)</p>",
        "id": 192409750,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670230
    },
    {
        "content": "<p>goal is to be something where you can one day think to yourself \"hmmmmmmm separating conjunction is Just™ depleted day convolution\" and then immediately be able to actually get something out of this in coq by just doing, say</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">Require</span> <span class=\"kn\">Import</span> <span class=\"n\">depleted</span><span class=\"o\">.</span><span class=\"n\">psh</span><span class=\"o\">.</span>\n\n<span class=\"kn\">Definition</span> <span class=\"n\">program_state</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"o\">...</span>\n<span class=\"kn\">Instance</span> <span class=\"n\">program_state_proset</span> <span class=\"o\">:</span> <span class=\"n\">Proset</span> <span class=\"n\">program_state</span> <span class=\"o\">:=</span> <span class=\"o\">...</span>\n<span class=\"kn\">Instance</span> <span class=\"n\">program_state_promonoidal</span> <span class=\"o\">:</span> <span class=\"n\">Promonoidal</span> <span class=\"n\">program_state</span> <span class=\"o\">:=</span> <span class=\"o\">...</span>\n\n<span class=\"kn\">Definition</span> <span class=\"n\">assertion</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">PSh</span> <span class=\"n\">program_state</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>and bam, now writing ⊗ means separating conjunction</p>",
        "id": 192410425,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670491
    },
    {
        "content": "<p>and you get all of your logical connectives for free from structure on (depleted) presheaves</p>",
        "id": 192410615,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670549
    },
    {
        "content": "<p>or, say, you read about linear logic for constructivism, go \"oh shit that sounds really cool\", decide you want to play with the chu construction</p>",
        "id": 192410692,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670585
    },
    {
        "content": "<p>great, you already have complete heyting algebras and a bunch of lemmas about them to play with, and the ordering on a product, and stuff like that, that should be plenty to make you not lose momentum when you realize how much basic theory you were taking for granted if you have adhd like me <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 192410878,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670655
    },
    {
        "content": "<p>well, that's my ideal here for what function this development should be able to serve, anyway</p>",
        "id": 192411127,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670750
    },
    {
        "content": "<p>hope it sounds appealing to someone other than me :-)</p>",
        "id": 192411144,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670758
    },
    {
        "content": "<p>dunno how many coq users there are here</p>",
        "id": 192411410,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585670867
    },
    {
        "content": "<p>(this is why i was asking about the \"markovian\" stuff—i'm working on a module for this development with some of the results from that escardó omniscience paper, like the omniscience of the conats, so that if you want to use <code>bool</code> instead of <code>Prop</code> in some places like depleted presheaves for computability purposes, you can still talk about what kinds of infs/sups it's possible to take)</p>",
        "id": 192412742,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585671420
    },
    {
        "content": "<p>(and since im working with all kinds of preordered sets, asking about restriction to only monotone predicates seemed like a natural generalization)</p>",
        "id": 192412811,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585671453
    },
    {
        "content": "<p>I'm not an expert on this kind of stuff, but it seems cool so I appreciate you talking about it here!</p>",
        "id": 192425548,
        "sender_full_name": "Thomas Read",
        "timestamp": 1585677145
    },
    {
        "content": "<p>this sounds like it could be a really useful project for gaining intuition for some of the more sophisticated categorical constructions and putting it in a more familiar context!</p>",
        "id": 192450764,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585689375
    },
    {
        "content": "<p>oh it definitely has been @_@</p>",
        "id": 192450834,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689418
    },
    {
        "content": "<p>(even not considering the Coq library)</p>",
        "id": 192450835,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585689418
    },
    {
        "content": "<blockquote>\n<p>depleted category theory (term ive coined for truth-value enriched / (0, 1)-category theory / category theory specialized to preorders)</p>\n</blockquote>\n<p>did you consider \"thin category theory\"?</p>",
        "id": 192451048,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585689534
    },
    {
        "content": "<p>hmmmmm, im not sure i did, and it does seem more immediately obvious to more people, if less punny</p>",
        "id": 192451322,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689679
    },
    {
        "content": "<p>although, um</p>",
        "id": 192451337,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689689
    },
    {
        "content": "<p>there's a certain shift in perspective, i think, between thinking of an object as a \"thin category\" and as a \"(0, 1)-category\"</p>",
        "id": 192451375,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689712
    },
    {
        "content": "<p>which is my rationalization for why i wanna stick to \"depleted\" :&gt;</p>",
        "id": 192451481,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689743
    },
    {
        "content": "<p>if i say \"i have this thin category C, and then a presheaf F on it\", then you're probably gonna assume it takes values in Set</p>",
        "id": 192451530,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689776
    },
    {
        "content": "<p>if i say \"i have this (0, 1)-category C, and then a presheaf F on it\", then you should assume it takes values in truth values!</p>",
        "id": 192451556,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689796
    },
    {
        "content": "<p>that's probably a fair assumption</p>",
        "id": 192451588,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585689818
    },
    {
        "content": "<p>and coming up with names for things is half the fun :P</p>",
        "id": 192451616,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585689837
    },
    {
        "content": "<p>i guess there's a point to be made that if you say you're doing \"thin category <em>theory</em>\", that suggests that you're <em>only</em> working with thin categories, and hence you shuoldnt be considering presheaves outside of the second kind</p>",
        "id": 192451734,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689884
    },
    {
        "content": "<p>but. i like my term =w=</p>",
        "id": 192451744,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689888
    },
    {
        "content": "<p>oh, depleted is the opposite of enriched?</p>",
        "id": 192451750,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585689891
    },
    {
        "content": "<p>yes haha</p>",
        "id": 192451760,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689897
    },
    {
        "content": "<p>at least when you talk about uranium, i think</p>",
        "id": 192451780,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689905
    },
    {
        "content": "<p>and there are certainly people who treat category theory as if it were radioactive...</p>",
        "id": 192451821,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585689928
    },
    {
        "content": "<p>only in category theory do you get something enriched when you deplete...</p>",
        "id": 192452241,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585690132
    },
    {
        "content": "<p>well, no, that's my logic—it's \"enriched\", but in fact the category you enrich over (truth values) is strictly <em>less</em> rich than the default (Set), so you're not really enriching, you're depleting</p>",
        "id": 192452326,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585690192
    },
    {
        "content": "<p>I keep advocating for \"impoverished\", but the uranium analogy makes me understand \"depleted\" a bit better.</p>",
        "id": 192453148,
        "sender_full_name": "John Baez",
        "timestamp": 1585690632
    },
    {
        "content": "<p>\"depleted\" rolls off the tongue better <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span></p>",
        "id": 192453319,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585690756
    },
    {
        "content": "<p>Are there foods which are specially modified to have less vitamin D, or whatever?</p>",
        "id": 192453715,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585690992
    },
    {
        "content": "<p>lol</p>",
        "id": 192453737,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585691009
    },
    {
        "content": "<p>gluten-free categories</p>",
        "id": 192461683,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585694019
    },
    {
        "content": "<p>we already have burritos, tacos and enchiladas</p>",
        "id": 192461741,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585694048
    },
    {
        "content": "<p>functors G and F, pronounced ‘gluten’ and ‘free’ respectively,</p>",
        "id": 192462103,
        "sender_full_name": "T Murrills",
        "timestamp": 1585694297
    },
    {
        "content": "<p>If we have gluten free functors, they must be adjoint to some gluten forgetful functor <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 192462288,
        "sender_full_name": "Reed Mullanix",
        "timestamp": 1585694419
    },
    {
        "content": "<p>also I like depleted because it comes from a nicely nounable verb; you can talk about “depletion” functors or “depleting” a category when moving between categories you enrich over.  (enriching over truth values thus gives a (nontrivial) “maximally depleted” version of—I want to say—any category enriched over [a category with an initial object]? (maybe not, I’m not sure yet. Something that works in a special way with the composition/something like a “monoidal zero”. Concept is out there, I just don’t know it yet!) Anyway, the depletion from such an enriched category to one enriched over truth values suggests the usage of “depleted” given here)</p>",
        "id": 192462492,
        "sender_full_name": "T Murrills",
        "timestamp": 1585694545
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276037\">@Jade Master</span> youll be pleased to know that my depleted CT development includes definitions of quantales and depleted day convolution, so u could formalize that blog post extremely quickly in it by just defining the monoidal proset generated by a petri net ^__^</p>",
        "id": 192617748,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799047
    },
    {
        "content": "<p>Ooh interesting. I'd love to do something with this...</p>",
        "id": 192618320,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799708
    },
    {
        "content": "<p>do you know any coq</p>",
        "id": 192618328,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799719
    },
    {
        "content": "<p>I don't but I want to learn!</p>",
        "id": 192619882,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801843
    },
    {
        "content": "<p>since i guess ive turned this into the (0, 1)-category theory topic</p>",
        "id": 192893836,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585983393
    },
    {
        "content": "<p>what's a (1, 1)-filter?</p>",
        "id": 192893838,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585983401
    },
    {
        "content": "<p>actually a (1, 1)-ideal is probably a better idea</p>",
        "id": 192893844,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585983430
    },
    {
        "content": "<p>actually no</p>\n<p>i think a (1, 1)-filter might be a flat functor to Set</p>\n<p>but i'd need to figure out the definition of flat functors first <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 192893909,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585983522
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192893836\" title=\"#narrow/stream/229136-category-theory/topic/Logic.20.26.20Programming.20Languages/near/192893836\">said</a>:</p>\n<blockquote>\n<p>since i guess ive turned this into the (0, 1)-category theory topic</p>\n</blockquote>\n<p>Can I just get some clarity about what the indices mean in eg (0,1)-category? You hinted at it earlier, but I figure I should make sure I'm understanding right</p>",
        "id": 192903264,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1585999645
    },
    {
        "content": "<p>An <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-categories is a category with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> \"levels\" of morphisms (objects are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>-morphisms) and such that every morphism above level <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span> is invertible</p>",
        "id": 192905281,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586003037
    },
    {
        "content": "<p>Beware that we tacitily assume there are always infinitely many level of morphisms, albeit an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-category has only one morphism (up to isomorphism) above level <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>.</p>",
        "id": 192905392,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586003180
    },
    {
        "content": "<p>So it makes sense to talk about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-categories for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">k&gt;n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span></p>",
        "id": 192905400,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586003204
    },
    {
        "content": "<p>A <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-category has a non-trivial collection of objects (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>-level), and a trivial collection of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphisms between any two objects (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-level). Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k=1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>, you can have non-invertible <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphisms. Hence your category is a poset.</p>",
        "id": 192905751,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586003774
    },
    {
        "content": "<p>A <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1,1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-category has a non-trivial collection of objects (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>-level), a non-trivial collection of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphisms between any two objects (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-level) and a trivial collection of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>-morphisms between any parallel <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphisms. Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k=1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>, you can have non-invertible <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphisms. Hence your category is a normal category.</p>",
        "id": 192905833,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586003895
    },
    {
        "content": "<p>A <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1,0)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>-category has non-trivial objects and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphisms, trivial <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>-morphisms and every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>-morphism is invertible. Hence your category is a groupoid!</p>",
        "id": 192905851,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586003982
    },
    {
        "content": "<p>Beware: 'trivial' means either a singleton or empty, 'non-trivial' means 'not necessarily trivial' <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 192906062,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586004328
    },
    {
        "content": "<p>Thanks! That clears that up.</p>",
        "id": 192906788,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1586005616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275932\">@Matteo Capucci</span> This makes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>-categories setoids (set + equivalence relation) and not sets, right?</p>",
        "id": 192906873,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586005762
    },
    {
        "content": "<p>In fact I think this should always allow that there is an equivalence relation on parallel <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-morphisms in an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-category...</p>",
        "id": 192906946,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586005876
    },
    {
        "content": "<p>Indeed... that's funny.</p>",
        "id": 192907074,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586006057
    },
    {
        "content": "<p>I don't know then</p>",
        "id": 192907249,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586006302
    },
    {
        "content": "<p>Oh, I don't think that's a problem. I noticed this kind of thing arising when one tries to pass from <br>\n“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-categories as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-dimensional things + composition operation on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-cells”<br>\nto <br>\n“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-categories as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-dimensional things that are 'trivial' above <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>”</p>",
        "id": 192907334,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586006505
    },
    {
        "content": "<p>When you turn the composition into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n+1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-dimensional “compositors”</p>",
        "id": 192907382,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586006552
    },
    {
        "content": "<p>Because to pass from the first to the second you would need to introduce some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n+1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-cells, and then you would make the most economical choice: do not duplicate any <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-cells!</p>",
        "id": 192907477,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586006686
    },
    {
        "content": "<p>But to obtain something equivalent to the first from the second, you would need to state that as an additional property: there are no duplicates...</p>",
        "id": 192907489,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586006721
    },
    {
        "content": "<p>And this <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-business, as you say, is done from the second perspective rather than the first</p>",
        "id": 192907502,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586006762
    },
    {
        "content": "<p>Besides, it makes constructivists happier, so why not?</p>",
        "id": 192907555,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586006819
    },
    {
        "content": "<p>You should consider categories up to equivalence, so that setoids and sets are the same. Also by the same logic, a (0, 1)-category would be a <em>preorder</em>, not a partial order (a partial order is a preorder in which <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>≤</mo><mi>y</mi><mo>∧</mo><mi>y</mi><mo>≤</mo><mi>x</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x \\le y \\wedge y \\le x \\implies x = y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.549em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>).</p>",
        "id": 192907574,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586006863
    },
    {
        "content": "<p>That's context-dependent, though. If we are considering these <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-things as special <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-things, then they are not stable under equivalence, e.g. a set would be equivalent to any disjoint union of contractible <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids.</p>",
        "id": 192907883,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586007266
    },
    {
        "content": "<p>The definition as given by Matteo needs some mentions of strict equality.</p>",
        "id": 192907959,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586007369
    },
    {
        "content": "<p>Unless maybe we want to replace every mention of “uniqueness” with “contractible space of choices”...</p>",
        "id": 192907980,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586007444
    },
    {
        "content": "<p>(Which is what you get if you stated it in HoTT, I guess.)</p>",
        "id": 192907995,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586007482
    },
    {
        "content": "<p>If you're working in some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-context then you should generally interpret \"unique\" as \"contractible space of choices\".</p>",
        "id": 192908032,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586007526
    },
    {
        "content": "<p>We were <em>defining</em> some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-things, but nobody said we were doing it in an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-context :)</p>",
        "id": 192908107,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586007629
    },
    {
        "content": "<p>I guess I was thinking more of “defining what the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n,k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>-categories are in a specific model of higher categories”.</p>",
        "id": 192908127,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586007694
    },
    {
        "content": "<p>Yeah it's not really a problem to have equivalences in the last level, yet I can't reconcile it with whta is mentioned here <a href=\"https://ncatlab.org/nlab/show/%28n%2Cr%29-category\" title=\"https://ncatlab.org/nlab/show/%28n%2Cr%29-category\">https://ncatlab.org/nlab/show/%28n%2Cr%29-category</a></p>",
        "id": 192909581,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586009740
    },
    {
        "content": "<p>Like, the definition and the 'periodic table' disagree, as <span class=\"user-mention\" data-user-id=\"276363\">@Amar Hadzihasanovic</span> points out</p>",
        "id": 192909638,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586009782
    },
    {
        "content": "<p>note that in general, an (n, r)-category for r &gt; n is only interesting when r = n+1</p>",
        "id": 192925794,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032403
    },
    {
        "content": "<p>larger r is equivalent to that</p>",
        "id": 192925797,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032411
    },
    {
        "content": "<p>and r = n+1 means you have a preorder on the highest-level cells</p>",
        "id": 192925802,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032429
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Logic.20.26.20Programming.20Languages/near/192137355\" title=\"#narrow/stream/229136-theory.3A-category.20theory/topic/Logic.20.26.20Programming.20Languages/near/192137355\">said</a>:</p>\n<blockquote>\n<p>i just realized that the universal property i was thinking about with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> might <em>not</em> have been as trivial as i decided after all</p>\n</blockquote>\n<p>HAHAHA i came back to this just now and i figured it out :D</p>",
        "id": 195295522,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587837318
    },
    {
        "content": "<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is dense in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span></li>\n</ul>",
        "id": 195295538,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587837360
    },
    {
        "content": "<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Dec(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">c</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span> is codense in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Reg(H)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>",
        "id": 195295577,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587837373
    },
    {
        "content": "<p>wait, i <em>think</em> that's right.</p>",
        "id": 195295635,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587837460
    },
    {
        "content": "<p>ok nvm i realized that the reasoning i was working on only really applied to the heyting algebra of truth values &gt;.&gt;</p>",
        "id": 195295918,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587837899
    },
    {
        "content": "<p>might still be true but uhhh i dont know</p>",
        "id": 195295926,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587837905
    }
]