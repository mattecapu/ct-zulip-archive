[
    {
        "content": "<p>A <a href=\"https://ncatlab.org/nlab/show/%28-1%29-category\">(-1)-category</a> is <strong>classically</strong> the set of truth values. One can read quite a bit more about them in the arxiv'ed paper by <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> and <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>  <a href=\"https://arxiv.org/abs/math/0608420\">Lectures on n-Categories and Cohomology</a>.</p>\n<p>But I am here interested in the constructive version of -1-categories. Given excluded-middle, it is indeed easy to prove that the category of -1-categories indeed only has 2 inhabitants up to equivalence, and is equivalent to a set. One can start from -2-categories being  1-categories that have (inhabited, contractible) objects and contractible homs (for example), and this 'works' too.  One can then define a monoidal structure on that. And then define -1-categories to be categories enriched over those -- everything works out nicely: <a href=\"https://agda.github.io/agda-categories/Categories.Minus2-Category.html\">basic definition of -2-category</a>, and the <a href=\"https://agda.github.io/agda-categories/Categories.Minus2-Category.Properties.html\">equivalence to One</a>, and then <a href=\"https://github.com/agda/agda-categories/blob/NegativeThinking/Categories/Minus1-Category.agda\">-1 category</a>.</p>\n<p>However, as far as I can tell, to show that -1-categories are <em>only</em> the truth values seems to really require excluded-middle. In fact, I strongly suspect that it is equivalent to it.   Roughly the idea is simple: Suppose that the category of -1-categories is indeed equivalent to the category with only 2 inhabitants (and we have an explicit equivalence witnessing this fact). <br>\n Take any type, build 'the' indiscrete category over it, which can be shown to be a -1-category and then look to see what it maps to, true or false? That tells you whether it's inhabited or not, which gives you that inhabitation is decidable (i.e. a very strong excluded middle - way too strong).</p>\n<p>So that sketch is wrong somewhere, in that it likely uses excluded middle itself. It's ok to ask if something is 'true' or 'false', as that is indeed decidable, but that's not <em>quite</em> what is in the sketch, is it? What's there is 'is it the true or false <em>-1-category</em>', which isn't necessarily decidable.</p>\n<p>My intuition is still that, constructively, -1-categories can't be shown to be equivalent to merely the 2 classical truth values. And assuming that it can, implies some classical axiom. But I'm currently stuck on the details.  Any help would be appreciated.</p>",
        "id": 221364639,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1609528552
    },
    {
        "content": "<p>Constructively, it's not the case that 'every truth value is either false or true'. So, if by \"the truth values\" you mean \"false and true,\" that's using classical terminology.</p>",
        "id": 221364950,
        "sender_full_name": "Dan Doel",
        "timestamp": 1609529083
    },
    {
        "content": "<p>E.G. in HoTT, the truth values are what people call propositions, specified by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">P</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>:</mo><mi>A</mi></mrow></msub><mi>x</mi><mo>≡</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{isProp}(A) = Π_{x,y:A}x \\equiv y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mathsf\">s</span><span class=\"mord mathsf\">P</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">r</span><span class=\"mord mathsf\">o</span><span class=\"mord mathsf\">p</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>, but it is erroneous to think that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">P</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>≡</mo><mtext>⊤</mtext><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>≡</mo><mtext>⊥</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{isProp}(A) → (A \\equiv ⊤) + (A \\equiv ⊥)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mathsf\">s</span><span class=\"mord mathsf\">P</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">r</span><span class=\"mord mathsf\">o</span><span class=\"mord mathsf\">p</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">⊤</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">⊥</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 221365538,
        "sender_full_name": "Dan Doel",
        "timestamp": 1609530056
    },
    {
        "content": "<p>That would be excluded middle.</p>",
        "id": 221365607,
        "sender_full_name": "Dan Doel",
        "timestamp": 1609530167
    },
    {
        "content": "<p>Well, it's not \"erroneous\", you're just working in a logic too feeble to prove it. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 221365625,
        "sender_full_name": "Reid Barton",
        "timestamp": 1609530207
    },
    {
        "content": "<p>That would be an erroneous answer to the question.</p>",
        "id": 221366010,
        "sender_full_name": "Dan Doel",
        "timestamp": 1609530799
    },
    {
        "content": "<p>Right. So one of the things I'm trying to establish is exactly that: assuming that there are exactly 2 -1-categories is equivalent to excluded middle. My proof doodles all seemed tentalizingly close, but never quite 'there'.</p>\n<p>The other thing I'm trying to establish is a charaterization (in MLTT) of what -1-categories 'are'.  Perhaps they are exactly the values that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">P</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{isProp}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mathsf\">s</span><span class=\"mord mathsf\">P</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">r</span><span class=\"mord mathsf\">o</span><span class=\"mord mathsf\">p</span></span></span></span></span> can take?</p>",
        "id": 221367291,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1609532756
    },
    {
        "content": "<p>I think it would probably coincide, since it's trivializing enough stuff for there to be no difference between the category and groupoid versions. But I kind of forget the details.</p>",
        "id": 221367634,
        "sender_full_name": "Dan Doel",
        "timestamp": 1609533345
    },
    {
        "content": "<p>Consider the -1-category whose set of objects is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mn>1</mn><mtext>  </mtext><mi mathvariant=\"normal\">∣</mi><mtext>  </mtext><mi>ϕ</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{x \\in 1\\;|\\;\\phi\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mclose\">}</span></span></span></span> and identity morphisms. If there are only two -1-categories 0 and 1, this implies <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi><mo>∨</mo><mi mathvariant=\"normal\">¬</mi><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi \\vee \\neg\\phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathnormal\">ϕ</span></span></span></span>.</p>",
        "id": 221412581,
        "sender_full_name": "vikraman",
        "timestamp": 1609614267
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"276098\">@vikraman</span> . That's exactly what I've been trying to convince Agda is true... with no success. It is entirely possible that I'm not phrasing the 'question' quite correctly (in Agda) and that's the real source of the problem.  And of course \"only two\" means \"up to categorical equivalence\" (which should be fine), but does make the reasoning a tiny bit trickier.</p>",
        "id": 221453784,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1609685017
    }
]