[
    {
        "content": "<p>What else do we have to know before we can move on to Galois descent?</p>",
        "id": 197229005,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589251189
    },
    {
        "content": "<p>Nothing!   So, I'll make this a new topic.... though eventually it will loop back to <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Galois.20cohomology\">Galois cohomology</a>.</p>",
        "id": 197303894,
        "sender_full_name": "John Baez",
        "timestamp": 1589301838
    },
    {
        "content": "<p>So, descent is fundamentally a question like this: you have a functor </p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\"> F: C \\to D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span></p>\n<p>and you take an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> and you ask \"did it come from an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\"?</p>",
        "id": 197304070,
        "sender_full_name": "John Baez",
        "timestamp": 1589301915
    },
    {
        "content": "<p>Of course it might have come from more than one object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, so instead of asking about the <em>property</em> of whether it came from an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> it's better to think of this as a <em>structure!</em></p>",
        "id": 197304213,
        "sender_full_name": "John Baez",
        "timestamp": 1589301965
    },
    {
        "content": "<p>So, the question of descent becomes \"how can we nicely describe the <em>structure</em> on objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> that says how they came from a object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>?\"</p>",
        "id": 197304322,
        "sender_full_name": "John Baez",
        "timestamp": 1589302021
    },
    {
        "content": "<p>Get it?</p>",
        "id": 197304355,
        "sender_full_name": "John Baez",
        "timestamp": 1589302032
    },
    {
        "content": "<p>It's pretty clear how fibrations connect to descent now.</p>",
        "id": 197305228,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589302413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Descent/near/197304322\">said</a>:</p>\n<blockquote>\n<p>So, the question of descent becomes \"how can we nicely describe the <em>structure</em> on objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> that says how they came from a object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span>?\"</p>\n</blockquote>\n<p>is this backwards?</p>",
        "id": 197305349,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589302470
    },
    {
        "content": "<p>It's backwards, let me fix it in my original comment.</p>",
        "id": 197306256,
        "sender_full_name": "John Baez",
        "timestamp": 1589302908
    },
    {
        "content": "<p>Yes, fibrations are connected to descent.</p>",
        "id": 197306423,
        "sender_full_name": "John Baez",
        "timestamp": 1589302996
    },
    {
        "content": "<p>And here's another way they're connected to descent - maybe it's a different way than what you were thinking of, but maybe it's connected.</p>",
        "id": 197306479,
        "sender_full_name": "John Baez",
        "timestamp": 1589303034
    },
    {
        "content": "<p>Suppose you have a map of spaces <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">p: E \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.  Say you've got a category of bundles or sheaves up on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> and a category of bundles or sheaves down on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.   Can you say how descent, as I've described it, shows up here?</p>",
        "id": 197306782,
        "sender_full_name": "John Baez",
        "timestamp": 1589303171
    },
    {
        "content": "<p>(Just pick bundles or sheaves of any kind you like; it doesn't matter much.)</p>",
        "id": 197306905,
        "sender_full_name": "John Baez",
        "timestamp": 1589303221
    },
    {
        "content": "<p>(Btw, for people joining, I like to teach math by asking lots of questions, which are usually supposed to be fairly easy for my intended audience - in this case <span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span>.)</p>",
        "id": 197308502,
        "sender_full_name": "John Baez",
        "timestamp": 1589303915
    },
    {
        "content": "<p>well, there's an adjunction between the categories of sheaves on E and B—are you talking about descent from sheaves on E to sheaves on B, or vice versa? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 197309321,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304281
    },
    {
        "content": "<p>or is that the puzzle? :)</p>",
        "id": 197309342,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304291
    },
    {
        "content": "<p>That's half the puzzle.   You can push forwards and pull back sheaves, so you could in theory study descent going either way.</p>",
        "id": 197309471,
        "sender_full_name": "John Baez",
        "timestamp": 1589304353
    },
    {
        "content": "<p>I think you want the functor from bundles on E to bundles on B given by composing with p. Then the question of descent for that functor is when does a bundle on B factor through p? Right?</p>",
        "id": 197309667,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589304419
    },
    {
        "content": "<p>Right!</p>",
        "id": 197309701,
        "sender_full_name": "John Baez",
        "timestamp": 1589304437
    },
    {
        "content": "<p>ooooh right, that's exactly what pullback of bundles is</p>",
        "id": 197309739,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304451
    },
    {
        "content": "<p>Wait, wrong!</p>",
        "id": 197309741,
        "sender_full_name": "John Baez",
        "timestamp": 1589304454
    },
    {
        "content": "<p>and then that's exactly what lifting problems are</p>",
        "id": 197309751,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304457
    },
    {
        "content": "<p>oh oops lmao</p>",
        "id": 197309759,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304462
    },
    {
        "content": "<p>Joe said something sorta wrong.</p>",
        "id": 197309787,
        "sender_full_name": "John Baez",
        "timestamp": 1589304472
    },
    {
        "content": "<p>It sounded so much like the right answer that at first I assumed he'd gotten it right.</p>",
        "id": 197309889,
        "sender_full_name": "John Baez",
        "timestamp": 1589304501
    },
    {
        "content": "<p>I'll let you two clear it up.</p>",
        "id": 197310079,
        "sender_full_name": "John Baez",
        "timestamp": 1589304584
    },
    {
        "content": "<p>oops</p>",
        "id": 197310088,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304586
    },
    {
        "content": "<p>I'll just say this: when Sarah said \"that's exactly what a pullback of bundles is\", it didn't match what Joe had just described.  Why not?  Sort it out!</p>",
        "id": 197310202,
        "sender_full_name": "John Baez",
        "timestamp": 1589304617
    },
    {
        "content": "<p>yeah i kinda started to notice something wrong when i went back to see what you were complaining about...</p>",
        "id": 197310254,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304639
    },
    {
        "content": "<p>What I described is not pulling back.</p>",
        "id": 197310264,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589304645
    },
    {
        "content": "<p>You were \"pushing forward\" a bundle.</p>",
        "id": 197310304,
        "sender_full_name": "John Baez",
        "timestamp": 1589304657
    },
    {
        "content": "<p>i always super super hate how it's contravariant to go from p to p⁻¹ and then it's contravariant <em>again</em> to go from p⁻¹ to certain topos functors</p>",
        "id": 197310328,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304665
    },
    {
        "content": "<p>If your \"bundle\" means just a map of spaces, you can push it forward.  But most people want bundles to be slightly nice, like \"locally trivial\".</p>",
        "id": 197310445,
        "sender_full_name": "John Baez",
        "timestamp": 1589304714
    },
    {
        "content": "<p>Then you can't push them forward, in general.   You can only pull them back.</p>",
        "id": 197310522,
        "sender_full_name": "John Baez",
        "timestamp": 1589304732
    },
    {
        "content": "<p>For example, suppose I have a Mobius strip bundle over a circle - that's a certain locally trivial bundle whose fibers are lines.</p>",
        "id": 197310571,
        "sender_full_name": "John Baez",
        "timestamp": 1589304762
    },
    {
        "content": "<p>the double contravariance trips me up every goddamn time when i forget one of the two flips</p>",
        "id": 197310580,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304767
    },
    {
        "content": "<p>So if we're talking about pulling back bundles from B to E, then the descent question is when is a bundle on E a pullback of a bundle on B.</p>",
        "id": 197310660,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589304801
    },
    {
        "content": "<p>Say I map the circle to a point.  What happens if I try to push forward this Mobius strip bundle?  What do I get?</p>",
        "id": 197310664,
        "sender_full_name": "John Baez",
        "timestamp": 1589304802
    },
    {
        "content": "<p>You're right, Joe - and that's why it's called DESCENT and not ASCENT.</p>",
        "id": 197310726,
        "sender_full_name": "John Baez",
        "timestamp": 1589304830
    },
    {
        "content": "<p>You're trying to see if a bundle \"up on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span>\" descends to one on the \"base\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.  This is the same as seeing if it's a \"lift\" of a bundle on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>",
        "id": 197310822,
        "sender_full_name": "John Baez",
        "timestamp": 1589304863
    },
    {
        "content": "<p>But please answer my latest question, just to make sure we know what's going on....</p>",
        "id": 197310851,
        "sender_full_name": "John Baez",
        "timestamp": 1589304880
    },
    {
        "content": "<p>ooh, a whole <em>bundle</em>, not just a section of a given bundle?</p>",
        "id": 197310937,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304939
    },
    {
        "content": "<p><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 197310942,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589304942
    },
    {
        "content": "<p>Surely there's only one bundle on a point with a given total space, so it will just be that</p>",
        "id": 197311030,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589304975
    },
    {
        "content": "<p>So what's that?</p>",
        "id": 197311157,
        "sender_full_name": "John Baez",
        "timestamp": 1589305028
    },
    {
        "content": "<p>The map from the Mobius strip to the point</p>",
        "id": 197311224,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589305062
    },
    {
        "content": "<p>The bundle should be the line over the point.</p>",
        "id": 197311340,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589305110
    },
    {
        "content": "<p>Oh, goody!  The great thing about having more than one student is that they give contradictory answers and learn by fighting it out.</p>",
        "id": 197311409,
        "sender_full_name": "John Baez",
        "timestamp": 1589305144
    },
    {
        "content": "<p>So we've got two answers to what happens if you push forward the Mobius strip bundle over the circle along the map from the circle to the point.</p>",
        "id": 197311479,
        "sender_full_name": "John Baez",
        "timestamp": 1589305182
    },
    {
        "content": "<p>Joe gave a clear recipe for how this pushing forward should work, so one can just follow that recipe and see what it gives.</p>",
        "id": 197311573,
        "sender_full_name": "John Baez",
        "timestamp": 1589305209
    },
    {
        "content": "<p>The line over the point is what you would get if you pulled back the bundle along an inclusion of the point into the circle</p>",
        "id": 197311576,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589305211
    },
    {
        "content": "<p>meanwhile im sitting here unsure what it means to push a bundle forward <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 197311730,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305304
    },
    {
        "content": "<p>What it \"means\" in a deep philosophical way, or how to do it?</p>",
        "id": 197311802,
        "sender_full_name": "John Baez",
        "timestamp": 1589305330
    },
    {
        "content": "<p>the latter!!</p>",
        "id": 197311828,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305347
    },
    {
        "content": "<p>The most general concept of a \"bundle\" over a space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is just a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">p: Y \\to X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.</p>",
        "id": 197311856,
        "sender_full_name": "John Baez",
        "timestamp": 1589305364
    },
    {
        "content": "<p>well, i know <em>that</em></p>",
        "id": 197311865,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305371
    },
    {
        "content": "<p>im pretty happy with pulling bundles back and what that means</p>",
        "id": 197311875,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305379
    },
    {
        "content": "<p>Can you guess how to push it forward along a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><msup><mi>X</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f: X \\to X'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>?</p>",
        "id": 197311895,
        "sender_full_name": "John Baez",
        "timestamp": 1589305393
    },
    {
        "content": "<p>.........is it a pushout <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 197311913,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305402
    },
    {
        "content": "<p>noooo wait that doesnt even</p>",
        "id": 197311944,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305418
    },
    {
        "content": "<p>You can't draw a pushout with the data I gave.</p>",
        "id": 197311947,
        "sender_full_name": "John Baez",
        "timestamp": 1589305419
    },
    {
        "content": "<p>the arrows go the wrong way what am i saying</p>",
        "id": 197311954,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305421
    },
    {
        "content": "<p>Right - wrong!</p>",
        "id": 197311964,
        "sender_full_name": "John Baez",
        "timestamp": 1589305428
    },
    {
        "content": "<p>yeah im not sure</p>",
        "id": 197311996,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305441
    },
    {
        "content": "<p>other than to wildly guess it's what direct image of sheaves does</p>",
        "id": 197312037,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305448
    },
    {
        "content": "<p>So what do you do?  You gotta do what you can do with the stuff you've got.</p>",
        "id": 197312047,
        "sender_full_name": "John Baez",
        "timestamp": 1589305450
    },
    {
        "content": "<p>Draw the diagram: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>X</mi><mo>→</mo><msup><mi>X</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">Y\\to X\\to X'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></p>",
        "id": 197312098,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589305482
    },
    {
        "content": "<p>Come on, you're \"overthinking\" it Sarah. Usually people say that when they're underthinking it, but here you are really overthinking it.</p>",
        "id": 197312100,
        "sender_full_name": "John Baez",
        "timestamp": 1589305484
    },
    {
        "content": "<p>\\&gt;.&gt;</p>",
        "id": 197312115,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305494
    },
    {
        "content": "<p>omg oscar</p>",
        "id": 197312140,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305508
    },
    {
        "content": "<p>literally just compose?</p>",
        "id": 197312148,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305513
    },
    {
        "content": "<p>Yeah!</p>",
        "id": 197312155,
        "sender_full_name": "John Baez",
        "timestamp": 1589305518
    },
    {
        "content": "<p>for fucks sake</p>",
        "id": 197312164,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305524
    },
    {
        "content": "<p>You have reinvented \"composition of morphisms\"  <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 197312178,
        "sender_full_name": "John Baez",
        "timestamp": 1589305533
    },
    {
        "content": "<p>I figure I can be a bit sarcastic without permanently damaging you...</p>",
        "id": 197312216,
        "sender_full_name": "John Baez",
        "timestamp": 1589305555
    },
    {
        "content": "<p>:O cant believe i managed to do what took eilenberg and mac lane previously .....</p>",
        "id": 197312222,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305557
    },
    {
        "content": "<p>That's what he meant when he said that I gave a recipe for it, I said you get a functor by composing with p.</p>",
        "id": 197312227,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589305561
    },
    {
        "content": "<p>Right!</p>",
        "id": 197312273,
        "sender_full_name": "John Baez",
        "timestamp": 1589305567
    },
    {
        "content": "<p>well, i wasnt even wrong about direct image of sheaves then was i?</p>",
        "id": 197312295,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589305580
    },
    {
        "content": "<p>So this very general concept of \"bundle\" easily pushes forward.</p>",
        "id": 197312297,
        "sender_full_name": "John Baez",
        "timestamp": 1589305581
    },
    {
        "content": "<p>My answer came from saying \"vector bundle\" in my head. So I was trying to think what should the vector space over the point be when I compose with the map from the circle to the point. I think this is an error. The answer should be the mobius strip over the point.</p>",
        "id": 197312317,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589305592
    },
    {
        "content": "<p>Right!</p>",
        "id": 197312329,
        "sender_full_name": "John Baez",
        "timestamp": 1589305601
    },
    {
        "content": "<p>So this way of pushing forward bundles is pretty bad if you like bundles with a fixed fiber, like \"line bundles\".</p>",
        "id": 197312394,
        "sender_full_name": "John Baez",
        "timestamp": 1589305627
    },
    {
        "content": "<p>Or even more generally \"vector bundles\".</p>",
        "id": 197312410,
        "sender_full_name": "John Baez",
        "timestamp": 1589305639
    },
    {
        "content": "<p>We took a vector bundle over the circle, pushed it forward to the point, and got something that wasn't a vector bundle.</p>",
        "id": 197312447,
        "sender_full_name": "John Baez",
        "timestamp": 1589305662
    },
    {
        "content": "<p>So geometers generally consider pushing forward bundles to be a horrible thing to do.</p>",
        "id": 197312531,
        "sender_full_name": "John Baez",
        "timestamp": 1589305692
    },
    {
        "content": "<p>It's not to be discussed in polite society.</p>",
        "id": 197312567,
        "sender_full_name": "John Baez",
        "timestamp": 1589305716
    },
    {
        "content": "<p>Henceforth we will only pull back bundles.</p>",
        "id": 197312812,
        "sender_full_name": "John Baez",
        "timestamp": 1589305756
    },
    {
        "content": "<p>And it sounds like y'all know how that works.   It's literally just a pullback in the categorical sense.</p>",
        "id": 197312940,
        "sender_full_name": "John Baez",
        "timestamp": 1589305797
    },
    {
        "content": "<p>You've got your bundle <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">p: E \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">f: B' \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and you do the pullback you can do with that data.</p>",
        "id": 197313052,
        "sender_full_name": "John Baez",
        "timestamp": 1589305820
    },
    {
        "content": "<p>This is nice because line bundles pull back to give line bundles, vector bundles pull back to give vector bundles, principal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span>-bundles pull back to give principal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span>-bundles, blah blah blah.</p>",
        "id": 197313179,
        "sender_full_name": "John Baez",
        "timestamp": 1589305865
    },
    {
        "content": "<p>The reason is that the fibers of your new bundle over points in your new base <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> are just copies of fibers over the the points of your old base <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>",
        "id": 197313256,
        "sender_full_name": "John Baez",
        "timestamp": 1589305908
    },
    {
        "content": "<p>So the <em>fun</em> starts when you ask: given a bundle over my new base <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>, could it be the pullback of a bundle over the old base <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>?</p>",
        "id": 197313432,
        "sender_full_name": "John Baez",
        "timestamp": 1589305979
    },
    {
        "content": "<p>I see my letters have changed by now.</p>",
        "id": 197313447,
        "sender_full_name": "John Baez",
        "timestamp": 1589305987
    },
    {
        "content": "<p>But this is the \"descent\" question.</p>",
        "id": 197313462,
        "sender_full_name": "John Baez",
        "timestamp": 1589305999
    },
    {
        "content": "<p>Let me see if you get it.  Say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B = B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is a circle but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is the 2-1 cover of the circle by itself.</p>",
        "id": 197313483,
        "sender_full_name": "John Baez",
        "timestamp": 1589306025
    },
    {
        "content": "<p>Say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>E</mi><mo>→</mo><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">p: E \\to B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is the Mobius strip bundle over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>.    Does it descend to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>?</p>",
        "id": 197313580,
        "sender_full_name": "John Baez",
        "timestamp": 1589306069
    },
    {
        "content": "<p>One condition is that points of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> that go to the same place in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> should have the same fiber</p>",
        "id": 197313730,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589306143
    },
    {
        "content": "<p>I'll say no. I think the double twist would descend to the Mobius strip though.</p>",
        "id": 197313804,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306164
    },
    {
        "content": "<p>wait wait i wanna think about this</p>",
        "id": 197313818,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306171
    },
    {
        "content": "<p>i havent visualized it yet</p>",
        "id": 197313836,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306178
    },
    {
        "content": "<p>Yes, all of you should visualize it.  A couple of comments: 1) \"the same\" is a very tricky concept.</p>",
        "id": 197313880,
        "sender_full_name": "John Baez",
        "timestamp": 1589306201
    },
    {
        "content": "<p>2) \"the double twist\" line bundle over the circle is a funny thing to talk about.</p>",
        "id": 197313922,
        "sender_full_name": "John Baez",
        "timestamp": 1589306215
    },
    {
        "content": "<p>so this is sort of an extension problem, huh</p>",
        "id": 197314143,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306292
    },
    {
        "content": "<p>if we assume that there's a classifying space for the kind of bundle we're talking about</p>",
        "id": 197314154,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306301
    },
    {
        "content": "<p>right?</p>",
        "id": 197314158,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306302
    },
    {
        "content": "<p>The fibers of the Mobius bundle are all homeomorphic. But I think  Joe's right, there's some 'global' obstruction.</p>",
        "id": 197314162,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589306305
    },
    {
        "content": "<p>People would usually call this a \"lifting\" problem not an extension problem.</p>",
        "id": 197314186,
        "sender_full_name": "John Baez",
        "timestamp": 1589306319
    },
    {
        "content": "<p>i <em>wanted</em> to say it was a lifting problem but i think the arrows go the wrong way around??</p>",
        "id": 197314210,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306337
    },
    {
        "content": "<p>they call it ... a \"descent\" problem</p>",
        "id": 197314234,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589306350
    },
    {
        "content": "<p>Classifying spaces are too fancy for what we're doing right now, btw.  This is just pictures of circles and stuff.</p>",
        "id": 197314251,
        "sender_full_name": "John Baez",
        "timestamp": 1589306358
    },
    {
        "content": "<p>classifying spaces are <em>great</em> for pictures of circles &gt;:(</p>",
        "id": 197314287,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306372
    },
    {
        "content": "<p>How I'm visualizing this is that the question is whether there's a space over the circle such that if you un-doublecover the circle, and you bring along the space for the ride, it turns into the Mobius strip.</p>",
        "id": 197314400,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306409
    },
    {
        "content": "<p>yeah</p>",
        "id": 197314424,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306420
    },
    {
        "content": "<p>Yeah,  my comment about a lifting problem was backwards.  I guess it is an extension problem, abstractly - I got confused because we're \"extending\" along a 2-1 map, not an inclusion!</p>",
        "id": 197314442,
        "sender_full_name": "John Baez",
        "timestamp": 1589306426
    },
    {
        "content": "<p>if you want to think of it in terms of classifying spaces, though, you have a map from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> to some fancy classifying object and you want to \"descend\" the domain of the map to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>",
        "id": 197314447,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589306429
    },
    {
        "content": "<p>I really <strong>don't</strong> want to talk about classifying spaces now.</p>",
        "id": 197314478,
        "sender_full_name": "John Baez",
        "timestamp": 1589306451
    },
    {
        "content": "<p>But yes, you are right.</p>",
        "id": 197314495,
        "sender_full_name": "John Baez",
        "timestamp": 1589306460
    },
    {
        "content": "<p>why, does it make the answer too easy &gt;:)</p>",
        "id": 197314497,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306461
    },
    {
        "content": "<p>It's too fucking abstract!</p>",
        "id": 197314520,
        "sender_full_name": "John Baez",
        "timestamp": 1589306469
    },
    {
        "content": "<p><span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 197314549,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306477
    },
    {
        "content": "<p>We're doing stuff that could be done in kindergarten!</p>",
        "id": 197314563,
        "sender_full_name": "John Baez",
        "timestamp": 1589306484
    },
    {
        "content": "<p>I think un-doublecovering any line bundle over the circle should double the number of twists.</p>",
        "id": 197314567,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306485
    },
    {
        "content": "<p>Joe is saying the right kind of stuff... let me actually focus on it.</p>",
        "id": 197314625,
        "sender_full_name": "John Baez",
        "timestamp": 1589306511
    },
    {
        "content": "<p>no yeah im trying to think about that sort of concurrently</p>",
        "id": 197314699,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306529
    },
    {
        "content": "<p>What the hell is \"un-doublecovering\"?   <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 197314704,
        "sender_full_name": "John Baez",
        "timestamp": 1589306533
    },
    {
        "content": "<p>pulling back over the double cover</p>",
        "id": 197314719,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306543
    },
    {
        "content": "<p>Okay.</p>",
        "id": 197314736,
        "sender_full_name": "John Baez",
        "timestamp": 1589306550
    },
    {
        "content": "<p>but it's what I made up to convey my visualization</p>",
        "id": 197314754,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306559
    },
    {
        "content": "<p>So you're saying: if I have a line bundle over the circle with n twists, and I pull it back along the 2-1 cover of the circle by itself, I get a line bundle with 2n twists.</p>",
        "id": 197314819,
        "sender_full_name": "John Baez",
        "timestamp": 1589306591
    },
    {
        "content": "<p>yes</p>",
        "id": 197314854,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306606
    },
    {
        "content": "<p>What do the rest of y'all think about that?</p>",
        "id": 197314882,
        "sender_full_name": "John Baez",
        "timestamp": 1589306621
    },
    {
        "content": "<p>hmmmmmmmmmm</p>",
        "id": 197314994,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306659
    },
    {
        "content": "<p>That's very true, Sarah.</p>",
        "id": 197315032,
        "sender_full_name": "John Baez",
        "timestamp": 1589306678
    },
    {
        "content": "<p>Joe: what's funny about the line bundle over the circle with 2 twists?   I asked this before...</p>",
        "id": 197315184,
        "sender_full_name": "John Baez",
        "timestamp": 1589306755
    },
    {
        "content": "<p>i suspect it may be topologically indistinguishable from the trivial line bundle</p>",
        "id": 197315253,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306775
    },
    {
        "content": "<p>You can make one out of paper...</p>",
        "id": 197315285,
        "sender_full_name": "John Baez",
        "timestamp": 1589306789
    },
    {
        "content": "<p>If your line is sufficiently short...</p>",
        "id": 197315303,
        "sender_full_name": "John Baez",
        "timestamp": 1589306798
    },
    {
        "content": "<p>sure, but that's an embedding into R³</p>",
        "id": 197315310,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306801
    },
    {
        "content": "<p>the horned sphere is a thing too</p>",
        "id": 197315354,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306825
    },
    {
        "content": "<p>They are not homeomorphic.</p>",
        "id": 197315428,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306858
    },
    {
        "content": "<p>as an abstract space, u get the möbius strip from a square by just gluing one side to the opposite side w/ a reversing map</p>",
        "id": 197315462,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306879
    },
    {
        "content": "<p>Oh, good, a fight!  Are they homeomorphic or not?</p>",
        "id": 197315509,
        "sender_full_name": "John Baez",
        "timestamp": 1589306883
    },
    {
        "content": "<p>the reversing map is the only thing that distinguishes from the untwisted bundle</p>",
        "id": 197315526,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306892
    },
    {
        "content": "<p>but a double-twist strip doesnt have a reversing map</p>",
        "id": 197315544,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306901
    },
    {
        "content": "<p>Notice there are two questions: are the total spaces homeomorphic, and are they isomorphic <em>as bundles</em>.</p>",
        "id": 197315558,
        "sender_full_name": "John Baez",
        "timestamp": 1589306908
    },
    {
        "content": "<p>wait</p>",
        "id": 197315573,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306916
    },
    {
        "content": "<p>god dammit</p>",
        "id": 197315583,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306920
    },
    {
        "content": "<p>I don't know what a reversing map is.</p>",
        "id": 197315635,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589306954
    },
    {
        "content": "<p>well, whats yr argument joe? im kinda charging in w/o full thought <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 197315644,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306961
    },
    {
        "content": "<p>reversing map—sorry, i mean you quotient one copy of [0, 1] to another by 1 - x</p>",
        "id": 197315682,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589306981
    },
    {
        "content": "<p>where these copies of [0, 1] are the edges</p>",
        "id": 197315776,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307010
    },
    {
        "content": "<p>So, we've got two questions on the burner now:</p>\n<p>1) Is Joe's idea true: if we have a line bundle over the circle with n twists, and we pull it back along the 2-1 cover of the circle by itself, we get a line bundle with 2n twists.</p>\n<p>2) Is the bundle with 2 twists isomorphic to the bundle with 0 twists?</p>",
        "id": 197316025,
        "sender_full_name": "John Baez",
        "timestamp": 1589307128
    },
    {
        "content": "<p>I take it back, I think the double twist is homeomorphic to the cylinder.</p>",
        "id": 197316109,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589307170
    },
    {
        "content": "<p>So have you changed your mind too, Sarah, so you can keep arguing with Joe but on opposite sides?</p>",
        "id": 197316180,
        "sender_full_name": "John Baez",
        "timestamp": 1589307209
    },
    {
        "content": "<p>It's always fun when that happens.</p>",
        "id": 197316192,
        "sender_full_name": "John Baez",
        "timestamp": 1589307219
    },
    {
        "content": "<p>I was thinking too much about the embedding before.</p>",
        "id": 197316286,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589307252
    },
    {
        "content": "<p>on a möbius strip there is only one side</p>",
        "id": 197316290,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307255
    },
    {
        "content": "<p>I think I can imagine a homeomorphism between the double twist bundle and the no-twist one.</p>",
        "id": 197316336,
        "sender_full_name": "John Baez",
        "timestamp": 1589307280
    },
    {
        "content": "<p>It's easiest to describe this way.  I can make <em>both</em> these bundles out of a rectangle of paper.</p>",
        "id": 197316378,
        "sender_full_name": "John Baez",
        "timestamp": 1589307303
    },
    {
        "content": "<p>The obvious \"identity map\" between rectangles of paper gives a homeomorphism between these bundles.</p>",
        "id": 197316433,
        "sender_full_name": "John Baez",
        "timestamp": 1589307340
    },
    {
        "content": "<p>(...how are you defining the double twist bundle?)</p>",
        "id": 197316510,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307365
    },
    {
        "content": "<p>I'm taking a long thin rectangle of paper, twisting it twice, and attaching the two ends in the sorta obvious way.</p>",
        "id": 197316555,
        "sender_full_name": "John Baez",
        "timestamp": 1589307395
    },
    {
        "content": "<p>yes, but critically, you can evaluate the map on two chunks, away from the gluing area, and around the gluing area.</p>",
        "id": 197316585,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589307416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> a dangerous thing to rely on when making the leap to formal claims <span aria-label=\"flushed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"flushed\">:flushed:</span></p>",
        "id": 197316591,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307421
    },
    {
        "content": "<p>In topology if you can't prove things with twisted pieces of paper and pictures you're on really shaky ground.</p>",
        "id": 197316658,
        "sender_full_name": "John Baez",
        "timestamp": 1589307452
    },
    {
        "content": "<p>this is also true <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 197316678,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307465
    },
    {
        "content": "<p>i await your picture proof that locally compact spaces are exponentiable :)</p>",
        "id": 197316767,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307486
    },
    {
        "content": "<p>Once people start scribbling weird letters they can get in all sorts of trouble.   <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 197316779,
        "sender_full_name": "John Baez",
        "timestamp": 1589307490
    },
    {
        "content": "<p>Anyway, I'm claiming the total space of the the double twist bundle is \"obviously\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>1</mn></msup><mo>×</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">S^1 \\times [0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span>, where now I'm making the line compact just for fun...</p>",
        "id": 197316871,
        "sender_full_name": "John Baez",
        "timestamp": 1589307548
    },
    {
        "content": "<p>end compactification <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 197316899,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307570
    },
    {
        "content": "<p>I make it by taking a long thin rectangle of paper, twisting it twice, but then identifying points using the <em>identity</em> map on [0,1].</p>",
        "id": 197316925,
        "sender_full_name": "John Baez",
        "timestamp": 1589307582
    },
    {
        "content": "<p>use the open interval instead.</p>",
        "id": 197316956,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589307598
    },
    {
        "content": "<p>True, cheap paper leaves out the edges.</p>",
        "id": 197317040,
        "sender_full_name": "John Baez",
        "timestamp": 1589307619
    },
    {
        "content": "<p>having a compact total space seems nice :&gt;</p>",
        "id": 197317044,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307620
    },
    {
        "content": "<p>Anyway, so please classify \"line bundles with n twists over the circle\", for all n.</p>",
        "id": 197317134,
        "sender_full_name": "John Baez",
        "timestamp": 1589307667
    },
    {
        "content": "<p>cylinder, Mobius.</p>",
        "id": 197317151,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589307679
    },
    {
        "content": "<p>Right: Z gets mapped to Z/2.</p>",
        "id": 197317172,
        "sender_full_name": "John Baez",
        "timestamp": 1589307691
    },
    {
        "content": "<p>Okay, so you've classified real line bundles over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">S^1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 197317287,
        "sender_full_name": "John Baez",
        "timestamp": 1589307735
    },
    {
        "content": "<p>You got Z/2.</p>",
        "id": 197317297,
        "sender_full_name": "John Baez",
        "timestamp": 1589307743
    },
    {
        "content": "<p>For fans of classifying spaces, this is because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>π</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\pi_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of the relevant classifying space is Z/2.</p>",
        "id": 197317342,
        "sender_full_name": "John Baez",
        "timestamp": 1589307761
    },
    {
        "content": "<p>Or better: we've <em>proved</em> that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>π</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\pi_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of the relevant classifying space is Z/2.</p>",
        "id": 197317409,
        "sender_full_name": "John Baez",
        "timestamp": 1589307798
    },
    {
        "content": "<p>is it rp2</p>",
        "id": 197317410,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307798
    },
    {
        "content": "<p>It's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"double-struck\">R</mi><mi mathvariant=\"double-struck\">P</mi></mrow><mi mathvariant=\"normal\">∞</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{RP}^\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.743182em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"mord mathbb\">P</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.743182em;\"><span style=\"top:-3.1417900000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span></span></span></span></span></span></span>, actually.</p>",
        "id": 197317463,
        "sender_full_name": "John Baez",
        "timestamp": 1589307829
    },
    {
        "content": "<p>O:</p>",
        "id": 197317484,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307838
    },
    {
        "content": "<p>It's the Eilenberg-Mac Lane space of Z/2.</p>",
        "id": 197317571,
        "sender_full_name": "John Baez",
        "timestamp": 1589307859
    },
    {
        "content": "<p>Classifying spaces tend to be ginormous.</p>",
        "id": 197317625,
        "sender_full_name": "John Baez",
        "timestamp": 1589307883
    },
    {
        "content": "<p>right that sounds familiar</p>",
        "id": 197317640,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589307891
    },
    {
        "content": "<p>Okay.   Now that you understand all line bundles over the circle, describe the process of lifting a line bundle on the circle to one on its double cover!</p>",
        "id": 197317756,
        "sender_full_name": "John Baez",
        "timestamp": 1589307944
    },
    {
        "content": "<p>This is how to completely crush this example of \"descent\": completely understanding lifting.</p>",
        "id": 197317869,
        "sender_full_name": "John Baez",
        "timestamp": 1589307988
    },
    {
        "content": "<p>Lifting anything gives the cylinder.</p>",
        "id": 197318025,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589308065
    },
    {
        "content": "<p>thats what id guess as long as you really do double the number of twists</p>",
        "id": 197318127,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308097
    },
    {
        "content": "<p>Can you say it nice in terms of Z/2?</p>",
        "id": 197318137,
        "sender_full_name": "John Baez",
        "timestamp": 1589308100
    },
    {
        "content": "<p><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 197318151,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308108
    },
    {
        "content": "<p>Z/2 is annihilated by uh</p>",
        "id": 197318156,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308114
    },
    {
        "content": "<p>2Z</p>",
        "id": 197318165,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308119
    },
    {
        "content": "<p>multiply by 0</p>",
        "id": 197318168,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589308120
    },
    {
        "content": "<p>There's actually a <em>group</em> of line bundles on the circle, and it's Z/2.</p>",
        "id": 197318180,
        "sender_full_name": "John Baez",
        "timestamp": 1589308127
    },
    {
        "content": "<p>The reason is that you can \"tensor\" line bundles - the tensor product of two 1d vector spaces is a 1d vector space.</p>",
        "id": 197318228,
        "sender_full_name": "John Baez",
        "timestamp": 1589308152
    },
    {
        "content": "<p>So there's always a group of line bundles over any space.</p>",
        "id": 197318249,
        "sender_full_name": "John Baez",
        "timestamp": 1589308163
    },
    {
        "content": "<p>And we've seen this group is Z/2 for the circle.</p>",
        "id": 197318271,
        "sender_full_name": "John Baez",
        "timestamp": 1589308177
    },
    {
        "content": "<p>Yes, I'm imagining doubling the twists, but now that we established you can cancel two twists, I'm simplifying.</p>",
        "id": 197318298,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589308189
    },
    {
        "content": "<p>I don't like how you're simplifying.</p>",
        "id": 197318403,
        "sender_full_name": "John Baez",
        "timestamp": 1589308219
    },
    {
        "content": "<p>It's okay, but I have something else in mind.</p>",
        "id": 197318461,
        "sender_full_name": "John Baez",
        "timestamp": 1589308242
    },
    {
        "content": "<p>We have a map Z/2 -&gt; Z/2.</p>",
        "id": 197318475,
        "sender_full_name": "John Baez",
        "timestamp": 1589308253
    },
    {
        "content": "<p>The zero map.</p>",
        "id": 197318504,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589308267
    },
    {
        "content": "<p>You can call it \"multiplying by 0\", but I'd rather not.</p>",
        "id": 197318510,
        "sender_full_name": "John Baez",
        "timestamp": 1589308269
    },
    {
        "content": "<p>Do you want us to say the word 'homomorphism'?</p>",
        "id": 197318524,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589308277
    },
    {
        "content": "<p>Well, we've been lifting along a <em>double</em> cover.</p>",
        "id": 197318552,
        "sender_full_name": "John Baez",
        "timestamp": 1589308290
    },
    {
        "content": "<p>'Doubling'?</p>",
        "id": 197318582,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1589308304
    },
    {
        "content": "<p>What if we lifted along the <em>triple</em> cover of the circle by itself?</p>",
        "id": 197318587,
        "sender_full_name": "John Baez",
        "timestamp": 1589308306
    },
    {
        "content": "<p>We'd get some map Z/2 -&gt; Z/2 again...</p>",
        "id": 197318613,
        "sender_full_name": "John Baez",
        "timestamp": 1589308319
    },
    {
        "content": "<p>coprime</p>",
        "id": 197318668,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308334
    },
    {
        "content": "<p>doesnt annihilate</p>",
        "id": 197318675,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308338
    },
    {
        "content": "<p>i think</p>",
        "id": 197318677,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308339
    },
    {
        "content": "<p>All these words are good, but I like what Joe said.</p>",
        "id": 197318702,
        "sender_full_name": "John Baez",
        "timestamp": 1589308350
    },
    {
        "content": "<p>~_~</p>",
        "id": 197318711,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308358
    },
    {
        "content": "<p>Lifting along an n-fold cover gives a map Z/2 -&gt; Z/2, and it's just multiplication by n.</p>",
        "id": 197318757,
        "sender_full_name": "John Baez",
        "timestamp": 1589308381
    },
    {
        "content": "<p>So I wanted Joe to say \"multiplying by 2\", but he said \"multiplying by 0\".</p>",
        "id": 197318796,
        "sender_full_name": "John Baez",
        "timestamp": 1589308404
    },
    {
        "content": "<p>You really <em>do</em> get a double twist bundle when you lift the single twist bundle along the double cover, but it just happens that 2 = 0.</p>",
        "id": 197318844,
        "sender_full_name": "John Baez",
        "timestamp": 1589308428
    },
    {
        "content": "<p>I'm getting a bit worn out, but I'll wrap up.</p>",
        "id": 197319006,
        "sender_full_name": "John Baez",
        "timestamp": 1589308490
    },
    {
        "content": "<p>We've seen that descent quickly gets us into some algebra... some algebraic topology for example.</p>",
        "id": 197319066,
        "sender_full_name": "John Baez",
        "timestamp": 1589308524
    },
    {
        "content": "<p>Bundles over the <em>circle</em> are particularly simple because they're completely described (up to iso) by a \"twist\", which is an element of some group.</p>",
        "id": 197319155,
        "sender_full_name": "John Baez",
        "timestamp": 1589308563
    },
    {
        "content": "<p>So descent in this case boils down to stuff about group homomorphisms - what's their image, and how many group elements map to one (so what's their kernel).</p>",
        "id": 197319282,
        "sender_full_name": "John Baez",
        "timestamp": 1589308618
    },
    {
        "content": "<p>We saw that 2: Z/2 -&gt; Z/2 was two-to-one and half-onto, so only half the line bundles \"descend\" along the double cover of the circle by itself, and the one that does *descends in two different ways\".</p>",
        "id": 197319455,
        "sender_full_name": "John Baez",
        "timestamp": 1589308697
    },
    {
        "content": "<p>As soon as we leave the circle and work with more fancy spaces, we'll need to think about \"transition functions\" also known as \"2-cocycles\".</p>",
        "id": 197319573,
        "sender_full_name": "John Baez",
        "timestamp": 1589308768
    },
    {
        "content": "<p>So this gets us pulled into sheaves and sheaf cohomology pretty quick...</p>",
        "id": 197319598,
        "sender_full_name": "John Baez",
        "timestamp": 1589308788
    },
    {
        "content": "<p>But where I really want to go is algebraic geometry, where we think of fields as fields of functions on certain spaces called \"schemes\"; then the fundamental group we were just playing around with - the fundamental group of the circle was hiding in what we did - will be called a \"Galois group\".</p>",
        "id": 197319806,
        "sender_full_name": "John Baez",
        "timestamp": 1589308882
    },
    {
        "content": "<p>isnt the only kind of space whose ring of functions is a field, a point</p>",
        "id": 197320011,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589308960
    },
    {
        "content": "<p>The question \"does an algebraic gadget defined on a big field K come from extending an algebraic gadget defined over some subfield k\" turns out to be another case of descent.</p>",
        "id": 197320012,
        "sender_full_name": "John Baez",
        "timestamp": 1589308961
    },
    {
        "content": "<p>Yeah, it's funny: fields are like points, but they still have holes in them, leaving a fundamental group.</p>",
        "id": 197320057,
        "sender_full_name": "John Baez",
        "timestamp": 1589308991
    },
    {
        "content": "<p>This is one of the enduring mysteries of algebraic geometry.</p>",
        "id": 197320082,
        "sender_full_name": "John Baez",
        "timestamp": 1589309004
    },
    {
        "content": "<p>hmmmmmmmmmm</p>",
        "id": 197320115,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589309025
    },
    {
        "content": "<p>James Dolan spoke of \"voodoo mathematics\" - the study of spaces that have been poked so full of holes that every point is a hole.</p>",
        "id": 197320186,
        "sender_full_name": "John Baez",
        "timestamp": 1589309044
    },
    {
        "content": "<p>The \"etale fundamental group\" of a field is its absolute Galois group - this is what Artin and Mazur showed, I guess.</p>",
        "id": 197320321,
        "sender_full_name": "John Baez",
        "timestamp": 1589309109
    },
    {
        "content": "<p>/me opens the nlab page on galois theory again</p>",
        "id": 197320453,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589309165
    },
    {
        "content": "<p>Anyway, this is just a taste of stuff... I basically prefer to move sort of slowly, so we all have time to really get all the concepts clearly, and so I have time to study enough to continue seeming smart.</p>",
        "id": 197320473,
        "sender_full_name": "John Baez",
        "timestamp": 1589309173
    },
    {
        "content": "<p>OH NO THE NLAB IS DOWN</p>",
        "id": 197320515,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589309202
    },
    {
        "content": "<p>me but with nlab <a href=\"https://xkcd.com/903/\">https://xkcd.com/903/</a></p>",
        "id": 197320536,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589309217
    },
    {
        "content": "<p>Ugh.   It's the 0Lab now, eh?</p>",
        "id": 197320934,
        "sender_full_name": "John Baez",
        "timestamp": 1589309415
    },
    {
        "content": "<p>Btw, <span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> - one fun part is how all the stuff I just toured at the very end is connected to Brauer groups.  Brauer groups are really connected to descent and \"bundles\".</p>",
        "id": 197321022,
        "sender_full_name": "John Baez",
        "timestamp": 1589309463
    },
    {
        "content": "<p>Great! How?</p>",
        "id": 197321676,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1589309760
    },
    {
        "content": "<p>That's for later...</p>",
        "id": 197322894,
        "sender_full_name": "John Baez",
        "timestamp": 1589310249
    },
    {
        "content": "<p>Okay, last time we discussed a nice example of descent.  We looked at pulling back real line bundles from the circle to its double cover (which happens to also be a circle).  We studied the \"descent\" question: <em>when is a line bundle on the double cover the pullback of a line bundle on the circle?</em></p>\n<p>We kinda roughly saw that there was an abelian group of line bundles on any space, which for the space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">S^1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span> is just <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}/2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span>.     We saw that pulling back line bundles gives a homomorphism between such groups.</p>",
        "id": 197488411,
        "sender_full_name": "John Baez",
        "timestamp": 1589411192
    },
    {
        "content": "<p>Thus, the descent problem in this case is just about figuring out the image and kernel of a group homomorphism!  The image tells us <em>which</em> line bundles are pullbacks.   The kernel tells us <em>how many different</em> line bundles pull back to give a given bundle.</p>",
        "id": 197488469,
        "sender_full_name": "John Baez",
        "timestamp": 1589411256
    },
    {
        "content": "<p>In our example the homomorphism was</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">p</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">n</mi><mtext>  </mtext><mi mathvariant=\"normal\">b</mi><mi mathvariant=\"normal\">y</mi><mtext>  </mtext><mn>2</mn></mrow><mo>:</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\mathrm{multiplication \\; by \\;2}: \\mathbb{Z}/2 \\to \\mathbb{Z}/2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">u</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">p</span><span class=\"mord mathrm\">l</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">c</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">b</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">2</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span></p>",
        "id": 197488541,
        "sender_full_name": "John Baez",
        "timestamp": 1589411294
    },
    {
        "content": "<p>which Joe called</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>:</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\"> 0 : \\mathbb{Z}/2 \\to \\mathbb{Z}/2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span></p>",
        "id": 197488575,
        "sender_full_name": "John Baez",
        "timestamp": 1589411327
    },
    {
        "content": "<p>I called it multiplication by 2 because pulling back a line bundle to the double cover of the circle doubles the number of twists it has: you can see this very clearly.   </p>\n<p>But a real line bundle over the circle has either 0 or 1 twists, and we're working mod 2, so doubling the number of twists is the same as  getting rid of all the twists!</p>",
        "id": 197488682,
        "sender_full_name": "John Baez",
        "timestamp": 1589411403
    },
    {
        "content": "<p>The image of our homomorphism is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span> so the only line bundle that \"descends\" - the only one that's a pullback - is the untwisted bundle.</p>",
        "id": 197488714,
        "sender_full_name": "John Baez",
        "timestamp": 1589411433
    },
    {
        "content": "<p>The kernel of our homomorphism is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}/2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span> so if a line bundle descends, it does so in two ways.</p>",
        "id": 197488776,
        "sender_full_name": "John Baez",
        "timestamp": 1589411482
    },
    {
        "content": "<p>Now, how should we go further?  We could look at real line bundles on all possible spaces, not just the circle.  This is still pretty manageable.  It would get us into a little bit of sheaf cohomology.</p>",
        "id": 197488927,
        "sender_full_name": "John Baez",
        "timestamp": 1589411567
    },
    {
        "content": "<p>We could go further and look at all vector bundles over all spaces.</p>",
        "id": 197489142,
        "sender_full_name": "John Baez",
        "timestamp": 1589411715
    },
    {
        "content": "<p>We could go further and look at all principal bundles over all spaces.</p>",
        "id": 197489160,
        "sender_full_name": "John Baez",
        "timestamp": 1589411732
    },
    {
        "content": "<p>We could go further and look at all sheaves over all spaces.</p>",
        "id": 197489189,
        "sender_full_name": "John Baez",
        "timestamp": 1589411753
    },
    {
        "content": "<p>We could go further and look at all sheaves over all sites.</p>",
        "id": 197489249,
        "sender_full_name": "John Baez",
        "timestamp": 1589411769
    },
    {
        "content": "<p>We could then specialize and look at sheaves over schemes with their etale topology.</p>",
        "id": 197489321,
        "sender_full_name": "John Baez",
        "timestamp": 1589411829
    },
    {
        "content": "<p>We could then specialize even more and look at schemes that come from fields.  Then we'd be doing \"Galois descent\".</p>",
        "id": 197489346,
        "sender_full_name": "John Baez",
        "timestamp": 1589411855
    },
    {
        "content": "<p>Or, we could head straight for Galois descent - this is a subject people study without necessarily knowing all the more general cases I've just listed!</p>",
        "id": 197489440,
        "sender_full_name": "John Baez",
        "timestamp": 1589411909
    },
    {
        "content": "<p>I guess someone should say what they want to do.</p>",
        "id": 197489714,
        "sender_full_name": "John Baez",
        "timestamp": 1589412123
    },
    {
        "content": "<p>i would say something except i have some loose ends ive been procrastinating on tying up that ive finally gotten around to trying to look at so i cant pay attention right now</p>",
        "id": 197493137,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589414731
    },
    {
        "content": "<p>Okay, no problem!   I've got some other customers...</p>",
        "id": 197493885,
        "sender_full_name": "John Baez",
        "timestamp": 1589415438
    },
    {
        "content": "<p>It might be a longer journey, but I would love to understand how the descent that's been discussed so far relates to the theory of descent in topos theory (perhaps this is the \"all sheaves over all sites\" option). There seems to be a comparable motivation of wanting to identify how data descends from the domain of a geometric morphism, but (in the Elephant, at least) there is an extra step: we construct a category of \"things which behave as if they are in the image\" and call a geometric morphism \"descent\" if the codomain is equivalent to that category.<br>\nHowever, the choice of data here is still quite mysterious to me, and is not arrived at very organically in that text.<br>\nIf that option is too much of a tangent for this topic, I'm happy to move it to <a class=\"stream\" data-stream-id=\"230087\" href=\"/#narrow/stream/230087-theory.3A-topos-theory\">#theory: topos theory</a>.</p>",
        "id": 197533220,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1589451234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers</span> <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Descent/near/197533220\">said</a>:</p>\n<blockquote>\n<p>It might be a longer journey, but I would love to understand how the descent that's been discussed so far relates to the theory of descent in topos theory (perhaps this is the \"all sheaves over all sites\" option). </p>\n</blockquote>\n<p>That's a fun journey.  We'd been studying descent for real line bundles: i.e. given a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">p: E \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, when is a line bundle over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> the pullback of one over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>?   In fact we just did it when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span></span></span></span> is the double covering of a circle by itself.</p>\n<p>But line bundles over space are a special case of vector bundles over spaces, so we can ask the same question for those.</p>\n<p>And vector bundles over spaces are a special case of sheaves on spaces, so we can ask the same question for those.</p>\n<p>And sheaves over spaces are a special case of sheaves on sites, so we can ask the same question for those.</p>\n<p>And sheaves on sites are a special case of objects in elementary topoi, so we can probably ask them question for those, though here my understanding gets <em>very</em> fuzzy.</p>\n<p>Category theorists might be tempted to quickly jump to the highest level of generality and then climb on down.  Normal people might prefer climbing up the ladder of generality one rung at a time.  But either way, each level  has its own special features that are worth understanding!</p>",
        "id": 197598740,
        "sender_full_name": "John Baez",
        "timestamp": 1589481249
    },
    {
        "content": "<p>category theorists VS normal people <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 197598919,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589481333
    },
    {
        "content": "<p>I think I'm more comfortable near the bottom of the ladder, since I've spend lots of time thinking about line bundles and vector bundles, and less about sheaves on spaces, and so on.</p>",
        "id": 197598928,
        "sender_full_name": "John Baez",
        "timestamp": 1589481338
    },
    {
        "content": "<p>Normal people: \"what is an example of this?\"  Category theorists: \"what is this an example of?\"   They are dual.</p>",
        "id": 197599018,
        "sender_full_name": "John Baez",
        "timestamp": 1589481367
    },
    {
        "content": "<p>Anyway, I'm happy to explain anything I actually understand.... and happy to try to understand anything anyone else explains, in the subject of \"descent\".</p>\n<p>Maybe one place to start is this very brief snippet on descent for vector bundles: </p>\n<ul>\n<li>Wikipedia, <a href=\"https://en.wikipedia.org/wiki/Descent_(mathematics)#Descent_of_vector_bundles\">Descent for vector bundles</a>.</li>\n</ul>\n<p>Here <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">p: Y \\to X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is an open cover of a topological space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> by a bunch of open sets <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>=</mo><msub><mo>∐</mo><mi>i</mi></msub><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">Y = \\coprod_i U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∐</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 197599660,
        "sender_full_name": "John Baez",
        "timestamp": 1589481650
    },
    {
        "content": "<p>Does everyone get the idea here?</p>",
        "id": 197599760,
        "sender_full_name": "John Baez",
        "timestamp": 1589481692
    },
    {
        "content": "<p>Ooh expressions in terms of pullbacks are starting to appear, and the description of \"being able to glue the bundles together into a bundle over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\" feels a lot like an extension of the sheaf condition</p>",
        "id": 197678212,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1589542516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers</span> <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Descent/near/197678212\">said</a>:</p>\n<blockquote>\n<p>Ooh expressions in terms of pullbacks are starting to appear, and the description of \"being able to glue the bundles together into a bundle over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\" feels a lot like an extension of the sheaf condition</p>\n</blockquote>\n<p>This is why the category of bundles over a space is a stack (or 2-sheaf). The descent condition is roughly the same as the sheaf condition, after replacing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">=</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span> by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;vertical-align:0em;\"></span><span class=\"mrel\">≅</span></span></span></span>.</p>",
        "id": 197679866,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1589543632
    },
    {
        "content": "<p>Funny story about this:<br>\nI was in Bonn for 1 year as a MSc student, and one of the algebraic geometry exam questions was something like:<br>\n\"Let F be a sheaf on an irreducible topological space X, such that F is locally the constant sheaf. Show that F is a constant sheaf itself.\"</p>\n<p>I already spent too much time on the other questions, and I was incredibly confused by this. If it is locally equal to the constant sheaf, then of course it is also globally equal? Of course, what was meant is \"F is locally isomorphic to the constant sheaf\" (because equality is an \"evil notion\").</p>\n<p>My problem was that the professor was working in the 2-sheaf of sheaves on X, while I was working in the sheaf of sheaves on X. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 197680698,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1589544227
    },
    {
        "content": "<p>i have made the exact observation before that uh</p>",
        "id": 197736383,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589568843
    },
    {
        "content": "<p>the reason why locally constant sheaves on a connected space can be nontrivial even tho locally constant <em>functions</em> on a connected space are always constant</p>",
        "id": 197736449,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589568872
    },
    {
        "content": "<p>is precisely b/c you generally assume contractibility of your notion of \"equality\" for the codomain of a \"function on a space\"</p>",
        "id": 197736560,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589568924
    },
    {
        "content": "<p>whereas stalks of sheaves can be isomorphic to one another <em>in different ways</em></p>",
        "id": 197736646,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589568959
    },
    {
        "content": "<p>so u get monodromy.</p>",
        "id": 197736748,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589568982
    },
    {
        "content": "<p>All this is nice.   Maybe I'll ask a lowbrow concrete question or two just to keep us from floating into the stratosphere and dying of oxygen deprivation.   </p>\n<p><strong>Puzzle.</strong>  Say we have an cover of a topological space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> by open sets <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and a trivial <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span>-bundle on each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.  What data do we need to choose to glue these together and get a vector bundle on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>?</p>\n<p><strong>Puzzle.</strong>  If I choose some data of this sort and so do you, when do they give isomorphic vector bundles on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>?</p>",
        "id": 197742611,
        "sender_full_name": "John Baez",
        "timestamp": 1589571146
    },
    {
        "content": "<p>So, the first question asks for the <strong>descent data</strong> in this situation.   The second asks when two choices of descent data are isomorphic.    When we answer these we'll be well on the road to having a groupoid of descent data - though knowing <em>when two things are isomorphic</em> is not as good as knowing <em>what's an isomorphism</em>.</p>",
        "id": 197742834,
        "sender_full_name": "John Baez",
        "timestamp": 1589571256
    },
    {
        "content": "<p>hmm <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 197743068,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571372
    },
    {
        "content": "<p>oooooooooh! i see how this relates to higher sheaf stuff now 🤯</p>",
        "id": 197743145,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571425
    },
    {
        "content": "<p>but uh thinking thru what the concrete situation actually looks like...</p>",
        "id": 197743196,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571449
    },
    {
        "content": "<p>we definitely <em>at least</em> need <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>:</mo><msub><mi>E</mi><mi>i</mi></msub><msub><mi mathvariant=\"normal\">∣</mi><msub><mi>U</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></msub><mo>≅</mo><msub><mi>E</mi><mi>j</mi></msub><msub><mi mathvariant=\"normal\">∣</mi><msub><mi>U</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij} : E_i|_{U_{ij}} \\cong E_j|_{U_{ij}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0973199999999999em;vertical-align:-0.34731999999999996em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833100000000004em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34731999999999996em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0973199999999999em;vertical-align:-0.34731999999999996em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833100000000004em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34731999999999996em;\"><span></span></span></span></span></span></span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub><msub><mi mathvariant=\"normal\">∣</mi><mi>V</mi></msub></mrow><annotation encoding=\"application/x-tex\">E_i|_V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> means the restriction of our trivial bundle over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> to the subset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>⊆</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">V \\subseteq U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">U_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i \\cap U_j</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>",
        "id": 197743439,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571592
    },
    {
        "content": "<p>Right!</p>",
        "id": 197743508,
        "sender_full_name": "John Baez",
        "timestamp": 1589571612
    },
    {
        "content": "<p>and i think we want a clique condition</p>",
        "id": 197743510,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571614
    },
    {
        "content": "<p>like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo separator=\"true\">;</mo><msub><mi>f</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij} ; f_{jk} = f_{ik}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>",
        "id": 197743532,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571631
    },
    {
        "content": "<p>no wait</p>",
        "id": 197743554,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571640
    },
    {
        "content": "<p>no wait do we</p>",
        "id": 197743563,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571648
    },
    {
        "content": "<p>yeah i think we do</p>",
        "id": 197743567,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571651
    },
    {
        "content": "<p>Yes, we do!</p>",
        "id": 197743580,
        "sender_full_name": "John Baez",
        "timestamp": 1589571658
    },
    {
        "content": "<p>i was thinking that would make the bundle trivial, but</p>",
        "id": 197743592,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571669
    },
    {
        "content": "<p>right, this only applies to like... shrinking down an intersection to include intersecting more pieces</p>",
        "id": 197743626,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571693
    },
    {
        "content": "<p>not zipping over to some distant place</p>",
        "id": 197743639,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571701
    },
    {
        "content": "<p>Can you tell me how to build the Mobius strip bundle this way?</p>",
        "id": 197743642,
        "sender_full_name": "John Baez",
        "timestamp": 1589571705
    },
    {
        "content": "<p>no im hungry and cant think at full capacity im gonna go get a snack</p>",
        "id": 197743665,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571717
    },
    {
        "content": "<p>We can cover the circle with just two contractible pieces of we want.</p>",
        "id": 197743697,
        "sender_full_name": "John Baez",
        "timestamp": 1589571723
    },
    {
        "content": "<p><span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 197743712,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589571729
    },
    {
        "content": "<p>Okay.   Either you or someone else should see how what you just said works in our good old example.</p>",
        "id": 197743746,
        "sender_full_name": "John Baez",
        "timestamp": 1589571755
    },
    {
        "content": "<p>(People who know all this stuff too well should stay quiet.)</p>",
        "id": 197743779,
        "sender_full_name": "John Baez",
        "timestamp": 1589571777
    },
    {
        "content": "<p>We can wait for Sarah to eat.</p>",
        "id": 197743800,
        "sender_full_name": "John Baez",
        "timestamp": 1589571793
    },
    {
        "content": "<p>For the mobius strip, don't you just repeat what you would do with the paper strip ?  Like if we cover the circle by two contractible covers, we take 2 strips of papers (our trivials bundles) and glue them \"normally\" on one side and with a twist on  the other side</p>",
        "id": 197744326,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1589572070
    },
    {
        "content": "<p>Right!</p>",
        "id": 197744534,
        "sender_full_name": "John Baez",
        "timestamp": 1589572187
    },
    {
        "content": "<p>We discussed it earlier in this thread; now we're trying it again with a bit more math.</p>",
        "id": 197744601,
        "sender_full_name": "John Baez",
        "timestamp": 1589572218
    },
    {
        "content": "<p>I think I want to get Sarah to work through the details.</p>",
        "id": 197744654,
        "sender_full_name": "John Baez",
        "timestamp": 1589572267
    },
    {
        "content": "<p>But it'd be great to have you join this \"class\".</p>",
        "id": 197744818,
        "sender_full_name": "John Baez",
        "timestamp": 1589572393
    },
    {
        "content": "<p>Sorry to barge in suddenly, I have been silently following this thread with a lot of attention, it really helps making these things clearer :)</p>",
        "id": 197744944,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1589572455
    },
    {
        "content": "<p>Great!   I'm glad you barged in!  Since I have no idea how many people are paying attention, I tend to feel almost nobody is, which makes me unhappy.</p>",
        "id": 197745030,
        "sender_full_name": "John Baez",
        "timestamp": 1589572509
    },
    {
        "content": "<p>With so many users in the server, there are certainly many more silent watchers for any given topic than you would imagine.</p>",
        "id": 197745385,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1589572742
    },
    {
        "content": "<p>hello i got distracted after coming back</p>",
        "id": 197749861,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575284
    },
    {
        "content": "<p>mobius...</p>",
        "id": 197749872,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575291
    },
    {
        "content": "<p>Did you ever watch Mobius strip?</p>",
        "id": 197749980,
        "sender_full_name": "John Baez",
        "timestamp": 1589575357
    },
    {
        "content": "<p>so your base space is S¹. say it's covered by U₁ and U₂, defined by intersecting with half planes</p>",
        "id": 197749982,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575361
    },
    {
        "content": "<p>is mobius strip the name of a show or something</p>",
        "id": 197749995,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575377
    },
    {
        "content": "<p>No, he was actually a strip-tease artist in his spare time.</p>",
        "id": 197750022,
        "sender_full_name": "John Baez",
        "timestamp": 1589575396
    },
    {
        "content": "<p><span aria-label=\"weary\" class=\"emoji emoji-1f629\" role=\"img\" title=\"weary\">:weary:</span></p>",
        "id": 197750033,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575403
    },
    {
        "content": "<p>Anyway, yes, you're doing great!   Two open subsets!</p>",
        "id": 197750053,
        "sender_full_name": "John Baez",
        "timestamp": 1589575423
    },
    {
        "content": "<p>i feel like maybe thats not an appropriate joke for this community</p>",
        "id": 197750183,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575500
    },
    {
        "content": "<p>&lt;.&lt;</p>",
        "id": 197750188,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575503
    },
    {
        "content": "<p>but, uh</p>",
        "id": 197750195,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575506
    },
    {
        "content": "<p>Okay, I'll try to be more serious in the future.</p>",
        "id": 197750293,
        "sender_full_name": "John Baez",
        "timestamp": 1589575562
    },
    {
        "content": "<p>(idk about failure to be <em>serious</em> being the problem, more the risque-ness)</p>",
        "id": 197750337,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575580
    },
    {
        "content": "<p>we need f₁₂ and f₂₁, and the clique condition (i shouldve included a clause about f_{ii} = id) says they're inverse, so that's just f₁₂</p>",
        "id": 197750412,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575628
    },
    {
        "content": "<p>so a vector bundle automorphism of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">(U_1 \\cap U_2) \\times \\mathbb R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span></p>",
        "id": 197750466,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575669
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>U</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">U_1 \\cap U_2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> has two connected components, so we can just define this piecewise—on one, it's the identity; on the other, it's negation on the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> coordinate</p>",
        "id": 197750628,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575788
    },
    {
        "content": "<p>hmm, giving the data like this kinda reminds me of the tiny tiny bit ive read about čech methods...</p>",
        "id": 197750826,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575915
    },
    {
        "content": "<p>Great!   By the way, this \"clique condition\" is exactly right now, and it's exactly what people call the <strong>2-cocycle condition</strong>.</p>",
        "id": 197750903,
        "sender_full_name": "John Baez",
        "timestamp": 1589575946
    },
    {
        "content": "<p>i always forget the 0-ary clause in definitions like that &gt;_&lt;</p>",
        "id": 197750926,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575966
    },
    {
        "content": "<p>i need to remember to use unbiased versiosn more often</p>",
        "id": 197750937,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589575976
    },
    {
        "content": "<p>Right!  But you seem to know the 0-ary thing has to be in there.</p>",
        "id": 197750939,
        "sender_full_name": "John Baez",
        "timestamp": 1589575978
    },
    {
        "content": "<p>i mean</p>",
        "id": 197750970,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576004
    },
    {
        "content": "<p>it always is</p>",
        "id": 197750976,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576007
    },
    {
        "content": "<p>in things like this</p>",
        "id": 197750988,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576015
    },
    {
        "content": "<p>Good!  So, what you've just given is called a 2-cocycle in Cech cohomology.</p>",
        "id": 197751017,
        "sender_full_name": "John Baez",
        "timestamp": 1589576039
    },
    {
        "content": "<p>HA i was right about the čech thing</p>",
        "id": 197751084,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576058
    },
    {
        "content": "<p>🇨🇿</p>",
        "id": 197751102,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576075
    },
    {
        "content": "<p>Yes, you can čech that off your bucket list now.</p>",
        "id": 197751122,
        "sender_full_name": "John Baez",
        "timestamp": 1589576090
    },
    {
        "content": "<p>Was that a suitable joke for this forum?</p>",
        "id": 197751133,
        "sender_full_name": "John Baez",
        "timestamp": 1589576100
    },
    {
        "content": "<p>🪣</p>",
        "id": 197751188,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576140
    },
    {
        "content": "<p>That symbol doesn't display for me, which may be all for the best.</p>",
        "id": 197751229,
        "sender_full_name": "John Baez",
        "timestamp": 1589576162
    },
    {
        "content": "<p>Let's mine this example a bit more.  You said <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> was 1 or -1.   What's the deal with these numbers?</p>",
        "id": 197751313,
        "sender_full_name": "John Baez",
        "timestamp": 1589576206
    },
    {
        "content": "<p>i said no such thing</p>",
        "id": 197751340,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576227
    },
    {
        "content": "<p>You said \"on one, it's the identity; on the other, it's negation on the R coordinate.\"</p>",
        "id": 197751391,
        "sender_full_name": "John Baez",
        "timestamp": 1589576257
    },
    {
        "content": "<p>That's a long-winded way of saying 1 or -1.</p>",
        "id": 197751416,
        "sender_full_name": "John Baez",
        "timestamp": 1589576268
    },
    {
        "content": "<p>that was all a single <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> :)</p>",
        "id": 197751420,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576271
    },
    {
        "content": "<p>but i'm being obnoxious, i know what you're getting at</p>",
        "id": 197751494,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576295
    },
    {
        "content": "<p>we can refine the cover until the intersections are connected, right?</p>",
        "id": 197751512,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576311
    },
    {
        "content": "<p>Okay, fine.  But my question was: what <em>in general</em> could your <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> take values in?</p>",
        "id": 197751514,
        "sender_full_name": "John Baez",
        "timestamp": 1589576313
    },
    {
        "content": "<p>Yes, on a tolerably nice space you can always use a \"good cover\", where all the the opens and all their intersections are contractible (or empty).</p>",
        "id": 197751570,
        "sender_full_name": "John Baez",
        "timestamp": 1589576361
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Good_cover_(algebraic_topology)\">https://en.wikipedia.org/wiki/Good_cover_(algebraic_topology)</a></p>",
        "id": 197751608,
        "sender_full_name": "John Baez",
        "timestamp": 1589576390
    },
    {
        "content": "<p>well, we're giving automorphisms of trivial line bundles, so that's a continuous function to GL(1) right</p>",
        "id": 197751668,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576406
    },
    {
        "content": "<p>Great!</p>",
        "id": 197751698,
        "sender_full_name": "John Baez",
        "timestamp": 1589576428
    },
    {
        "content": "<p>So yes, you gave me a \"Cech 2-cocycle valued in the sheaf of continuous GL(1)-valued functions\"... I think that's what the experts call it.</p>",
        "id": 197751768,
        "sender_full_name": "John Baez",
        "timestamp": 1589576474
    },
    {
        "content": "<p>hmm..... something something do we only need a homotopy class to determine the bundle up to isomorphism <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> isn't that a condition that appears in the theory of classifying spaces</p>",
        "id": 197751770,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576475
    },
    {
        "content": "<p>Right, and that sort of thing shows up in this Cech story too.</p>",
        "id": 197751883,
        "sender_full_name": "John Baez",
        "timestamp": 1589576528
    },
    {
        "content": "<p>Now, you'll notice that while your cocycle took values in GL(1), it <em>actually</em> took values in something smaller!</p>",
        "id": 197751919,
        "sender_full_name": "John Baez",
        "timestamp": 1589576557
    },
    {
        "content": "<p>What's that?</p>",
        "id": 197751937,
        "sender_full_name": "John Baez",
        "timestamp": 1589576569
    },
    {
        "content": "<p>S⁰</p>",
        "id": 197752013,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576620
    },
    {
        "content": "<p>cuz we can homotope anything in GL(1) to something in S⁰</p>",
        "id": 197752141,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576682
    },
    {
        "content": "<p>what is GL(2) shaped like</p>",
        "id": 197752435,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589576879
    },
    {
        "content": "<p>Great!   In this game <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">S^0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span> is usually called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 197752596,
        "sender_full_name": "John Baez",
        "timestamp": 1589576959
    },
    {
        "content": "<p>dammit</p>",
        "id": 197752728,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577023
    },
    {
        "content": "<p>and here i was feeling good about noticing it was S⁰ and not just {-1, +1} :D</p>",
        "id": 197752748,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577036
    },
    {
        "content": "<p>It's okay; I just want to be able to generalize to higher dimensions!</p>",
        "id": 197752797,
        "sender_full_name": "John Baez",
        "timestamp": 1589577053
    },
    {
        "content": "<p>mostly being tongue in cheek :)</p>",
        "id": 197752858,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577067
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span> is the group of rotations/reflections of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 197752894,
        "sender_full_name": "John Baez",
        "timestamp": 1589577075
    },
    {
        "content": "<p>One great thing is that it's a maximal compact subgroup of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">GL(n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 197752978,
        "sender_full_name": "John Baez",
        "timestamp": 1589577095
    },
    {
        "content": "<p>oh cool</p>",
        "id": 197752996,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577105
    },
    {
        "content": "<p>An amazing fact about Lie groups is that they're all homotopy equivalent to any maximal compact subgroup!</p>",
        "id": 197753063,
        "sender_full_name": "John Baez",
        "timestamp": 1589577133
    },
    {
        "content": "<p>:o</p>",
        "id": 197753071,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577139
    },
    {
        "content": "<p>i think i remember SO(3) being the same as RP³... is there something similar for O(n)</p>",
        "id": 197753087,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577153
    },
    {
        "content": "<p>Even better, any Lie group is, as a manifold, a <em>product</em> of \"the\" (any) maximal compact subgroup and a vector space.</p>",
        "id": 197753110,
        "sender_full_name": "John Baez",
        "timestamp": 1589577178
    },
    {
        "content": "<p>or at least SO(n)</p>",
        "id": 197753112,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577179
    },
    {
        "content": "<p>wow i should learn some lie theory</p>",
        "id": 197753141,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577201
    },
    {
        "content": "<p>that shit sounds crazy</p>",
        "id": 197753147,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577206
    },
    {
        "content": "<p>Yes, SO(3) is diffeomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><msup><mi>P</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">RP^3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 197753165,
        "sender_full_name": "John Baez",
        "timestamp": 1589577212
    },
    {
        "content": "<p>There's a nice way to see it, by saying any rotation is a clockwise rotation around some axis... so rotations are described by points in a ball in 3d...</p>",
        "id": 197753274,
        "sender_full_name": "John Baez",
        "timestamp": 1589577255
    },
    {
        "content": "<p>but a rotation by pi around one axis is the same as a rotation by pi around the axis pointing the opposite direction!</p>",
        "id": 197753329,
        "sender_full_name": "John Baez",
        "timestamp": 1589577294
    },
    {
        "content": "<p>So we take the ball and identify opposite points on its boundary!</p>",
        "id": 197753355,
        "sender_full_name": "John Baez",
        "timestamp": 1589577311
    },
    {
        "content": "<p>yeah thats how i remember it :)</p>",
        "id": 197753358,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577312
    },
    {
        "content": "<p>Yes, so that gives <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>O</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>≅</mo><mi>R</mi><msup><mi>P</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">SO(3) \\cong RP^3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 197753381,
        "sender_full_name": "John Baez",
        "timestamp": 1589577329
    },
    {
        "content": "<p>So that means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>≅</mo><mi>R</mi><msup><mi>P</mi><mn>3</mn></msup><mo>×</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">GL(3) \\cong RP^3 \\times V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> for some vector space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, where the isomorphism is only of manifolds, not of groups.</p>",
        "id": 197753458,
        "sender_full_name": "John Baez",
        "timestamp": 1589577367
    },
    {
        "content": "<p>And you can figure out how big <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> needs to be just be figuring out the dimension of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">GL(3)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 197753490,
        "sender_full_name": "John Baez",
        "timestamp": 1589577389
    },
    {
        "content": "<p>Oh, whoops, I lied.</p>",
        "id": 197753504,
        "sender_full_name": "John Baez",
        "timestamp": 1589577407
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>≅</mo><mi>O</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">GL(3) \\cong O(3) \\times V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span></p>",
        "id": 197753527,
        "sender_full_name": "John Baez",
        "timestamp": 1589577422
    },
    {
        "content": "<p>SO(3) is just the rotations.  O(3) is the rotations and reflections.</p>",
        "id": 197753567,
        "sender_full_name": "John Baez",
        "timestamp": 1589577445
    },
    {
        "content": "<p>In fact O(3) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;vertical-align:0em;\"></span><span class=\"mrel\">≅</span></span></span></span> SO(3) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">×</span></span></span></span> Z/2, as groups and as manifolds.</p>",
        "id": 197753612,
        "sender_full_name": "John Baez",
        "timestamp": 1589577475
    },
    {
        "content": "<p>Anyway, I could ramble on about this stuff all day, since this is the bread and butter of mathematical physics.</p>",
        "id": 197753682,
        "sender_full_name": "John Baez",
        "timestamp": 1589577498
    },
    {
        "content": "<p>I should probably get to work on a paper... but I think it's no surprise to you now when I wrap up and say <strong>\"n-dimensional real vector bundles over a space can be described using Cech 2-cocycles on that space valued in the sheaf of continuous GL(n)-valued functions\".</strong></p>",
        "id": 197753793,
        "sender_full_name": "John Baez",
        "timestamp": 1589577570
    },
    {
        "content": "<p>But we didn't get around (yet) to figuring out when two 2-cocycles give isomorphic bundles!  That's the next step.  I gotta quit now, but maybe you can think about that, if you want.</p>",
        "id": 197753931,
        "sender_full_name": "John Baez",
        "timestamp": 1589577651
    },
    {
        "content": "<p>i was thinking earlier... the thign i said about seeing the connection to higher sheaves</p>",
        "id": 197753993,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577695
    },
    {
        "content": "<p>so in an ordinary sheaf you have a set of sections for each open. in a higher sheaf you have a <em>category</em> of sections for each open</p>",
        "id": 197754032,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577719
    },
    {
        "content": "<p>so im seeing how here you have a category of vector bundles over each open</p>",
        "id": 197754109,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577750
    },
    {
        "content": "<p>Yes!  That sort of \"higher sheaf\" is called a \"stack\".</p>",
        "id": 197754120,
        "sender_full_name": "John Baez",
        "timestamp": 1589577761
    },
    {
        "content": "<p>so ive heard o:</p>",
        "id": 197754136,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577770
    },
    {
        "content": "<p>and restriction functors would be given by pullback?</p>",
        "id": 197754158,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577786
    },
    {
        "content": "<p>Yeah!   One of the nice examples of a stack that's not a mere sheaf is the stack of vector bundles (say with some chosen fiber).</p>",
        "id": 197754184,
        "sender_full_name": "John Baez",
        "timestamp": 1589577803
    },
    {
        "content": "<p>but so id heard that \"descent\" is what you have for stacks instead of the typical gluing condition and it gets hairier</p>",
        "id": 197754203,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577815
    },
    {
        "content": "<p>Well, there's \"descent\" at all levels of hairiness.</p>",
        "id": 197754227,
        "sender_full_name": "John Baez",
        "timestamp": 1589577834
    },
    {
        "content": "<p>and i think i get it—the issue is that you can no longer just require that sections be equal on the overlaps, you have to require that they be isomorphic on the overlaps, but</p>",
        "id": 197754233,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577838
    },
    {
        "content": "<p>then you <em>also</em> need to require that the isomorphisms are coherent</p>",
        "id": 197754279,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577846
    },
    {
        "content": "<p>Right!</p>",
        "id": 197754284,
        "sender_full_name": "John Baez",
        "timestamp": 1589577852
    },
    {
        "content": "<p><span aria-label=\"triumph\" class=\"emoji emoji-1f624\" role=\"img\" title=\"triumph\">:triumph:</span></p>",
        "id": 197754294,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577858
    },
    {
        "content": "<p>but there was one other thing that occurred to me earlier—</p>",
        "id": 197754312,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577873
    },
    {
        "content": "<p>if u have an ordinary sheaf given by continuous functions into some codomain, say</p>",
        "id": 197754340,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577896
    },
    {
        "content": "<p>A lot of this stuff can be understood to some extent using Cech cohomology.</p>",
        "id": 197754341,
        "sender_full_name": "John Baez",
        "timestamp": 1589577896
    },
    {
        "content": "<p>u can already upgrade it to some sort of stack, right, by just considering the set of functions as a category by the fact that they naturally have higher structure bc of homotopy</p>",
        "id": 197754382,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577932
    },
    {
        "content": "<p>and what youre talkling about in this thread is like—establishign a correspondence between <em>that</em> and the directly-described stack of vector bundles?</p>",
        "id": 197754405,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589577957
    },
    {
        "content": "<p>I don't know if that's what I'm doing.  I don't think it quite is.</p>",
        "id": 197754466,
        "sender_full_name": "John Baez",
        "timestamp": 1589577975
    },
    {
        "content": "<p>But it might turn out to be, in the end.</p>",
        "id": 197754479,
        "sender_full_name": "John Baez",
        "timestamp": 1589577989
    },
    {
        "content": "<p>I think it'll be good if you just figure out a really simple condition for when two choices of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> (with the same cover) give isomorphic bundles.</p>",
        "id": 197754522,
        "sender_full_name": "John Baez",
        "timestamp": 1589578038
    },
    {
        "content": "<p>hmmmmmmm maybe later &gt;.&gt;</p>",
        "id": 197754535,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589578048
    },
    {
        "content": "<p>adhd engage</p>",
        "id": 197754542,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589578053
    },
    {
        "content": "<p>Yeah, later.</p>",
        "id": 197754546,
        "sender_full_name": "John Baez",
        "timestamp": 1589578056
    },
    {
        "content": "<p>Then you'll be able to cook up a groupoid with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 's as objects and some other things as <em>isomorphisms</em>.</p>",
        "id": 197754639,
        "sender_full_name": "John Baez",
        "timestamp": 1589578096
    },
    {
        "content": "<p>And people usually just take isomorphism classes and call that \"the 2nd Cech cohomology\".</p>",
        "id": 197754700,
        "sender_full_name": "John Baez",
        "timestamp": 1589578135
    },
    {
        "content": "<p>But yeah, we may be getting our hands on a stack here, secretly!</p>",
        "id": 197754748,
        "sender_full_name": "John Baez",
        "timestamp": 1589578163
    },
    {
        "content": "<p>Okay, seeya!  Gotta keep editing Kenny Courser's thesis.</p>",
        "id": 197754844,
        "sender_full_name": "John Baez",
        "timestamp": 1589578210
    },
    {
        "content": "<p>thanks for the lecture :)</p>",
        "id": 197754854,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589578223
    },
    {
        "content": "<p>hmm, sorry i havent been around</p>",
        "id": 198166863,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589962387
    },
    {
        "content": "<p>been off my adderall... <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 198166871,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589962396
    },
    {
        "content": "<p>and will be again.......</p>",
        "id": 198166874,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589962400
    },
    {
        "content": "<p>can you describe a stack as a pseudofunctor O(X) → Cat w/ a condition like... some kind of \"turning certain diagrams into lax limits\", maybe <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 198166994,
        "sender_full_name": "sarahzrf",
        "timestamp": 1589962510
    },
    {
        "content": "<p>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Nat</mtext><mo stretchy=\"false\">(</mo><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Nat}(F, G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Nat</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span> denotes the category of pseudonatural transformations and modifications between pseudofunctors, then the condition for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> to be a stack is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≃</mo><mtext>Nat</mtext><mo stretchy=\"false\">(</mo><mi>hom</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mo separator=\"true\">,</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mtext>Nat</mtext><mo stretchy=\"false\">(</mo><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(X) \\simeq \\text{Nat}(\\hom(-, X), G) \\to \\text{Nat}(F, G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Nat</span></span><span class=\"mopen\">(</span><span class=\"mop\">hom</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Nat</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span> is an equivalence for each covering sieve <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>↪</mo><mi>hom</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mo separator=\"true\">,</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F \\hookrightarrow \\hom(-, X)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">hom</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>. Analogous to a sheaf, but one categorical dimension up.</p>",
        "id": 215952406,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1604751295
    },
    {
        "content": "<p>What are some good examples of stacks over a site <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> which are are not gerbes over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>?</p>",
        "id": 215956353,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604757783
    },
    {
        "content": "<p>I think the stack of vector bundles and vector bundle morphisms over a topological space is an example.</p>",
        "id": 215960280,
        "sender_full_name": "John Baez",
        "timestamp": 1604763702
    },
    {
        "content": "<p>Or simply the stack of (small) sheaves and either isomorphisms or all morphisms.</p>",
        "id": 215960329,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1604763749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> <span class=\"user-mention\" data-user-id=\"278656\">@Ulrik Buchholtz</span>  Thank you Sir.</p>",
        "id": 215971829,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604780733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>  I understand your point , I think you mean that  \"Existence of a global section does not ensure Triviality in vector bundles but ensures triviality in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-torsors. Hence , local connectedness property of the gerbe holds for stack of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-torsors over a space but fails in the case of stack of Vectors bundles over a space. Am I correct ?</p>",
        "id": 215972435,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604781514
    },
    {
        "content": "<p>I'm not an expert on this stuff, so I don't even remember what the \"local connectedness property of a gerbe\" is.   But it's certainly true that existence of a global section does not ensure triviality in vector bundles but ensures triviality in a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-torsor.</p>",
        "id": 215972690,
        "sender_full_name": "John Baez",
        "timestamp": 1604781912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>  Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>D</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">F:D \\rightarrow C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> be a stack over a site <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>. Then we say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> is locally connected  if for each object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and for any  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>∈</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> a,b \\in F(U)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span>,   there exist a cover <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>U</mi><mi>i</mi></msub><mo>→</mo><mi>U</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\lbrace U_i \\rightarrow U \\rbrace </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">}</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> such that  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a|_{i}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is isomorphic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\"> b|_{i}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(U_i)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>.   While proving this property for the stack of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> torsors over  a space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> I used the fact that a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-torsor is trivial if there exist a global section. So, I thought that the same procedure will not work for the stack of vector  bundles over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>. <strong>Though I agree it does not ensure that  the stack of vector bundles over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is  not a gerbe</strong></p>",
        "id": 215973572,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604783264
    },
    {
        "content": "<p>If we consider two vector bundles over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> of different ranks, then we won't be able to make them isomorphic by pulling back to a cover.</p>",
        "id": 215974951,
        "sender_full_name": "Reid Barton",
        "timestamp": 1604785480
    },
    {
        "content": "<p>But if we consider the stack of vector bundles of a fixed rank <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> (and bundle isomorphisms between them) then I think it will be a gerbe. (We could allow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> to be a locally constant nonnegative-integer-valued function on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.)</p>",
        "id": 215975063,
        "sender_full_name": "Reid Barton",
        "timestamp": 1604785677
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span>  But the category of vector bundles over a space is not a groupoid . Since Gerbes are always defined to groupoid valued stacks hence it will not be a gerbe I think.</p>",
        "id": 215975116,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604785729
    },
    {
        "content": "<p>That's right, that's why I specified that we consider just vector bundle isomorphisms and not all vector bundle maps.</p>",
        "id": 215975141,
        "sender_full_name": "Reid Barton",
        "timestamp": 1604785796
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span>  Ohh!! Sorry! I got it.. Thanks.</p>",
        "id": 215975192,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604785819
    },
    {
        "content": "<p>In my original remark I specified the stack of vector bundles and <em>all</em> vector bundle morphisms, and I was hoping all those non-invertible morphisms would prevent this stack from being a gerbe.  I am a simple man given to simple counterexamples.  </p>\n<p>But okay, I guess even the stack of vector bundles and vector bundle isomorphisms is not a gerbe.</p>",
        "id": 215976496,
        "sender_full_name": "John Baez",
        "timestamp": 1604787875
    },
    {
        "content": "<p>The stack of rank-n vector bundles is equivalent to the stack of GL(n)-torsors, so yes, that should be a gerbe.</p>",
        "id": 215976514,
        "sender_full_name": "John Baez",
        "timestamp": 1604787915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Descent/near/215952406\">said</a>:</p>\n<blockquote>\n<p>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Nat</mtext><mo stretchy=\"false\">(</mo><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Nat}(F, G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Nat</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span> denotes the category of pseudonatural transformations and modifications between pseudofunctors, then the condition for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> to be a stack is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≃</mo><mtext>Nat</mtext><mo stretchy=\"false\">(</mo><mi>hom</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mo separator=\"true\">,</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mtext>Nat</mtext><mo stretchy=\"false\">(</mo><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(X) \\simeq \\text{Nat}(\\hom(-, X), G) \\to \\text{Nat}(F, G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Nat</span></span><span class=\"mopen\">(</span><span class=\"mop\">hom</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Nat</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span> is an equivalence for each covering sieve <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>↪</mo><mi>hom</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mo separator=\"true\">,</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F \\hookrightarrow \\hom(-, X)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">hom</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>. Analogous to a sheaf, but one categorical dimension up.</p>\n</blockquote>\n<p>this is actually the only precise definition of the descent condition i remember lol</p>",
        "id": 215977424,
        "sender_full_name": "sarahzrf",
        "timestamp": 1604789630
    },
    {
        "content": "<p>but i think it also moves some amount of difficulty into bicategory yoneda...</p>",
        "id": 215977465,
        "sender_full_name": "sarahzrf",
        "timestamp": 1604789657
    },
    {
        "content": "<p>Yeah, for lowly folks like me who have mainly thought about stacks on topological spaces, it's probably some super-efficient way of saying you get an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(X)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> when you've got objects on each open set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (or whatever) covering <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, and isomomorphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">g_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> between their restrictions to intersections <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i \\cap U_j</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>=</mo><msub><mi>g</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>g</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">g_{ik} = g_{ij} g_{jk}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> on intersections <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>j</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i \\cap U_j \\cap U_k</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.   And that last thing, that \"coherence\" law, looks like something you see whenever you replace equations by isomorphisms.</p>",
        "id": 215977884,
        "sender_full_name": "John Baez",
        "timestamp": 1604790461
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Descent/near/215977465\">said</a>:</p>\n<blockquote>\n<p>but i think it also moves some amount of difficulty into bicategory yoneda...</p>\n</blockquote>\n<p>The way I look at it, that's the kind of thing you can calculate to your heart's content, if you're motivated enough to pursue it. Bicategorical Yoneda is not after all difficult!</p>",
        "id": 215981985,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1604797515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>  Sir,  I undersrtand your point. I should have directly said that the Stack of vector bundles over a space X is not a gerbe from the fact that it is not groupoid valued stack. But I was so much into understanding \"what local connectedness property actually says about the gerbe\" I forgot to check the most elementary one. For example in the case of stack of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-torsors over a space, the  local connectedness property tells that \"Existence of a local sections ensure local  triviality in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-torsors\".</p>",
        "id": 215992073,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1604816736
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/231112-theory.3A-algebraic.20geometry/topic/Descent/near/215977884\">said</a>:</p>\n<blockquote>\n<p>Yeah, for lowly folks like me who have mainly thought about stacks on topological spaces, it's probably some super-efficient way of saying you get an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(X)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> when you've got objects on each open set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (or whatever) covering <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, and isomomorhpisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">g_{ij}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> between their restrictions to intersections <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i \\cap U_j</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>=</mo><msub><mi>g</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>g</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">g_{ik} = g_{ij} g_{jk}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> on intersections <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>j</mi></msub><mo>∩</mo><msub><mi>U</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i \\cap U_j \\cap U_k</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.   And that last thing, that \"coherence\" law, looks like something you see whenever you replace equations by isomorphisms.</p>\n</blockquote>\n<p>this isnt the full condition, is the thing, cuz u need to know about how the object you get is related to the family</p>",
        "id": 215992361,
        "sender_full_name": "sarahzrf",
        "timestamp": 1604817228
    },
    {
        "content": "<p>You're right.</p>",
        "id": 216017571,
        "sender_full_name": "John Baez",
        "timestamp": 1604858126
    },
    {
        "content": "<p>I was just trying to figure out where the cocycle conditions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>=</mo><msub><mi>g</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>g</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">g_{ik} = g_{ij} g_{jk}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> comes from, if you start with Todd's definition in terms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">N</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Nat}(F,G)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 216017650,
        "sender_full_name": "John Baez",
        "timestamp": 1604858226
    },
    {
        "content": "<p>They remind me both of \"weak preservation of composition\" in the definition of pseudofunctor, and the prism diagram in the definition of pseudonatural transformation, so I'm a bit confused, but also too lazy to straighten it out in my mind.</p>",
        "id": 216017728,
        "sender_full_name": "John Baez",
        "timestamp": 1604858393
    },
    {
        "content": "<p>it's gonna be the latter, because a descent datum is a pseudonatural transformation</p>",
        "id": 216028025,
        "sender_full_name": "sarahzrf",
        "timestamp": 1604873590
    },
    {
        "content": "<p>Okay, thanks.  I used to know this stuff better, I think.    I can't even remember what I forgot.</p>",
        "id": 216028089,
        "sender_full_name": "John Baez",
        "timestamp": 1604873702
    },
    {
        "content": "<p>I would phrase local connectivity as say that locally, everything looks the same, and that local non-emptiness is what tells you things are locally trivial. Vector bundles are locally trivial, after all, but as discussed don't locally look the same.</p>",
        "id": 216781627,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1605432706
    },
    {
        "content": "<p>just in case it's of any help to anybody, I'm now onto translating the parts of FGA that are about descent (which is really the vast majority of it...), and I think it's a pretty nice (albeit \"Grothendieck-y\") reference</p>",
        "id": 216798175,
        "sender_full_name": "Tim Hosgood",
        "timestamp": 1605454383
    },
    {
        "content": "<p>(I'm about a third of the way through FGA 3.I : <a href=\"https://latexonline.cc/compile?git=https%3A%2F%2Fgithub.com%2Fthosgood%2Ftranslations&amp;target=_in-progress%2Ffga%2Ffga-3-I.tex&amp;trackId=1605454299350\">https://latexonline.cc/compile?git=https%3A%2F%2Fgithub.com%2Fthosgood%2Ftranslations&amp;target=_in-progress%2Ffga%2Ffga-3-I.tex&amp;trackId=1605454299350</a>)</p>",
        "id": 216798203,
        "sender_full_name": "Tim Hosgood",
        "timestamp": 1605454410
    }
]