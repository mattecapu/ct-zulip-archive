[
    {
        "content": "<p>On Tuesday, October 11th, Topos will be celebrating Dana Scott's 90th birthday with a special seminar by Gordon Plotkin, titled \"Does recursion help?\". The seminar will be held both online and in person at the Topos Institute's Berkeley office, with Gordon and Dana both present in person. Dana will say some opening words before Gordon's talk.</p>\n<p>An abstract for Gordon's talk, and links to join via Zoom or YouTube<br>\nlivestream, are below. If you would like to attend in person, please email<br>\n<a href=\"mailto:juliet@topos.institute\">juliet@topos.institute</a> to register as a visitor.</p>\n<p>See <a href=\"https://topos.site/berkeley-seminar/\">https://topos.site/berkeley-seminar/</a></p>\n<hr>\n<p>Date: Tuesday October 11th, 2022<br>\nTime: 1700 UTC (10am Berkeley time)<br>\nZoom Link:<br>\n<a href=\"https://topos-institute.zoom.us/j/87874851972?pwd=eWRjZlUvQWJoNmJFdHgycE1mUDEvQT09\">https://topos-institute.zoom.us/j/87874851972?pwd=eWRjZlUvQWJoNmJFdHgycE1mUDEvQT09</a><br>\nPassword: happybday<br>\nYouTube stream: <a href=\"https://youtu.be/n7moEQtv3qU\">https://youtu.be/n7moEQtv3qU</a><br>\n--<br>\nTitle: Does recursion help?<br>\nSpeaker: Gordon Plotkin</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"n7moEQtv3qU\" href=\"https://youtu.be/n7moEQtv3qU\"><img src=\"https://uploads.zulipusercontent.net/c3d4033101ef026e2d5d2966aa4269ce65604a5e/68747470733a2f2f692e7974696d672e636f6d2f76692f6e376d6f455174763371552f64656661756c742e6a7067\"></a></div><p>Abstract: As everyone knows, Alonzo Church proposed that the effectively calculable natural number functions are those definable in the untyped lambda calculus. (He used Church numerals to represent natural numbers.) The lambda-definable functions were shown to be the same as the GÃ¶del-Herbrand general recursive functions and the same as the functions computable by Turing machines. The fixed-point combinator Y is crucial for the proofs, as it enables functions to be defined recursively.</p>\n<p>If we switch to the typed lambda-calculus the situation changes drastically.<br>\nHelmut Schwichtenberg and Richard Statman showed that only the extended<br>\npolynomials can then be defined (they used a typed version of the Church<br>\nnumerals).</p>\n<p>It is natural, therefore, to ask what happens if one adds typed fixed-point<br>\ncombinators to the typed lambda calculus. We present an answer to this<br>\nquestion. Our answer makes essential use of Dana Scott's domain theory to<br>\nmodel the fixed-point combinators.</p>",
        "id": 303051048,
        "sender_full_name": "Steve Awodey",
        "timestamp": 1665254035
    }
]