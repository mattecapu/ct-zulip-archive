[
    {
        "content": "<p>I was reminded today of a terminological peeve I have, and I was wondering whether there is a justification for it, or whether it is simply an inconsistency. In some places in category theory, notably in the notion of <a href=\"https://ncatlab.org/nlab/show/subobject%20classifier\">[[subobject classifier]]</a>, a \"classifier\" is something that has a mapping-in universal property. However, in two-dimensional category theory, a <a href=\"https://ncatlab.org/nlab/show/pseudo%20morphism%20classifier\">[[pseudo morphism classifier]]</a> has a mapping-out universal property. It seems to me that it would be clearer to call the latter a \"pseudo morphism coclassifier\" (which reflects the fact that it can be constructed as a colimit).</p>\n<p>Is this just a poor choice of terminology, or is there a good reason it should be a \"pseudo morphism classifier\" rather than  \"pseudo morphism coclassifier\"?</p>",
        "id": 547666030,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1761730208
    },
    {
        "content": "<p>Some people scorn the fussiness of \"coclassify\", and say that you can classify things by maps in or maps out, and you just have to say which.   As usual I prefer to stand by and <em>watch</em> people fight about terminology, but I think that attitude is why people people sometimes use \"classifier\" for things with a mapping-out universal property.</p>",
        "id": 547680349,
        "sender_full_name": "John Baez",
        "timestamp": 1761734023
    },
    {
        "content": "<p>But that page <a href=\"https://ncatlab.org/nlab/show/weak+morphism+classifier\">[[pseudo morphism classifier]]</a> does distinguish between classifiers and coclassifiers:</p>\n<blockquote>\n<p>In many situations, we can study the weaker kinds of morphism using the strict kinds of morphism using a <strong>weak morphism classifier</strong>. A weak morphism classifier for an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">A&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> such that weak morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> are in <a href=\"https://ncatlab.org/nlab/show/natural%20bijection\">[[natural bijection]]</a> with strict morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A&#x27; \\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>\n<p>Dually, a <strong>weak morphism coclassifier</strong> is an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">B&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> such that weak morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> are in natural bijection with strict morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><msup><mi>B</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">A \\to B&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n</blockquote>",
        "id": 547690199,
        "sender_full_name": "David Corfield",
        "timestamp": 1761737012
    },
    {
        "content": "<p>Oh, I see the issue is the orientation. They're the wrong way around.</p>",
        "id": 547690424,
        "sender_full_name": "David Corfield",
        "timestamp": 1761737089
    },
    {
        "content": "<p>I would certainly find \"classifier\" to refer to a mapping-in property only more consistent and better terminology, as limits and most \"classical\" classifiers have a mapping-in property.  The historical usage in higher category theory does present an obstacle to this, but one that I think can be overcome through clarification.  It's definitely a less than ideal situation to have \"classifier\" and \"coclassifier\" switched in some of the literature versus the rest, but it would hardly be the first time something something like that happened and it feels like it has a better chance of resolving itself successfully than the \"fork/cofork\" confusion, for example.</p>\n<p>(Then again, I <em>am</em> a bit mystified by the continued fork/cofork confusion when one of them is a <em>cone</em> over the parallel pair, is used to exhibit an <em>equalizer</em>, <em>and</em> has the pointy end on the tines.)</p>",
        "id": 547692936,
        "sender_full_name": "James Deikun",
        "timestamp": 1761737961
    },
    {
        "content": "<p>Isn't a classifier something that classifies, as opposed to any specific formal incarnation of such? I can think of about a dozen different methods of classification across mathematics, some of which don't explicitly involve morphisms at all.</p>\n<p>I will argue that naming things after how they are interpreted is best practice. Specific choices of definition are subject to change. Only the full collection of axioms for a given structure can adequately capture a definition, english names are meant for human interpretation.</p>\n<p>If I heard \"coclassifer\" on the street, I wouldn't think \"something that classifies using a mapping in property\" rather \"something that classifies classifiers\"</p>",
        "id": 547699519,
        "sender_full_name": "Noah Chrein",
        "timestamp": 1761739975
    },
    {
        "content": "<p>I don't think mathematical terminology has anything to do with what people \"on the street\" think.   If I told someone my ring was <a href=\"https://en.wikipedia.org/wiki/Excellent_ring\">excellent</a>, they probably wouldn't guess I'm talking about a mathematical structure that's a catenary Grothendieck ring that's also a J-2 ring.  But people don't just walk down the street and talk to strangers about math.</p>",
        "id": 547701430,
        "sender_full_name": "John Baez",
        "timestamp": 1761740569
    },
    {
        "content": "<p>sorry, I am using phrasing my old topology prof would use. On the street refers to people talking loosely between talks at a conference etc. much like the phrase \"in the wild\" (I wouldn't expect to find a topological space literally in the wild)</p>",
        "id": 547703276,
        "sender_full_name": "Noah Chrein",
        "timestamp": 1761741085
    },
    {
        "content": "<p>Actually, I do feel like your example prompts me further on my point here, \"excellent\" probably isn't the best name, rather its how you personally feel about the structure. I can look at the nlab for what a Grothendieck ring and J-2 ring are, and get a feel from working through a bunch of examples, and perhaps there is a more \"synthetic\" name that would give mathematicians who know all the definitions a better sense of how you are interpreting an \"excellent\" ring. </p>\n<p>So if you wanted to dualize everything, and call your ring a \"coexcellent\" ring, you could, but I bet someone feels \"coexcellent\" is more excellent than \"excellent\"... yeah excellent isn't the best name...</p>",
        "id": 547705299,
        "sender_full_name": "Noah Chrein",
        "timestamp": 1761741602
    },
    {
        "content": "<p>wrt the original point, in my humble and subjective opinion, classifier is a good name as it is telling you that the structure is meant for classifying something.</p>",
        "id": 547706537,
        "sender_full_name": "Noah Chrein",
        "timestamp": 1761741989
    },
    {
        "content": "<p>The problem is that I may be in a situation where I can classify things by either a mapping in or a mapping out property, and it would be very convenient for me to have two terms, following established conventions, that distinguish between the two.</p>",
        "id": 547707543,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1761742301
    },
    {
        "content": "<p>And the terminology \"classifier\" and \"coclassifier\" seem very well suited for this.</p>",
        "id": 547707626,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1761742322
    },
    {
        "content": "<p>Also according to the proposed (but not the established) use of \"coclassifier\", limits classify cones and colimits coclassify cocones.</p>",
        "id": 547712486,
        "sender_full_name": "James Deikun",
        "timestamp": 1761743600
    },
    {
        "content": "<p>perhaps walking down the street during the lunch break while attending JMM</p>",
        "id": 547784914,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1761761991
    }
]