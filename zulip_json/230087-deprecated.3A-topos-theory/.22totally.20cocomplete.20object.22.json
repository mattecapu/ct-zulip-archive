[
    {
        "content": "<p>The introduction to the <em>Elephant</em> contains a number of different descriptions of what a topos is (or is like), including:<br>\n(v) ‘A topos is a totally cocomplete object in the meta-2-category CART of cartesian (i.e. , finitely complete) categories’</p>\n<p>This sounds like a definition I would like if I knew what it meant, but I failed to find anything in the book about this (quite possibly because I didn't look hard enough), or for that matter anywhere else. Does anyone know what this sentence is supposed to mean?</p>",
        "id": 196342568,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588701275
    },
    {
        "content": "<p>I think totally cocomplete means that yoneda has a left adjoint.</p>",
        "id": 196345018,
        "sender_full_name": "vikraman",
        "timestamp": 1588702504
    },
    {
        "content": "<p>The only phrase I don't understand is \"totally cocomplete\".  I think I know how to internalize the concepts of limits and colimits to a sufficiently nice 2-category: <span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> wrote up a bunch of stuff about that.</p>",
        "id": 196345280,
        "sender_full_name": "John Baez",
        "timestamp": 1588702610
    },
    {
        "content": "<p>Oh, like <a href=\"https://ncatlab.org/nlab/show/total+category\" title=\"https://ncatlab.org/nlab/show/total+category\">https://ncatlab.org/nlab/show/total+category</a>.</p>",
        "id": 196345316,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588702631
    },
    {
        "content": "<p>I do not, however, understand how the subobject classifier is supposed to come out of this sentence.   Is this supposed to be a characterization of, or just a fact about, topoi?</p>",
        "id": 196345399,
        "sender_full_name": "John Baez",
        "timestamp": 1588702681
    },
    {
        "content": "<p>I think it is a characterization, but I don't know quite what it means yet.</p>",
        "id": 196345484,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588702711
    },
    {
        "content": "<p>arent grothendieck topoi characterized by some odd cocompleteness properties that you might not expect to produce a subobject classifier</p>",
        "id": 196345492,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588702719
    },
    {
        "content": "<p>If I interpret it as meaning that the left adjoint to Yoneda preserves finite limits, then it sounds like a plausible characterization. Let me think about that.</p>",
        "id": 196345613,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588702792
    },
    {
        "content": "<p>(Also, in case it's not obvious, I think Grothendieck topos is what's meant here.)</p>",
        "id": 196345742,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588702850
    },
    {
        "content": "<p>Okay, now I'm guessing this is <a href=\"https://ncatlab.org/nlab/show/Grothendieck+topos#Streetcharacterization\" title=\"https://ncatlab.org/nlab/show/Grothendieck+topos#Streetcharacterization\">Street's characterization of Grothendieck topoi</a>, just because that contains the word \"lex total\".</p>",
        "id": 196345753,
        "sender_full_name": "John Baez",
        "timestamp": 1588702861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/230087-theory.3A-topos.20theory/topic/.22totally.20cocomplete.20object.22/near/196345613\" title=\"#narrow/stream/230087-theory.3A-topos.20theory/topic/.22totally.20cocomplete.20object.22/near/196345613\">said</a>:</p>\n<blockquote>\n<p>If I interpret it as meaning that the left adjoint to Yoneda preserves finite limits, then it sounds like a plausible characterization. Let me think about that.</p>\n</blockquote>\n<p>I think this is true, and is essentially the topic of Street's paper <em>Notions of topos</em>.</p>",
        "id": 196345755,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588702862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/230087-theory.3A-topos.20theory/topic/.22totally.20cocomplete.20object.22/near/196345399\" title=\"#narrow/stream/230087-theory.3A-topos.20theory/topic/.22totally.20cocomplete.20object.22/near/196345399\">said</a>:</p>\n<blockquote>\n<p>I do not, however, understand how the subobject classifier is supposed to come out of this sentence.   Is this supposed to be a characterization of, or just a fact about, topoi?</p>\n</blockquote>\n<p>'Total' implies every limit preserving functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"bold\">C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>→</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf C^\\mathrm{op}\\to\\mathbf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">t</span></span></span></span></span> is representable. So to show there was a subobject classifier you would have to show the subobject functor sent colimits to limits.</p>",
        "id": 196346300,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1588703155
    },
    {
        "content": "<p>Yes, this is a reference to Street's characterization.  As stated at the nLab page John linked to, it's a characterization of <em>Grothendieck</em> topoi, so Street's proof goes by checking Giraud's axioms.  One can then apply the standard theorem that a Grothendieck topos is an elementary topos.  I don't know whether one could prove more directly that any lex-total category is a elementary topos.</p>",
        "id": 196347358,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588703660
    },
    {
        "content": "<p>I think the introduction to the Elephant is a bit misleading in that some of its phrases are descriptions of <em>Grothendieck</em> topoi while some of them are descriptions of <em>elementary</em> topoi, and IIRC nothing is said about which is which.</p>",
        "id": 196347452,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588703730
    },
    {
        "content": "<p>Thanks everyone--I think this suffices for what I was originally interested in, but I also wonder whether there is actually a sensible notion of \"totally cocomplete object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span></span></span></span></span>\" for suitable 2-categories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span></span></span></span></span></p>",
        "id": 196347633,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588703816
    },
    {
        "content": "<p>Or whether I am just supposed to take the Yoneda embedding as a fixed construction, and then when it makes sense as a morphism of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span></span></span></span></span>, to ask for a left adjoint to it as a morphism of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span></span></span></span></span>.</p>",
        "id": 196347876,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588703937
    },
    {
        "content": "<p>Not in an arbitrary 2-category, I think.  But it makes sense in any proarrow equipment or Yoneda structure, and I believe LEX can be given those structures.</p>",
        "id": 196348137,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588704067
    }
]