[
    {
        "content": "<p>I'm looking for generalizations/miscellaneous insights related to this idea, mostly out of curiosity: in the category of (labelled) state transition systems and (forward) simulations, consider \"determinization\", that thing from automata theory which transforms a possibly nondeterministic state machine S into a deterministic one D(S) whose states are elements of the powerset P(S). Well, <strong>D is a monad</strong> (or looks very much like one at least). The construction is interesting because its Kleisli arrows \"S simulates D(S')\" coincide with trace inclusion \"Traces(S) is a subset of Traces(S')\", so we can kinda say that D is a monad because set inclusion is transitive.</p>\n<p>Can this idea be adapted to the setting where simulations are coalgebra morphisms?</p>\n<p>Also  there is another way to \"determinize\" a state machine, rather than P(S), is to construct a machine whose states are sets of traces. It's a bit scary from the point of view of automata since it's a priori not obvious that this preserves finiteness, but if you don't care about finiteness, that's (more or less) bisimilar to the \"sets of states\" construction. If there is a categorical generalization for the previous construction, is there a generalization of this  other one, and are they the same?</p>",
        "id": 217430897,
        "sender_full_name": "Li-yao Xia",
        "timestamp": 1605892353
    },
    {
        "content": "<p>sounds similar to the topic of <a href=\"https://arxiv.org/abs/1302.1046\">https://arxiv.org/abs/1302.1046</a></p>",
        "id": 217853197,
        "sender_full_name": "Liang-Ting Chen",
        "timestamp": 1606290575
    }
]