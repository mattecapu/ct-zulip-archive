[
    {
        "content": "<p>Hi everyone. Do you know of any (interesting) examples of forgetful functors between monoidal categories which are strict monoidal and in particular examples of sections of such functors?</p>",
        "id": 285528499,
        "sender_full_name": "Kobe Wullaert",
        "timestamp": 1654778946
    },
    {
        "content": "<p>How about the monoidal functor that takes the underlying vector space of a group representation?</p>",
        "id": 285589989,
        "sender_full_name": "Simon Burton",
        "timestamp": 1654805792
    },
    {
        "content": "<p>That's a nice one.   In general forgetful functors that only forget structure or properties can be made strict monoidal, since the monoidal structure on the 'stuff' is unchanged.   For example</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\"> \\mathsf{Grp} \\to \\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Grp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span></p>\n<p>just forgets the group operations, which are structure, while leaving the underlying stuff - the set - unchanged.  So, if we make <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span> monoidal by choosing a specific cartesian product for each pair of sets, and use this same choice to make <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">A</mi><mi mathvariant=\"sans-serif\">b</mi><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{AbGp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">AbGp</span></span></span></span></span> monoidal, the forgetful functor painlessly works out to be <em>strict</em> monoidal.</p>",
        "id": 285622155,
        "sender_full_name": "John Baez",
        "timestamp": 1654827394
    },
    {
        "content": "<p>The functor</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">A</mi><mi mathvariant=\"sans-serif\">b</mi><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow></mrow><annotation encoding=\"application/x-tex\"> \\mathsf{AbGp} \\to \\mathsf{Gp} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">AbGp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Gp</span></span></span></span></span></p>\n<p>which just forgets the property of being abelian, can also be arranged to be strict monoidal in a similar way.</p>",
        "id": 285625778,
        "sender_full_name": "John Baez",
        "timestamp": 1654831233
    },
    {
        "content": "<p>There are lots of examples like that, some of which also have sections.  For instance, we can do the cartesian product trict for the forgetful functor</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">T</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi><mo>→</mo><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\rm Top \\to Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Top</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">Set</span></span></span></span></span></span></p>\n<p>and this has two sections that equip a set with the discrete or the indiscrete topology, respectively.</p>",
        "id": 285746182,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1654906500
    }
]