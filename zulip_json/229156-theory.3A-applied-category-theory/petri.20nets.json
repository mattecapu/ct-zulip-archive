[
    {
        "content": "<p>Is there a notion of input and output for petri nets?</p>",
        "id": 193487368,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586455446
    },
    {
        "content": "<p>Analogously, a discrete dynamical system is a set of states <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> with an update rule <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>:</mo><mi>S</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">u: S \\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">u</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>. But an input/output discrete dynamical system would additionally have a set of inputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span></span></span></span>, a set of outputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span></span></span></span>, an update <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>:</mo><mi>S</mi><mo>×</mo><mi>I</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">u: S \\times I \\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">u</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, and a readout <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>:</mo><mi>S</mi><mo>→</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">r: S \\to O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span></span></span></span></p>",
        "id": 193487541,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586455538
    },
    {
        "content": "<p>There's not a notion for Petri nets <em>per se</em>, but this is probably just what <em>open</em> Petri nets give you!</p>",
        "id": 193488282,
        "sender_full_name": "John Baez",
        "timestamp": 1586455866
    },
    {
        "content": "<p>You may have another idea in mind, and there are various imaginable ideas, but our \"input\" and \"output\" are just functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">i : A \\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>o</mi><mo>:</mo><mi>B</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">o: B \\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">o</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> where our Petri net is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo><mover><mo><mo>→</mo></mo><mo lspace=\"0em\" rspace=\"0em\">→</mo></mover></mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">T \\stackrel{\\to}{\\to} \\mathbb{N}[S]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9236789999999999em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9236789999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5668699999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">→</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span>, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is the set of 'places'.</p>",
        "id": 193488550,
        "sender_full_name": "John Baez",
        "timestamp": 1586455974
    },
    {
        "content": "<p>Hmmm...I think of open petri nets as \"resource sharing\" which feels distinct from inputs which parameterize the dynamics</p>",
        "id": 193488604,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456002
    },
    {
        "content": "<p>In the reachability semantics discussion in our paper, we consider starting off an input Petri net with some marking of the inputs, running it, and seeing if it can wind up with a marking that comes from a marking of the ouputs.</p>",
        "id": 193488803,
        "sender_full_name": "John Baez",
        "timestamp": 1586456085
    },
    {
        "content": "<p>Marking of the inputs means some dots in the places?</p>",
        "id": 193488870,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456118
    },
    {
        "content": "<p>Note that a marking of the inputs is an element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[A]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">]</span></span></span></span>; we can use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>:</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[i] : \\mathbb{N}[A] \\to \\mathbb{N}[S]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span> to carry this to a marking of the places of our Petri net.</p>",
        "id": 193488916,
        "sender_full_name": "John Baez",
        "timestamp": 1586456147
    },
    {
        "content": "<p>Here <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> is the set of inputs in our open Petri net (see above for my notation).</p>",
        "id": 193488995,
        "sender_full_name": "John Baez",
        "timestamp": 1586456175
    },
    {
        "content": "<p>got it</p>",
        "id": 193489008,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456177
    },
    {
        "content": "<p>So we can start with a marking of the inputs, map it to a marking of the place of our Petri net, \"run\" the Petri net and get other markings, and then ask if any of these other marking come from a given marking of the outputs (via <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>o</mi><mo stretchy=\"false\">]</mo><mo>:</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>B</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[o] : \\mathbb{N}[B] \\to \\mathbb{N}[S]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">o</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span>).</p>",
        "id": 193489150,
        "sender_full_name": "John Baez",
        "timestamp": 1586456252
    },
    {
        "content": "<p>The yes-or-no answer to this question gives a relation, the \"reachability relation\" between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[A]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">]</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">[</mo><mi>B</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[B]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span></span></span></span>.</p>",
        "id": 193489256,
        "sender_full_name": "John Baez",
        "timestamp": 1586456293
    },
    {
        "content": "<p>So this is one thing you can do....</p>",
        "id": 193489293,
        "sender_full_name": "John Baez",
        "timestamp": 1586456308
    },
    {
        "content": "<p>One difference between this and what you're talking about is that we don't have a deterministic dynamics: we have a \"possibilistic\" dynamics.</p>",
        "id": 193489349,
        "sender_full_name": "John Baez",
        "timestamp": 1586456335
    },
    {
        "content": "<p>I just want to make sure I understand this! This is an example of a marking of the inputs <a href=\"/user_uploads/21317/IPC7pzG6hnc4nCpXNm8bZEbW/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/IPC7pzG6hnc4nCpXNm8bZEbW/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/IPC7pzG6hnc4nCpXNm8bZEbW/image.png\"></a></div>",
        "id": 193489386,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456352
    },
    {
        "content": "<p>from your talk</p>",
        "id": 193489397,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456356
    },
    {
        "content": "<p>But that picture doesn't show any \"inputs\".</p>",
        "id": 193489414,
        "sender_full_name": "John Baez",
        "timestamp": 1586456369
    },
    {
        "content": "<p>I'm imagining the inputs are the two places on the left</p>",
        "id": 193489439,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456379
    },
    {
        "content": "<p>Okay, so let's say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> has two elements and they're getting mapped into the 2 places on the left in a bijective way.</p>",
        "id": 193489557,
        "sender_full_name": "John Baez",
        "timestamp": 1586456409
    },
    {
        "content": "<p>We can do that.</p>",
        "id": 193489612,
        "sender_full_name": "John Baez",
        "timestamp": 1586456430
    },
    {
        "content": "<p>and let's say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span></span></span></span> has one element getting mapped to the 1 place on the right</p>",
        "id": 193489638,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456439
    },
    {
        "content": "<p>In my notation it's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> that's mapped by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>o</mi><mo>:</mo><mi>B</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">o : B \\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">o</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span> , but fine.</p>",
        "id": 193489704,
        "sender_full_name": "John Baez",
        "timestamp": 1586456470
    },
    {
        "content": "<p>I'm not trying to be a notation boss, honest.</p>",
        "id": 193489739,
        "sender_full_name": "John Baez",
        "timestamp": 1586456489
    },
    {
        "content": "<p>Hmm... I'm running this in my head and I'm worried that it never ends up with only markings in the output</p>",
        "id": 193489740,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456490
    },
    {
        "content": "<p>This one might not.</p>",
        "id": 193489765,
        "sender_full_name": "John Baez",
        "timestamp": 1586456501
    },
    {
        "content": "<p>I'm happy to use your notation!</p>",
        "id": 193489766,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456502
    },
    {
        "content": "<p>Actually I think this one <em>can</em> get to a marking with just one dot at right...</p>",
        "id": 193489850,
        "sender_full_name": "John Baez",
        "timestamp": 1586456525
    },
    {
        "content": "<p>Really? I'm not seeing it</p>",
        "id": 193489896,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456556
    },
    {
        "content": "<p>I keep ending up with a lone dot in the bottom left place</p>",
        "id": 193489929,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456568
    },
    {
        "content": "<p>Umm, in my slides I \"run\" this Petri net for a while:</p>",
        "id": 193489943,
        "sender_full_name": "John Baez",
        "timestamp": 1586456578
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/uSnml2lT_1NYSD462O4_TcOZ/structured_2_talk.pdf\" title=\"structured_2_talk.pdf\">structured_2_talk.pdf</a></p>",
        "id": 193489985,
        "sender_full_name": "John Baez",
        "timestamp": 1586456598
    },
    {
        "content": "<p>Let's see what it does... I think it's the same one: on the first slide I think.</p>",
        "id": 193490028,
        "sender_full_name": "John Baez",
        "timestamp": 1586456621
    },
    {
        "content": "<p>Yeah, eventually I get to a marking with <em>two</em> dots at right.</p>",
        "id": 193490111,
        "sender_full_name": "John Baez",
        "timestamp": 1586456648
    },
    {
        "content": "<p>I'm actually confused about how you get from slide 5 to slide 6</p>",
        "id": 193490160,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456673
    },
    {
        "content": "<p>I expected the transition eat the marking in the top left</p>",
        "id": 193490196,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586456691
    },
    {
        "content": "<p>Whoops, maybe I made a mistake!  Let me look.</p>",
        "id": 193490661,
        "sender_full_name": "John Baez",
        "timestamp": 1586456885
    },
    {
        "content": "<p>Ha!  That was a mistake!  Thanks for catching it.</p>",
        "id": 193490760,
        "sender_full_name": "John Baez",
        "timestamp": 1586456940
    },
    {
        "content": "<p>I'll fix my slides.  <span aria-label=\"blushing\" class=\"emoji emoji-1f633\" role=\"img\" title=\"blushing\">:blushing:</span></p>",
        "id": 193490811,
        "sender_full_name": "John Baez",
        "timestamp": 1586456962
    },
    {
        "content": "<p>Hmm, I don't like the look of that \"blushing\" emoticon.</p>",
        "id": 193490841,
        "sender_full_name": "John Baez",
        "timestamp": 1586456974
    },
    {
        "content": "<p>It looks too bug-eyed.</p>",
        "id": 193490853,
        "sender_full_name": "John Baez",
        "timestamp": 1586456979
    },
    {
        "content": "<p>haha, it's actually one of my favorites</p>",
        "id": 193490981,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457033
    },
    {
        "content": "<p>I guess writing code in TikZ made it hard for me to pay attention to whether my tokens were doing the right things.</p>",
        "id": 193490985,
        "sender_full_name": "John Baez",
        "timestamp": 1586457037
    },
    {
        "content": "<p>I think if we start with three in the upper left then it will have the behavior that ends up with 2 on the right</p>",
        "id": 193491063,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457074
    },
    {
        "content": "<p>Okay.  Now I'm tempted to start fixing my TikZ, but I guess the wrong version is immortalized on YouTube.</p>",
        "id": 193491149,
        "sender_full_name": "John Baez",
        "timestamp": 1586457118
    },
    {
        "content": "<p>Anyway, I can sort of half-listen to you while I start fixing this TikZ.</p>",
        "id": 193491243,
        "sender_full_name": "John Baez",
        "timestamp": 1586457142
    },
    {
        "content": "<p>Were you getting at some point, about reachability?</p>",
        "id": 193491281,
        "sender_full_name": "John Baez",
        "timestamp": 1586457161
    },
    {
        "content": "<p>I'm still musing if this input/output scheme matches up with what I want. But first I'm making sure I understand it</p>",
        "id": 193491365,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457198
    },
    {
        "content": "<p>Okay.</p>",
        "id": 193491577,
        "sender_full_name": "John Baez",
        "timestamp": 1586457310
    },
    {
        "content": "<p>I bet there are a number of schemes.</p>",
        "id": 193491614,
        "sender_full_name": "John Baez",
        "timestamp": 1586457328
    },
    {
        "content": "<p>In particular the demand that <em>all</em> tokens wind up at places mapped to by outputs is rather restrictive.  One could also consider allowing \"leftover junk\" at other places, at the end.  But then you have to ask if <em>starting</em> with \"leftover junk\" at other places at the <em>beginning</em> is allowed.</p>",
        "id": 193491780,
        "sender_full_name": "John Baez",
        "timestamp": 1586457406
    },
    {
        "content": "<p>I like time-symmetric schemes since I'm a physicist at heart.</p>",
        "id": 193491793,
        "sender_full_name": "John Baez",
        "timestamp": 1586457422
    },
    {
        "content": "<p>I think that matches the analogy with discrete dynamical systems where the starting and ending with leftover junk is the internal state</p>",
        "id": 193491852,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457459
    },
    {
        "content": "<p>Those dynamical systems you're talking about... are they called \"Moore machines\" or \"Mealy machines\"?</p>",
        "id": 193492015,
        "sender_full_name": "John Baez",
        "timestamp": 1586457554
    },
    {
        "content": "<p>moore machine</p>",
        "id": 193492062,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457585
    },
    {
        "content": "<p>Okay, good.</p>",
        "id": 193492140,
        "sender_full_name": "John Baez",
        "timestamp": 1586457619
    },
    {
        "content": "<p>Thinking out loud: Can I turn a petri net into a moore machine by taking states to be markings of the petri net?</p>",
        "id": 193492168,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457635
    },
    {
        "content": "<p>Eugenio Moggi was trying to create a decorated cospan category of \"open Moore machines\".</p>",
        "id": 193492223,
        "sender_full_name": "John Baez",
        "timestamp": 1586457667
    },
    {
        "content": "<p>We found that some obvious-seeming way to do it gave rise to a setup different from some \"usual\" way to do things.</p>",
        "id": 193492296,
        "sender_full_name": "John Baez",
        "timestamp": 1586457703
    },
    {
        "content": "<p>I guess composition worked differently.</p>",
        "id": 193492333,
        "sender_full_name": "John Baez",
        "timestamp": 1586457720
    },
    {
        "content": "<p>oh interesting! I've been thinking about this as well and had convinced myself it's not possible without some extra structure</p>",
        "id": 193492384,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457730
    },
    {
        "content": "<p>I think his Moore machines had a bit more stuff...  maybe a \"read-in\" as well as a \"read-out\"????</p>",
        "id": 193492476,
        "sender_full_name": "John Baez",
        "timestamp": 1586457773
    },
    {
        "content": "<p>Or maybe some \"start\" and \"end\" states???</p>",
        "id": 193492523,
        "sender_full_name": "John Baez",
        "timestamp": 1586457801
    },
    {
        "content": "<p>neat!</p>",
        "id": 193492735,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457878
    },
    {
        "content": "<p>is there a place to read more?</p>",
        "id": 193492859,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586457942
    },
    {
        "content": "<p>I did a quick internet search but didn't find anything</p>",
        "id": 193493132,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586458073
    },
    {
        "content": "<p>I don't know where.   Moggi would know.</p>",
        "id": 193493246,
        "sender_full_name": "John Baez",
        "timestamp": 1586458124
    },
    {
        "content": "<p>There's a big literature on automata, and he knows it... I don't.  He was just showing me stuff on the blackboard, and we were trying to work stuff out, and we gave up because decorated cospans wasn't matching the \"usual\" approach, even though he admitted that decorated cospans was giving something reasonable.</p>",
        "id": 193493360,
        "sender_full_name": "John Baez",
        "timestamp": 1586458191
    },
    {
        "content": "<p>If you really want to work on this stuff, I could ask him.</p>",
        "id": 193493456,
        "sender_full_name": "John Baez",
        "timestamp": 1586458222
    },
    {
        "content": "<p>That would be great!</p>",
        "id": 193493888,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586458475
    },
    {
        "content": "<p>Umm, okay.</p>",
        "id": 193494070,
        "sender_full_name": "John Baez",
        "timestamp": 1586458584
    },
    {
        "content": "<p>Thank you so much! But please only if its comfortable and convenient for you <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 193498895,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586460790
    },
    {
        "content": "<p>Just a small aside: The notation input/output may be misleading. Gluing along places is an asynchronous operation, meaning that it does not have directionality per se. So suppose you compose nets N and M, where the output of N matches the input of M. You would expect then that tokens in the output of N get consumed by M, but N could as well \"take them back\" (e.g if the output place of N is also the input of one of its transitions). For this reason it's probably better to say left and right ports</p>",
        "id": 193499771,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586461303
    },
    {
        "content": "<p>Also, there is some work about composing automata using operads and lenses. Maybe this is closer to what you want: <a href=\"https://www.youtube.com/watch?v=dEDtaJhgQOY\" title=\"https://www.youtube.com/watch?v=dEDtaJhgQOY\">https://www.youtube.com/watch?v=dEDtaJhgQOY</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"dEDtaJhgQOY\" href=\"https://www.youtube.com/watch?v=dEDtaJhgQOY\" title=\"https://www.youtube.com/watch?v=dEDtaJhgQOY\"><img src=\"https://i.ytimg.com/vi/dEDtaJhgQOY/default.jpg\"></a></div>",
        "id": 193499880,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586461353
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193499771\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193499771\">said</a>:</p>\n<blockquote>\n<p>Just a small aside: The notation input/output may be misleading. Gluing along places is an asynchronous operation, meaning that it does not have directionality per se. So suppose you compose nets N and M, where the output of N matches the input of M. You would expect then that tokens in the output of N get consumed by M, but N could as well \"take them back\" (e.g if the output place of N is also the input of one of its transitions). For this reason it's probably better to say left and right ports</p>\n</blockquote>\n<p>Also, this sort of behavior is what makes difficult to compositionally evaluate the reachability relation starting from the reachability relation of the components. That is, when you compose along places you can, for instance, create new loops in the composed net, which make the reachability relation richer</p>",
        "id": 193500061,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586461449
    },
    {
        "content": "<p>Another notion of composition which is somehow friendlier wrt reachability is composing along transitions, as it's done here: <a href=\"https://arxiv.org/abs/1307.0204\" title=\"https://arxiv.org/abs/1307.0204\">https://arxiv.org/abs/1307.0204</a> <br>\nIn this case, the point of view is very different: composition is observational and synchronous, so you can interpret left and right ports not as carrying tokens around, but as carrying observational data. In this respect, ports connect things at a \"message level\": When something on the port happens, it instructs transitions connected to that port to fire. The problem with this approach is that now nets are not sharing resources anymore (which is exactly why the impact on the reachability relation is somehow friendlier to manage)</p>",
        "id": 193500329,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586461597
    },
    {
        "content": "<p>I agree with Fabrizio on this. I know that I struggled for a while on the open petri nets until I realized that the input/output structure of the decorated/structured cospans need not be related to where the tokens go when the net fires. My initial impression was that the inputs needed to be the \"reagent\" places and the outputs were the \"product\" tokens, but that isn't a requirement. That is why I've come to think of decorated cospans as a model of model fusion rather than a model of the dynamics. A morphism in FinSet Cospans is a recipe for gluing models together on variables. The way you do that gluing introduces left and right ports but those don't need to map onto the understanding of a PetriNet as a chemical reaction with reagents and products as inputs and outputs.</p>",
        "id": 193559861,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1586517987
    },
    {
        "content": "<p>Precisely. The way I think about cospans is as a tool that allows you to \"punch connections into a structure\" that allow you to compose things, but this happens in a way that is often unrelated to what the underlying structure does. This is, imho, the inevitable price you have to pay if you want a compositional framework at this level of generality</p>",
        "id": 193559995,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586518143
    },
    {
        "content": "<p>The result is that you have a compositional way of gluing things, but not necessarily a compositional way to compose their properties. This is captured by the idea that the functors decorating cospans are lax monoidal and not strict. That is, the best you can say often is \"the behavior of the composition is bigger than the behavior of the parts\"</p>",
        "id": 193560104,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586518252
    },
    {
        "content": "<p>For a lot of things, that will have to be good enough because the behavior of a system is more complex than the behaviors of the parts. FinSet cospans capture a \"systems are networks\" perspective and networks do exhibit emergent complexity. If everything was describable by strict functors, there would be no emergent complexity and the CT model of networks as decorated FinSet cospans would be a bad abstraction. I think we can do a lot with just having descriptions of complex systems that are compositional. Instead of representing a network by an edge list, we can represent it as a formula in terms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mi>e</mi><mi>n</mi><mi>e</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>s</mi><mo separator=\"true\">,</mo><mo>∘</mo><mo separator=\"true\">,</mo><mo>⊗</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">Δ</mi><mo separator=\"true\">,</mo><mi>i</mi><mi>d</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (generators,  \\circ, \\otimes, \\Delta, id, ...)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∘</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">⊗</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">d</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 193567847,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1586524753
    },
    {
        "content": "<p>even if you can't functorially compute the solution from the formula, you can say a lot of the structure of the problem. That is the focus of my upcoming research projects, if anyone wants to collaborate.</p>",
        "id": 193568084,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1586524930
    },
    {
        "content": "<p>I agree, for a lot of things this perspective is unavoidable. Still, the way I see it is that \"when you have a strict functor then you can claim to really have captured what is going on\". To give an example, Quantum Mechanics is full of emergent behavior (think about entangled states) but all the monoidal functors in CQM are strict. This means, in my opinion, that we are able to completely classify the emergent behavior in this field. All in all there is a difference between \"emergent behavior which is accounted for in your model\" and \"emergent behavior that we don't know exactly where it comes from\".</p>",
        "id": 193568118,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586524959
    },
    {
        "content": "<p>Yeah I think that difference is important. It is almost like \"complex behavior\" the behavior of a complex (multiple things together) is more complicated than the behavior of the parts, vs \"emergent behavior\" when you complex things together, it gets complicated in an unexplained way. We can probably think of that as unexplained variance in a statistical model. As you increase the complexity (degrees of freedom) of a statistical model, you explain more of the variance in the data. But there is always some unexplained variability that is the randomness inherent to the underlying phenomena.</p>",
        "id": 193568795,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1586525451
    },
    {
        "content": "<p>The freedom the decorated/structured cospan approach gives you in terms of choosing the inputs/outputs is interesting/under appreciated/potentially confusing. When talking to certain audiences, I would pivot and talk about 'boundary states' as the union of the images of input/output cospan legs, e.g. <a href=\"https://www.mdpi.com/1099-4300/18/4/140/htm\" title=\"https://www.mdpi.com/1099-4300/18/4/140/htm\">https://www.mdpi.com/1099-4300/18/4/140/htm</a></p>\n<p>Then if you want to glue along part of the boundary instead of the whole thing, you basically have to introduce the subset of the boundary shared with the other system and you more or less get back into this whole input/output or left/right interface setup. One way I thought about this stuff (inspired by the chemistry/markov semantics) is that boundary states don't obey the 'closed' system dynamics, they have some other stuff going on. If your open reaction network or Markov process is in a steady state, there can be some extra stuff flowing in/out beyond the closed system dynamics at the boundary states. In chemistry/physics this extra stuff can come from a 'reservoir,' which basically is a system that can give/take particles/probability as needed to maintain the steady state. Alternatively, you can look at having some other open chemical reaction network/markov process provide/receive the extra stuff, i.e. composing and then looking at steady states.</p>",
        "id": 193598609,
        "sender_full_name": "Blake Pollard",
        "timestamp": 1586541562
    },
    {
        "content": "<p>One interesting thing about the structured setups is that if you have some gizmo, i.e. directed graphs, petri nets, maybe with some labels etc, then all the all the left adjoints, say from set into the category of gizmos, give you different possible 'interface' types.</p>",
        "id": 193600003,
        "sender_full_name": "Blake Pollard",
        "timestamp": 1586542296
    },
    {
        "content": "<p>This is all very cool! Recently, I've been wondering about systems that both have this asynchronous \"gluing along boundary states\" of composition and a synchronous input/ouput composition in the style of these open dynamical systems <a href=\"https://youtu.be/8T-Km3taNko\" title=\"https://youtu.be/8T-Km3taNko\">https://youtu.be/8T-Km3taNko</a>. Dynamical systems defined by indexed vector fields have both types of composition and I was wondering about other systems that do. My original questions was how to think about petri nets with this second type of composition!</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"8T-Km3taNko\" href=\"https://youtu.be/8T-Km3taNko\" title=\"https://youtu.be/8T-Km3taNko\"><img src=\"https://i.ytimg.com/vi/8T-Km3taNko/default.jpg\"></a></div>",
        "id": 193605154,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545277
    },
    {
        "content": "<p>Maybe the \"message level\" connections <span class=\"user-mention\" data-user-id=\"276438\">@Fabrizio Genovese</span> pointed to will fit the bill</p>",
        "id": 193605260,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276589\">Sophie Libkind</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193605154\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193605154\">said</a>:</p>\n<blockquote>\n<p>This is all very cool! Recently, I've been wondering about systems that both have this asynchronous \"gluing along boundary states\" of composition and a synchronous input/ouput composition in the style of these open dynamical systems <a href=\"https://youtu.be/8T-Km3taNko\" title=\"https://youtu.be/8T-Km3taNko\">https://youtu.be/8T-Km3taNko</a>. Dynamical systems defined by indexed vector fields have both types of composition and I was wondering about other systems that do. My original questions was how to think about petri nets with this second type of composition!</p>\n</blockquote>\n<p>This is one of the main things I've worked on in the last year or so. Precisely how to do both things in the same formalism</p>",
        "id": 193605391,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545391
    },
    {
        "content": "<p>Both types of composition in the same formalism?</p>",
        "id": 193605440,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545427
    },
    {
        "content": "<p>There are nice formalisms to do these things separately (unfortunately they are bot called \"open petri nets\" causing some confusion), but doing both at the same time is tricky</p>",
        "id": 193605442,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545427
    },
    {
        "content": "<p>I've run into the same linguistic problem with dynamical systems</p>",
        "id": 193605508,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545447
    },
    {
        "content": "<p>Yes. I want one categorical model where I can connect both synchronously and asynchronously</p>",
        "id": 193605509,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545448
    },
    {
        "content": "<p>So the stage I'm at now is that I disregarded ports altogether and studied the morphisms in the category of nets with a semantics attached to them which give me this kind of gluing</p>",
        "id": 193605582,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545496
    },
    {
        "content": "<p>what makes doing both at the same time tricky?</p>",
        "id": 193605583,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545497
    },
    {
        "content": "<p>Now I should get back to ports and try to have them back in in the picture</p>",
        "id": 193605609,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545515
    },
    {
        "content": "<p>So basically gluing along places amounts to compute pushout, while gluing along transitions amounts to do a double pushout</p>",
        "id": 193605679,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545560
    },
    {
        "content": "<p>And I still don't know precisely how could I have ports that allow me to do both at the same time <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 193605743,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545576
    },
    {
        "content": "<p>a transition here is a transition of the petri net?</p>",
        "id": 193605763,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545588
    },
    {
        "content": "<p>Yup</p>",
        "id": 193605802,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545615
    },
    {
        "content": "<p>Gluing along transitions = synchronizing</p>",
        "id": 193605817,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545624
    },
    {
        "content": "<p>Let me see if i understand this...</p>",
        "id": 193605857,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545649
    },
    {
        "content": "<p>I'm confused!</p>",
        "id": 193605926,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545682
    },
    {
        "content": "<p>What does it mean to synchronize along transitions</p>",
        "id": 193605960,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545691
    },
    {
        "content": "<p>?</p>",
        "id": 193605965,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545692
    },
    {
        "content": "<p>It means that you wanna say \"when this transition fires, this other transition has to fire as well\"</p>",
        "id": 193606027,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545726
    },
    {
        "content": "<p>So you can immagine that transitions can \"exchange messages between each other\" that signal when a transition is firing</p>",
        "id": 193606062,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545749
    },
    {
        "content": "<p>and you want to synchronize the firings of different transitions</p>",
        "id": 193606070,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545758
    },
    {
        "content": "<p>For instance you could have a petri net with two transitions A -&gt; B and C -&gt; D. If you synchronize them then you obtain a petri net with one transition A,C -&gt; B, D, in which the two \"single transitions\" are conflated into one</p>",
        "id": 193606213,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545819
    },
    {
        "content": "<p>So the Petri net you get is the one that models the idea that \"every time the first transition fires the second has to fire as well, and vice-versa\"</p>",
        "id": 193606266,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545853
    },
    {
        "content": "<p>Do you want to do this without conflating the places?</p>",
        "id": 193606331,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586545893
    },
    {
        "content": "<p>Yes, transitions should be able to sync even without sharing resources</p>",
        "id": 193606402,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545923
    },
    {
        "content": "<p>This is literally the modelling of something happening at \"event level\"</p>",
        "id": 193606432,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545939
    },
    {
        "content": "<p>You are saying \"every time this event happens, this other event has to happen as well\"</p>",
        "id": 193606454,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586545954
    },
    {
        "content": "<p>I'm pretty new to petri nets and so far I've mostly used them as petri nets with rates to get a differential equation. Do these concepts translate?</p>",
        "id": 193606563,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586546018
    },
    {
        "content": "<p>I don't know about PT nets with rates, we always use \"discrete nets\" with tokens</p>",
        "id": 193606635,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546048
    },
    {
        "content": "<p>for us firing is a discrete event, so it makes sense to think about them in this way</p>",
        "id": 193606680,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546077
    },
    {
        "content": "<p>that makes sense</p>",
        "id": 193606913,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586546224
    },
    {
        "content": "<p>When you think about discrete nets with tokens, what category are you using?</p>",
        "id": 193606942,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586546244
    },
    {
        "content": "<p>The category I \"really\" work in is the category of free symmetric strict monoidal categories</p>",
        "id": 193607087,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546314
    },
    {
        "content": "<p>since every Petri nets presents a free SMC</p>",
        "id": 193607100,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546322
    },
    {
        "content": "<p>And gluings amount to quotient object/morphism generators in these categories</p>",
        "id": 193607133,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546350
    },
    {
        "content": "<p>You can find a reasonably clean explanation of how we use PT nets here: <a href=\"https://arxiv.org/abs/1906.07629\" title=\"https://arxiv.org/abs/1906.07629\">https://arxiv.org/abs/1906.07629</a></p>",
        "id": 193607239,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546414
    },
    {
        "content": "<p>The relevant chapters are from chapter 4 I think</p>",
        "id": 193607276,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546455
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 193607411,
        "sender_full_name": "Sophie Libkind",
        "timestamp": 1586546542
    },
    {
        "content": "<p>So the most imporant difference with other formalisms is that we don't use these nets for chemistry, but for orchestraring computation. So we need to be able to distinguish single tokens. This is called \"single token philosophy\". The consequence is that we don't use the net to present  free commutative strict monoidal categories like the UCR group does, but we use them to present free symmetric strict monoidal categories</p>",
        "id": 193607471,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586546601
    },
    {
        "content": "<p>Which means, I believe, that you need pre-nets.</p>",
        "id": 193614568,
        "sender_full_name": "John Baez",
        "timestamp": 1586550813
    },
    {
        "content": "<p>I should make Jade rewrite our open Petri net paper for pre-nets.   She did a bunch of work on those in <a href=\"https://arxiv.org/abs/1904.09091\" title=\"https://arxiv.org/abs/1904.09091\">Generalized Petri nets</a>.   She could easily do open generalized Petri nets, which would include open pre-nets.  But the fun part would be getting a functorial semantics for them.</p>",
        "id": 193615204,
        "sender_full_name": "John Baez",
        "timestamp": 1586551161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193614568\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193614568\">said</a>:</p>\n<blockquote>\n<p>Which means, I believe, that you need pre-nets.</p>\n</blockquote>\n<p>Those won't cut it. I wrote a paper about why: <a href=\"https://arxiv.org/abs/1904.12974\" title=\"https://arxiv.org/abs/1904.12974\">https://arxiv.org/abs/1904.12974</a></p>",
        "id": 193619608,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586554050
    },
    {
        "content": "<p>I've read the generalized Petri nets paper by Jade, it's very nice!</p>",
        "id": 193619698,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586554107
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276589\">Sophie Libkind</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193492168\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193492168\">said</a>:</p>\n<blockquote>\n<p>Thinking out loud: Can I turn a petri net into a moore machine by taking states to be markings of the petri net?</p>\n</blockquote>\n<p>There's probably some good ways to do that!  Don't forget that thought!</p>",
        "id": 193634535,
        "sender_full_name": "John Baez",
        "timestamp": 1586567238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193500061\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193500061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193499771\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193499771\">said</a>:</p>\n<blockquote>\n<p>Just a small aside: The notation input/output may be misleading. Gluing along places is an asynchronous operation, meaning that it does not have directionality per se. So suppose you compose nets N and M, where the output of N matches the input of M. You would expect then that tokens in the output of N get consumed by M, but N could as well \"take them back\" (e.g if the output place of N is also the input of one of its transitions). For this reason it's probably better to say left and right ports</p>\n</blockquote>\n<p>Also, this sort of behavior is what makes difficult to compositionally evaluate the reachability relation starting from the reachability relation of the components. That is, when you compose along places you can, for instance, create new loops in the composed net, which make the reachability relation richer</p>\n</blockquote>\n<p>oh, this is really interesting</p>",
        "id": 193675224,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586632854
    },
    {
        "content": "<p>(tangentially: personally i would almost <em>define</em> \"compositionality\" as the opposite of \"emergent-ness\" (\"emergency\"?), so something lax sounds to me like it's non-compositional)</p>",
        "id": 193675290,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586632935
    },
    {
        "content": "<p>the thing about creating loops from gluing together reminds me of something, though...</p>",
        "id": 193675303,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586632955
    },
    {
        "content": "<p>oh, i think i know what it is—thinking about string diagrams in compact closed categories &amp; how they appear to have \"loops\" and \"backwards arrows\" but formally everything can be sliced up just like normal in an ordinary monoidal category string diagram</p>",
        "id": 193675338,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586633042
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193675290\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/petri.20nets/near/193675290\">said</a>:</p>\n<blockquote>\n<p>(tangentially: personally i would almost <em>define</em> \"compositionality\" as the opposite of \"emergent-ness\" (\"emergency\"?), so something lax sounds to me like it's non-compositional)</p>\n</blockquote>\n<p>I totally agree with you on this, but this point of view is controversial. I imagine for many people a lax functor is still compositional.</p>",
        "id": 193675553,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586633325
    },
    {
        "content": "<p>In the case of petri net, the drawback is evident in applications: If the functor is not strict, you can't use the component nets to simplify the model-checking of the composite net.</p>",
        "id": 193675584,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586633360
    },
    {
        "content": "<p>BTW, we know reachability is a superexponential problem, so there will always be corner cases. Still, we can develop compositional model checking techniques to reduce the corner cases to a minimum.</p>",
        "id": 193675602,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586633399
    },
    {
        "content": "<p>compact closed categories and Petri nets are related, but in a bit more strange way: <a href=\"https://arxiv.org/abs/1805.05988\" title=\"https://arxiv.org/abs/1805.05988\">https://arxiv.org/abs/1805.05988</a><br>\nThe results in this paper were then further generalized by <span class=\"user-mention\" data-user-id=\"276037\">@Jade Master</span>  in  <a href=\"https://arxiv.org/abs/1904.09091\" title=\"https://arxiv.org/abs/1904.09091\">https://arxiv.org/abs/1904.09091</a></p>",
        "id": 193675678,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586633471
    },
    {
        "content": "<p>oh hey i have that second paper open in a tab right now :)</p>",
        "id": 193676238,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586634177
    },
    {
        "content": "<p>Speaking of laxness and compositionality: Jade and I came up with a reachability semantics for open Petris that's a <em>lax monoidal</em> double functor in our paper <a href=\"http://math.ucr.edu/home/baez/petri.pdf\" title=\"http://math.ucr.edu/home/baez/petri.pdf\">Open Petri nets</a>, and the laxness comes from the ability of tokens to make \"zigzags\" like this:</p>\n<p><a href=\"/user_uploads/21317/wp0xzLk7BVWL0ZASgdbAVkKo/open_petri_QP.png\" title=\"open_petri_QP.png\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>  </mtext></mrow><annotation encoding=\"application/x-tex\">\\;</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0em;vertical-align:0em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span></span></span></a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/wp0xzLk7BVWL0ZASgdbAVkKo/open_petri_QP.png\" title=\"/user_uploads/21317/wp0xzLk7BVWL0ZASgdbAVkKo/open_petri_QP.png\"><img src=\"/user_uploads/21317/wp0xzLk7BVWL0ZASgdbAVkKo/open_petri_QP.png\"></a></div><p>But in <a href=\"http://math.ucr.edu/home/baez/structured/structured_2.pdf\" title=\"http://math.ucr.edu/home/baez/structured/structured_2.pdf\">my talk this week</a> I described a different reachability semantics that's a <em>strong monoidal</em> double functor, not lax.   </p>\n<p>So, it's a fun and slightly subtle business.</p>",
        "id": 193687338,
        "sender_full_name": "John Baez",
        "timestamp": 1586652743
    },
    {
        "content": "<p>You mean it's lax <em>both</em> as a functor and as a monoidal functor, right? A \"lax monoidal lax double functor\"? Unless I'm confused, this example was one of my motivations for <a class=\"stream-topic\" data-stream-id=\"229156\" href=\"/#narrow/stream/229156-practice.3A-applied-ct/topic/measuring.20non-compositionality\">#practice: applied ct &gt; measuring non-compositionality</a>. Missed the seminar, now I have some serious motivation to catch up to find out what the trick is</p>",
        "id": 193705542,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586687548
    },
    {
        "content": "<p>I'm talking about laxness of functoriality, not monoidality.</p>",
        "id": 193730291,
        "sender_full_name": "John Baez",
        "timestamp": 1586725808
    },
    {
        "content": "<p>The lax functoriality of Jade's &amp; my original reachability semantics is explained in this blog article starting at \"It's easy to see why\":</p>\n<p><a href=\"https://johncarlosbaez.wordpress.com/2018/08/18/open-petri-nets-part-2/\" title=\"https://johncarlosbaez.wordpress.com/2018/08/18/open-petri-nets-part-2/\">https://johncarlosbaez.wordpress.com/2018/08/18/open-petri-nets-part-2/</a></p>",
        "id": 193730320,
        "sender_full_name": "John Baez",
        "timestamp": 1586725905
    },
    {
        "content": "<p>I didn't discuss this at all in my talk; instead I presented another reachability semantics that's strongly, not laxly functorial.    But this other semantics is much more \"bulky\" - it's not doing any \"black-boxing\", it's keeping track of reachability relations involving not just input and output places, but <em>all</em> places.</p>",
        "id": 193730388,
        "sender_full_name": "John Baez",
        "timestamp": 1586726000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276438\">@Fabrizio Genovese</span> Do you know anything about the complexity of the reachability problem for integer nets?</p>",
        "id": 194566808,
        "sender_full_name": "Jade Master",
        "timestamp": 1587248852
    },
    {
        "content": "<p>Nope, but i'd guess is lower than the one for standard nets</p>",
        "id": 194566855,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587248889
    },
    {
        "content": "<p>Since you can produce/cancel stuff everywhere you have more strategies to travel from a place to another</p>",
        "id": 194566864,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587248925
    },
    {
        "content": "<p>so it's at best as complex as the standard case</p>",
        "id": 194566870,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587248941
    },
    {
        "content": "<p>An idea I had quite a while ago was to take Jade's Lawvere theory setup for generalized nets and bump it up to 2-theories so you can plug in the SMC and cartesian cat pseudomonads. The hope would be to represent individual token philosophy.</p>",
        "id": 194578834,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587271236
    },
    {
        "content": "<p>god dammit is there anyone on this server who <em>hasn't</em> apparently had that idea</p>",
        "id": 194579289,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587272237
    },
    {
        "content": "<p>It's the natural next step.</p>",
        "id": 194579914,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587273441
    },
    {
        "content": "<p>alright this is true</p>",
        "id": 194580163,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587273966
    },
    {
        "content": "<p>I don't think it would work</p>",
        "id": 194606234,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587313836
    },
    {
        "content": "<p>I already tried to tame the combinatorial nightmare of symmetries not composing as we would like them to using bicategories</p>",
        "id": 194606248,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587313863
    },
    {
        "content": "<p>And well, it doesn't work. It was a more naive setting than the one you are suggesting tho</p>",
        "id": 194606266,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587313888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> I like that idea.</p>",
        "id": 194618615,
        "sender_full_name": "Jade Master",
        "timestamp": 1587331263
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>. Maybe the generating data would be like a graph in the Kleisli category  of the 2-monad</p>",
        "id": 194618851,
        "sender_full_name": "Jade Master",
        "timestamp": 1587331685
    },
    {
        "content": "<p>In the case of SMC's you would have a category of transitions, a category of places, and two functors from the transitions to the free smc on the places.</p>",
        "id": 194618868,
        "sender_full_name": "Jade Master",
        "timestamp": 1587331783
    },
    {
        "content": "<p>Hm. This isn't quite what you said but maybe it's fun to think about too.</p>",
        "id": 194618924,
        "sender_full_name": "Jade Master",
        "timestamp": 1587331835
    },
    {
        "content": "<p>Right. The problem is that if you \"2\" the Lawvere theory you also gotta \"2\" the category of models that it lands in.</p>",
        "id": 194619518,
        "sender_full_name": "Jade Master",
        "timestamp": 1587332880
    },
    {
        "content": "<p>So that requires you to have more sophisticated generating data like what I described.</p>",
        "id": 194619590,
        "sender_full_name": "Jade Master",
        "timestamp": 1587332972
    },
    {
        "content": "<p>I mean, you can still take models in Set, because it should be generating a smc internal to Set, so just an smc.</p>",
        "id": 194699923,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587400053
    },
    {
        "content": "<p>that sounds slightly off to me</p>",
        "id": 194761014,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587445243
    },
    {
        "content": "<p>if SMC is the lawvere 2-theory, then we want nice pseudofunctors SMC → Cat to be SMCs, right?</p>",
        "id": 194761030,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587445270
    },
    {
        "content": "<p>so a model in Set should be a nice pseudofunctor SMC → Set</p>",
        "id": 194761041,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587445301
    },
    {
        "content": "<p>but that's not an internal SMC, i think? it's just a commutative monoid again, because the higher structure necessarily trivializes into equalities</p>",
        "id": 194761075,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587445322
    },
    {
        "content": "<p>Oh duh. Yes, you take models in Cat to get actual general SMCs.</p>",
        "id": 194864417,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587504782
    },
    {
        "content": "<p>A note on the application of Petri nets to compartmental models in epidemiology, such as the commonly cited SIR model:</p>",
        "id": 203544268,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594407023
    },
    {
        "content": "<p>...these are simplifying models, which are predicated on the assumption that the epidemic process is Markovian.    While this is a plausible assumption for the reaction Susceptible+Infected --&gt; Infected+Infected, it is not plausible for the reaction Infected --&gt; Recovered.   The distribution of the infection period is hardly exponential.   The simplest model for the infection period would be that it is a constant K.   That would lead to a rate equation in which the derivative of the Recovered population equals the size of the Infected population from K days back.</p>",
        "id": 203544298,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594407038
    },
    {
        "content": "<ul>\n<li>Sherborne, N., Miller, J.C., Blyuss, K.B. et al. <a href=\"https://link.springer.com/article/10.1007/s00285-017-1155-0\">Mean-field models for non-Markovian epidemics on networks</a>, J. Math. Biol. 76, 755–778 (2018).</li>\n</ul>",
        "id": 203544850,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594407328
    },
    {
        "content": "<blockquote>\n<p>While network models capture contact more accurately, the assumption that the underlying stochastic transmission and recovery processes are memoryless (Keeling and Eames 2005; Volz 2008; House and Keeling 2011) remains restrictive. Of course, memoryless processes are mathematically more tractable and relatively simple to analyse when compared to models where the inter-event times are chosen from distributions other than the exponential. However, when compared to data, these assumptions are often violated. For example, diseases can exhibit unique and non-Markovian behaviour in terms of the strength and duration of infection. In this respect, the distribution of the infectious period is usually better approximated by some peaked distribution with a well defined mean, see e.g. Bailey (1954), Gough (1977), Wearing et al. (2005) and references therein.</p>\n</blockquote>",
        "id": 203544953,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594407367
    },
    {
        "content": "<p>The Markov assumption involved in SIR could be a workable approximation as the infection period is small in comparison to the duration of the epidemic.  But it does suggest that the application SIR etc.  deserves to reviewed in each empirical context as there is a built-in error term here.</p>",
        "id": 203545998,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594407870
    },
    {
        "content": "<p>Of course there is another simplifying assumption in these models, which is that the population is well-mixed.   But that is commonly acknowledged.  This one deserves to be included in the footnotes as well.   The wikipedia article on <a href=\"https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology\">compartmental models in epidemiology</a>, for example, makes no mention of it.  I will add something there...</p>",
        "id": 203546617,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594408157
    },
    {
        "content": "<p>Interesting..... I've been wondering whether Petri nets are actually used in real life epidemiology, or if that's a just a lie that keeps circulating. (From what little I've seen of epidemiology it seems to be mostly statistics)</p>",
        "id": 203553420,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594412129
    },
    {
        "content": "<p>It looks like both compartmental models and agent-based models are being used these days.</p>\n<ul>\n<li>David Adam, <a href=\"https://www.nature.com/articles/d41586-020-01003-6\">Special report: The simulations driving the world's response to COVID-19</a>, Nature news feature, April 2, 2020.</li>\n</ul>",
        "id": 203558950,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594415932
    },
    {
        "content": "<p>Agent-based models are a stochastic refinement, which in principle will track the stochastic behaviors of each individual.   As such, they are data-hungry.</p>",
        "id": 203559098,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594416038
    },
    {
        "content": "<p>Yes compartmental models are the main tool for understanding the dynamics a the macro scale. ABMs are useful for understanding the effects of intervention strategies like modeling the movement of people through a hospital floor and deciding how to place PPE or hand hygiene resources to maximize effectiveness.</p>",
        "id": 203559255,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1594416170
    },
    {
        "content": "<p>That makes sense.</p>",
        "id": 203560374,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594417037
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 203560577,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594417175
    },
    {
        "content": "<ul>\n<li>Arino J., van den Driessche P. (2006) <a href=\"https://link.springer.com/chapter/10.1007%2F1-4020-3647-7_13\">Time delays in epidemic models</a>.  In: Arino O., Hbid M., Dads E.A. (eds) Delay Differential Equations and Applications. NATO Science Series (II. Mathematics, Physics and Chemistry), vol 205. Springer, Dordrecht.</li>\n</ul>\n<blockquote>\n<p>Abstract.  Continuous time deterministic epidemic models are traditionally formulated as systems of ordinary differential equations for the numbers of individuals in various disease states, with the sojourn time in a state being exponentially distributed. Time delays are introduced to model constant sojourn times in a state, for example, the infective or immune state. Models then become delay-differential and/or integral equations. For a review of some epidemic models with delay see van den Driessche [228]. More generally, an arbitrarily distributed sojourn time in a state, for example, the infective or immune state, is used by some authors (see [69] and the references therein).</p>\n</blockquote>",
        "id": 203560720,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594417254
    },
    {
        "content": "<p>I see there's a whole bunch of literature on non-Markovian stochastic Petri nets.</p>",
        "id": 203561367,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594417685
    },
    {
        "content": "<p>Here are a bunch of different implementations of SIR models <a href=\"https://github.com/epirecipes/sir-julia\">https://github.com/epirecipes/sir-julia</a></p>",
        "id": 203561393,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1594417711
    },
    {
        "content": "<p>When things get fancy enough it may cease to be useful to call them \"Petri nets\", but they can still be useful.</p>",
        "id": 203561415,
        "sender_full_name": "John Baez",
        "timestamp": 1594417735
    },
    {
        "content": "<p>The maintainer of that repo was at a University in the UK until recently now he works at Microsoft studying infectious disease prediction.</p>",
        "id": 203561475,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1594417793
    },
    {
        "content": "<p>One of our goals in using open Petri nets is to expand the complexity of the models while ensuring correctness and the ability to estimate parameters. Because as model complexity increases, the data requirements for calibration also increase and we want to find ways to mitigate that.</p>",
        "id": 203561662,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1594417922
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275927\">@James Fairbanks</span> Is there a good place to read more about the project(s) you are referring to?</p>",
        "id": 203562032,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594418152
    },
    {
        "content": "<p>I'm glad Petri nets are being useful to you, James!</p>",
        "id": 203562088,
        "sender_full_name": "John Baez",
        "timestamp": 1594418170
    },
    {
        "content": "<p>The AlgebraicJulia repo is where we are currently coordinating activity</p>",
        "id": 203562140,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1594418215
    },
    {
        "content": "<p>Thanks James!</p>",
        "id": 203565138,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594420605
    },
    {
        "content": "<p>I'm looking for a solid, modern textbook in mathematical epidemiology.   I see that Springer has a bunch of books on the subject.   If anyone has a favorite to recommend...   Thanks</p>",
        "id": 203568255,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594423539
    },
    {
        "content": "<p>I don't have one.  Sounds like a nice question.  (You could ask Carl Bergstrom on Twitter.)</p>",
        "id": 203568423,
        "sender_full_name": "John Baez",
        "timestamp": 1594423714
    },
    {
        "content": "<p>Regarding delayed differential equations, you may be able to sequence several Markov flows in series to approximate the delay. Each will increase the order of a gamma function, approximating a delayed delta function for N large enough.</p>",
        "id": 203574169,
        "sender_full_name": "Paul Pukite",
        "timestamp": 1594431126
    },
    {
        "content": "<p>Speaking from 10,000 feet away (having never done such simulations):</p>",
        "id": 203575588,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594433564
    },
    {
        "content": "<p>I would think that, given that you are running a simulation, using delayed differential equations wouldn't be worse than using non-delayed equations, given that you have access to the whole history of the simulation.</p>",
        "id": 203575652,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594433683
    },
    {
        "content": "<p>There's also the theoretical question of putting a bound on how much error would be caused by simplifying to the Markovian equations.</p>",
        "id": 203575746,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594433846
    },
    {
        "content": "<p>Searching around, I'm having trouble finding any clear answers to how long the covid-19 \"infectious period\" actually is.   Ultimately we'd want to know its distribution, and use that as a windowing function when looking back in time during the simulation.   Even that would be simplified, as it ignores the fact that infectiousness is a matter of degree.</p>",
        "id": 203576581,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594435217
    },
    {
        "content": "<p>One could use simulations to get a handle on the error bound.   I.e., just compare the global solutions produced by refined models of the infectious period with the solutions produced by the simple ODEs.</p>",
        "id": 203576673,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594435340
    },
    {
        "content": "<p>If there were a sensitivity here then we could regress against empirical data to estimate the infectivity parameters.</p>",
        "id": 203576797,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594435632
    },
    {
        "content": "<p>My WAG is that there isn't a significant sensitivity here, that these variations would just fall into the pot of noise that's already there.    Partly this is based on the fact that you don't hear a lot of discussion about this aspect of the simulation.   But clearly these are not truly satisfying answers.</p>",
        "id": 203576857,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594435760
    },
    {
        "content": "<p>Given the latest information that the virus is airborne, and therefore air circulation and dispersion are important factors, a rethinking in terms of fluid dynamics and filtration may be forthcoming. Clean-room thinking</p>",
        "id": 203604092,
        "sender_full_name": "Paul Pukite",
        "timestamp": 1594485687
    },
    {
        "content": "<p>Let me know if I'm missing something here, but it sounds like that's still consistent with a compartmental, reaction-network based framework.    It would be change to our understanding of the physical mechanisms by which the reactions are \"implemented.\"</p>",
        "id": 203606915,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594490440
    },
    {
        "content": "<p>The idea of compartments clearly remains.   And the aggregate law which says that the derivative of Infected is proportional to the product of Infected and Susceptible still looks valid, given a set of general conditions for quality of air filtration, etc.</p>",
        "id": 203606981,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594490534
    },
    {
        "content": "<p>So you have a \"stochastic Petri net,\" with a coefficient for each process.   These coefficients show up in the ODEs for the rate equations.   The coefficients themselves are complex functions of natural parameters like virus transmissibility, incubation period, as well as social parameters like the degree of distancing; now we add into that mix parameters like average quality of air filtration.</p>",
        "id": 203607206,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594490917
    },
    {
        "content": "<p>Not sure what the goal is. If it can be shown that by increasing social distance by another meter that viral transmission can be reduced by orders of magnitude via 3D dispersion, that's what will be important to model. I would like to concentrate on the applied aspects and potentially determine which factors make a difference to stopping the spread of the disease.</p>",
        "id": 203616021,
        "sender_full_name": "Paul Pukite",
        "timestamp": 1594506082
    },
    {
        "content": "<p>That would be a great goal for you to pursue, especially given your expertise in the physical sciences.</p>",
        "id": 203659718,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594585867
    },
    {
        "content": "<p>But we’re talking about different branches of epidemiology.   One is the investigation of local physical mechanisms of transmission.  The other is “macro-epidemiology,” which studies the movement of aggregate quantities, abstracted from physical detail.</p>",
        "id": 203659784,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594586009
    },
    {
        "content": "<p>When a baseball player hits a home run, the event can be understood on multiple levels:  the sportscaster’s description; the physicist speaking in terms of center of mass of the ball, collisions, parabolic trajectories; the more detailed view of the materials scientist.</p>",
        "id": 203659833,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594586043
    },
    {
        "content": "<p>Regarding goals.   As science, the first goal is to understand the reality.  This includes modeling, and reconciliation with empirical data.</p>",
        "id": 203659922,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594586234
    },
    {
        "content": "<p>Compartmental models are integral part of the textbook introductions to mathematical epidemiology, e.g. <a href=\"https://www.springer.com/us/book/9781489976116\">https://www.springer.com/us/book/9781489976116</a></p>",
        "id": 203659937,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594586280
    },
    {
        "content": "<p>There’s more, though, as there is a clear need for macro-epidemiological models to inform the trade-offs faced by public policy planners.   It’s all over the map that SEIR models are a key part of the practitioner’s toolbox for COVID-19 modeling.</p>",
        "id": 203659979,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594586303
    },
    {
        "content": "<p>More generally speaking, applied reaction networks are of particular interest to the ACT community, as they give a clear example of a mathematical concept with categorical properties and substantive empirical applications.</p>",
        "id": 203660453,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594587061
    },
    {
        "content": "<p>Culturally, the aim here is to create an interdisciplinary community drawing from a diverse range of mathematical fields and application domains, with the hope of promoting new collaborations, connections and discoveries.   It’s an exploratory quest.</p>",
        "id": 203660815,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594587576
    },
    {
        "content": "<p>Diffusion is compartmental modeling on an infinitesimal scale, whereby each tiny compartment is connected to an adjacent compartment by a random walk.  This is a basic interpretation based on the understanding that an airborne virus will travel by convection and turbulent diffusion. I mention this because it is an application of compartmental models, but extended to a continuum limit.</p>",
        "id": 203791969,
        "sender_full_name": "Paul Pukite",
        "timestamp": 1594691827
    },
    {
        "content": "<p>Nice observation</p>",
        "id": 203909413,
        "sender_full_name": "David Tanzer",
        "timestamp": 1594778158
    },
    {
        "content": "<p>Notes on aerosol transmission <a href=\"https://twitter.com/Bob_Wachter/status/1283970874631000065\">https://twitter.com/Bob_Wachter/status/1283970874631000065</a> \"Aerosol scientists like Milton think about mechanisms/particles differently than MDs.\"</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/Bob_Wachter/status/1283970874631000065\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/512663918464880640/UN8gLKaX_normal.jpeg\"></a><p>1/ Covid (<a href=\"https://twitter.com/UCSF\">@UCSF</a>) Chronicles, Day 121\n\nGrand rounds today, here: <a href=\"https://t.co/uRA1yZUt0J\">https://tinyurl.com/y5ut4435</a>. As I said in my intro (@ 1:00), we covered perhaps the most important topics in the world today: how SARS-Co-V-2 spreads &amp; what can be done to prevent it.</p><span>- Bob Wachter (@Bob_Wachter)</span></div></div>",
        "id": 204173880,
        "sender_full_name": "Paul Pukite",
        "timestamp": 1594966563
    }
]