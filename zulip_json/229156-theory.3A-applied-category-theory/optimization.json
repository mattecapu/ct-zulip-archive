[
    {
        "content": "<p>There is a little, but not much. This is one of the main things I'm thinking about. Michael Johnson did a bunch of related things. There is also a paper on MDPs viewed coalgebraically by Helle Hansen et al</p>",
        "id": 191623125,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585062406
    },
    {
        "content": "<p>My explorations in \"everything is lenses\" has quite a lot to say about optimisation, I think</p>",
        "id": 191623807,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585062626
    },
    {
        "content": "<p>If I could set one question in this area: People sometimes talk about \"Kalman duality\", can it be formalised in the usual settings of duality theory?</p>",
        "id": 191623919,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585062672
    },
    {
        "content": "<p>I am particularly interested in what category theory can say about the following problem <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>min</mtext><mi>u</mi></msub><mi>J</mi><mo>=</mo><mi mathvariant=\"normal\">Σ</mi><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{min}_u J = \\Sigma h(x, u)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">min</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Σ</span><span class=\"mord mathdefault\">h</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">u</span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = f(x, u)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">u</span><span class=\"mclose\">)</span></span></span></span> with constraints <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"script\">X</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathcal{X}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo>∈</mo><mi mathvariant=\"script\">U</mi></mrow><annotation encoding=\"application/x-tex\">u \\in \\mathcal{U}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">u</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span></span></span></span></p>",
        "id": 191624000,
        "sender_full_name": "Georgios Bakirtzis",
        "timestamp": 1585062701
    },
    {
        "content": "<p>In general, my questions in optimization and particularly optimal control and category theory is can we come up with a better algorithm using a categorical formulation a la UMAP?</p>",
        "id": 191624659,
        "sender_full_name": "Georgios Bakirtzis",
        "timestamp": 1585062922
    },
    {
        "content": "<p>Don't really know where to start though.</p>",
        "id": 191624712,
        "sender_full_name": "Georgios Bakirtzis",
        "timestamp": 1585062941
    },
    {
        "content": "<p>I was fiddling in a related area recently.  <a href=\"http://www.philipzucker.com/categorical-combinators-for-convex-optimization-and-model-predictive-control-using-cvxpy/\" target=\"_blank\" title=\"http://www.philipzucker.com/categorical-combinators-for-convex-optimization-and-model-predictive-control-using-cvxpy/\">http://www.philipzucker.com/categorical-combinators-for-convex-optimization-and-model-predictive-control-using-cvxpy/</a> There's at least one way in which optimization problems can be considered compositionally, compising by summing objectives and using minimization of the interior variables rather than just existentializing them out as in Rel. We swap one binding form for another. I've had a suspicion for a long while that the ADMM algorithm has a strong lensy flavor to it with a forward pass minimizing and the backward pass updating dual variables? I don't have this quite nailed down. ADMM feels like some kind of relative of backprop.</p>",
        "id": 191639086,
        "sender_full_name": "Philip Zucker",
        "timestamp": 1585068230
    }
]