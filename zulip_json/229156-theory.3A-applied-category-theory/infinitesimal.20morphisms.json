[
    {
        "content": "<p>If you do categorical systems theory, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∘</mo></mrow><annotation encoding=\"application/x-tex\">\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∘</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> both represent putting subsystems next to each other so in that sense \"space is discrete\". Similarly if you do categorical process theory <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∘</mo></mrow><annotation encoding=\"application/x-tex\">\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∘</span></span></span></span> represents sequencing so in that sense \"time is discrete\". I'd like to be able to get \"continuous time\" and \"continuous space\" category theory. The obvious thing to try is something sheaf-y. For example if you take the interval domain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> (ie. the poset whose elements are closed intervals in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> ordered by reverse inclusion). Suppose you send each real number to an object of your favourite category, and each interval <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">]</span></span></span></span> to a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(a) \\to F(b)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span></span></span></span>. Then you need a compatibility condition, so that for example if you have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,c]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">]</span></span></span></span> covered by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">]</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[b,c]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">]</span></span></span></span> then the resulting morphisms commute. Now for a discrete \"path\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><msub><mi>a</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>a</mi><mn>2</mn></msub><mo>&lt;</mo><mo>⋯</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; a_1 &lt; a_2 &lt; \\cdots &lt; 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> you get a finite composable sequence of morphisms. Then the interesting thing is to take the \"limit\" where you have a continuum of degenerate intervals <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,a]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">]</span></span></span></span> for every real number, and \"compose them together\" to get the morphism for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></p>",
        "id": 196096637,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588502682
    },
    {
        "content": "<p>Has anyone ever heard of anything like this?</p>",
        "id": 196096650,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588502709
    },
    {
        "content": "<p>(It might be more interesting if you take the domain of open intervals, so that the degenerate intervals <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,a]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">]</span></span></span></span> are no longer elements, but if I remember right they instead correspond to maximal ideals of the open interval domain)</p>",
        "id": 196096720,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588502805
    },
    {
        "content": "<p>My motivation is that I can get the (discrete time) Bellman equation to fall out from composing a bunch of optics together, and then taking a colimit to compose together an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>-chain of optics, ie. \"discrete time infinite horizon\". What I'd like to do is wave a sheaf theory magic wand and have the (continuous time) Hamilton-Jacobi-Bellman equation fall out</p>",
        "id": 196096882,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588503034
    },
    {
        "content": "<p>Can also think about <em>much</em> more general things if you extend from categories to operad algebras. For example if you have an operad describing the combinatorics of triangulations of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">]</mo><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">[0,1]^3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>, you could have an algebra of it describing using finite element methods to solve your favourite PDE on that triangulation. Then you want to be able to take a \"limit\" and say that as the triangulation gets arbitrarily fine your system converges to the original PDE</p>",
        "id": 196097208,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588503503
    },
    {
        "content": "<p>This sounds like something that geometers might have done already but not using that language...</p>",
        "id": 196097229,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588503587
    },
    {
        "content": "<p>This sounds similar to <a href=\"https://ncatlab.org/nlab/show/FQFT#QuantumMechanicsInSchroedingerPicture\" title=\"https://ncatlab.org/nlab/show/FQFT#QuantumMechanicsInSchroedingerPicture\">https://ncatlab.org/nlab/show/FQFT#QuantumMechanicsInSchroedingerPicture</a></p>",
        "id": 196098528,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588505491
    },
    {
        "content": "<p>It does, cool!</p>",
        "id": 196099170,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588506268
    },
    {
        "content": "<p>I do not have a formal answer, but I've long thought that a lesson one can take from Freyd's characterisation of the real interval is that the algebraic correlate of “continuous space” is “subdivision”. <br>\nSo one could work with higher-category-like gadgets which besides composition have a subdivision operation taking a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>a</mi><mo>→</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f: a \\to b</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> to a pair <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo>:</mo><mi>a</mi><mo>→</mo><mi>m</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo>:</mo><mi>m</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_1: a \\to m(f), f_2: m(f) \\to b</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">m(f)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span> is the “midpoint” of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span>, such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>=</mo><msub><mi>f</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>f</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">f = f_1;f_2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. Example: paths in a topological space taking <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>t</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\gamma(t), t \\in [0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>γ</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mo>=</mo><mi>γ</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\gamma_1(t) := \\gamma(t/2)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>γ</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mo>=</mo><mi>γ</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\gamma_2(t) := \\gamma((1+t)/2)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span>. Or the same thing with cubes in higher dimensions.<br>\nBut trying to impose axioms and get interesting examples, I think you would end up with something with a quite different flavour to CT -- you could think subdivision should be “weakly associative” in the path space example, but say you wanted to strictify, it would not make sense to take “paths up to homotopy” as in the fundamental groupoid, or you would quickly run into contradictions (in 'paths-up-to-homotopy' you can always pick the first or the second half to be trivial).<br>\nI imagine someone would have tried to do this as it seems like a simple idea, but I haven't looked very hard into it, and as always there's a chance it's a dead end.</p>",
        "id": 196103862,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588513018
    },
    {
        "content": "<p>This reminds me of convex sets (aka algebras of the f.s. probability monad), where instead of working up to homotopy you instead have a whole continuum of \"weighted midpoint\" operators and a slightly awkward associativity law between them</p>",
        "id": 196106251,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588516956
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196096637\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196096637\">said</a>:</p>\n<blockquote>\n<p>If you do categorical systems theory, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∘</mo></mrow><annotation encoding=\"application/x-tex\">\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∘</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> both represent putting subsystems next to each other so in that sense \"space is discrete\". Similarly if you do categorical process theory <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∘</mo></mrow><annotation encoding=\"application/x-tex\">\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∘</span></span></span></span> represents sequencing so in that sense \"time is discrete\". I'd like to be able to get \"continuous time\" and \"continuous space\" category theory. The obvious thing to try is something sheaf-y. For example if you take the interval domain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> (ie. the poset whose elements are closed intervals in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> ordered by reverse inclusion). Suppose you send each real number to an object of your favourite category, and each interval <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">]</span></span></span></span> to a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(a) \\to F(b)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span></span></span></span>. Then you need a compatibility condition, so that for example if you have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,c]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">]</span></span></span></span> covered by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">]</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[b,c]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">]</span></span></span></span> then the resulting morphisms commute. Now for a discrete \"path\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><msub><mi>a</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>a</mi><mn>2</mn></msub><mo>&lt;</mo><mo>⋯</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; a_1 &lt; a_2 &lt; \\cdots &lt; 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> you get a finite composable sequence of morphisms. Then the interesting thing is to take the \"limit\" where you have a continuum of degenerate intervals <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,a]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">]</span></span></span></span> for every real number, and \"compose them together\" to get the morphism for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></p>\n</blockquote>\n<p>This seems very convoluted to me.  I guess this comes from the philosophical position of distinguishing between \"discrete\" and \"continuous\", which I find to be highly debatable. One may say that \"continuous is when particles are so small that they blurr into shapes.\" Trying to formalize this intuition in mathematics has led to very different models for continuous and discrete things. Historically, this is because we focused on a potential model of infinity (that is, we modelled the \"dynamics\" of this blurring, the \"zooming in/out\" by means of limits), with the result that, in the continuous case, we are able to talk about particles and shapes but not about both at the same time (infinitesimal increments are  a \"dynamic thing\" and not a real part of our model). The other perspective is that \"blurring is just a figment of your mind\", that is, \"it's you that really want to distinguish between small and non-small stuff, not the models themselves\". This suggests another approach, where infinitesimal and infinitary operations are not part of your dynamics (that is, modelled using a potential, limit-oriented view of infinity), but a part of your space. They are nor first-class citizens. From this \"actual\" point of view the idea is \"just enrich the space with enough stuff so that you are able to talk about continuous stuff like you do for discrete stuff. So, in what <span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> was suggesting I'd just swap <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> and see what happens.</p>",
        "id": 196106272,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588517037
    },
    {
        "content": "<p>This said, I'm using sheaves on a daily basis right now, but I don't know if they would actually be the right tool here...</p>",
        "id": 196106354,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588517155
    },
    {
        "content": "<p>oh i have a lot of half-formed hot takes myself on the topic of this shit, dont get me started fabrizio <span aria-label=\"smiling face with horns\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling face with horns\">:smiling_face_with_horns:</span></p>",
        "id": 196106819,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588517786
    },
    {
        "content": "<p><a href=\"https://twitter.com/sarah_zrf/status/1241643185903984640\" title=\"https://twitter.com/sarah_zrf/status/1241643185903984640\">https://twitter.com/sarah_zrf/status/1241643185903984640</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/sarah_zrf/status/1241643185903984640\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/511991354927218688/O7IOsWWj_normal.png\"></a><p>i remember one time i paced around in circles for like an hour or two thinking about internal set theory and ended up deciding that the 19th/20th century upheavals in foundations had ended up settling on the wrong way of handling infinities\n\nbut then i lost my train of thought</p><span>- n-sarahzrf where n ≤ (1, 1) (@sarah_zrf)</span></div></div>",
        "id": 196106820,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588517803
    },
    {
        "content": "<p>but anyway uhhhh hm i just had a thought...</p>",
        "id": 196106889,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588517919
    },
    {
        "content": "<p>arent there, like.... lie algebroids or something</p>",
        "id": 196106891,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588517927
    },
    {
        "content": "<p>that kinda sounds like an \"infinitesimal morphism\"</p>",
        "id": 196106894,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588517940
    },
    {
        "content": "<p>/me puts a stethoscope against a lie algebroid</p>",
        "id": 196106973,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588518042
    },
    {
        "content": "<p>if i take a more down to earth mindset: i might want to say that it seems like theres an existing, incredibly well-studied answer to this kind of problem, which is just good old fashioned notions of integration and flows and diff geo</p>",
        "id": 196107579,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588518854
    },
    {
        "content": "<p>like maybe the answer is just to give a flow and then integrate along it</p>",
        "id": 196107599,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588518913
    },
    {
        "content": "<p>hmmmmmmm, <em>very</em> vague free-association thought: i'm also also reminded of having fiddled around with the fundamental group of the hawaiian earring—there's a similar flavor of \"infinite composition\" there</p>",
        "id": 196107684,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519035
    },
    {
        "content": "<p>Oo, never heard of Lie algebroids... if only there was a directed version, \"Lie categories\"</p>",
        "id": 196107685,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588519035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> seemed to be taking the philosophical approach that “space and time are created by the algebra of category theory” in systems theory and process theory, and it's a view to which I'm very partial</p>",
        "id": 196107692,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588519060
    },
    {
        "content": "<p>i mean im looking at the definition of a lie groupoid and im not sure what would stop you from making it a category instead</p>",
        "id": 196107699,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519080
    },
    {
        "content": "<p>i suppose the theory might end up just not working out right at a later stage</p>",
        "id": 196107741,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519094
    },
    {
        "content": "<p>So it would be disappointing to just leave the continuous aspect to some other pre-existing notion of space, like a manifold</p>",
        "id": 196107743,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588519104
    },
    {
        "content": "<p>yeah im sympathetic to that :&gt; which is why i framed that viewpoint as \"if i take a more down to earth mindset\"</p>",
        "id": 196107752,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519128
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276363\">Amar Hadzihasanovic</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107692\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107692\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> seemed to be taking the philosophical approach that “space and time are created by the algebra of category theory” in systems theory and process theory, and it's a view to which I'm very partial</p>\n</blockquote>\n<p>Yep, the \"discreteness\" comes from the fact that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo><mover><mo><mo>⟶</mo></mo><mi>f</mi></mover></mo><mi>Y</mi><mo><mover><mo><mo>⟶</mo></mo><mi>g</mi></mover></mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X \\overset{f}\\longrightarrow Y \\overset{g}\\longrightarrow Z</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3552159999999998em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3442159999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⟶</span></span></span><span style=\"top:-3.758108em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1704999999999999em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1595em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⟶</span></span></span><span style=\"top:-3.758108em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> is a <em>discrete</em> diagram</p>",
        "id": 196107753,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588519129
    },
    {
        "content": "<p>anyway how about a functor [0, 1] → C</p>",
        "id": 196107765,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519161
    },
    {
        "content": "<p>that's a flow in C</p>",
        "id": 196107778,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519189
    },
    {
        "content": "<p>oh shit i think lawvere even called it that in \"taking categories seriously\"... which i need to fucking finish reading sometime</p>",
        "id": 196107824,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519205
    },
    {
        "content": "<p>But my point is, a diagram is different from the space in which it is interpreted (the map is not the territory). That “discrete” diagram could be interpreted as a pair of very continuous paths.</p>",
        "id": 196107853,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588519263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107765\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107765\">said</a>:</p>\n<blockquote>\n<p>anyway how about a functor [0, 1] → C</p>\n</blockquote>\n<p>With <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> as a poset? Does that work? Are there any <em>interesting</em> functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>→</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">[0,1] \\to \\mathbf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">t</span></span></span></span></span> for example?</p>",
        "id": 196107855,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588519265
    },
    {
        "content": "<p>as a poset yeah</p>",
        "id": 196107861,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519278
    },
    {
        "content": "<p>And arguably to be able to grasp things we always need “finitary” maps.</p>",
        "id": 196107867,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588519292
    },
    {
        "content": "<p>actually maybe you want R, and as a monoid, if it's a dynamical sys—fuck i need to read lawvere instead of spouting off</p>",
        "id": 196107915,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519333
    },
    {
        "content": "<p>And my point of view would be that the “meaning of discreteness” is that if we keep refining our maps, at some point we reach a scale at which we do not gain any new information.</p>",
        "id": 196107925,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588519370
    },
    {
        "content": "<p>anyway sorry i shouldve led in by saying like</p>",
        "id": 196107927,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519380
    },
    {
        "content": "<p>i think \"a functor from [0, 1]\" is basically what youre describing in the OP?</p>",
        "id": 196107935,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519393
    },
    {
        "content": "<p>im not sure</p>",
        "id": 196107936,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519394
    },
    {
        "content": "<p>augh i have work i should be doing instead of being on here</p>",
        "id": 196107998,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519472
    },
    {
        "content": "<p>bbl</p>",
        "id": 196107999,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588519473
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107855\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107855\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107765\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196107765\">said</a>:</p>\n<blockquote>\n<p>anyway how about a functor [0, 1] → C</p>\n</blockquote>\n<p>With <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> as a poset? Does that work? Are there any <em>interesting</em> functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>→</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">[0,1] \\to \\mathbf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">S</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">t</span></span></span></span></span> for example?</p>\n</blockquote>\n<p>Consider a solid cone of unit height and radius, take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(r)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span></span></span></span> to be the set of points at height <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>−</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">1-r</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span></span></span></span> and take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo>&lt;</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(r &lt; s)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span> to be the downward projection function, for example. You can think of this as a subdivision of the inclusion of the origin into the unit disk if you like.</p>",
        "id": 196108216,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588519764
    },
    {
        "content": "<p>Perhaps you want to think of your objects as metric spaces rather than sets in that setting, though, so that the ensemble of information in the functor properly recovers the cone <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 196108310,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588519863
    },
    {
        "content": "<p>one issue is that specifying “functor” alone doesn’t give you any sense of continuity or whatnot (even if you’re working in Top instead of Set or something); for example, we could have every point less than 1/2 map to set A and every point greater than or equal to 1/2 map to set B, and let any arrow between these two regions be some particular function f (while every other arrow gets mapped to the identity).</p>\n<p>It seems like we could maybe ‘categorify’ (to maybe overuse a term) whatever structure we wanted on our archetypal category (in this case [0,1]; like, express its topology in terms of categorical relationships or something), and then demand that that was preserved somehow. (Though we might need to do something similar to our codomain category for this to make sense.)</p>",
        "id": 196109051,
        "sender_full_name": "T Murrills",
        "timestamp": 1588520999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277552\">@T Murrills</span> yep that was exactly my point. And Freyd's characterisation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> as the terminal coalgebra of subdivision, to me, suggests that the structure needed is subdivision.</p>",
        "id": 196109216,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588521137
    },
    {
        "content": "<p>Ah, gotcha!</p>",
        "id": 196109230,
        "sender_full_name": "T Murrills",
        "timestamp": 1588521157
    },
    {
        "content": "<p>I'm sure <span class=\"user-mention\" data-user-id=\"294557\">@dusko</span> would have something more interesting to say on this given that my intuition is largely based on his and Martin Escardó's “calculus in coinductive form”.</p>",
        "id": 196109252,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588521200
    },
    {
        "content": "<p>Also, just as a tangent, you know what would be cool? Being able to construct a “tangent space” at an object in a category! Obv there are two main routes to construction, and afaik they might well be inequivalent when categorifying without the vector space structure (the “derivatives along paths” formulation vs. the “maximal ideals in a function space” deal for the cotangent space).</p>\n<p>My intuition says that <span class=\"user-mention\" data-user-id=\"276363\">@Amar Hadzihasanovic</span> is right about subdivisions somehow being the key to expressing the continuous structure, for whatever that’s worth.</p>",
        "id": 196109897,
        "sender_full_name": "T Murrills",
        "timestamp": 1588522080
    },
    {
        "content": "<p>Fairly sure that's either what differential categories are for, or it's what tangent categories are for</p>",
        "id": 196110037,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588522241
    },
    {
        "content": "<p>But then wouldn’t either of those provide what you’re looking for?</p>",
        "id": 196110067,
        "sender_full_name": "T Murrills",
        "timestamp": 1588522311
    },
    {
        "content": "<p>It's possible, I don't know anything about them... in any case they're axiomatic, without looking I don't know any examples of them</p>",
        "id": 196110362,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588522732
    },
    {
        "content": "<p>My work in extending the hyperoperators from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> is based on taking  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">t \\in \\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65418em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mi>t</mi></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f^t(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043556em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span> and extending <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">t</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span>. Anyhow, I think my work can be placed completely on a CT foundation without too much difficulty.</p>",
        "id": 196112723,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1588525596
    },
    {
        "content": "<p>alright, but can you tell us how?</p>",
        "id": 196114444,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588528230
    },
    {
        "content": "<p>I have a write up at <a href=\"http://tetration.org/Hyperoperators.pdf\" title=\"http://tetration.org/Hyperoperators.pdf\">Hyperoperators, pg. 8</a> for details.<br>\nOnce I take a Taylor series of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mi>t</mi></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f^t(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043556em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>, time is still discrete. But add a symmetry condition to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span> and then discrete time has a dual continuous time. The most important symmetry conditions are associated with Schroeder's functional equation (hyperbolic dynamics) and Abel's functional equation. </p>\n<p>Schroeder's functional equation with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>=</mo><mi>D</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\lambda=Df(0)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">λ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>λ</mi><mi mathvariant=\"normal\">∣</mi><mo mathvariant=\"normal\">≠</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">|\\lambda|\\neq1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">λ</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span><br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mi>t</mi></msup><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>λ</mi><mi>t</mi></msup><mi>z</mi><mo>+</mo><mfrac><mrow><msup><mi>λ</mi><mrow><mo>−</mo><mn>1</mn><mo>+</mo><mi>t</mi></mrow></msup><mrow><mo fence=\"true\">(</mo><mo>−</mo><mn>1</mn><mo>+</mo><msup><mi>λ</mi><mi>t</mi></msup><mo fence=\"true\">)</mo></mrow><msup><mi>f</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup></mrow><mrow><mn>2</mn><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo>+</mo><mi>λ</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">f^t(z)=  \\lambda ^t z +\\frac{\\lambda ^{-1+t} \\left(-1+\\lambda ^t\\right) f''}{2 (-1+\\lambda )} z^2  + \\ldots</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043556em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8768859999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">λ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.83em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.31em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">λ</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6125em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">λ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"minner mtight\"><span class=\"mopen sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.07500000000000001em;\"><span class=\"mtight\">(</span></span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">λ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8703428571428571em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span><span class=\"mclose sizing reset-size3 size6 mtight delimcenter\" style=\"top:0.07500000000000001em;\"><span class=\"mtight\">)</span></span></span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278285714285715em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.12em;vertical-align:0em;\"></span><span class=\"minner\">…</span></span></span></span></p>\n<p>Abel's functional equation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>=</mo><mi>D</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\lambda=Df(0)=1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">λ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> <br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mi>t</mi></msup><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>z</mi><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>t</mi><msup><mi>f</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mfrac><mn>1</mn><mn>12</mn></mfrac><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">(</mo><msup><mi>t</mi><mn>2</mn></msup><mo>−</mo><mi>t</mi><mo stretchy=\"false\">)</mo><msup><mi>f</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup><mo stretchy=\"false\">(</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>t</mi><msup><mi>f</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><msup><mi>z</mi><mn>3</mn></msup><mo>+</mo><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">f^t(z)=z+\\frac{1}{2}t f''(0) z^2 +\\frac{1}{12}(3(t^2-t)f''(0)^2+2tf'''(0))z^3+\\ldots</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043556em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">t</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathdefault\">t</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\">t</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span><span class=\"mord mtight\">′</span><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.12em;vertical-align:0em;\"></span><span class=\"minner\">…</span></span></span></span></p>",
        "id": 196116099,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1588530483
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277552\">T Murrills</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196109051\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196109051\">said</a>:</p>\n<blockquote>\n<p>one issue is that specifying “functor” alone doesn’t give you any sense of continuity or whatnot (even if you’re working in Top instead of Set or something); for example, we could have every point less than 1/2 map to set A and every point greater than or equal to 1/2 map to set B, and let any arrow between these two regions be some particular function f (while every other arrow gets mapped to the identity).</p>\n</blockquote>\n<p>Moerdijk did a lot of work on topological categories, so those are also an option</p>",
        "id": 196116683,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588531427
    },
    {
        "content": "<p>more vague spouting off: i think i remember that in non-standard analysis you can express an integral as a ordinary sum over non-standardly many terms hmm</p>",
        "id": 196119643,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588535509
    },
    {
        "content": "<p>wouldn't subdivision/the coalgebra of the real interval lead to a category that is also a cocategory? i'm not sure of the ways cocategories can be, but i would think cocomposition is exactly (un)gluing intervals at a (choice/space of?) midpoint(s). so i guess in a compatible way and developed analogously to freyd's interval...</p>\n<p>my other thought is of quantale-enriched cats but ~metrics seem like too much for just continuity</p>\n<p>i wish stuff specifically about cocategories were easier to find</p>",
        "id": 196119816,
        "sender_full_name": "Pastel Raschke",
        "timestamp": 1588535698
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196119643\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196119643\">said</a>:</p>\n<blockquote>\n<p>more vague spouting off: i think i remember that in non-standard analysis you can express an integral as a ordinary sum over non-standardly many terms hmm</p>\n</blockquote>\n<p>Yes. This is what I was hinting at</p>",
        "id": 196119928,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588535876
    },
    {
        "content": "<p>But you can also treat infinite monoidal products as they were finite</p>",
        "id": 196119969,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588535886
    },
    {
        "content": "<p>oo</p>",
        "id": 196119984,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588535929
    },
    {
        "content": "<p>The unit interval is an H-cogroupoid in Top; that's how you get the fundamental groupoid. More precisely, it's an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi mathvariant=\"normal\">∞</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-cogroupoid. This can be put to interesting <a href=\"https://ncatlab.org/nlab/show/Trimble+n-category\" title=\"https://ncatlab.org/nlab/show/Trimble+n-category\">uses</a>.</p>",
        "id": 196121493,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1588537814
    },
    {
        "content": "<p>thanks for the ping, amar. i am not going to try to post any math, but i think it might be useful for the discussion to figure out what is the goal. (provided that you still want any comments from me after i confess that i am unable to find the trailhead of the discussion.) there are a several completely different ways how infinitesimals enter categories. the first one was the synthetic way: lawvere's idea, anders kock's book, and then lots of people. or if you are willing to read XIX century stuff, it was what grassman wanted to do: forget the bureaucracy of writing limits and sequences, and compute with the continuum \"as such\". lawvere said that categorical axioms can do that. to me it seemed that the idea that we can capture all that they do in calculus by some essentially algebraic axioms was a little optimistic. (e.g. in his thesis, cantor wanted to characterize the domains of convergence of fourier series. they are the accummulation points of some set. by the time you reduce it to its density points you have lost some. so you repeat infinitely long, and at the infinity, you do NOT find a fixed point. so cantor discovered  that there is more than one infinity. and he discovered one more thing there: the process of coinduction. looking for the greatest fixpoing of an operator...) i just wanted to reconstruct the coalgebra and coinduction which people have already been doing in math, without giving them a name. besides that paper about analytic functions, bertfried fauser and i reconstructed tangent and cotangent bundles, and he wrote down some general relativity, categorically. and then there is this whole movement of differential categories, around robin cockett and seely, and i think rick blute. i still need to read that. so the question is what you guys what to achieve.</p>",
        "id": 196141923,
        "sender_full_name": "dusko",
        "timestamp": 1588570000
    },
    {
        "content": "<p>where do you see people doing coinduction without realizing it?</p>",
        "id": 196142177,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588570550
    },
    {
        "content": "<p>now i'm curious</p>",
        "id": 196142179,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588570553
    },
    {
        "content": "<p><a href=\"http://arxiv.org/abs/1402.4414\" title=\"http://arxiv.org/abs/1402.4414\">smooth coalgebra: testing vector analysis</a></p>\n<blockquote>\n<p>Processes are often viewed as coalgebras, with the structure maps specifying the state transitions. In the simplest case, the state spaces are discrete, and the structure map simply takes each state to the next states. But the coalgebraic view is also quite effective for studying processes over structured state spaces, e.g. measurable, or continuous. In the present paper we consider coalgebras over manifolds. This means that the captured processes evolve over state spaces that are not just continuous, but also locally homeomorphic to Banach spaces, and thus carry a differential structure.</p>\n</blockquote>",
        "id": 196154756,
        "sender_full_name": "Pastel Raschke",
        "timestamp": 1588581819
    },
    {
        "content": "<p>(Long sequence of posts following) <br>\n<span class=\"user-mention\" data-user-id=\"294557\">@dusko</span> Yeah, sorry, I think the thread went in lots of different directions, so it was not very clear what exactly was “the goal” nor why I called you :) So I'm going to try to give a summary of the issue from my point of view.</p>",
        "id": 196169766,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> started from the following idea, that I find very powerful: the algebra (or combinatorics) of composition in higher categories are in themselves a “notion of space”. The power of this is that, whein in ACT present/axiomatise stuff, we are not only creating objects or processes but we are also creating the space that they inhabit (which comes with limits on how things can interact, etc).</p>",
        "id": 196169784,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592898
    },
    {
        "content": "<p>So when we give a presentation of a systems theory as a monoidal category, we are not only describing the systems but also creating a 2D background for them; when we give a presentation of a process theory as a monoidal category, we are giving the processes 1 spatial dimension and 1 time dimension, etc. <br>\nAnd these dimensions of space/time are intrinsic to the thing that we are presenting, not external like a Newtonian background -- say, in a process diagram, the only thing that makes time tick are the processes themselves with their “causal” connections...</p>",
        "id": 196169807,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592922
    },
    {
        "content": "<p>However, if composition of diagrams is the only way to “make time tick” or “create space”, then we end up with a discrete (or discrete-feeling) time and space -- we can “push it to infinity” by doing stuff like transfinite composition, but the fact remains that we can only get more time/space by putting together some discrete units thereof. I guess that's then reflected in the situation that Jules is trying to model, that at most one can derive a “discrete time infinite horizon” but not “continuous time” equations from a categorical presentation.</p>",
        "id": 196169815,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592935
    },
    {
        "content": "<p>So then I think the main question in this thread is: how can one “present continuous time or space”, in the spirit of presentations of (higher) categories/process theories?</p>",
        "id": 196169840,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592955
    },
    {
        "content": "<p>Which is a cognate of a much older question, “how can one algebraicise the continuum”?<br>\nAs Dusko says, there are two approaches -- I'll try to summarise them in my own words.</p>",
        "id": 196169858,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592966
    },
    {
        "content": "<p>One is the “infinitesimals” approach which, like <span class=\"user-mention\" data-user-id=\"276438\">@Fabrizio Genovese</span>  explained, is based on the idea that the continuum is not unlike discrete space, in that it can still be handled in terms of “discrete units”, but now you have different types of discrete units (say, different “scales”) which have a qualitatively different behaviour. So like in SDG you can have bits of space that are non-zero but square to zero, or bits of space at one scale whose every finite concatenation is smaller than a bit of space at a different scale...</p>",
        "id": 196169886,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588592988
    },
    {
        "content": "<p>So to translate this to the original problem, I think both what Jules was sketching and what Fabrizio suggested is that you may want a notion of category with a “type of infinitesimal morphisms” and a “type of finite morphisms”, together with, say, some way of composing infinitesimal morphisms to get a finite morphism, which relates to ordinary composition in the way that integration relates to sum.</p>",
        "id": 196169935,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593006
    },
    {
        "content": "<p>An outcome of this approach, as Fabrizio mentioned, is to get rid of the “potential”, “in-the-limit” or “dynamic” aspect of infinity, as used in (standard) analysis. I think it's fair to say that this results in something gained and something lost. Often one gets “neater” and cleaner proofs, that appeal to the aesthetics of algebraicists and category theorists; at the same time, they tend to become more “qualitative” and less “quantitative”, precisely because we have given up the computational dynamic that's embedded in stuff like epsilon-delta formulations of limits and continuity. It's harder to see stuff like convergence rates, etc. in this approach. Errett Bishop disliked nonstandard analysis for this reason.</p>",
        "id": 196169965,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593054
    },
    {
        "content": "<p>(Of course, in good cases you could say, every nonstandard proof can be interpreted systematically as a standard proof in a way which reconstructs the bounds, etc. But that's like saying you can do constructive proofs with classical logic, because anyway you can double-negate everything...)</p>",
        "id": 196169979,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593072
    },
    {
        "content": "<p>The other approach is to embrace the dynamic/computational aspect of infinity as used by analysts. Dusko and Martin's paper, and then Freyd's “algebraic real analysis”, put it into my head very convincingly that this aspect is naturally captured by coalgebra and coinduction. I'm quite partial to this approach because the quantitative and computational aspects are what I like the most in analysis! (May have something to do with the maths department of my old uni being strongest on numerical analysis... I even considered becoming a numerical analyst for some time).</p>",
        "id": 196169999,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593096
    },
    {
        "content": "<p>In particular, as I said earlier, Freyd convinced me that subdivision (or bisection) may be the key dynamical component of the continuum. What does it mean that we have processes in continuous time? That given a process <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> which takes time <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">t \\geq 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>, then we can look at what it's doing in the first <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t/2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span>, and then look at what it's doing in the next <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">t/2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span>. The process may ultimately be “pointwise” so that subdivision always gives <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> on one side and the identity on the other, or it could at some point split nontrivially...</p>",
        "id": 196170020,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593115
    },
    {
        "content": "<p>So I think formalising the idea of “(higher) category with subdivision” (or “(higher) graph with composition and subdivision”) would be my first approach to processes with continuous time/space. The idea would also be that in this framework one should be able to present equationally (in the style of presentations of categories) processes whose semantics are greatest fixed points, stuff like a “Cantor process” <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> defined by the fact that it subdivides into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">;</mo><mi>e</mi><mo separator=\"true\">;</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f; e; f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> for some fixed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span></span></span></span>...</p>",
        "id": 196170104,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593159
    },
    {
        "content": "<p>But as I said, I'd be surprised if this hadn't been tried, so it's possible it's just a dead end.</p>",
        "id": 196170129,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588593180
    },
    {
        "content": "<p>No need to end on such a pessimistic note! Even if people have thought about a thing, its absence from the mainstream could just mean that those people didn't have enough time to spend on it to extract its potential.</p>",
        "id": 196171831,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1588594369
    },
    {
        "content": "<p>Nice summary!</p>",
        "id": 196176754,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588597425
    },
    {
        "content": "<p>It might be time to pull the ultimate switcheroo and start thinking about <em>cocategories</em></p>",
        "id": 196177798,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588597970
    },
    {
        "content": "<p>Ps. Over in <a class=\"stream\" data-stream-id=\"229122\" href=\"/#narrow/stream/229122-general.3A-meta\">#general: meta</a> we've been talking about the tricky question of writing up things from here elsewhere (mainly the nLab) for folklore-reduction purposes. I propose this summary as something that could be written down, although it's still vague enough that I have no actual idea <em>where</em> it should be written down</p>",
        "id": 196178924,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588598564
    },
    {
        "content": "<p>David Spivak convinced me that categories where you can \"subdivide\" morphisms are nicely expressed using <a href=\"https://ncatlab.org/nlab/show/Conduch%C3%A9+functor#definition\" title=\"https://ncatlab.org/nlab/show/Conduch%C3%A9+functor#definition\">Conduché functors</a>.  The idea is that you have a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">p : E \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and if you have any morphism in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> whose image in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> can be factored, you can lift that factorization up to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span>.  </p>\n<p>So, for example, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> could be a category whose morphisms are the motions of an object with the passage of time, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> could represent time, e.g. the set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> made into a poset with its usual ordering.</p>",
        "id": 196200019,
        "sender_full_name": "John Baez",
        "timestamp": 1588607363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276363\">Amar Hadzihasanovic</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196169979\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196169979\">said</a>:</p>\n<blockquote>\n<p>(Of course, in good cases you could say, every nonstandard proof can be interpreted systematically as a standard proof in a way which reconstructs the bounds, etc. But that's like saying you can do constructive proofs with classical logic, because anyway you can double-negate everything...)</p>\n</blockquote>\n<p>or in other words, you can formalize nonstandard proofs in the internal language of a suitable topos (which i think tierney spelled out in the 70s). forcing is \"just\" standard reasoning in the internal language of a topos in a similar way. that was all spelled out in the 70s, but noone took it to the heart: analysts continued speaking their language, standard or nonstandard, set theorists continued constructing their universes their way. people are fluent in their languages, and they like their stories in their languages, even if it takes more words to tell them. grothendieck spelled out in his thesis all that was to be known about TVS (as he told laurent schwartz, i think) and moved on, and the functional analysts moved on as well, and they still write tensors as matrices of matrices of matrices.</p>\n<p>the other way around holds as well. you begin from presenting spaces by categories. i suppose you have grothendieck's \"homotopy hypothesis\" in mind. commenting about \"pursuing stacks\", eilenberg pointed out that that idea was going in the oposite direction of his homotopy theory. simplicial complexes were supposed to make computing homotopies simpler, and not more complicated. but on the other hand, people built a beautiful theory of highere categories. eilenberg was probably right that it was an overkill for computing homotopy groups or groupoids. but everyone is having good ideas, and pursuing them. there can't be anything wrong with that.</p>\n<p>the ideas about \"infinitesimal morphisms\" sound very attractive, but it would be good to set some tasks that they should achieve (some problems to solve, some numbers to compute) --- so that the effort can <em>fail</em>. it is not good to pursue a project that always succeeds, no matter what...(except for people who want to be presidents.)</p>",
        "id": 196266697,
        "sender_full_name": "dusko",
        "timestamp": 1588652762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276363\">Amar Hadzihasanovic</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196169807\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196169807\">said</a>:</p>\n<blockquote>\n<p>So when we give a presentation of a systems theory as a monoidal category, we are not only describing the systems but also creating a 2D background for them; when we give a presentation of a process theory as a monoidal category, we are giving the processes 1 spatial dimension and 1 time dimension, etc. <br>\nAnd these dimensions of space/time are intrinsic to the thing that we are presenting, not external like a Newtonian background -- say, in a process diagram, the only thing that makes time tick are the processes themselves with their “causal” connections...</p>\n</blockquote>\n<p>i forgot to say: THANK YOU for the nice summary.</p>\n<p>it is interesting that there seems to be a loop in the effort: we capture spaces as categories, because we can capture categories by diagrams. from geometry to algebra to geometry. if we go beyond monoidal categories to 2-categories, the faces in string diagrams become 0-cells. soon we encounter string/face diagrams that unfold in complicated ways. they could be simplified if we extract some algebraic invariants. but to simplify computing them, we categorify, which is nice because we can use diagrams.</p>",
        "id": 196267655,
        "sender_full_name": "dusko",
        "timestamp": 1588654296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196267655\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196267655\">said</a>:</p>\n<blockquote>\n<p>it is interesting that there seems to be a loop in the effort: we capture spaces as categories, because we can capture categories by diagrams. from geometry to algebra to geometry. if we go beyond monoidal categories to 2-categories, the faces in string diagrams become 0-cells. soon we encounter string/face diagrams that unfold in complicated ways. they could be simplified if we extract some algebraic invariants. but to simplify computing them, we categorify, which is nice because we can use diagrams.</p>\n</blockquote>\n<p>I remember saying something similar to this once, roughly \"most people want to use categories to study geometry, but I'm more interested in using geometry to study categories\"</p>",
        "id": 196289608,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588673883
    },
    {
        "content": "<p>Jules did give us a \"task\" for infinitesimal morphisms or whatever other setup we adopt to succeed or fail at: get the (continuous time) Hamilton-Jacobi-Bellmann equation in a setup that generalises the one in which he obtains the discrete time version.<br>\nOf course we would need more details to proceed with that ;)</p>",
        "id": 196290444,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588674578
    },
    {
        "content": "<p>Re: John's comment on Conduché functors, I don't think there's a lack of category-theoretic means of \"describing\" processes in continuous time, or in some specific space, etc.</p>\n<p>But here I'm looking for <em>intrinsic</em> ways -- in a sense which may be a bit vague. A functor to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> as a poset seems to be exactly an \"external clock\": we are forcing every morphism to \"take a certain time\" in reference to the clock. So now there's two process worlds, my process world and the clock world. That's very different from the \"intrinsic\" discrete time given by causal connections of processes in a diagram.</p>",
        "id": 196291431,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588675321
    },
    {
        "content": "<p>To me this is similar to how \"categories enriched in topological spaces\" are a disappointing model of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories compared to, say, quasicategories -- and not just because they are harder to work with. It's because they are a chimera put together from two ways of \"creating space\": an algebro-combinatorial one in dimensions 0 and 1 and a point-set one in higher dimensions...</p>",
        "id": 196292095,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588675820
    },
    {
        "content": "<p>Yes, the distinction between intrinsic and extrinsic \"clocks\" is interesting and also important in physics.</p>",
        "id": 196324833,
        "sender_full_name": "John Baez",
        "timestamp": 1588692877
    },
    {
        "content": "<p>In general relativity if you say a rock was at one position at t = 0 and another at t = 1 it doesn't really make sense to ask where it was at t = 1/2 without providing any additional information, because there's no god-given best time coordinate.</p>",
        "id": 196325082,
        "sender_full_name": "John Baez",
        "timestamp": 1588692986
    },
    {
        "content": "<p>Any category has its own intrinsic knowledge of how morphisms can be factored.</p>",
        "id": 196325135,
        "sender_full_name": "John Baez",
        "timestamp": 1588693009
    },
    {
        "content": "<p>David and I were thinking about Markov processes, where there's an external clock; then given the state of the system at t = 0 and t = 1 you can ask for the <em>probability</em> that it has any particular state at time t where 0 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\le</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span> t <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\le</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span> 1.</p>",
        "id": 196325325,
        "sender_full_name": "John Baez",
        "timestamp": 1588693083
    },
    {
        "content": "<p>The <a href=\"https://en.wikipedia.org/wiki/Brownian_bridge\" title=\"https://en.wikipedia.org/wiki/Brownian_bridge\">Brownian bridge</a> is a classic example.</p>",
        "id": 196325451,
        "sender_full_name": "John Baez",
        "timestamp": 1588693132
    },
    {
        "content": "<p>So these could probably be studied using Conduché functors (mixed with probability theory in some way).</p>",
        "id": 196325631,
        "sender_full_name": "John Baez",
        "timestamp": 1588693209
    },
    {
        "content": "<p>The continuous-time Hamilton-Jacobi-Bellmann equation also has an extrinsic clock, so we shouldn't be shy of using it.</p>",
        "id": 196325739,
        "sender_full_name": "John Baez",
        "timestamp": 1588693257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276363\">Amar Hadzihasanovic</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196291431\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/infinitesimal.20morphisms/near/196291431\">said</a>:</p>\n<blockquote>\n<p>Re: John's comment on Conduché functors, I don't think there's a lack of category-theoretic means of \"describing\" processes in continuous time, or in some specific space, etc.</p>\n<p>But here I'm looking for <em>intrinsic</em> ways -- in a sense which may be a bit vague. A functor to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> as a poset seems to be exactly an \"external clock\": we are forcing every morphism to \"take a certain time\" in reference to the clock. So now there's two process worlds, my process world and the clock world. That's very different from the \"intrinsic\" discrete time given by causal connections of processes in a diagram.</p>\n</blockquote>\n<p>the main task seems to be: formalize such intuitions in a productive way. E.g., the idea of mappings from a manifold to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> as a space is productively contrasted with mappings from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> to mainifolds: one leads to cotangent bundles, the other to tangent bundles. (Incindentally, both turn out to be comonads, and if we spell them out over some gros topos, albeit of all spaces, we can at least reason about it all internally. I think for Grothendieck, a productive meaning of the word <em>intrinsic</em> was <em>internal</em> in a topos.)  Another duality of the mappings <em>from</em> and the mappints <em>into</em> leads to homology vs cohomology. So there are many directions in which such intuitions can be tested on a formal language.</p>\n<p>Without specifying a particular language, there is a chance that the informal conversation may be some sort of \"intuition telepathy\": the blind men sharing with excietment their different views of the elephant, until it turns out that one of them is actually talking about the tiger, another one about the skunk, and two of them about each other. E.g., my interpretation of your idea that I offered above stands a good chance of be an \"understanding\" of that kind. Such is the breadth of English as a carrier of mathematical thoughs.</p>\n<p>So the biggest challenge of it all is perhaps to reconcile the two aspects of science: science as a conversation with nature, and science as  a conversation with people. How much time should I spend writing symbols on a piece of paper, and how much time should I go out and try to translate that into something people would get interested in?</p>\n<p>E.g., you and Jules and Fabrizio have been going about the continuum. Cantor literally had a voice (of Nature?) telling him about the continuum, and he was writing it all down; and then he would go out and try to tell people about it, and there he would hear the voices, such as e.g. of Kronecker, who was trying to presevent such sick ideas from spoling the youth. (There is a book of Cantor's correspondence with Dedekind, edited by Emmy Noether.) Although most of us think less deep than Cantor, we are all in the business of  trying to reconcile those two kinds of voices.</p>",
        "id": 196346248,
        "sender_full_name": "dusko",
        "timestamp": 1588703124
    },
    {
        "content": "<p>On this note, <span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span>, would you be willing to share your notes on optics and the Bellman equation to see if we can make any progress?</p>",
        "id": 196347432,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588703714
    },
    {
        "content": "<p>I thought I'd mention this: there are notions of infinite monoidal products. This leads to the idea of complete monoids (<a href=\"https://en.wikipedia.org/wiki/Monoid#Complete_monoids\" title=\"https://en.wikipedia.org/wiki/Monoid#Complete_monoids\">https://en.wikipedia.org/wiki/Monoid#Complete_monoids</a>), and one level up, to the idea of Kolmogorov products that Tobias and Eigil developed to talk about probability (<a href=\"https://arxiv.org/abs/1912.02769\" title=\"https://arxiv.org/abs/1912.02769\">https://arxiv.org/abs/1912.02769</a>).<br>\nMaybe, just maybe, what you people are after is the many-object version of these.</p>",
        "id": 196787642,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1588865332
    },
    {
        "content": "<p>hmm, this is a commutative quantale, right? <a href=\"/user_uploads/21317/K9du6CBMaXi9YYv_MvEa3SPo/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/K9du6CBMaXi9YYv_MvEa3SPo/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/K9du6CBMaXi9YYv_MvEa3SPo/image.png\"></a></div>",
        "id": 196899891,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588947070
    },
    {
        "content": "<p>oh wait no, only <em>directed</em></p>",
        "id": 196899989,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588947121
    },
    {
        "content": "<p>Directed!  Weird.</p>",
        "id": 196922549,
        "sender_full_name": "John Baez",
        "timestamp": 1588957665
    },
    {
        "content": "<p>not necessarily!</p>",
        "id": 196925328,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588958876
    },
    {
        "content": "<p>directed stuff is pretty common</p>",
        "id": 196925342,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588958881
    },
    {
        "content": "<p>are you familiar with the use of dcpos in, like, domain theory?</p>",
        "id": 196925463,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588958924
    },
    {
        "content": "<p>Nope.</p>",
        "id": 196927726,
        "sender_full_name": "John Baez",
        "timestamp": 1588960035
    },
    {
        "content": "<p>ah!</p>",
        "id": 196927796,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588960077
    },
    {
        "content": "<p>dcpo = directed-complete partial order, poset w/ all <em>directed</em> sups</p>",
        "id": 196927874,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588960102
    },
    {
        "content": "<p>natural morphisms are the \"scott-continuous\" functions, i.e., directed-sup-preserving ones</p>",
        "id": 196927915,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588960128
    },
    {
        "content": "<p>but more to the point:</p>",
        "id": 196927921,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588960130
    },
    {
        "content": "<p>when you have a programming language that allows arbitrary recursion, and you want to interpret its terms as directly denoting mathematical objects rather than ongoing processes that must be gradually resolved (and you're not a brouwerian so you don't think mathematical objects are already like that), you have a problem</p>",
        "id": 196928243,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588960316
    },
    {
        "content": "<p>(All I know is that my student Mike Stay suggested a Star Wars remake featuring a character called DCPO.)</p>",
        "id": 196928306,
        "sender_full_name": "John Baez",
        "timestamp": 1588960333
    },
    {
        "content": "<p>ha</p>",
        "id": 196928310,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588960338
    },
    {
        "content": "<p>Directed sets are similar to filtered categories (I've heard).</p>",
        "id": 196928367,
        "sender_full_name": "Dan Doel",
        "timestamp": 1588960369
    },
    {
        "content": "<p>anyway, looking at that again...</p>",
        "id": 196967044,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588987975
    },
    {
        "content": "<p>it reminds me of the whole \"any set is the filtered colimit of its finite subsets\" thing</p>",
        "id": 196967050,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588987993
    },
    {
        "content": "<p>(that's the same as saying that Set is accessible, right?)</p>",
        "id": 196967070,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588988015
    },
    {
        "content": "<p>it looks like that equation is basically saying that ∑ turns filtered colimits—or at least this particular filtered colimit—into directed suprema (which are just depleted filtered colimits)</p>",
        "id": 196967134,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588988144
    },
    {
        "content": "<p>i.e., it's finitary</p>",
        "id": 196967138,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588988159
    },
    {
        "content": "<p>er to be clear i mean this equation <a href=\"/user_uploads/21317/pELMZ3QDjwVpV3AgWCl6yjJ3/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/pELMZ3QDjwVpV3AgWCl6yjJ3/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/pELMZ3QDjwVpV3AgWCl6yjJ3/image.png\"></a></div>",
        "id": 196967183,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588988210
    },
    {
        "content": "<p>S. Rabinovich, G. Berkolaiko, S. Buldyrev, A. Shehter, and S. Havlin,<br>\n“Logistic map”: an analytical solution - fractional iteration of the logistic equation. <a href=\"https://www.math.tamu.edu/~berko/papers/pdf/paRBBSH95.pdf\" title=\"https://www.math.tamu.edu/~berko/papers/pdf/paRBBSH95.pdf\">https://www.math.tamu.edu/~berko/papers/pdf/paRBBSH95.pdf</a></p>\n<p>R. Aldrovandi and L. P. Freitas,<br>\nContinuous iteration of dynamical maps, - experimentally consistent with my research<br>\n<a href=\"http://arxiv.org/abs/physics/9712026\" title=\"http://arxiv.org/abs/physics/9712026\">http://arxiv.org/abs/physics/9712026</a><br>\nJ. Math. Phys. 39, 5324 (1998)</p>\n<p>P. Gralewicz and K. Kowalski,<br>\nContinuous time evolution from iterated maps and Carleman linearization,<br>\n<a href=\"http://arxiv.org/abs/math-ph/0002044\" title=\"http://arxiv.org/abs/math-ph/0002044\">http://arxiv.org/abs/math-ph/0002044</a> <a href=\"http://arxiv.org\" title=\"http://arxiv.org\">arxiv.org</a> 2000</p>\n<p>Finding f such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(f(x))=g(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span> given <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span>.<br>\n<a href=\"https://mathoverflow.net/questions/66538/finding-f-such-that-ffx-gx-given-g\" title=\"https://mathoverflow.net/questions/66538/finding-f-such-that-ffx-gx-given-g\">https://mathoverflow.net/questions/66538/finding-f-such-that-ffx-gx-given-g</a></p>",
        "id": 196984535,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1589019972
    }
]