[
    {
        "content": "<p>While I love all the beautiful mathematics here, I consider myself a social activist. Imagine my quandary when I talk to people about how to move forward individually and collectively. How can we use category theory and allied disciplines to deal with planetary management so that in one hundred years people will encounter benevolence and not crisis? Both category theory and our planet are capable of not just amazing complexity, but of layers of complexity.  I study the full Ackermann function; addition, multiplication, exponentiation and the hyperoperators  which provide a stack of increasingly complex systems. I would love to know if there are mathematical alternatives to the hyperoperators for a stack of increasing complexity.</p>",
        "id": 192990676,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586141185
    },
    {
        "content": "<p>I also see a need for such tools, and I’d be interested in what you find. I also am fascinated with how one could represent information graphically at different levels of complexity, it’s a difficult thing to do. Maybe a different writing system more amenable to fractals or alternate spacial compositions would help, idk.</p>",
        "id": 192993295,
        "sender_full_name": "Verity Scheel",
        "timestamp": 1586145383
    },
    {
        "content": "<p>Have you read Seven Sketches? Chapter 4 might be relevant: “Collaborative design: profunctors, categorification, and monoidal categories”.</p>",
        "id": 192993518,
        "sender_full_name": "Verity Scheel",
        "timestamp": 1586145838
    },
    {
        "content": "<p>Just bought Seven Sketches <span class=\"user-mention\" data-user-id=\"276057\">@Nicholas Scheel</span> . It's exactly what I'm looking for.</p>",
        "id": 192994191,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586146846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276867\">Daniel Geisler</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/Wellbeing.20category/near/192990676\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/Wellbeing.20category/near/192990676\">said</a>:</p>\n<blockquote>\n<p>How can we use category theory and allied disciplines to deal with planetary management so that in one hundred years people will encounter benevolence and not crisis?</p>\n</blockquote>\n<p>Yeah, that was kind of what motivated <span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> to leave mathematical physics and try to apply category theory elsewhere.</p>",
        "id": 193001725,
        "sender_full_name": "(=_=)",
        "timestamp": 1586156741
    },
    {
        "content": "<p>Yeah, well I made the transition to social activist at sixteen, fifty years ago. So I'm a social activist who likes math.</p>",
        "id": 193005236,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586159116
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276867\">Daniel Geisler</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/Wellbeing.20category/near/192990676\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/Wellbeing.20category/near/192990676\">said</a>:</p>\n<blockquote>\n<p>I study the full Ackermann function; addition, multiplication, exponentiation and the hyperoperators  which provide a stack of increasingly complex systems. I would love to know if there are mathematical alternatives to the hyperoperators for a stack of increasing complexity.</p>\n</blockquote>\n<p>Sorry, I don't really see the complexity. What's complex about complex systems is the mess of interactions between agents that are themselves a mess of interactions. Arithmetic operators are not complex, in that sense, not even the hyperoperators. Just because things blow up very quickly doesn't necessarily make them complex.</p>",
        "id": 193007835,
        "sender_full_name": "(=_=)",
        "timestamp": 1586160642
    },
    {
        "content": "<p>Well he's my hero for making a public transition to being a social activist.</p>",
        "id": 193007931,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586160709
    },
    {
        "content": "<p>Cool.</p>",
        "id": 193008002,
        "sender_full_name": "(=_=)",
        "timestamp": 1586160737
    },
    {
        "content": "<p>There is a discussion <a href=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192952883\" title=\"#narrow/stream/229111-general/topic/Math.20and.20Real.20Life/near/192952883\">here</a> that talks about how XR used maths to organise. Worth a look perhaps.</p>",
        "id": 193008424,
        "sender_full_name": "(=_=)",
        "timestamp": 1586160973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276424\">@Rongmin Lu</span> I hope to change your mind, but I'm just going public with some ideas.</p>",
        "id": 193009905,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586161873
    },
    {
        "content": "<blockquote>\n<p>Rongmin Lu said</p>\n<blockquote>\n<p>Daniel Geisler said:</p>\n<p>I study the full Ackermann function; addition, multiplication, exponentiation and the hyperoperators which provide a stack of increasingly complex systems. I would love to know if there are mathematical alternatives to the hyperoperators for a stack of increasing complexity.</p>\n</blockquote>\n<p>Sorry, I don't really see the complexity. What's complex about complex systems is the mess of interactions between agents that are themselves a mess of interactions. Arithmetic operators are not complex, in that sense, not even the hyperoperators. Just because things blow up very quickly doesn't necessarily make them complex.</p>\n</blockquote>\n<p>Addition, multiplication, exponentiation all have a combinatorial meaning. I find they build complexity in a beautiful way. I highly recommend Analytic Combinatorics. Tetration's meaning relates to trees A000311 from iterated functions.</p>",
        "id": 193093109,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586203123
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276867\">Daniel Geisler</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/Wellbeing.20category/near/193093109\" title=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/Wellbeing.20category/near/193093109\">said</a>:</p>\n<blockquote>\n<p>Addition, multiplication, exponentiation all have a combinatorial meaning. I find they build complexity in a beautiful way. I highly recommend Analytic Combinatorics. Tetration's meaning relates to trees A000311 from iterated functions.</p>\n</blockquote>\n<p>Combinatorial explosion is merely one factor in the complexity of a system. It's not the only thing.</p>",
        "id": 193143104,
        "sender_full_name": "(=_=)",
        "timestamp": 1586238354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276424\">@Rongmin Lu</span>  Definitely. I'm very interested in the related combinatorial structures.</p>",
        "id": 193143640,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586238989
    },
    {
        "content": "<p>Reading about Azimuth I see that they talk about the need for \"Green\" mathematics.</p>",
        "id": 197555830,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1589463851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276867\">@Daniel Geisler</span>  I just had another thought. What about using parametricity to talk about non-discrimination?</p>\n<p>I think of parametricity laws as \"prescribing what one can care about\". For example, in a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo>:</mo><mi>T</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>A</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\forall (A : Type), A \\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∀</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">e</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>, you can think of the function as being given a type and all it knows is that it's a type – so it can use that type in other places where types are needed, but it's not allowed to know anything else about the type yet other than that it's a type – and so this means that what goes in is what comes out in this example <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A \\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>, since there's no other place to get information about <code>A</code> other than the single argument it was given of type <code>A</code>. Of course, you can take assumptions to refine your information about the type, and dependent type theory allows these assumptions to be arbitrarily complex (for example, you can ask that the type is either uninhabited or has exactly 5 inhabitants, or you can ask that it has a non-trivial injection to itself). But those assumptions have to be declared, and types can't be inspected through other means.</p>\n<p>So a parametric function is one that doesn't discriminate against its (type) arguments/parameters.</p>\n<p>Here's a nontrivial use of parametricity: for all monoids <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, parametrically produce a value of the carrier type of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>. In Haskell notation, <code>forall m. Monoid m =&gt; m</code>. It turns out that any parametric function of this type must produce the empty value of the monoid! Intuitively this is clear, but parametricity gives us the tools needed to prove this uniform behavior based solely on the types involved (not inspecting the function).</p>\n<p>On the real-world side of things, imagine I am a daycare provider and we sign an agreement that I'm going to look after your children during certain hours of the week. Before agreeing to it, I would like to know how many children you have, what their ages are, and maybe some other information, as well as whether you agree to the price. But parametricity wouldn't allow me to ask about their race or their height or whether they still have baby teeth or anything like that while deciding whether to enter into the agreement. (More information would be relevant later on when actually providing the care, but it shouldn't affect the quality of the care and definitely not whether I agree to look after your children. This would be a little like existential quantification.) Parametricity could also ensure that you get _your_ children back everyday, and not someone else's!</p>\n<p>(It seems like modalities could be really interesting to incorporate into such a type system.)</p>\n<p>Of course there's a lot of soft aspects to it that matter a lot, but I feel like for a theoretical starting place, parametricity provides a nice framework for talking about what information we care about and where.</p>",
        "id": 198272980,
        "sender_full_name": "Verity Scheel",
        "timestamp": 1590019890
    },
    {
        "content": "<p>This sounds a lot like the conditions for stock market investing, where laws against insider trading prevent people from using certain informatiom to make decisions. Maybe economists have already done some of the math under the heading of 'asymmetric information'? It's also possible that this is a novel approach to an existing and widely researched area.</p>",
        "id": 198480289,
        "sender_full_name": "Oliver Shetler",
        "timestamp": 1590173474
    },
    {
        "content": "<p>That’s interesting, hadn’t thought of that :) something that might help bridge the gap is <span class=\"user-mention\" data-user-id=\"277308\">@Bob Atkey</span>’s fascinating paper on encoding Noether’s theorem via parametricity, e.g. you can transition between reference frames and everything behaves the same (the types track where and how the transformations need to be applied to relate the reference frames): <a href=\"https://bentnib.org/conservation-laws.html\">https://bentnib.org/conservation-laws.html</a></p>",
        "id": 198498547,
        "sender_full_name": "Verity Scheel",
        "timestamp": 1590184006
    },
    {
        "content": "<p>Howdy, my new project is at <a href=\"https://greenmath.org/index.php?title=Main_Page\">Green Mathematics</a>. Drop by and share your thoughts.</p>",
        "id": 198847091,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1590551236
    },
    {
        "content": "<p>Umm <span class=\"user-mention\" data-user-id=\"276867\">@Daniel Geisler</span>, can I ask what \"Voluntary Peasants\" means, and also why you chose \"Genetic Engineering, Nanotechnology, Artificial Intelligence\" as particular instances of principles of Green Mathematics?</p>",
        "id": 198904042,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1590591555
    },
    {
        "content": "<p>Howdy, I just started last night so now is a good time to elaborate. I'm not supporting a mono-culture like transhumanism. Different cultures not only have a right to have seat at the table, their diversity might be our salvation. <br>\nIn the mid-Seventies I made a number of trips to <a href=\"http://www.thefarm.org/\">The Farm</a>. Their leader had a saying which became a book, \"Voluntary Peasants\". We don't need so much consumption, we don't need so many people.<br>\nConsider the question \"what is wealth?\" At the Farm their wealth was their social connections and hope for a new compassionate path into the future. This ties into a beautiful vision I had of an underground home in the prairie. Through GE and nanotechnology, the home couldn't be clearly distinguished from the surrounding prairie. Transportation and industry were underground. Other dreams were of parklike villages in a Roman motif. Just beautiful possibilities, but worth exploring.</p>",
        "id": 198915969,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1590596435
    },
    {
        "content": "<p>Ah, I see! Kind of a utopian sci-fi conception of nanotech and genetic engineering, rather than the shameless profiteering off farmers that genetic modification amounts to in many rural areas today <span aria-label=\"relieved\" class=\"emoji emoji-1f60c\" role=\"img\" title=\"relieved\">:relieved:</span></p>",
        "id": 198916845,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1590596819
    },
    {
        "content": "<p>Thanks, I like the vision. I actually think you should expand on this picture on the site itself (apologies for not commenting there, I was too lazy to commit to creating an account...)</p>",
        "id": 198917052,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1590596936
    },
    {
        "content": "<p>Thanks, I will be expanding the site. I want to provide hope and options.</p>",
        "id": 198917143,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1590596997
    }
]