[
    {
        "content": "<p>Does anyone know of a graphical language to work with bimonoidal categories? Maybe something like what string diagrams are for monoidal categories</p>",
        "id": 210262572,
        "sender_full_name": "marcosh",
        "timestamp": 1600263636
    },
    {
        "content": "<p>Yes! <span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span> and <span class=\"user-mention\" data-user-id=\"277391\">@Cole Comfort</span> and me are working on this paper right now</p>",
        "id": 210263238,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600263938
    },
    {
        "content": "<p>cool! do you have a rough preview you could share? I'm just interesting in how the graphical language would be, not that much in theorems and proofs</p>",
        "id": 210263428,
        "sender_full_name": "marcosh",
        "timestamp": 1600264011
    },
    {
        "content": "<p>We are following <a href=\"http://www.cs.ox.ac.uk/people/samuel.staton/papers/popl2015.pdf\">http://www.cs.ox.ac.uk/people/samuel.staton/papers/popl2015.pdf</a> and <a href=\"https://arxiv.org/abs/1906.05937\">https://arxiv.org/abs/1906.05937</a></p>",
        "id": 210263558,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264066
    },
    {
        "content": "<p>The rough idea is that we have a branching surface diagram that looks like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>×</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">D \\times [0,1]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> is a string diagram (ie. it's a \"fat\" string diagram), and then we draw string diagrams on that surface</p>",
        "id": 210263747,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264132
    },
    {
        "content": "<p>oh, so 3d stuff, right?</p>",
        "id": 210263916,
        "sender_full_name": "marcosh",
        "timestamp": 1600264201
    },
    {
        "content": "<p>I'll take a look at the papers, thanks!</p>",
        "id": 210263976,
        "sender_full_name": "marcosh",
        "timestamp": 1600264212
    },
    {
        "content": "<p>In a <em>free</em> bimonoidal category you can put every object into a normal form (like polynomial normal form, or DNF in logic) where all the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> goes to the inside and all the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span> goes to the outside, ie. a sum of products. Each individual factor goes onto one sheet, and the collection of factors onto parallel sheets</p>",
        "id": 210264021,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264230
    },
    {
        "content": "<p>Yes. There are also a couple of proposals in the literature for hacking it in 2 dimensions, but it \"wants\" to be 3-dimensional</p>",
        "id": 210264053,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264250
    },
    {
        "content": "<p>A bimonoidal category is a tricategory with [bunch of restrictions]</p>",
        "id": 210264102,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264268
    },
    {
        "content": "<p>Our paper came together way quicker than I expected (because Antonin put a bunch of work into it), now we're in the long process of making it readable, but it may even be out this year</p>",
        "id": 210264359,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264368
    },
    {
        "content": "<p>cool, I'll monitor arXiv</p>",
        "id": 210264444,
        "sender_full_name": "marcosh",
        "timestamp": 1600264411
    },
    {
        "content": "<p>The things we cite for hacking it in 2 dimensions are <a href=\"https://arxiv.org/abs/0903.5154\">https://arxiv.org/abs/0903.5154</a> and [Roshan James and Amr Sabry, Information effects]</p>",
        "id": 210264636,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264490
    },
    {
        "content": "<p>This year? I think it could be this month :)</p>",
        "id": 210264712,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1600264525
    },
    {
        "content": "<p>You underestimate how busy I am. I can spend a few hours a week on this paper, and there's a whole bunch of stuff still to do</p>",
        "id": 210265051,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264684
    },
    {
        "content": "<p>But the world <em>needs</em> string diagrams for bimonoidal categories right now! :-D</p>",
        "id": 210265298,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1600264784
    },
    {
        "content": "<p>Yep, so I can see</p>",
        "id": 210265689,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600264931
    },
    {
        "content": "<p>Also if you are interested, linearly distributive categories also have 2 monoidal structures, except there is a different distributivity between them... And the morally correct graphical calculus turns out to be 3d surfaces, where the 2d proof nets are merely projections, losing some of the topological information needed to make equivalent diagrams isotopic in a certain sense.</p>",
        "id": 210269824,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600266618
    },
    {
        "content": "<p><a href=\"https://arxiv.org/abs/1601.05372\">https://arxiv.org/abs/1601.05372</a></p>",
        "id": 210269831,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600266623
    },
    {
        "content": "<p>The only other such type of distributivity that I know of is that of duoidal categories, so someone should find their proof surfaces as well.</p>",
        "id": 210270227,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600266780
    },
    {
        "content": "<p>Are the bimonoidal categories you're working with the same thing as the \"ring categories\" developed by Kelly and Laplaza, which the nLab wisely calls <a href=\"https://ncatlab.org/nlab/show/rig+category\">rig categories</a>?</p>",
        "id": 210301872,
        "sender_full_name": "John Baez",
        "timestamp": 1600281175
    },
    {
        "content": "<p>The main annoying thing about rig categories is the large number of coherence laws involving the \"distributor\" natural isomorphisms.</p>",
        "id": 210301927,
        "sender_full_name": "John Baez",
        "timestamp": 1600281208
    },
    {
        "content": "<p>I've been working with a lot of things like rig categories lately, writing a paper with Todd Trimble and Joe Moeller on \"Schur functors and symmetric functions\" - basically, updating some old ideas in combinatorics and representation theory.</p>",
        "id": 210302031,
        "sender_full_name": "John Baez",
        "timestamp": 1600281258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/210301872\">said</a>:</p>\n<blockquote>\n<p>Are the bimonoidal categories you're working with the same thing as the \"ring categories\" developed by Kelly and Laplaza, which the nLab wisely calls <a href=\"https://ncatlab.org/nlab/show/rig+category\">rig categories</a>?</p>\n</blockquote>\n<p>Yes</p>",
        "id": 210304002,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600282237
    },
    {
        "content": "<p>(Words like \"rig\" and \"actegory\" are funny but I avoid them in serious writing)</p>",
        "id": 210304092,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600282275
    },
    {
        "content": "<p>\"Rig\" seems no more funny than \"ring\".  It must have been hilarious, the first ten times anyone said it, to call a mathematical structure a \"ring\".  <span aria-label=\"ring\" class=\"emoji emoji-1f48d\" role=\"img\" title=\"ring\">:ring:</span></p>",
        "id": 210304464,
        "sender_full_name": "John Baez",
        "timestamp": 1600282463
    },
    {
        "content": "<p>I am not going to call a \"rig\" a \"semiring\", either, because this analogy is hopelessly broken:</p>\n<p>group : semigroup :: ring : semiring</p>",
        "id": 210304568,
        "sender_full_name": "John Baez",
        "timestamp": 1600282538
    },
    {
        "content": "<p>More importantly: so, in your work on rig categories, are you really dealing with that mass of coherence laws that Kelly and Laplaza came up with?</p>",
        "id": 210304706,
        "sender_full_name": "John Baez",
        "timestamp": 1600282609
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/210304464\">said</a>:</p>\n<blockquote>\n<p>\"Rig\" seems no more funny than \"ring\".  It must have been hilarious, the first ten times anyone said it, to call a mathematical structure a \"ring\".  <span aria-label=\"ring\" class=\"emoji emoji-1f48d\" role=\"img\" title=\"ring\">:ring:</span></p>\n</blockquote>\n<p>It was almost certainly in German. <em>quickly checks mathematical dictionary</em> So the German word for ring is Ring, and in standard German it seems to have all the same meanings as in English. So, yes</p>",
        "id": 210305095,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600282768
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/210304706\">said</a>:</p>\n<blockquote>\n<p>More importantly: so, in your work on rig categories, are you really dealing with that mass of coherence laws that Kelly and Laplaza came up with?</p>\n</blockquote>\n<p>We rely on the existing coherence theorem as a hammer, they figured out just how much strictness it's safe to assume. (I'm on the wrong laptop to give you the citation)</p>",
        "id": 210306018,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600283164
    },
    {
        "content": "<p>Okay, cool.</p>",
        "id": 210306559,
        "sender_full_name": "John Baez",
        "timestamp": 1600283393
    },
    {
        "content": "<p>You probably know this, but I find this cool: if you assume everything about distributivity and associativity is strict you get dangerously close to commutativity, since</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>b</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>c</mi><mo>+</mo><mi>a</mi><mi>d</mi><mo>+</mo><mi>b</mi><mi>c</mi><mo>+</mo><mi>b</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\"> (a+b)(c+d) = a(c+d) + b(c+d) = ac + ad + bc + bd </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">d</span></span></span></span></p>\n<p>but</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mo>=</mo><mi>a</mi><mi>c</mi><mo>+</mo><mi>b</mi><mi>c</mi><mo>+</mo><mi>a</mi><mi>d</mi><mo>+</mo><mi>b</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\"> (a+b)(c+d) = (a+b)c + (a+b)d = ac + bc + ad + bd </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">d</span></span></span></span></p>\n<p>where only the terms in the middle have been commuted.</p>\n<p>If we can subtract, we then get </p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>d</mi><mo>+</mo><mi>b</mi><mi>c</mi><mo>=</mo><mi>b</mi><mi>c</mi><mo>+</mo><mi>a</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">ad + bc = bc + ad</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span></span></span></span></p>\n<p>and if we can set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>=</mo><mi>d</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">c = d = 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> and the unit law holds strictly we get</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>=</mo><mi>b</mi><mo>+</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> a + b = b + a</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span></p>\n<p>This is why in the definition of \"ring\" we don't need to <em>assume</em> addition is commutative.   </p>\n<p>But for a \"rig\" this argument fails: we don't get commutativity of addition for free.</p>",
        "id": 210307368,
        "sender_full_name": "John Baez",
        "timestamp": 1600283771
    },
    {
        "content": "<p>I am one more person who desperately wants such a graphical calculus, indeed for rig categories. Amr Sabry and I continued the work you cite above that he'd done with Roshan, see <a href=\"https://www.cas.mcmaster.ca/~carette/publications/esop2.pdf\">Computing with Semirings and Weak Rig Groupoids</a> at ESOP 2016.   The 3 of us together have also published <a href=\"https://arxiv.org/abs/1811.03678\">Embracing the Laws of Physics: Three Reversible Models of Computation</a> where we also wanted these diagrams.</p>",
        "id": 210418105,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600361785
    },
    {
        "content": "<p>Thanks for these references, it's super useful :) We are on it!</p>",
        "id": 210418459,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1600361976
    },
    {
        "content": "<p>You can see all the coherence conditions that Laplaza discovered in full (linear) glory in that first paper - and in the Agda code that accompanies the paper. We proved that the category of Types is indeed a symmetric rig groupoid. That was... a lot of work.</p>",
        "id": 210418475,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600361988
    },
    {
        "content": "<p>Yes there are a lot of coherence conditions, it's not exactly easy to work with…</p>",
        "id": 210418627,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1600362051
    },
    {
        "content": "<p>Interestingly, some of the coherence conditions are 'fragile'. In particular, there are 2 proofs that (0 * 0 = 0), by eliminating on the left, or on the right, and these are supposed to be equivalent. If you pick the 'wrong' way to perform these proofs (by contradiction instead of passing on the 'other' impossibility along), that coherence <strong>does not hold</strong>!</p>",
        "id": 210418774,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600362122
    },
    {
        "content": "<p>A lot of the graphical calculi elide 0 and 1 from the pictures almost entirely, and this is a grave mistake, because it can lead to an unsound calculus.  The 'survey' on graphical notations is quite careful about this, but not everyone is.</p>",
        "id": 210418949,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600362222
    },
    {
        "content": "<p>Our aim is to perform the Int construction in this setting. It is well-known that if you do it mindlessly, it doesn't work - in that it causes everything to collapse into being equivalent to the 1-point groupoid. Ultimately, we'd love to do it for both structures, but the Rig Completion paper already tells us we'll need to go 'up' in dimensions.</p>",
        "id": 210419786,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600362572
    },
    {
        "content": "<p>In what setting exactly do you mean to apply the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">I</mi><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\sf Int </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">I</span><span class=\"mord mathsf\">n</span><span class=\"mord mathsf\">t</span></span></span></span></span> construction?</p>",
        "id": 210420216,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600362749
    },
    {
        "content": "<p>To the symmetric rig groupoid of Types. Applying it to the additive structure ought to give something as close to a ring structure at the level of categories as one might hope to get.  <span class=\"user-mention\" data-user-id=\"277611\">@Todd Trimble</span> pointed us towards cobordisms as one place to look, but we couldn't get the details to work out [which says more about us than about the suggestion.]</p>",
        "id": 210420699,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600362962
    },
    {
        "content": "<p>Interesting!</p>",
        "id": 210420828,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600363007
    },
    {
        "content": "<p>Like how pregroup grammars give you left and right inverses for every type.</p>",
        "id": 210429135,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600366664
    },
    {
        "content": "<p>Yes, very much like that.</p>",
        "id": 210429247,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600366705
    },
    {
        "content": "<p>We have managed to get 'a' notion of multiplicative inverse, published in <a href=\"https://arxiv.org/abs/2002.07020\">Fractional Types: Expressive and Safe Space Management for Ancilla Bits</a> at RC 2020. Basically, an inhabitant of 1/T is a garbage collector for a specific value of T. This makes things like 'ancilla bits' used in quantum computing work properly (and gets rid of soundness problems in the implementation of certain current QPLs with respect to handling ancillas). They obey many of the nice laws of (positive) rational numbers.</p>",
        "id": 210429774,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600366935
    },
    {
        "content": "<p>The Ph.D. thesis of <span class=\"user-mention\" data-user-id=\"303931\">@Chao-Hong Chen</span> will contain many more nice results along those lines. [He's supervised by Amr, I'm not involved other than as co-author of some of the earlier papers.]</p>",
        "id": 210430040,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600367065
    },
    {
        "content": "<p>That sounds super cool</p>",
        "id": 210430425,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1600367253
    },
    {
        "content": "<p>I should read this paper because I am also interested in reversible computing. Normally I just approach dealing with ancilla bits by adding partiality... so for classical reversible computing this means working in finite sets and partial injections.</p>",
        "id": 210430739,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600367399
    },
    {
        "content": "<p>It is cool that this can be dealt with at the level of types.</p>",
        "id": 210431350,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1600367645
    },
    {
        "content": "<p>I definitely recommend to everyone to start with the \"Embracing the Laws\" paper, as it is meant to be quite approachable, but it also deals with setting up terminology (and it has some nice results about Curry-Howard that more people ought to know...). Then this paper. Although it sounds like you (<span class=\"user-mention\" data-user-id=\"277391\">@Cole Comfort</span> ) could dive right in.</p>\n<p>Not just types: dependent types. Without them, things don't work. But with, it works out quite nicely.</p>",
        "id": 210431922,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1600367966
    },
    {
        "content": "<p>Our paper about diagrams for bimonoidal categories is finally on the arXiv: <a href=\"https://arxiv.org/abs/2010.13361\">https://arxiv.org/abs/2010.13361</a>. Looking forward to your impressions, <span class=\"user-mention\" data-user-id=\"276055\">@marcosh</span>  and <span class=\"user-mention\" data-user-id=\"296322\">@Jacques Carette</span>  :)</p>\n<p>Sample diagram: <a href=\"user_uploads/21317/Q7nZC3cEjjrAUhGDdB6oW-IR/sheet_diagram.png\">sheet_diagram.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/21317/Q7nZC3cEjjrAUhGDdB6oW-IR/sheet_diagram.png\" title=\"sheet_diagram.png\"><img src=\"user_uploads/21317/Q7nZC3cEjjrAUhGDdB6oW-IR/sheet_diagram.png\"></a></div>",
        "id": 214650096,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603759303
    },
    {
        "content": "<p>cool! thanks for the notification!</p>",
        "id": 214670203,
        "sender_full_name": "marcosh",
        "timestamp": 1603786256
    },
    {
        "content": "<p>I definitely will give you my impressions (past that it does indeed look quite cool), as soon as I've deal with a number of urgent things on my schedule.</p>",
        "id": 214704660,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1603808035
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276320\">Antonin Delpeuch</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/214650096\">said</a>:</p>\n<blockquote>\n<p>Our paper about diagrams for bimonoidal categories is finally on the arXiv: <a href=\"https://arxiv.org/abs/2010.13361\">https://arxiv.org/abs/2010.13361</a>.</p>\n</blockquote>\n<p>Cool paper and tool! A few questions and a comment to follow.</p>",
        "id": 214729539,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603817676
    },
    {
        "content": "<p>Can your results be adapted to accommodate the other styles of notation from Duncan or James &amp; Sabry? Can you see any places where that sort of notation is either misleading or overly restrictive? I love how the 3D diagrams look (and reason), but I think the others are easier to read and write, in practice.</p>",
        "id": 214729936,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603817861
    },
    {
        "content": "<p>Once you start flattening these diagrams, they start to look like an extension of both ribbon diagrams (as in Selinger) and functorial boxes (as in Fritz &amp; Perrone). Have you thought about possible relations?</p>",
        "id": 214730175,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603817947
    },
    {
        "content": "<p>Is there a nice graphical notation for the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span> symmetry, or does it look just like any other map with the same boundary?</p>",
        "id": 214730672,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603818133
    },
    {
        "content": "<p>I'm a bit unsatisfied by the heavy reliance on normalization for the objects; in some sense there is no way to write down the object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mo>⊕</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A\\otimes(B\\oplus C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>, much less distributivity.</p>",
        "id": 214731128,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603818293
    },
    {
        "content": "<p>I think you could build them in by allowing vertical, as well as horizontal, seams, to represent multiplication of sums.  I've been thinking of these as \"Ziploc diagrams\". Applying distributivity is opening the bag.  See the pictures below.</p>",
        "id": 214731970,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603818627
    },
    {
        "content": "<p>First the object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mo>⊕</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A\\otimes(B\\oplus C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>, then the diagram from p. 9 of your paper. <a href=\"/user_uploads/21317/lVKxol_KHesPtJ9_uQ8QQAJd/ziploc1.jpg\">ziploc1.jpg</a> <a href=\"/user_uploads/21317/LjlLOYbWKRy78dApCpmOREvM/ziploc2.jpg\">ziploc2.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/lVKxol_KHesPtJ9_uQ8QQAJd/ziploc1.jpg\" title=\"ziploc1.jpg\"><img src=\"/user_uploads/21317/lVKxol_KHesPtJ9_uQ8QQAJd/ziploc1.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/21317/LjlLOYbWKRy78dApCpmOREvM/ziploc2.jpg\" title=\"ziploc2.jpg\"><img src=\"/user_uploads/21317/LjlLOYbWKRy78dApCpmOREvM/ziploc2.jpg\"></a></div>",
        "id": 214733099,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603819113
    },
    {
        "content": "<p>Note that this makes the diagrams a bit more compositional; we can see the identity right in the middle of the diagram, in the same way we would ordinarily draw it. Plus, this opens up undotted sheet-crossing as the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span>-swap, rather than needing it for the identity.</p>",
        "id": 214734181,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603819536
    },
    {
        "content": "<p>That's a lot of great points!<br>\nConcerning the other notations, they are obviously practical too. I'd say one shortcoming of Duncan's notation is that it's not easy to represent a symmetry for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span>. For James &amp; Sabry, I imagine it must be hard to represent morphisms such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mn>1</mn><mi>I</mi></msub><mo>⊕</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">1_I \\oplus f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.79444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> (since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mn>1</mn><mi>I</mi></msub></mrow><annotation encoding=\"application/x-tex\">1_I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.79444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is just whitespace, it would not be very clear to have this whitespace followed by a sum and something else).<br>\nConcerning the relation to ribbon diagrams and functorial boxes, I don't remember us thinking about that - it'd be fun if there could be a connection there!<br>\nFor the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span> symmetry, it's simply the crossing of sheets. You have quite a lot of them in the paper, for instance page 12. (The renderer tries to make sure that the wires of both sheets do not cross at the same horizontal positions in the swap, to make it clearer that they are unrelated).<br>\nFor the reliance on normalization, I think that's an important feature of the syntax. For string diagrams in monoidal categories, you also collapse structure by forgetting the bracketing of your products, because it's irrelevant. That's what makes the syntax powerful - it handles this coherence for you. If you want to represent distributors explicitly (and also associators, unitors) you can just follow Vicary &amp; Dunn's approach, by drawing all the coherence isomorphisms as cells in a monoidal 2-category (<a href=\"https://lmcs.episciences.org/5645\">https://lmcs.episciences.org/5645</a>). You could do that for quite a lot of types of categories (including monoidal categories themselves actually), and it works out of the box but doesn't feel as useful to me since it requires you to represent all the coherence morphisms explicitly (so it's not much easier than just working with good old morphism expressions).</p>",
        "id": 214735040,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603819854
    },
    {
        "content": "<p>I think it's really a design choice to make all objects normalised. It means we get simpler diagrams, at the expense of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> being complicated. It doesn't have to be that way though</p>",
        "id": 214739659,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1603821786
    },
    {
        "content": "<p>Personally I'm really terrible at 3d visualisation, so for me keeping the diagrams as simple as possible is perfect</p>",
        "id": 214739750,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1603821816
    },
    {
        "content": "<p>It's true that normalization has a cost (for instance creating copies of morphisms which would not need to be duplicated otherwise). It would be great to have the choice indeed.</p>",
        "id": 214739762,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603821820
    },
    {
        "content": "<p>Note that the notation from James &amp; Sabry is likely not worth emulating, in that it doesn't have any proven \"good properties\".  Roshan, Amr and I also sought a better notation for our joint paper <a href=\"https://arxiv.org/abs/1811.03678\">Embracing the Laws of Physics: Three Reversible Models of Computation</a>. The notation in the paper should be understood as aiding intuition only, unlike the work here, which has formal underpinnings.</p>",
        "id": 214741325,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1603822431
    },
    {
        "content": "<p>It seems to me (though I haven't thought hard about it), that we can view an extension like the one I suggested as syntactic sugar on top of what you've already got. It's not so much either/or as either/both. I'm mostly interested from a user interaction perspective (where duplication is very costly), but the abstract syntax is much less useful without your normalization sitting under the hood.</p>",
        "id": 214741533,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603822520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278008\">@Spencer Breiner</span> perhaps there is a way to make this work, but it seems really non-trivial to me. We heavily rely on Joyal &amp; Street for the soundness and completeness theorem, and as soon as you allow vertical splits your sheet diagram is no longer an extrusion of a planar one, so you probably need to switch gears and prove it from scratch. But for me, even before considering isotopies, there are diagrams with vertical splits that I am not even not sure how to interpret, really.</p>",
        "id": 214742667,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603823029
    },
    {
        "content": "<p>Certainly it would be some work to make precise, but do you have an example in mind where a problem might arise?</p>\n<p>My intuition would be something like this:<br>\n1) First, \"unzip\" each vertical seam in the diagram, meaning copy everything on the \"zipped\" side of the vertical seam and between the nearest horizontal seams.<br>\n2) A not-too-sophisticated induction should show that we can do this in a way that terminates. A bit of cleverness ought to show that any unzipping strategy will terminate.<br>\n3) The order of the unzipping will matter, but only up to equivalence; I think this is the geometric content of Def'n 10.<br>\n4) Invoke your result to determine equivalence classes for the reduced maps.</p>",
        "id": 214754113,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603828107
    },
    {
        "content": "<p>I have thought a bit more and it seems more doable to me now…  It would be great because it would even let us define the tensor product of two morphisms simply as the remaining horizontal composition. I don't have a scanner at hand but as soon as I get one (in the coming days) I'll draw examples of things where I am currently stuck.</p>",
        "id": 214804975,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603872356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278008\">@Spencer Breiner</span> One problem I have is this: <a href=\"/user_uploads/21317/Y1VQaAiDpfGiw4yQj-GA134W/image.png\">image.png</a> <br>\nUnless you see a natural interpretation for the last slice, it seems that we cannot accept arbitrary planar compositions of ziplocs as slices. It makes the syntax a bit less compositional than one might hope (but perhaps it's not a blocker).</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Y1VQaAiDpfGiw4yQj-GA134W/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Y1VQaAiDpfGiw4yQj-GA134W/image.png\"></a></div>",
        "id": 214952118,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603969480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278008\">Spencer Breiner</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/214729936\">said</a>:</p>\n<blockquote>\n<p>Can your results be adapted to accommodate the other styles of notation from Duncan or James &amp; Sabry? Can you see any places where that sort of notation is either misleading or overly restrictive? I love how the 3D diagrams look (and reason), but I think the others are easier to read and write, in practice.</p>\n</blockquote>\n<p>I haven't followed this thread super closely, but I suddenly had the thought, maybe these can be made precise with careful application of string diagrams for 2-categories? Like, the 0-cells correspond to sheets/\"worlds\", and there are extra 1-cells corresponding to the \"+\" operator / dotted line</p>",
        "id": 214955967,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1603972324
    },
    {
        "content": "<p>One hope I had with this project was that by recognizing our diagrams as a special class of other diagrams, we would be able to see bimonoidal categories as special cases of the corresponding structures. Because it feels easier to find analogies between structures when looking at them from a graphical perspective (instead of lists of axioms). But it hasn't really happened yet as far as I know. The tensor exchange rule reminded us of bialgebras, but we haven't investigated that much. Also the diagrams feel like they could live in a monoidal double category - not sure if there is anything interesting to extract from that.</p>",
        "id": 214957404,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1603973350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276320\">Antonin Delpeuch</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/214957404\">said</a>:</p>\n<blockquote>\n<p>One hope I had with this project was that by recognizing our diagrams as a special class of other diagrams, we would be able to see bimonoidal categories as special cases of the corresponding structures. Because it feels easier to find analogies between structures when looking at them from a graphical perspective (instead of lists of axioms). But it hasn't really happened yet as far as I know. The tensor exchange rule reminded us of bialgebras, but we haven't investigated that much. Also the diagrams feel like they could live in a monoidal double category - not sure if there is anything interesting to extract from that.</p>\n</blockquote>\n<p>Upon more reflection think it is more like a bimonoid than a bialgebra, in the same sense as the distributivity of multiplication over addition in the lawvere theory for rings.  Hence the name....</p>",
        "id": 214958308,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1603973962
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276320\">Antonin Delpeuch</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/214952118\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"278008\">Spencer Breiner</span> One problem I have is this: <a href=\"/user_uploads/21317/Y1VQaAiDpfGiw4yQj-GA134W/image.png\">image.png</a> <br>\nUnless you see a natural interpretation for the last slice, it seems that we cannot accept arbitrary planar compositions of ziplocs as slices. It makes the syntax a bit less compositional than one might hope (but perhaps it's not a blocker).</p>\n</blockquote>\n<p>It looks to me like this should reduce to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>B</mi><mo>+</mo><mi>A</mi><mi>C</mi><mi>D</mi><mo>+</mo><mi>E</mi><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">AB+ACD+ED</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>. We get the same answer whichever order we unzip, so that seems reasonable. What's interesting here is that there is that this is a connected diagram that can't be represented as a single product. It's like a new piece of syntax that interpolates between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo>+</mo><mi>C</mi><mi>D</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>E</mi><mi>D</mi><mo>=</mo><mi>A</mi><mi>B</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mi>C</mi><mo>+</mo><mi>E</mi><mo stretchy=\"false\">)</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">A(B+CD)+ED=AB+(AC+E)D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>. Very cool!</p>",
        "id": 214967637,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1603979064
    },
    {
        "content": "<p>This diagram kind of looks like the distributor in a linearly distributive category.  I wonder if there is any connection there.</p>",
        "id": 214967938,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1603979209
    },
    {
        "content": "<p>Sorry for taking so long <span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span> to get to this. I managed to read the paper carefully over a week ago, but not to write up my comments until now.</p>\n<p>Note: even though I'm going to make some critical comments below, I'm doing so because I believe that this endeavour is worthwhile, so that it is worth my time to write up my critique.</p>\n<p>First and foremost, you should look at Cockett and Seely's <a href=\"https://www.math.mcgill.ca/rags/misc/proof_theory-essay.pdf\">Proof Theory of the Cut Rule</a>, especially the diagrams in Figure 1 on p.13.  Those dotted lines are very important!  They were, of course, already present in <a href=\"https://www.math.mcgill.ca/rags/nets/nets.pdf\">Natural deduction and coherence for weakly distributive categories</a>; the reason for them is well explained in section 2.3. The thing that \"goes wrong\" is well illustrated on p.242 (p.14 of the PDF).  This is also the source of many complications in Laplaza's paper.</p>\n<p>It seems to me that Definition 9 is inadequate, in that it does not actually normalize.  Take just <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>+</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O+O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> as one example: your definition says that it is normalized (where it is not). Similarly, none of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⋅</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">I\\cdot O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>+</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I+I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>⋅</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O\\cdot O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> are 'simplified' by your definition, even though later on (such as in Lemma 12), you assume they do.</p>\n<p>In the proof of Lemma 12, you dismiss Laplaza's (X) axiom as straightforward. In my own work in proving that the Rig category of Types satisfies this, that particular axiom was in fact the hardest to prove correct! The issue is related to the 'dotted lines' I already mentioned above: there are genuinely different (constructive) proofs that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>⋅</mo><mi>O</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O \\cdot O = O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>, and if you choose the wrong one, you will get an incoherent result. [It probably shows up elsewhere too, that's where it bit me in my Agda proof.  I am aware that this one is 'just' for the symmetric case.]</p>\n<p>I think that the issue stems from what has been mentioned above already: you move to a 'normal form' quickly, assuming that the normalization procedure produces nothing of interest -- and this is not the case.  There is a reason why Laplaza's definitions are rather non-trivial: the weird issues are not with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">⋅</span></span></span></span> and distributivity, but rather with weird interactions of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>.  Yes, there is also the issue of repeated factors - but Laplaza treats that well, as do you.</p>\n<p>In other words: I don't think you've adequately defined the set of expressions over which your results hold. And I wonder if the set of expressions where it does hold, is actually the set where the most interesting behaviour happens.</p>",
        "id": 217317983,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605813922
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"296322\">@Jacques Carette</span>, thanks a lot for your feedback!<br>\nConcerning the two papers you mention, I am a bit confused: these are about linearly distributive categories, which indeed behave very differently from bimonoidal categories (the distributivity that holds between the two monoidal structures is not the same). I totally agree with you that in their case, the dotted lines linking the units to where they are introduced is very important. Are you trying to say that our graphical calculus should have those dotted lines as well? Can you point out a diagram of ours (or equivalence of diagrams) which is incorrect because of that?<br>\nConcerning Definition 9, you should keep in mind that we work in a semistrict setting anyway, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>+</mo><mi>O</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O + O = O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> (and similarly for the other unit relations).<br>\nI think the rest of your concerns arise from the same mixup between linearly distributivity and classical distributivity. It would be worth adding a paragraph about this to emphasize the difference in the introduction.</p>",
        "id": 217321758,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605815593
    },
    {
        "content": "<p>I'm very happy if the basic problem is that I'm confused... (as writer, you still have to make sure that doesn't happen to your readers, but that's easier to do than fix broken math).</p>",
        "id": 217322020,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605815727
    },
    {
        "content": "<p>Bimonoidal (or rig) categories: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mo>⊕</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>≃</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>⊗</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⊕</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>⊗</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A \\otimes (B \\oplus C) \\simeq (A \\otimes B) \\oplus (A \\otimes C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span><br>\nLinearly distributive categories: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mo>⊕</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>≃</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>⊗</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⊕</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A \\otimes (B \\oplus C) \\simeq (A \\otimes B) \\oplus C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br>\nThey are just very different beasts :)</p>",
        "id": 217322242,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605815825
    },
    {
        "content": "<p>Indeed!  Oops.  However, there are still issues, I think, with the units - not the ones due to linear, but the ones due to assuming semi-strictness.</p>",
        "id": 217322436,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605815906
    },
    {
        "content": "<p>I am all ears about these issues then!</p>",
        "id": 217322534,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605815963
    },
    {
        "content": "<p>I think the passage from non-strict to strict has lots of non-trivialities. That would prevent people from using your work in applications.</p>",
        "id": 217322537,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605815964
    },
    {
        "content": "<p>I would certainly not characterize the semi-strictification theorem as trivial, for sure. But it is not clear to me to me why relying on it would make it harder for people to use these diagrams.</p>",
        "id": 217322960,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816150
    },
    {
        "content": "<p>For example, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>+</mo><mi>I</mi><mo>≃</mo><mi>I</mi><mo>+</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I + I \\simeq I + I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> has 2 non-equivalent inhabitants.  You rule out <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>+</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A + A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> but not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>+</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I + I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>. At least, from my understanding.</p>",
        "id": 217323108,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605816223
    },
    {
        "content": "<p>Neither <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span> nor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">T</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathsf\">p</span><span class=\"mord mathsf\">e</span></span></span></span></span> are semi-strict, as far as I understand.</p>",
        "id": 217323235,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605816273
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span> is not even strict as a monoidal category but that does not prevent people from using string diagrams for monoidal categories with it, right?</p>",
        "id": 217323389,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816349
    },
    {
        "content": "<p>These string diagrams ignore all associators and unitors and we want them to do so, because it is convenient and safe.</p>",
        "id": 217323521,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816421
    },
    {
        "content": "<p>Ignoring associators and unitors: agreed. That is indeed the whole point, as they just clutter things up.</p>",
        "id": 217323588,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605816465
    },
    {
        "content": "<p>Then the story is the same for bimonoidal categories: we want to strictify as much as we can without losing information, and that is what semi-strictification does.</p>",
        "id": 217323715,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816519
    },
    {
        "content": "<p>Concerning <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⊕</mo><mi>I</mi><mo>≃</mo><mi>I</mi><mo>⊕</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I \\oplus I \\simeq I \\oplus I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>, we do indeed have multiple sheet diagrams for that: one where the two empty sheets cross, and one where they do not (for the identity).</p>",
        "id": 217323753,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816541
    },
    {
        "content": "<p>You just have to make sure that you don't also ignore things that does matter.  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>+</mo><mi>O</mi><mo>+</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">O + O + A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> being that same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is safe. But <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>+</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I + I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> is a real problem.  So is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>⋅</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O\\cdot O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>.</p>",
        "id": 217323780,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605816551
    },
    {
        "content": "<p>No, in a free bimonoidal category, there is a single isomorphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>⊗</mo><mi>O</mi><mo>≃</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O \\otimes O \\simeq O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>: that is axiom (X).</p>",
        "id": 217324048,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816682
    },
    {
        "content": "<p>(axiom (X) both in our paper and in Laplaza, we kept the same numbering)</p>",
        "id": 217324219,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816758
    },
    {
        "content": "<p>What I meant was that it is easy to choose incoherent proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>⊗</mo><mi>A</mi><mo>→</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O \\otimes A \\rightarrow O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>→</mo><mi>O</mi><mo>⊗</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">O \\rightarrow O \\otimes A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> (and in the opposite handedness) that do not witness <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>⊗</mo><mi>O</mi><mo>≃</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O \\otimes O \\simeq O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>.</p>",
        "id": 217324436,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605816872
    },
    {
        "content": "<p>My first attempt at proving <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">T</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathsf\">p</span><span class=\"mord mathsf\">e</span></span></span></span></span> bimonoidal fell into that trap.</p>",
        "id": 217324528,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605816920
    },
    {
        "content": "<p>Sure, then in that case you do not have a bimonoidal category, so you cannot use our diagrams.</p>",
        "id": 217324548,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605816929
    },
    {
        "content": "<p>The problem is that of course <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">T</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathsf\">p</span><span class=\"mord mathsf\">e</span></span></span></span></span> is a bimonoidal category, I just chose the wrong witnesses (proof relevance!).</p>",
        "id": 217324753,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605817013
    },
    {
        "content": "<p>what is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">T</mi><mi mathvariant=\"bold\">y</mi><mi mathvariant=\"bold\">p</mi><mi mathvariant=\"bold\">e</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">T</span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">y</span><span class=\"mord mathbf\">p</span><span class=\"mord mathbf\">e</span></span></span></span></span> actually?</p>",
        "id": 217324767,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605817022
    },
    {
        "content": "<p>It's like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span> but without assuming excluded middle (or choice, obviously; but also without assuming axiom K).</p>",
        "id": 217324921,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605817098
    },
    {
        "content": "<p>It's what Agda pronounces <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span>, but that's been regarded as an error.</p>",
        "id": 217325015,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605817162
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296322\">Jacques Carette</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/217325015\">said</a>:</p>\n<blockquote>\n<p>It's what Agda pronounces <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span>, but that's been regarded as an error.</p>\n</blockquote>\n<p><code>cubical</code> library renames it <code>Type</code> everywhere <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 217325073,
        "sender_full_name": "Shea Levy",
        "timestamp": 1605817194
    },
    {
        "content": "<p>As it should!</p>",
        "id": 217325144,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605817216
    },
    {
        "content": "<p>Also, have you seen the thread <a href=\"https://twitter.com/davidad/status/1327406604476669956\">https://twitter.com/davidad/status/1327406604476669956</a> ?</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/davidad/status/1327406604476669956\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1154426035980689408/CBNSx0bI_normal.jpg\"></a><p>From a diagrammatic perspective:\n— categories are 1-dimensional\n— monoidal categories are 2-dimensional (they are special double categories with trivial 0-cells and vertical morphisms)</p><span>- davidad 🎇 (@davidad)</span></div></div>",
        "id": 217325388,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605817348
    },
    {
        "content": "<p>Nice! Yes I am also confused by the role played by symmetry here - it probably means that these diagrams need more dimensions than three to be comfortable.</p>",
        "id": 217326303,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1605817845
    },
    {
        "content": "<p>Sorry if my feedback has been sub-optimally useful.</p>",
        "id": 217327253,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1605818332
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296322\">Jacques Carette</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/graphical.20bimonoidal.20categories/near/217325388\">said</a>:</p>\n<blockquote>\n<p>Also, have you seen the thread <a href=\"https://twitter.com/davidad/status/1327406604476669956\">https://twitter.com/davidad/status/1327406604476669956</a> ?</p>\n</blockquote>\n<p>Does he mean... for diagrams representing individual morphisms? Otherwise there are definitely diagrams I would want to draw in categories that would not fit in 1d</p>",
        "id": 217386954,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1605870077
    },
    {
        "content": "<p>Commutative diagrams are actually diagrams in the 2-categorical nerve of a category</p>",
        "id": 217393069,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1605874388
    },
    {
        "content": "<p>That's an interesting way to formulate it. Is that written formally/carefully somewhere ?</p>",
        "id": 217393338,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1605874582
    },
    {
        "content": "<p>Oh, I used “2-categorical nerve of a category” playfully, I don't think it's really used. It would come from treating the truncation functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi><mo>:</mo><mrow><mn>2</mn><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\tau: \\mathrm{2Cat} \\to \\mathrm{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> which turns all 2-cells into identities as a kind of 'realisation of 2-categories in categories', so that the usual inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">ı</mi><mo>:</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo>→</mo><mrow><mn>2</mn><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\imath: \\mathrm{Cat} \\to \\mathrm{2Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span>, which is its right adjoint, could well be called a 'nerve'. <br>\nThen any “commutative <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-gon” in a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> is a 2-cell in the 2-category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">ı</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\imath(C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>, and various “pastings of commutative diagrams” are diagrams of 2-cells in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">ı</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\imath(C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>.  That doesn't exhaust all sorts of things that people call “commutative diagrams” (for example the ones with two parallel arrows which are not necessarily presumed equal) but covers most uses.<br>\nThis is all folklor-ish but I'm sure you can find it, for example, in Leinster's book on higher categories and higher operads.</p>",
        "id": 217394190,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1605875210
    },
    {
        "content": "<p>To make the “nerve/realisation” language a bit more pertinent: this picture would come from seeing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{2Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> as a reflective subcategory of the presheaf category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msubsup><mi mathvariant=\"normal\">Θ</mi><mn>2</mn><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msubsup><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[\\Theta_2^\\mathrm{op}, \\mathrm{Set}]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.048608em;vertical-align:-0.266308em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\">Θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7823em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span><span class=\"mclose\">]</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Θ</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\Theta_2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is <a href=\"https://ncatlab.org/nlab/show/Theta+category\">Joyal's category</a> restricted to level 2. </p>\n<p>There is a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Θ</mi><mn>2</mn></msub><mo>→</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\Theta_2 \\to \\mathrm{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> which induces a <a href=\"https://ncatlab.org/nlab/show/nerve+and+realization\">nerve-realisation pair</a> between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msubsup><mi mathvariant=\"normal\">Θ</mi><mn>2</mn><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msubsup><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[\\Theta_2^\\mathrm{op}, \\mathrm{Set}]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.048608em;vertical-align:-0.266308em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\">Θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7823em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span><span class=\"mclose\">]</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span>, which actually restricts to the adjunction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi><mo>⊣</mo><mi mathvariant=\"normal\">ı</mi></mrow><annotation encoding=\"application/x-tex\">\\tau \\dashv \\imath</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\"></span></span></span></span> between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{2Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span>.</p>",
        "id": 217396044,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1605876402
    }
]