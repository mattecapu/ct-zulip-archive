[
    {
        "content": "<p>So now that <span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> has <a href=\"https://twitter.com/_julesh_/status/1246794152479805440\" title=\"https://twitter.com/_julesh_/status/1246794152479805440\">asked</a> the Twitter hivemind about machine learning (ML) applied to automated theorem proving (ATP), I thought I'd make a new topic in <a class=\"stream\" data-stream-id=\"229156\" href=\"/#narrow/stream/229156-applied-category-theory\">#applied category theory</a> to discuss. <span class=\"user-mention\" data-user-id=\"276875\">@Bruno Gavranovic</span></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/_julesh_/status/1246794152479805440\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/972424350736486401/RyVTQIgf_normal.jpg\"></a><p>Has anyone tried to make a machine learning architecture for theorem proving, where a \"generator\" deep neural network, trained on a dataset of existing human-written proofs, interacts with an existing symbolic proof checker (eg. the Coq kernel)?</p><span>- julesh (@_julesh_)</span></div></div>",
        "id": 192966978,
        "sender_full_name": "(=_=)",
        "timestamp": 1586104368
    },
    {
        "content": "<p><a href=\"https://twitter.com/guillefix/status/1246804036113911815\" title=\"https://twitter.com/guillefix/status/1246804036113911815\">Guillermo</a> pointed out this <a href=\"https://arxiv.org/abs/1606.04442\" title=\"https://arxiv.org/abs/1606.04442\">early paper</a> by Christian Szegedy et co.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/guillefix/status/1246804036113911815\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1154816948229853184/25ZLSpPM_normal.jpg\"></a><p><a href=\"https://twitter.com/_julesh_\" title=\"https://twitter.com/_julesh_\">@_julesh_</a> I've seen many works on that vein. This is one of the earliest <a href=\"https://t.co/JtJg65Nvkd\" title=\"https://t.co/JtJg65Nvkd\">https://arxiv.org/abs/1606.04442</a></p><span>- Guillermo Valle (@guillefix)</span></div></div>",
        "id": 192967037,
        "sender_full_name": "(=_=)",
        "timestamp": 1586104475
    },
    {
        "content": "<p><a href=\"https://research.google/pubs/pub45813/\" title=\"https://research.google/pubs/pub45813/\">Another paper</a> by Szegedy et co in 2017 uses Mizar.</p>",
        "id": 192967059,
        "sender_full_name": "(=_=)",
        "timestamp": 1586104557
    },
    {
        "content": "<p><a href=\"https://arxiv.org/abs/1907.07794\" title=\"https://arxiv.org/abs/1907.07794\">This paper</a> (Proverbot9001) from UCSD uses Coq.</p>",
        "id": 192967186,
        "sender_full_name": "(=_=)",
        "timestamp": 1586104702
    },
    {
        "content": "<p>On the Lean theorem prover Zulip instance we have a stream dedicated to this topic. I'm not sure what will happen if I post a link, but I'll try anyways:<br>\n<a href=\"https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving\" title=\"https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving\">https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving</a></p>",
        "id": 192967280,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586104919
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229156-applied-category.20theory/topic/ML.2FATP/near/192967280\" title=\"#narrow/stream/229156-applied-category.20theory/topic/ML.2FATP/near/192967280\">said</a>:</p>\n<blockquote>\n<p>On the Lean theorem prover Zulip instance we have a stream dedicated to this topic. I'm not sure what will happen if I post a link, but I'll try anyways:<br>\n<a href=\"https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving\" title=\"https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving\">https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving</a></p>\n</blockquote>\n<p>Thanks! Looks like I'd have to get on board then.</p>",
        "id": 192967359,
        "sender_full_name": "(=_=)",
        "timestamp": 1586105012
    },
    {
        "content": "<p>This topic in that stream is good: <a href=\"https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Paper.3A.20Tactic.20Learning.20and.20Proving.20for.20the.20Coq.20Proof.20Assista\" title=\"https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Paper.3A.20Tactic.20Learning.20and.20Proving.20for.20the.20Coq.20Proof.20Assista\">https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Paper.3A.20Tactic.20Learning.20and.20Proving.20for.20the.20Coq.20Proof.20Assista</a></p>",
        "id": 192967823,
        "sender_full_name": "(=_=)",
        "timestamp": 1586105702
    },
    {
        "content": "<p>So there are now three ML bots for Coq:</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1907.07794\" title=\"https://arxiv.org/abs/1907.07794\">Proverbot9001</a> (which I linked to <a href=\"#narrow/stream/229156-applied-category.20theory/topic/ML.2FATP/near/192967186\" title=\"#narrow/stream/229156-applied-category.20theory/topic/ML.2FATP/near/192967186\">above</a>)</li>\n<li><a href=\"https://arxiv.org/abs/1905.09381\" title=\"https://arxiv.org/abs/1905.09381\">CoqGym/ASTactic</a></li>\n<li><a href=\"https://arxiv.org/abs/2003.09140\" title=\"https://arxiv.org/abs/2003.09140\">TacticToe for Coq</a> (this doesn't actually use neural networks, but k-nearest neighbour)</li>\n</ul>",
        "id": 192967936,
        "sender_full_name": "(=_=)",
        "timestamp": 1586105838
    },
    {
        "content": "<p>I guess it might be interesting to see what we can learn by using CT to study those machine learning architectures.</p>",
        "id": 192968142,
        "sender_full_name": "(=_=)",
        "timestamp": 1586106149
    }
]