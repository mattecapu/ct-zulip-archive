[
    {
        "content": "<p>One application of 3D string diagrams is <a href=\"https://www.localcharts.org/t/string-diagrams-for-monoidal-double-categories/13578\">a visual language for monoidal double categories</a>, and similarly for monoidal fibrations. </p>\n<p>This can be really useful for ACT; in particular <a href=\"https://arxiv.org/abs/1706.00526\">the application to databases</a> is based on regular fibrations, and so there is a powerful visual tool waiting to be made. </p>\n<p>I made a <a href=\"https://www.localcharts.org/t/visual-language-for-databases/15048\">first short post on LocalCharts</a>. Interested to hear any thoughts.</p>",
        "id": 421522900,
        "sender_full_name": "Christian Williams",
        "timestamp": 1707940948
    },
    {
        "content": "<p>I think the idea is ultimately simple, and some people ACT are well aware:<br>\nThe core of the modern language of databases is the language of relations.</p>\n<p>The basic operations of <a href=\"https://en.wikipedia.org/wiki/SQL\">SQL</a>, select and join, are the factors of relation composition: matching and deleting variables. These are constructed by <em>substitution</em> of diagonals, and <em>pushforward</em> of projections. <br>\nTo me this just means that the basic framework for databases is given by <a href=\"https://arxiv.org/abs/1706.00526\">regular categories</a>, or more generally <a href=\"https://ncatlab.org/finnlawler/show/thesis+outline\">regular bifibrations</a>.</p>\n<p>[Or specifically, <a href=\"http://www.tac.mta.ca/tac/volumes/38/33/38-33.pdf\">one with tabulation</a>, so we can convert a relation (table) into its type of elements (rows).]</p>\n<p>By now, CT has understood the language of relations completely, so we can bring to people both the complete and correct back-end (the type system) and the simple, intuitive front-end (the visual language).</p>\n<p>I know some people in the community have thought a lot about similar ideas. I'm thinking of starting to write a grant; so all thoughts are more than welcome. Thanks.</p>",
        "id": 421546640,
        "sender_full_name": "Christian Williams",
        "timestamp": 1707951037
    },
    {
        "content": "<p>Apparently this generalizes Spivak and Fong's graphical regular logic with e.g. first class entailments and other niceties.  <a href=\"http://brendanfong.com/Spivak_Reglog.pdf\">http://brendanfong.com/Spivak_Reglog.pdf</a></p>",
        "id": 421707451,
        "sender_full_name": "Ryan Wisnesky",
        "timestamp": 1708018768
    }
]