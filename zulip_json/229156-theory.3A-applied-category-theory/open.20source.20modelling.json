[
    {
        "content": "<p>There is a major story in the UK breaking now about the code behind the Imperial College Model for Covid-19 which I also wrote up in <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">Code, Models and Covid-19</a>, where I put it in a philosophical context with references to mathematical work too (eg. Agda, Coq, Idris, Scala).</p>",
        "id": 197833207,
        "sender_full_name": "Henry Story",
        "timestamp": 1589696084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197833207\">said</a>:</p>\n<blockquote>\n<p>There is a major story in the UK breaking now about the code behind the Imperial College Model for Covid-19 which I also wrote up in <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">Code, Models and Covid-19</a>, where I put it in a philosophical context with references to mathematical work too (eg. Agda, Coq, Idris, Scala).</p>\n</blockquote>\n<p>Thanks for doing the write-up. I was going to bring it up, but decided against it because I don't feel competent enough to review code. I feel like this should belong in <a class=\"stream\" data-stream-id=\"233322\" href=\"/#narrow/stream/233322-practice.3A-communication\">#practice: communication</a> instead of here, since it is partly about peer review in academia, but it's fine here too, I guess.</p>",
        "id": 197839840,
        "sender_full_name": "(=_=)",
        "timestamp": 1589707866
    },
    {
        "content": "<p>You <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">wrote</a>:</p>\n<blockquote>\n<p>All of the above is explained in detail in the <a href=\"https://lockdownsceptics.org/code-review-of-fergusons-model/\">Code Review of Ferguson’s Model</a> that I have been drawing on. Sadly that review ends with this personal suggestion that shows that the author does not understand the philosophical reasons for why testing and peer review are important, nor what the origin of the problem was.</p>\n<blockquote>\n<p>On a personal level, I’d go further and suggest that all academic epidemiology be defunded. This sort of work is best done by the insurance sector. Insurers employ modellers and data scientists, but also employ managers whose job is to decide whether a model is accurate enough for real world usage and professional software engineers to ensure model software is properly tested, understandable and so on. Academic efforts don’t have these people, and the results speak for themselves.</p>\n</blockquote>\n</blockquote>\n<p>I think the author has other reasons for writing what they did. Many lockdown skeptics are libertarians and have been pushing this story for a while now to score points.</p>",
        "id": 197840292,
        "sender_full_name": "(=_=)",
        "timestamp": 1589708535
    },
    {
        "content": "<p>He/she(?) has other reasons or is formatted in a different ideology. The author worked at Google it seems, which should have made them aware that Google is built on Open Source coming from universities as well as private research. (Sun Microsystems stood for Stanford University Network and was built on Berkeley System Development Unix)</p>",
        "id": 197840359,
        "sender_full_name": "Henry Story",
        "timestamp": 1589708643
    },
    {
        "content": "<p>I'm sure there are libertarians in Google as well, and the fact that the author had worked at Google in the past suggests that they may have left after becoming disaffected by the \"groupthink\" at Google.</p>",
        "id": 197840457,
        "sender_full_name": "(=_=)",
        "timestamp": 1589708789
    },
    {
        "content": "<p>Yes, but one can (as I attempt to do in the blog post) separate the factual (the state of the code) from the interpretation here. It is actually a great way to make the case for Open Source and Peer Review. Note: that I have not had time to really look at the code myself. I am essentially disagreeing with that interpretation.</p>",
        "id": 197840533,
        "sender_full_name": "Henry Story",
        "timestamp": 1589708941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197840533\">said</a>:</p>\n<blockquote>\n<p>Yes, but one can (as I attempt to do in the blog post) separate the factual (the state of the code) from the interpretation here. It is actually a great way to make the case for Open Source and Peer Review. Note: that I have not had time to really look at the code myself. I am essentially disagreeing with that interpretation.</p>\n</blockquote>\n<p>And it's a good thing you did as well. There are a few things going on in the blog you cited, but I also think the case of the ICL code makes a good case for open source and peer review. You should read the threads over on <a class=\"stream\" data-stream-id=\"233322\" href=\"/#narrow/stream/233322-practice.3A-communication\">#practice: communication</a>: there were some really vigorous discussions there.</p>",
        "id": 197840628,
        "sender_full_name": "(=_=)",
        "timestamp": 1589709077
    },
    {
        "content": "<p>Also <a class=\"stream-topic\" data-stream-id=\"229111\" href=\"/#narrow/stream/229111-general/topic/Shaky.20foundations\">#general &gt; Shaky foundations</a>, which led to <a class=\"stream\" data-stream-id=\"233322\" href=\"/#narrow/stream/233322-practice.3A-communication\">#practice: communication</a> being started.</p>",
        "id": 197840705,
        "sender_full_name": "(=_=)",
        "timestamp": 1589709236
    },
    {
        "content": "<p>very much a \"shaky foundations\".</p>",
        "id": 197840907,
        "sender_full_name": "Henry Story",
        "timestamp": 1589709514
    },
    {
        "content": "<p>Some of the stuff that was said in that topic was absolutely astounding to me. Seriously.</p>",
        "id": 197840928,
        "sender_full_name": "(=_=)",
        "timestamp": 1589709552
    },
    {
        "content": "<p>The real wtf is that code used by scientists is used as the basis of policy. I'd never expect an epidemiologist to be a competent programmer, and I'd never expect a programmer to be a competent epidemiologist. Both are full time and very specialised fields of expertise</p>",
        "id": 197842715,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589712388
    },
    {
        "content": "<p>I would never blame a scientist for writing bad code, because writing good code is something that scientists are not trained to do, and do not receive any benefits from it. However, I blame the UK government for using the results of the code to guide policy without having it rewritten by a team of professional software developers</p>",
        "id": 197842791,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589712537
    },
    {
        "content": "<p>This got me thinking about our plans to transform scientific computing using category theory. I think a lot of that is about allowing programmers to write <em>good</em> code directly by bring the programming language up to the level of abstraction they already think at. I think the ability to base policy (or \"mere\" scientific fact) on code written by scientists is something we aspire to be possible in the future, but it's clearly very far from possible now</p>",
        "id": 197843005,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589712918
    },
    {
        "content": "<p>Imperial College has a renowned Computer Science department. (I went to a course in 1993 or so on Category Theory by <a href=\"https://www.imperial.ac.uk/people/a.edalat\">Abbas Edelat</a>. But I was too short on time to be able to follow) So they should have at least gone over there to look at what was happening. <br>\nThe good news from this is that one can now explain to liberal/conservative \"private enterprise\" folks just how expensive non-open source code can be, and the value of peer review. It should be a requirement. Had they done so, they would certainly have gotten a lot of useful feedback.</p>",
        "id": 197843292,
        "sender_full_name": "Henry Story",
        "timestamp": 1589713398
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197843005\">said</a>:</p>\n<blockquote>\n<p>This got me thinking about our plans to transform scientific computing using category theory. I think a lot of that is about allowing programmers to write <em>good</em> code directly by bring the programming language up to the level of abstraction they already think at. I think the ability to base policy (or \"mere\" scientific fact) on code written by scientists is something we aspire to be possible in the future, but it's clearly very far from possible now</p>\n</blockquote>\n<p>yes, that is the main point I make in <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">my blog post</a>: C or C++ were clearly way too low level a programming language for what they were doing. There are many much better programming languages they could have worked with: Scala, Haskell, ... come to mind, even Java would have been better. Then there is ample room for a perfect modeling language of the future still to be invented.</p>",
        "id": 197843473,
        "sender_full_name": "Henry Story",
        "timestamp": 1589713734
    },
    {
        "content": "<p>I've now seen 2 \"code reviews\" of the Imperial code. The first wasn't actually a code review at all but a rant. This one is a bit better, but it's on a site with \"skeptics\" in the name, which nowadays means anti-science conspiracy theorists</p>",
        "id": 197843941,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589714428
    },
    {
        "content": "<p>Certainly I don't trust either of them for a second</p>",
        "id": 197843946,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589714445
    },
    {
        "content": "<p>I'd like to see an <em>actual</em> code review written in a neutral tone</p>",
        "id": 197844004,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589714528
    },
    {
        "content": "<p>Well my blog post has a neutral tone. So you should like it. :-)</p>",
        "id": 197844030,
        "sender_full_name": "Henry Story",
        "timestamp": 1589714560
    },
    {
        "content": "<p>At least one \"\"\"good\"\"\" thing comes out of this -I'm definitely going to refer to this whole thing in some future grant application</p>",
        "id": 197844115,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589714709
    },
    {
        "content": "<blockquote>\n<p>Many of these emerged from work to help bring mathematical certainty to programming or indeed dually to help automate and verify mathematical proofs.</p>\n</blockquote>\n<p>in the informal sense this could be considered a duality, but i believe the curry-howard correspondence is covariant, not contravariant</p>\n<p>honestly it would probably have been better for the model to have remained in fortran. i think a modern rewrite would have aimed for a python or julia notebook, those seem the rage these days</p>",
        "id": 197844432,
        "sender_full_name": "Pastel Raschke",
        "timestamp": 1589715262
    },
    {
        "content": "<p>I was actually wondering if I should use \"dually\" when I wrote that.<br>\nI have heard about Julia. If the aim is to go for mass parallelism, to model the world better, and use more computing power, then the <a href=\"https://akka.io/\">Akka</a> actor framework in Scala could have worked too.  Mind you then the code would have I believe had to give up on determinism.  The code is criticised for the indeterminacy in the single threaded model. In the multi-threaded model I think some indeterminism would be unavoidable, as message passing does not happen in a deterministic way.</p>",
        "id": 197844796,
        "sender_full_name": "Henry Story",
        "timestamp": 1589715730
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197842791\">said</a>:</p>\n<blockquote>\n<p>I would never blame a scientist for writing bad code, because writing good code is something that scientists are not trained to do, and do not receive any benefits from it. However, I blame the UK government for using the results of the code to guide policy without having it rewritten by a team of professional software developers</p>\n</blockquote>\n<p>AFAIK the scientist(s) running a lab would usually hire software developers to write code for them. I know professional software developers working for university research teams who're writing high-performance code in low level languages like C++.</p>\n<p><del>So the question becomes: why did Ferguson's <em>lab</em>, which must surely employ some professional software developers, produce bad code? </del></p>\n<p>Scratch that: apparently Ferguson did <a href=\"https://twitter.com/neil_ferguson/status/1241835454707699713\">write his own code</a>.</p>\n<p>It is entirely possible to write clean code in C++, by the way. Robert C Martin wrote the <a href=\"https://www.amazon.com.au/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\">book</a> on it. One interesting project for ACT would be to see if the concepts in his book can be translated into CT language. It is also eminently possible, of course, that this has already been done in the CS literature.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/neil_ferguson/status/1241835454707699713\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1218540739447095296/dIIstf8b_normal.jpg\"></a><p>I’m conscious that lots of people would like to see and run the pandemic simulation code we are using to model control measures against COVID-19.  To explain the background - I wrote the code (thousands of lines of undocumented C) 13+ years ago to model flu pandemics...</p><span>- neil_ferguson (@neil_ferguson)</span></div></div>",
        "id": 197846638,
        "sender_full_name": "(=_=)",
        "timestamp": 1589718563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197844796\">said</a>:</p>\n<blockquote>\n<p>If the aim is to go for mass parallelism, to model the world better, and use more computing power, then the <a href=\"https://akka.io/\">Akka</a> actor framework in Scala could have worked too. </p>\n</blockquote>\n<p>I've heard complaints about Scala, and that's coming from FP people.</p>",
        "id": 197846721,
        "sender_full_name": "(=_=)",
        "timestamp": 1589718692
    },
    {
        "content": "<p>Scala is a hybrid OO-FP language with dependent types. So FP folks who don't realise that OO in a coalgebraic, may not realise that it too can have solid CT backing.</p>",
        "id": 197847057,
        "sender_full_name": "Henry Story",
        "timestamp": 1589719192
    },
    {
        "content": "<p>The complaints don't really sound like the \"my paradigm is better than yours\" type. I don't really understand the complaints either, but it seems like there are a lot of \"traps\" for the unwary programmer.</p>",
        "id": 197847283,
        "sender_full_name": "(=_=)",
        "timestamp": 1589719489
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197843941\">said</a>:</p>\n<blockquote>\n<p>This one is a bit better, but it's on a site with \"skeptics\" in the name, which nowadays means anti-science conspiracy theorists</p>\n</blockquote>\n<p>It does reference multiple Github issues, so perhaps that could be used as a guide to the changelog?</p>",
        "id": 197848232,
        "sender_full_name": "(=_=)",
        "timestamp": 1589720802
    },
    {
        "content": "<p>I don't see any claim by Ferguson that the model is predictive (i.e. predicts with a certain probability and accuracy what will happen, given certain parameters), but rather that the model suggests scenarios that might happen. On the other hand, the criticism from the \"lockdownsceptics\" code review seems to be based on the model being predictive. Isn't this just some misunderstanding?</p>\n<p>Code being free of bugs is always important, but I would guess it is even more relevant for predictive models.</p>",
        "id": 197848317,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1589720961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282722\">Jens Hemelaer</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197848317\">said</a>:</p>\n<blockquote>\n<p>On the other hand, the criticism from the \"lockdownsceptics\" code review seems to be based on the model being predictive. Isn't this just some misunderstanding?</p>\n</blockquote>\n<p>It's not that. The criticism is that it's giving unpredictable output that's characteristic of bad code, regardless of whether the model is supposed to be predictive or not. There are multiple references to Github issues that detail problems with the code. See also the criticism in <a href=\"https://github.com/mrc-ide/covid-sim/issues/165\">issue 165 on Github</a>, particularly <a href=\"https://github.com/mrc-ide/covid-sim/issues/165#issuecomment-625196695\">this comment</a> from a modeller who claims to have had extensive experience in industry.</p>",
        "id": 197848826,
        "sender_full_name": "(=_=)",
        "timestamp": 1589721600
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197843946\">said</a>:</p>\n<blockquote>\n<p>Certainly I don't trust either of them for a second</p>\n</blockquote>\n<p>Unfortunately, both David Davis and Steve Baker, who claims to be a software engineer, have jumped on this \"code review\": <a href=\"https://twitter.com/SteveBakerHW/status/1258165810629087232\">https://twitter.com/SteveBakerHW/status/1258165810629087232</a></p>\n<p>But hey, more power to your future grant application. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/SteveBakerHW/status/1258165810629087232\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1152585178067415041/kfsgweWH_normal.png\"></a><p>.<a href=\"https://twitter.com/DavidDavisMP\">@DavidDavisMP</a> is right. \n\nAs a software engineer, I am appalled. \n\nRead this now. <a href=\"https://t.co/MbmAngYene\">https://twitter.com/DavidDavisMP/status/1258143326764761088</a></p><span>- Steve Baker MP (@SteveBakerHW)</span></div></div>",
        "id": 197848883,
        "sender_full_name": "(=_=)",
        "timestamp": 1589721660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197848826\">said</a>:</p>\n<blockquote>\n<p>It's not that. The criticism is that it's giving unpredictable output that's characteristic of bad code, regardless of whether the model is supposed to be predictive or not. There are multiple references to Github issues that detail problems with the code. See also the criticism in <a href=\"https://github.com/mrc-ide/covid-sim/issues/165\">issue 165 on Github</a>, particularly <a href=\"https://github.com/mrc-ide/covid-sim/issues/165#issuecomment-625196695\">this comment</a> from a modeller who claims to have had extensive experience in industry.</p>\n</blockquote>\n<p>Yes, it's bad code, but the fact that it isn't predictive anyway can explain why Ferguson still felt comfortable \"using it\" while advising the government (regardless of whether that was a good call or not).</p>",
        "id": 197849494,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1589722559
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197843941\">said</a>:</p>\n<blockquote>\n<p>This one is a bit better, but it's on a site with \"skeptics\" in the name, which nowadays means anti-science conspiracy theorists</p>\n</blockquote>\n<p>Scientific advance requires skeptics too. Indeed Popper argued that in science all one can do is falsify theories. <br>\nI was reading about that just a few weeks ago after bumping on this paper brings <a href=\"https://www.researchgate.net/publication/220297736_Dual_Intuitionistic_Logic_and_a_Variety_of_Negations_The_Logic_of_Scientific_Research\">Dual Intuitionistic Logic and a Variety of Negations: The Logic of Scientific Research</a> which got me interested in co-Heyting algebras.<br>\nAnd then one it is not because some people put up very bad arguments for a point of view that there are not much better arguments for it. One of Nietzsche's aphorisms goes: \"The most perfidious way of harming a cause consists of defending it deliberately with faulty arguments.\" Though in this case the widely known \"Do not attribute to malice what can be explained by incompetence\" is more relevant. In fact in the case of this epidemic, there are simply very many unknowns. So there it is quite reasonable to have different well informed people come to different conclusions.</p>",
        "id": 197859132,
        "sender_full_name": "Henry Story",
        "timestamp": 1589735814
    },
    {
        "content": "<p>we're far off topic but the \"code reviews\" of the imperial model are deeply embarrassing and remind me of the \"climategate\" stuff <a href=\"https://philbull.wordpress.com/2020/05/10/why-you-can-ignore-reviews-of-scientific-code-by-commercial-software-developers/\">https://philbull.wordpress.com/2020/05/10/why-you-can-ignore-reviews-of-scientific-code-by-commercial-software-developers/</a></p>\n<p>Having sound methodologies and reproducibility are things where scientific code can be much better. However, the attempts to extrapolate amateur-hour \"code review\" onto the imperial model are just about discrediting genuine research by holding it up to invented standards, by people not familiar with the norms (as much as they can be improved), practices, and methods of the field they're dealing with.</p>\n<p>they also, like some of the discussions here on various topics, have idealized what \"good\" software practices are conducted in industry.</p>\n<p>an analogy would be that suppose you had a socially agreed on proof of a mathematical fact people didn't like -- let's say that the equations showed that a rocket was going to blow up, and so you shouldn't use the rocket, but a lot of people really liked the rocket, and thought it would do something that would make them money, like, say transport valuable minerals from an asteroid. So now the people who want to use this rocket, damn the risk, and get their asteroid minerals, well they say \"this proof is nonsense. it's written on paper and in tex, but it is using theorems that are not in a proof assistant, and are not computer verified! it has steps that reduce equations, but the reductions are not shown to be sound in any topos with synthetic differentials, \" etc. Well. I mean one might agree that in general it would be a wonderful goal to have an automated and synthetic theory of this stuff, and that we dream of it. But in the meantime, the proof still seems to indicate maybe one shouldn't use the explodey rocket?</p>\n<p>There is something similar going on here.</p>\n<p>It would be great if all this stuff were better documented and engineered to help knowledge, to help things stand up to criticism (including from know-nothings), etc. It is an important goal (and there's important work being done on reproducible scientific computing -- one example from someone i know -- <a href=\"https://kar.kent.ac.uk/57488/\">https://kar.kent.ac.uk/57488/</a>) but it is not being raised in this case out of pure ends, but as a way to justify philistinism.</p>",
        "id": 197872696,
        "sender_full_name": "Gershom",
        "timestamp": 1589755277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282722\">Jens Hemelaer</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197849494\">said</a>:</p>\n<blockquote>\n<p>Yes, it's bad code, but the fact that it isn't predictive anyway can explain why Ferguson still felt comfortable \"using it\" while advising the government (regardless of whether that was a good call or not).</p>\n</blockquote>\n<p>All models offer some form of prediction, whether they be confidence intervals or scenarios. I think you have stated what Gershom has just called an \"invented standard\" of what \"predictive\" means. The idea that models cannot be said to be \"predictive\", if they don't predict \"with a certain probability and accuracy what will happen, given certain parameters\", would exclude too many models that inform policy-making from being considered predictive.</p>",
        "id": 197877122,
        "sender_full_name": "(=_=)",
        "timestamp": 1589761087
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276650\">Gershom</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197872696\">said</a>:</p>\n<blockquote>\n<p>we're far off topic but the \"code reviews\" of the imperial model are deeply embarrassing and remind me of the \"climategate\" stuff <a href=\"https://philbull.wordpress.com/2020/05/10/why-you-can-ignore-reviews-of-scientific-code-by-commercial-software-developers/\">https://philbull.wordpress.com/2020/05/10/why-you-can-ignore-reviews-of-scientific-code-by-commercial-software-developers/</a></p>\n</blockquote>\n<p>Phil Bull's critique is equally embarrassing. Whatever happened to staying in <em>his</em> lane, since he's so keen on lecturing software developers for not staying in their own? And if an astrophysicist can comment on epidemiology code, can I also consider the <a href=\"https://thecritic.co.uk/a-series-of-tubes/\">opinion</a> of Ben Lewis, another astrophysicist, or is his opinion also an attempt to \"justify philistinism\"?</p>",
        "id": 197887197,
        "sender_full_name": "(=_=)",
        "timestamp": 1589775225
    },
    {
        "content": "<p>Here's another critical <a href=\"https://chrisvoncsefalvay.com/2020/05/09/imperial-covid-model/\">blog</a>, this time by Chris von Csefalvay, who claims to be \"a clinical computational epidemiologist\" on his website. I'll dissect Bull's blog later, but for now, here are excerpts from von Csefalvay, who thankfully doesn't attempt any political \"code review\".</p>",
        "id": 197887641,
        "sender_full_name": "(=_=)",
        "timestamp": 1589775621
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197859132\">said</a>:</p>\n<blockquote>\n<p>One of Nietzsche's aphorisms goes: \"The most perfidious way of harming a cause consists of defending it deliberately with faulty arguments.\" </p>\n</blockquote>\n<p>Oh boy, you'd <em>love</em> this <a href=\"https://philbull.wordpress.com/2020/05/10/why-you-can-ignore-reviews-of-scientific-code-by-commercial-software-developers/\">blog</a> by Phil Bull, an astrophysicist at QMUL, that <span class=\"user-mention silent\" data-user-id=\"276650\">Gershom</span> posted.</p>",
        "id": 197888889,
        "sender_full_name": "(=_=)",
        "timestamp": 1589777445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276650\">Gershom</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197872696\">said</a>:</p>\n<blockquote>\n<p>Having sound methodologies and reproducibility are things where scientific code can be much better. However, the attempts to extrapolate amateur-hour \"code review\" onto the imperial model are just about discrediting genuine research by holding it up to invented standards, by people not familiar with the norms (as much as they can be improved), practices, and methods of the field they're dealing with.</p>\n</blockquote>\n<p>I don't know what you mean by \"invented standards\": standards are (mostly?) invented by people, so \"invented\" is superfluous. </p>\n<p>I presume you meant \"arbitrarily high standards\", but these are not arbitrary: these are the standards that one would derive from basic principles of software engineering, which were themselves derived from prior experience of how to develop \"good\" code by the programming community. That they're not uniformly adhered to in the commercial setting does not imply that they are arbitrary; rather, that it's symptomatic of the lack of enforcement of such standards.</p>\n<p>And going by the above paragraph, you're suggesting the \"norms\" or the status quo in scientific coding includes the use of unsound methodologies which hinder reproducibility. I agree, and that is the sum total of Henry's and my concern, really. </p>\n<p>That there are others who would use this to further other undesirable agendas is unfortunate, but if the methodologies in scientific coding still have room for improvement when it comes to their soundness, that misfortune will still persist as long as people insist on open source as a virtue and <a href=\"https://www.whatdotheyknow.com/request/software_code_used_for_the_covid\">freedom of information requests</a> (link is to a FOIA request for the ICL code to be made public) are still a thing.</p>",
        "id": 197901695,
        "sender_full_name": "(=_=)",
        "timestamp": 1589789050
    },
    {
        "content": "<p>Reading with interest the various linked to blog posts above.</p>",
        "id": 197902439,
        "sender_full_name": "Henry Story",
        "timestamp": 1589789545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276650\">Gershom</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197872696\">said</a>:</p>\n<blockquote>\n<p>\"this proof is nonsense. it's written on paper and in tex, but it is using theorems that are not in a proof assistant, and are not computer verified! it has steps that reduce equations, but the reductions are not shown to be sound in any topos with synthetic differentials, \" </p>\n</blockquote>\n<p>This is a strawman. Phil Bull has actually highlighted the non-deterministic output as a concern that he considers to be the most legitimate from \"Sue Denim\":</p>\n<blockquote>\n<p>This is the most important one, as it could, in particular circumstances, be a valid criticism.</p>\n</blockquote>\n<p>However, Bull claims that the problem isn't fatal, because the developer is apparently aware of the bug:</p>\n<blockquote>\n<p>The bug is not unknown. A particular workaround here appears to be re-running the model many times with different seeds, which is what you’d do with this code anyway; or using different settings that don’t seem to suffer from this bug. My guess is that the “false stochasticity” caused by this bug is simply inconsequential, or that it doesn’t occur with the way they normally run the code. They aren’t worried about it — not because this is a disaster they are trying to cover up, but because this is a routine bug that doesn’t really affect anything important.</p>\n</blockquote>\n<p>This is only mildly reassuring, though, since Bull qualified his argument as a \"guess\".</p>",
        "id": 197902587,
        "sender_full_name": "(=_=)",
        "timestamp": 1589789639
    },
    {
        "content": "<p>One of the problems with the code that I <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">developed at length</a> is that the way it is written made it completely unscalable: ie able to use only 1 thread when say the modern Oracle M8-8 computer with 8 CPUs can run a little over 2000 threads in parallel (and this could be increased indefinitely with enough money or cloud computing resources). So the way it was written was harmful to the efficiency of the research project itself. Furthermore it would have been difficult for them to change the code to improve their model.</p>",
        "id": 197902683,
        "sender_full_name": "Henry Story",
        "timestamp": 1589789687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282722\">Jens Hemelaer</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197848317\">said</a>:</p>\n<blockquote>\n<p>I don't see any claim by Ferguson that the model is predictive (i.e. predicts with a certain probability and accuracy what will happen, given certain parameters), but rather that the model suggests scenarios that might happen. </p>\n</blockquote>\n<p>I think this assertion is mistaken:</p>\n<ul>\n<li>Ferguson has <a href=\"https://www.nytimes.com/2020/04/23/world/europe/uk-coronavirus-sage-secret.html\">made</a> <a href=\"https://www.nytimes.com/2020/03/16/us/coronavirus-fatality-rate-white-house.html\">representations</a> to the media that imply that he is making predictions based on the model.</li>\n<li>In Report 9 of the ICL Covid-19 Response Team, which is the report cited in reports, the word \"predict\" is used 21 times. Some examples:</li>\n</ul>\n<blockquote>\n<p>The major challenge of suppression is that this type of intensive intervention package – or something equivalently effective at reducing transmission – will need to be maintained until a vaccine becomes available (potentially 18 months or more) – given that we <em>predict</em> that transmission will quickly rebound if interventions are relaxed.  (p. 2)</p>\n<p>In total, in an unmitigated epidemic, we would <em>predict</em> approximately 510,000 deaths in GB and 2.2 million in the US [...] (p. 7)</p>\n<p>Social distancing of high-risk groups is <em>predicted</em> to be particularly effective at reducing severe outcomes given the strong evidence of an increased risk with age, though we <em>predict</em> it would have less effect in reducing population transmission. (p. 15)</p>\n</blockquote>\n<p>You may insist on your arbitrarily high standard of what a \"predictive\" model is, but to a reader of this report and to the general public, Ferguson has been claiming that his model makes predictions. Again, I'd consider projected scenarios to be predictions as well, and I think the general public, particularly the politicians, would agree.</p>",
        "id": 197910147,
        "sender_full_name": "(=_=)",
        "timestamp": 1589794275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197846638\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197842791\">said</a>:</p>\n<blockquote>\n<p>I would never blame a scientist for writing bad code, because writing good code is something that scientists are not trained to do, and do not receive any benefits from it. However, I blame the UK government for using the results of the code to guide policy without having it rewritten by a team of professional software developers</p>\n</blockquote>\n<p>AFAIK the scientist(s) running a lab would usually hire software developers to write code for them. I know professional software developers working for university research teams who're writing high-performance code in low level languages like C++.</p>\n</blockquote>\n<p>What a strange idea. A university research group with enough funding <em>may</em> take on someone with programming experience to implement a theoretical model or to develop an existing model, if such a venture was deemed sufficiently valuable. But before this pandemic, the value of epidemiological models would largely have been considered theoretical; if someone told me that there simply weren't the financial or academic incentives to develop this model further, it wouldn't shock me.</p>",
        "id": 197917348,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1589799379
    },
    {
        "content": "<p>As for enforcing coding standards... I only completed my Masters two years ago, and during my entire time on a maths course at university (things are specialised from the start in most UK degree courses) the programming training barely extended beyond the basics I had picked up out of interest before going to university. Training as to programming standards was non-existent, and even if it had been provided, unless compulsory I can tell you with confidence that the attendance would have been virtually zero. There's no way things could have been better 13 or more years ago. So while I agree with the ideal, I don't agree with the expectations: epidemiologists hadn't had time to develop new or sophisticated computational models (let alone theoretical ones) between the start of the outbreak and the time of the report. They used the models they had to hand, bugs and all. Yes, if the code had been open source, others could have examined the implementation sooner, and some of the bugs could have been fixed shortly thereafter, agreed. But academics aren't trained or employed to write beautiful or perfect code, so expecting that in a literal emergency is unrealistic and unfair.</p>",
        "id": 197917426,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1589799456
    },
    {
        "content": "<p>Yes. In summary: The Real WTF is basing policy on code written by scientists</p>",
        "id": 197917847,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589799784
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197910147\">said</a>:</p>\n<blockquote>\n<p>I think this assertion is mistaken:</p>\n</blockquote>\n<p>You're right about this, I shouldn't have made this claim.</p>",
        "id": 197918616,
        "sender_full_name": "Jens Hemelaer",
        "timestamp": 1589800301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> I guess? I was going to point to you saying that before, but policymakers didn't have any more time to prepare either. It could have taken several extra days (at a generous minimum) to even get a <em>proposal</em> through government to commission a professionally constructed implementation of a model, let alone the time required to produce such a model. Given how inexcusably underprepared they were by the time of the report (a different story, and the real wtf imo), it was similarly necessary for them to rely on these models provided by academic epidemiologists. They have had time since then to retroactively do that work, though; has that happened? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 197918803,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1589800403
    },
    {
        "content": "<p>Those models have been used over the past 20 years to inform policy. I point  in my blog to an article \"6 questions\" that gives previous cases where the model overestimated dangers.</p>",
        "id": 197919083,
        "sender_full_name": "Henry Story",
        "timestamp": 1589800555
    },
    {
        "content": "<p>And if you think this is bad, wait till you hear about computational economics</p>",
        "id": 197919208,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589800641
    },
    {
        "content": "<p>Policy must be based on science. But science is based on peer review. And peer review requires open source. The tools used by scientists must be criticiseable and alterable.</p>",
        "id": 197919375,
        "sender_full_name": "Henry Story",
        "timestamp": 1589800719
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197917847\">said</a>:</p>\n<blockquote>\n<p>Yes. In summary: The Real WTF is basing policy on code written by scientists</p>\n</blockquote>\n<p>I partially disagree with this conclusion: having spent a reasonable amount of time in a team whose goal is to provide formally verified code for <em>real world applications</em> (and achieving to do so, e.g. some of the crypto primitives used in firefox comes directly from this work) I would say that it depends a lot on the expected finality of the scientific work.</p>",
        "id": 197919661,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1589800893
    },
    {
        "content": "<p>Well yes, I <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">mention a number of quality software projects</a> that were written at universities or polytechs. (Someone must be keeping a good list on these somewhere)</p>\n<blockquote>\n<p>BSD Unix (Berkley), X-Windows (MIT), the Mach kernel (Carnegie Mellon), Haskell GHC (Glasgow), Scala (EPFL), the Coq proof assistant (INRIA), Agda (Chalmers), ...</p>\n</blockquote>",
        "id": 197938586,
        "sender_full_name": "Henry Story",
        "timestamp": 1589810525
    },
    {
        "content": "<p>Scala runs Twitter, so that is pretty scalable.</p>",
        "id": 197938606,
        "sender_full_name": "Henry Story",
        "timestamp": 1589810538
    },
    {
        "content": "<p>What should be done is that more universities produce such quality code and be rewarded for it. Researchers should not just be rewarded for paper citations,  but also code citations (re-use of libraries), and code use.</p>",
        "id": 197938701,
        "sender_full_name": "Henry Story",
        "timestamp": 1589810587
    },
    {
        "content": "<p>It would be interesting if mathematicians could also be rewarded when programs use their discoveries.</p>",
        "id": 197938950,
        "sender_full_name": "Henry Story",
        "timestamp": 1589810693
    },
    {
        "content": "<p>The c++ code written at imperial is quite complex. Given that complexity, the few extra steps to automate tasks of building, testing, etc... which are not that complicated (people in Industry can understand them, so that's just to say how little you need to know!) would actually have made their work a lot easier.</p>",
        "id": 197939521,
        "sender_full_name": "Henry Story",
        "timestamp": 1589810935
    },
    {
        "content": "<p>Indeed the problem is that their code is likely needlessly complicated, because well it has to deal with memory management, pointer arithmetic, ... You actually can watch talks by <span class=\"user-mention\" data-user-id=\"275991\">@Bartosz Milewski</span> where he rants about how much more complicated C++ makes the life of a developer. And his background is c++.</p>",
        "id": 197940199,
        "sender_full_name": "Henry Story",
        "timestamp": 1589811201
    },
    {
        "content": "<p>I didn't look at the code, but I'd make a guess that the biggest underlying problem is that the model and the solver are tightly coupled</p>",
        "id": 197940988,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589811498
    },
    {
        "content": "<p>Now that's the type of argument that could make for a positive constructive criticism, that goes beyond those initial ones. :-)</p>",
        "id": 197941571,
        "sender_full_name": "Henry Story",
        "timestamp": 1589811724
    },
    {
        "content": "<p>Btw. here is a fun story. Around 1997 I was at AltaVista and tried to port the BabelFish machine translation to use the Java Web Server. At some point I got a bit concerned as their code was not open source, as I could not tell how much memory the server would allocate to an HTTP header. So I wrote a shell script that created either one infinitely long header or an infinite number of headers.  And indeed the server crashed with a memory exception. I sent that script in. Not long after Sun Microsystems open sourced their server. <br>\nI met a developer at the JWS stand at Java One and told them about that bug. They knew very well about that incident. The first thing they tried to know is if I had used a byte code decompiler...<br>\nSo Sun management must have worked out that the code being closed was what led the developers to think that they did not need to be careful, and that the better policy for them was to open it.</p>",
        "id": 197942150,
        "sender_full_name": "Henry Story",
        "timestamp": 1589812035
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197917348\">said</a>:</p>\n<blockquote>\n<p>What a strange idea. A university research group with enough funding <em>may</em> take on someone with programming experience to implement a theoretical model or to develop an existing model, if such a venture was deemed sufficiently valuable. But before this pandemic, the value of epidemiological models would largely have been considered theoretical; if someone told me that there simply weren't the financial or academic incentives to develop this model further, it wouldn't shock me.</p>\n</blockquote>\n<p>Yes, what a strange idea it is. And how strange it was that Phil Bull, instead of mounting an offensive against the revolting idea that academic modelling of epidemics be <em>defunded</em>, by arguing that <em>more</em> funding should be allocated so that academic modelling can be better resourced, should choose to go on the defensive and argue <em>for</em> the status quo, which is a direct result of this paucity of funding that you have so astutely observed.</p>",
        "id": 197943270,
        "sender_full_name": "(=_=)",
        "timestamp": 1589812516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197918803\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> I guess? I was going to point to you saying that before, but policymakers didn't have any more time to prepare either. It could have taken several extra days (at a generous minimum) to even get a <em>proposal</em> through government to commission a professionally constructed implementation of a model, let alone the time required to produce such a model. Given how inexcusably underprepared they were by the time of the report (a different story, and the real wtf imo), it was similarly necessary for them to rely on these models provided by academic epidemiologists. They have had time since then to retroactively do that work, though; has that happened? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>That's happening now. In March 2020, after <a href=\"https://en.wikipedia.org/wiki/Julian_Todd\">Julian Todd</a> <a href=\"https://www.whatdotheyknow.com/request/software_code_used_for_the_covid\">made a FOIA request</a> for the ICL code, Neil Ferguson <a href=\"https://twitter.com/neil_ferguson/status/1241835454707699713\">tweeted</a> a bit of an apologia, and got people from Microsoft/Github to look at the code. What you're seeing now is the fallout from the public release of the code on Github.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/neil_ferguson/status/1241835454707699713\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1218540739447095296/dIIstf8b_normal.jpg\"></a><p>I’m conscious that lots of people would like to see and run the pandemic simulation code we are using to model control measures against COVID-19.  To explain the background - I wrote the code (thousands of lines of undocumented C) 13+ years ago to model flu pandemics...</p><span>- neil_ferguson (@neil_ferguson)</span></div></div>",
        "id": 197943762,
        "sender_full_name": "(=_=)",
        "timestamp": 1589812768
    },
    {
        "content": "<p>I added the links to the three blog posts mentioned above (one defending the code, the two others criticizing it) with little overview of their content to my <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">blog post</a>. One point I made that has not come up here yet is the following:</p>\n<blockquote>\n<p>open sourcing the code early would have immediately led to improvements in it, as those are actually quite obvious ones. When Linus Torvalds started writing the Linux kernel in 1991 it was on his own admission a sketch of an OS. Putting it online allowed it to grow through community feedback in the form of patches that came in from all over the world. This improvement led to it being adopted by the Stanford students that then went on to start Google, where it runs to this day (and much improved) their whole infrastructure. It is now running all Android Phones, huge percentage of servers, and has been ported to run on every conceivable chip.</p>\n</blockquote>",
        "id": 197952956,
        "sender_full_name": "Henry Story",
        "timestamp": 1589816428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197902683\">said</a>:</p>\n<blockquote>\n<p>One of the problems with the code that I <a href=\"https://medium.com/@bblfish/open-source-and-covid-19-models-5e638f785514\">developed at length</a> is that the way it is written made it completely unscalable: ie able to use only 1 thread when say the modern Oracle M8-8 computer with 8 CPUs can run a little over 2000 threads in parallel (and this could be increased indefinitely with enough money or cloud computing resources). So the way it was written was harmful to the efficiency of the research project itself. Furthermore it would have been difficult for them to change the code to improve their model.</p>\n</blockquote>\n<p>Henry what you wrote is wrong, even just reading that ticket. The code as written _can_ scale. In fact, the nondeterminism was a bug introduced and then fixed over a span of _days_ that _only_  affected the code when it was running in parallel mode! I.e. the (temporary) nondeterminism was a case of a subtle issue introduced precisely by parallelism. Please don't write with confidence when you don't know what you're saying.</p>",
        "id": 197957994,
        "sender_full_name": "Gershom",
        "timestamp": 1589818507
    },
    {
        "content": "<p>I was going on the paragraph of <a href=\"https://lockdownsceptics.org/code-review-of-fergusons-model/\">the code review</a> that starts with this:</p>\n<blockquote>\n<p>Imperial advised Edinburgh that the problem goes away if you run the model in single-threaded mode, like they do.</p>\n</blockquote>\n<p>But if that is put into question, I'll look into it in more detail.</p>",
        "id": 197964934,
        "sender_full_name": "Henry Story",
        "timestamp": 1589821404
    },
    {
        "content": "<p>Right, that problem went away. But it was also fixed in multithreaded code! So it seems irrelevant. The people trying to make it relevant are doing so towards malicious ends, using sophistry to delegitimize the consensus agreed on by many models and modeling groups, and also by now confirmed by like death tolls and etc., that absent a lockdown covid would spread widely and kill many people.</p>",
        "id": 197970030,
        "sender_full_name": "Gershom",
        "timestamp": 1589823424
    },
    {
        "content": "<p>Ok, I have removed the mistaken sentences relating to the code not being parallesable. Instead I developed a bit of the history of how the programming community moved from stateful Object Oriented programming to functional programming with immutable data structures due to the huge increase in the number of available threads on modern CPUs. I cite <span class=\"user-mention\" data-user-id=\"275991\">@Bartosz Milewski</span> 's book \"Category for Computer Programmers\" and the article \"A  Computational Science Agenda for Programming Language Research” which I was pointed to. This helps explain the bug in the IC multithreaded code: it is just really difficult to do multithreaded programming in a stateful OO language.</p>",
        "id": 197987928,
        "sender_full_name": "Henry Story",
        "timestamp": 1589831929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282722\">Jens Hemelaer</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197848317\">said</a>:</p>\n<blockquote>\n<p>I don't see any claim by Ferguson that the model is predictive (i.e. predicts with a certain probability and accuracy what will happen, given certain parameters), but rather that the model suggests scenarios that might happen. On the other hand, the criticism from the \"lockdownsceptics\" code review seems to be based on the model being predictive. Isn't this just some misunderstanding?</p>\n</blockquote>\n<p>I am just looking at the <a href=\"https://www.imperial.ac.uk/mrc-global-infectious-disease-analysis/covid-19/report-13-europe-npi-impact/\">Report 13 - Estimating the number of infections and the impact of non-pharmaceutical interventions on COVID-19 in 11 European countries</a> by Imperial and others. Table 2 is entitled \"Total forecasted deaths since the beginning of the epidemic up to 31 March in our model and in a <strong>counterfactual</strong> model (assuming no intervention had taken place)\"<br>\nSo these are counterfactual models. (discussed <a href=\"#narrow/stream/229111-general/topic/counterfactuals\">elsewhere here</a>), as they have to be, given that a model can influence policy which then would change reality. Counterfactuals are also I guess known as scenarios.</p>",
        "id": 198003737,
        "sender_full_name": "Henry Story",
        "timestamp": 1589841185
    },
    {
        "content": "<p>Actually on closer inspection it looks like they have a model for what happened at the time of publication (30 March) and the counterfactual model for what could have happened had nothing been done.</p>",
        "id": 198004680,
        "sender_full_name": "Henry Story",
        "timestamp": 1589841740
    },
    {
        "content": "<p>I wanted to look for the predictions they make on Sweden, as that is the country that decided to go without lockdown. But it is time to go to sleep here in Germany.</p>",
        "id": 198005095,
        "sender_full_name": "Henry Story",
        "timestamp": 1589842084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198005095\">said</a>:</p>\n<blockquote>\n<p>I wanted to look for the predictions they make on Sweden, as that is the country that decided to go without lockdown. But it is time to go to sleep here in Germany.</p>\n</blockquote>\n<p>From my readings, I had the impression they did not make predictions for Sweden.</p>",
        "id": 198019261,
        "sender_full_name": "(=_=)",
        "timestamp": 1589859682
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/programming/near/197917847\">said</a>:</p>\n<blockquote>\n<p>Yes. In summary: The Real WTF is basing policy on code written by <del>scientists</del> people who're not trained in good software engineering practice.</p>\n</blockquote>\n<p>FTFY</p>\n<p><span class=\"user-mention silent\" data-user-id=\"276885\">Kenji Maillard</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197919661\">said</a>:</p>\n<blockquote>\n<p>[...] I would say that it depends a lot on the expected finality of the scientific work.</p>\n</blockquote>\n<p>The key word is \"expected\", which is the problem. Presumably, Ferguson did not expect to gain so much attention before, and so the code languished unexamined for 13+ years. Unfortunately, things tend to \"scale\" unexpectedly these days, and so it is more imperative than ever to adhere to good software engineering practices when writing <em>any</em> code. </p>\n<p>Sadly, the <a href=\"https://en.wikipedia.org/wiki/Not_invented_here\">\"not invented here\"</a> mentality, cultural inertia and a lack of resources would probably mean the status quo remains the same for scientific computing in academia for years to come.</p>",
        "id": 198019657,
        "sender_full_name": "(=_=)",
        "timestamp": 1589860265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198019261\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198005095\">said</a>:</p>\n<blockquote>\n<p>I wanted to look for the predictions they make on Sweden, as that is the country that decided to go without lockdown. But it is time to go to sleep here in Germany.</p>\n</blockquote>\n<p>From my readings, I had the impression they did not make predictions for Sweden.</p>\n</blockquote>\n<p>They do in <a href=\"https://www.imperial.ac.uk/mrc-global-infectious-disease-analysis/covid-19/report-13-europe-npi-impact/\">Report 13 - Estimating the number of infections and the impact of non-pharmaceutical interventions on COVID-19 in 11 European countries</a> but only for one week ahead. A meteorologist contact of mine told me </p>\n<blockquote>\n<p>They estimated the reproduction no. R_0 in late march to be 2.64, with a 2.5% lower bound of 1.5, after all the current social distancing had been in place for some time. At that level the epidemic would have raced away. But it did not</p>\n</blockquote>",
        "id": 198024121,
        "sender_full_name": "Henry Story",
        "timestamp": 1589867015
    },
    {
        "content": "<p>I can see some good-faith pushback to Bull's blog in the comments there. Unfortunately, it does seem like he was more interested in <a href=\"https://twitter.com/philipbull/status/1259747419820044290\">hitting back and scoring points</a>, than at being constructive. Yes, Sue Denim's being provocative, but saying that you can ignore \"commercial\" \"software developers\" in your headline --- which is presumably what most people <em>only</em> read these days --- risks alienating way too many people who could've been your allies, and plays right into the provocateur's hand.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/philipbull/status/1259747419820044290\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/662486427209326592/OYMBvWmL_normal.jpg\"></a><p><a href=\"https://twitter.com/samb8s\">@samb8s</a> <a href=\"https://twitter.com/mike_peel\">@mike_peel</a> I agree -- a bit more training in software development techniques would go a long way! But laziness != incorrectness, and this is the key message to get across in the face of these politically motivated attacks.</p><span>- Phil Bull (@philipbull)</span></div></div>",
        "id": 198031001,
        "sender_full_name": "(=_=)",
        "timestamp": 1589874072
    },
    {
        "content": "<p>What follows is going to be a detailed analysis of Bull's blog, as I've promised earlier. It makes me <em>really</em> uncomfortable that someone who's worked on documentation, and is interested in outreach, has actually said what was being said in that blog.</p>",
        "id": 198031929,
        "sender_full_name": "(=_=)",
        "timestamp": 1589874736
    },
    {
        "content": "<p>He claims that scientific code needs to satisfy the following three criteria:</p>\n<ul>\n<li><strong>Scientific correctness</strong>: A mathematically and logically correct representation of the model(s) that are being studied, as well as a correct handling and interpretation of any input data.</li>\n<li><strong>Flexibility</strong>: The ability to add, adjust, turn on/off different effects, try different assumptions etc.</li>\n<li><strong>Performance</strong>: Sufficient speed and/or precision to allow the scientist to answer questions satisfactorily. </li>\n</ul>\n<p>Even at first glance, aren't all of these desirable qualities in <em>any</em> code?!</p>",
        "id": 198032148,
        "sender_full_name": "(=_=)",
        "timestamp": 1589874891
    },
    {
        "content": "<p>By his definition of \"scientific correctness\", that's just \"correctness\" in ordinary parlance. I don't know of any (functional) programmer who doesn't want a mathematically and logically correct representation of the (business) model and a correct handling and interpretation of input.</p>\n<p>With flexibility: that's exactly what code that is well-documented and well-maintained allows you to do, along with good software engineering practices.</p>\n<p>I'm not going to touch performance, but again, I'm sure there's decades worth of expertise out there that I'm not aware of.</p>",
        "id": 198032547,
        "sender_full_name": "(=_=)",
        "timestamp": 1589875184
    },
    {
        "content": "<p>On to the \"last four points [that] will horrify most software developers\"... ooh, I can't wait.</p>",
        "id": 198033128,
        "sender_full_name": "(=_=)",
        "timestamp": 1589875496
    },
    {
        "content": "<blockquote>\n<p><strong>Maintainability</strong>: Most scientific codes aren’t developed with future maintainers in mind. As per John Cook, they are more likely to be developed as “exoskeletons” by and for a particular scientist, growing organically over time as new questions come up. </p>\n</blockquote>\n<p>Except that the set of future maintainers includes future <em>you</em>, dear scientist. And future you 13+ years from now is not going to remember a certain decision you've made <em>now</em> that's causing that funky bug you would've spent hours in that future trying to hunt down.</p>\n<p>(Keeping track of tenses in time-travel scenarios is hard!)</p>\n<p>Scientific code gets worked on for a <em>long</em> time, which automatically makes maintainability an issue. This was certainly the case for the ICL code.</p>",
        "id": 198033492,
        "sender_full_name": "(=_=)",
        "timestamp": 1589875684
    },
    {
        "content": "<blockquote>\n<p><strong>Documentation</strong>: Providing code and end-user documentation is a good practice, but it’s not essential for scientific codes.</p>\n</blockquote>\n<p><a href=\"https://en.wikipedia.org/wiki/Not_invented_here\">Not invented here</a>. Moving on.</p>",
        "id": 198033896,
        "sender_full_name": "(=_=)",
        "timestamp": 1589875923
    },
    {
        "content": "<blockquote>\n<p>User-proofing/error checking: [...] In essence, the user is assumed to understand all of the (known/intended) limitations of the code and its outputs. This will generally be the case if you run the code yourself and are an expert in your particular field.</p>\n</blockquote>\n<p>Again, dear scientist, is future you going to remember <em>all</em> the limitations of the code and its output? What about <em>un</em>intended limitations? (See also: formal testing)</p>\n<p>This also doesn't scale. Wouldn't this obstruct scientific collaboration? Open science was something that came to the fore in this pandemic, with online biomedical research archives disseminating research at the speed of light. Isn't scientific collaboration something we should promote further, even after the pandemic is over?</p>",
        "id": 198034491,
        "sender_full_name": "(=_=)",
        "timestamp": 1589876303
    },
    {
        "content": "<blockquote>\n<p><strong>Formal testing</strong>: Software developers know the value of a test suite: Write unit tests for everything; throw lots of invalid inputs at the code to check it doesn’t fall over; use continuous integration or similar to routinely test for regressions. This is good practise that can often catch bugs. Setting up such infrastructure is still not the norm in scientific code development however. So how do scientists deal with regressions and so on? The answer is that most use ad hoc methods to check for issues.</p>\n</blockquote>\n<p>Yup, nothing to see here. <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> </p>\n<p>Here, he's confusing testing the results produced by the code (which he's treating as a black box) against the model for \"scientific\" correctness, versus testing the code itself. Of course the scientist-user would do the former; the developer would be responsible for the latter. Usually, best practices would suggest separation of concerns here, but lack of resources to implement this separation is probably a common issue.</p>",
        "id": 198036809,
        "sender_full_name": "(=_=)",
        "timestamp": 1589877807
    },
    {
        "content": "<blockquote>\n<p>I could go on, but hopefully this is enough to establish my case — the author of that article is out of their depth, and clearly unaware of many of the basics [...]. In fact, they are so far out that they don’t even realise how silly this all sounds to someone with even a cursory knowledge of this kind of thing — it is an almost perfect study in the Dunning-Kruger effect.</p>\n</blockquote>\n<p>Ok.</p>",
        "id": 198037614,
        "sender_full_name": "(=_=)",
        "timestamp": 1589878300
    },
    {
        "content": "<blockquote>\n<p>How they reached the conclusion that scientists must be so incompetent that “all academic epidemiology [should] be defunded” and that “This sort of work is best done by the insurance sector” is truly remarkable</p>\n</blockquote>\n<ul>\n<li>They have a political agenda.</li>\n<li>The insurance industry spends a lot of money getting the modelling right, because it will cost them money if they get it wrong. Hence, the people working in that sector have enough resources to engage in the best practices that's being rejected here.</li>\n</ul>",
        "id": 198038031,
        "sender_full_name": "(=_=)",
        "timestamp": 1589878502
    },
    {
        "content": "<blockquote>\n<p>For this to actually be the case, though, the Imperial group must have (a) evaded detection for over 10 years from a global community of competing experts; (b) be almost criminally negligent as scientists, by having ignored easily-discovered but consequential bugs; (c) be almost criminally arrogant to suppose that their unchecked/flawed model should be used to inform such big decisions; and (d) for the entire scientific advisory establishment to have been taken for a ride without any thought to question what they were being told.</p>\n</blockquote>\n<p>(a) That's easy to do, given that their code wasn't open-sourced until now. As long as the results are \"scientifically\" and directionally correct, how is anyone in the world who isn't part of that group going to know of any flaws in the code?</p>\n<p>(b) This is debatable.</p>\n<p>(c) Their model has been used to inform big decisions. Whether it's flawed or not is debatable, but the code was unchecked.</p>\n<p>(d) See the replication crises.</p>",
        "id": 198038751,
        "sender_full_name": "(=_=)",
        "timestamp": 1589878925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198038031\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>How they reached the conclusion that scientists must be so incompetent that “all academic epidemiology [should] be defunded” and that “This sort of work is best done by the insurance sector” is truly remarkable</p>\n</blockquote>\n<ul>\n<li>They have a political agenda.</li>\n<li>The insurance industry spends a lot of money getting the modelling right, because it will cost them money if they get it wrong. Hence, the people working in that sector have enough resources to engage in the best practices that's being rejected here.</li>\n</ul>\n</blockquote>\n<p>They definitely have an agenda. It is true that they can loose a lot of money if their models are not right, so they have an incentive structure that is built up correctly, where it is not it seems in Academia.  <br>\nBut really there should be nothing stopping universities and polytechs working together with industry on open source projects to build better modeling platforms  (see Scala, Linux, .... ). The ideology that only private enterprise can do these things right is the dangerous one. So there are rotten arguments on both sides.</p>",
        "id": 198039444,
        "sender_full_name": "Henry Story",
        "timestamp": 1589879356
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198039444\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198038031\">said</a>:</p>\n<blockquote>\n<ul>\n<li>The insurance industry spends a lot of money getting the modelling right, because it will cost them money if they get it wrong. Hence, the people working in that sector have enough resources to engage in the best practices that's being rejected here.</li>\n</ul>\n</blockquote>\n<p>But really there should be nothing stopping universities and polytechs working together with industry on open source projects to build better modeling platforms  (see Scala, Linux, .... ). </p>\n</blockquote>\n<p>There is. They don't have the resources. And Bull's rant is not helping to build bridges.</p>",
        "id": 198039663,
        "sender_full_name": "(=_=)",
        "timestamp": 1589879480
    },
    {
        "content": "<blockquote>\n<p>You may as well ask a Java UI programmer to review security bugs in the Linux kernel.</p>\n</blockquote>\n<p>So why is someone who has only contributed to Ubuntu commenting on software used in data analysis? </p>\n<p>This is especially since he seems unfamiliar with the fact that, in the commercial world, organisations that are well-resourced (i.e. those pesky insurance companies) and rely on data analysis do pay attention to all the best practices that he's downplayed.</p>\n<p>For one thing, separation of concerns is a thing. Well-resourced workplaces do not have the scientist-user (called a \"data scientist\") building and maintaining software tools for themselves. They employ \"data engineers\", professional software developers skilled in coding for data analysis, to do that. They <em>know</em> that data scientists can't \"code their way out of an envelope\", to use an oft-used exaggeration. Not that data scientists \"can't code\", but that they don't know the fundamentals of good software engineering, and that can sink a business.</p>",
        "id": 198039953,
        "sender_full_name": "(=_=)",
        "timestamp": 1589879646
    },
    {
        "content": "<blockquote>\n<p>Professional software developers will hate some of these norms because they are bad end-user software engineering</p>\n</blockquote>\n<p>Dear scientist, everyone is an end-user. These norms are just bad software engineering, full stop.</p>",
        "id": 198040179,
        "sender_full_name": "(=_=)",
        "timestamp": 1589879813
    },
    {
        "content": "<p>They do have resources, but instead of working cooperatively they decide to work in secret, which is much more costly. <br>\nThey should get extra resources if they work in the open. <br>\nYou are right though: Sue Denim and Bull could be playing on the same team. Bull building up terrible arguments in order to prove Sue's point.</p>",
        "id": 198040290,
        "sender_full_name": "Henry Story",
        "timestamp": 1589879885
    },
    {
        "content": "<p>The thing is that these norms of software engineering are really not rocket science. Opening the code would have immediately gotten friendly help here and there to improve it.</p>",
        "id": 198040380,
        "sender_full_name": "Henry Story",
        "timestamp": 1589879982
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198040290\">said</a>:</p>\n<blockquote>\n<p>You are right though: Sue Denim and Bull could be playing on the same team. Bull building up terrible arguments in order to prove Sue's point.</p>\n</blockquote>\n<p>Unwittingly, I might add. To recall something you wrote earlier:</p>\n<blockquote>\n<p>One of Nietzsche's aphorisms goes: \"The most perfidious way of harming a cause consists of defending it deliberately with faulty arguments.\"</p>\n</blockquote>\n<p>I would omit the \"deliberately\" bit. Many people do that because they got annoyed, like Bull.</p>",
        "id": 198040388,
        "sender_full_name": "(=_=)",
        "timestamp": 1589879991
    },
    {
        "content": "<p>Yes, Bull's like to go for Red flags.</p>",
        "id": 198040459,
        "sender_full_name": "Henry Story",
        "timestamp": 1589880013
    },
    {
        "content": "<p>I don't suppose there would be be any possibility of moving this discussion to 'off topic'?</p>",
        "id": 198040494,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1589880045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198040494\">said</a>:</p>\n<blockquote>\n<p>I don't suppose there would be be any possibility of moving this discussion to 'off topic'?</p>\n</blockquote>\n<p>It's very on-topic, because this can be an issue for applied CT in the future. Also, this is an area in which applied CT may have the potential to make positive contributions, see <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197843005\">some</a> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197844115\">comments</a> by <span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> earlier.</p>",
        "id": 198040528,
        "sender_full_name": "(=_=)",
        "timestamp": 1589880080
    },
    {
        "content": "<p>Yes, I look forward to your blog post <span class=\"user-mention\" data-user-id=\"276424\">@Rongmin Lu</span></p>",
        "id": 198040533,
        "sender_full_name": "Henry Story",
        "timestamp": 1589880081
    },
    {
        "content": "<p>I don't have a blog, Henry.</p>",
        "id": 198040550,
        "sender_full_name": "(=_=)",
        "timestamp": 1589880094
    },
    {
        "content": "<p>It usually takes just a few minutes to set them up.  I am not sure where a good blog hosting place is for mathematicians though. Medium is not good as it does not allow math notation. This is worth a thread on its own here I think.</p>",
        "id": 198040668,
        "sender_full_name": "Henry Story",
        "timestamp": 1589880175
    },
    {
        "content": "<p>I think I want to spare myself the headache of maintaining one for now.</p>",
        "id": 198041100,
        "sender_full_name": "(=_=)",
        "timestamp": 1589880477
    },
    {
        "content": "<p>Anyone, one final comment. If people can't get their hands on (or their heads around) Bob Martin's <em>Clean Code</em>, at least have a read of this transcript of an <a href=\"https://changelog.com/podcast/367\">interview he did on The Changelog</a> last October. I'll throw in some relevant excerpts:</p>\n<blockquote>\n<p>And it will likely take some kind of event… And that event will be some kind of horrible tragedy. Some poor software guy will do something stupid and kill 10,000 people. And when that occurs, the politicians of the world will not be able to ignore it, so they’ll have to stand up and wag their and point their finger at all the programmers and say “How could you have let this happen?”</p>\n<p>But again, it’s our fingers on the keyboard. We are writing that code. How do we answer that question? When the politicians of the world finally stare us in the eye and say “Hey, guys, how could you have let this happen?”, how do we answer that question? Do we say “Well, you know, my boss told me it had to be done on Tuesday.”</p>\n</blockquote>",
        "id": 198041454,
        "sender_full_name": "(=_=)",
        "timestamp": 1589880701
    },
    {
        "content": "<blockquote>\n<p>The regulation is going to happen. There’s no way to avoid that. In the end, it’s got to happen. The question is whether we get to regulate ourselves or whether we are regulated by someone else. If the answer to the question – they come and they point their finger at us and say “How could you have let this happen?”, and if the answer to that question is “Look, this was an accident. It was terrible, it was horrible, but it was not because we were being negligent… And here’s why. Here are the practices that we follow. Here are the disciplines that we follow. Here are the standards we uphold.” If we can come back with that statement, then we will probably escape the worst of the regulations. They will still regulate us, but maybe they’ll use our own regulations.</p>\n</blockquote>",
        "id": 198041468,
        "sender_full_name": "(=_=)",
        "timestamp": 1589880710
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198040528\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198040494\">said</a>:</p>\n<blockquote>\n<p>I don't suppose there would be be any possibility of moving this discussion to 'off topic'?</p>\n</blockquote>\n<p>It's very on-topic, because this can be an issue for applied CT in the future. Also, this is an area in which applied CT may have the potential to make positive contributions, see <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197843005\">some</a> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197844115\">comments</a> by <span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> earlier.</p>\n</blockquote>\n<p>I think it should be moved, it's tangentially on topic but you need quite a lot of imagination to see how. Maybe to <a class=\"stream\" data-stream-id=\"229125\" href=\"/#narrow/stream/229125-practice.3A-software\">#practice: software</a> rather than <a class=\"stream\" data-stream-id=\"229451\" href=\"/#narrow/stream/229451-general.3A-off-topic\">#general: off-topic</a>?</p>",
        "id": 198044291,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1589882478
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198044291\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198040528\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198040494\">said</a>:</p>\n<blockquote>\n<p>I don't suppose there would be be any possibility of moving this discussion to 'off topic'?</p>\n</blockquote>\n<p>It's very on-topic, because this can be an issue for applied CT in the future. Also, this is an area in which applied CT may have the potential to make positive contributions, see <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197843005\">some</a> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/197844115\">comments</a> by <span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> earlier.</p>\n</blockquote>\n<p>I think it should be moved, it's tangentially on topic but you need quite a lot of imagination to see how. Maybe to <a class=\"stream\" data-stream-id=\"229125\" href=\"/#narrow/stream/229125-practice.3A-software\">#practice: software</a> rather than <a class=\"stream\" data-stream-id=\"229451\" href=\"/#narrow/stream/229451-general.3A-off-topic\">#general: off-topic</a>?</p>\n</blockquote>\n<p><a class=\"stream\" data-stream-id=\"229125\" href=\"/#narrow/stream/229125-practice.3A-software\">#practice: software</a> is for discussing software tools for doing CT, so it doesn't seem to be the right stream. I've initially directed Henry to <a class=\"stream\" data-stream-id=\"233322\" href=\"/#narrow/stream/233322-practice.3A-communication\">#practice: communication</a> when he posted here, because that stream had topics about peer review and is about scientific communication after all, but most of the discussion ended up here. Maybe <a class=\"stream\" data-stream-id=\"233322\" href=\"/#narrow/stream/233322-practice.3A-communication\">#practice: communication</a>?</p>",
        "id": 198067100,
        "sender_full_name": "(=_=)",
        "timestamp": 1589895817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229156-practice.3A-applied.20ct/topic/open.20source.20modelling/near/198044291\">said</a>:</p>\n<blockquote>\n<p>it's tangentially on topic but you need quite a lot of imagination to see how. </p>\n</blockquote>\n<p>I think I'll exercise some of that imagination and fill in some of the blanks to try to paint a better picture.</p>\n<p>From what I understand of the aims of ACT, one of them is to understand complex systems and processes. To that end, there are several topics here about Petri nets, which you can use to formalise software (engineering) workflows.</p>",
        "id": 198154979,
        "sender_full_name": "(=_=)",
        "timestamp": 1589950726
    },
    {
        "content": "<p>Despite the opinions of some in this Zulip chat, good software engineering practices are not some esoteric mumbo-jumbo dreamed up by CS professors to torture undergraduate software engineers and guilt-trip people who code for a living. </p>\n<p>They are a distillation of experience won through blood, sweat and tears by software engineers toiling in the industry, knowledge that has been rediscovered many times. They are supposed to optimise the process of building complex software systems. They are supposed to make that process easier <em>in the later stages of that process</em>, with the price of teething pains at the earlier stages of building a piece of software.</p>",
        "id": 198155049,
        "sender_full_name": "(=_=)",
        "timestamp": 1589950823
    },
    {
        "content": "<p>Which means they should naturally fall under the ambit under which ACT has set itself. I have already pointed to the work of Bob Martin, who was one of the <a href=\"https://agilemanifesto.org/authors.html\">authors</a> of the <a href=\"https://agilemanifesto.org/\">Agile manifesto</a> and the author of Clean Code and other books about writing \"clean\" software, i.e. good software engineering practices.</p>\n<p>As I see it, one challenge that people in ACT may set for themselves is to formalise and study these software engineering processes in CT. The things that I've covered in this topic are also useful general knowledge that anyone who's working with code should have, and I presume that many people in ACT are, or aspire to be, working with code.</p>",
        "id": 198155055,
        "sender_full_name": "(=_=)",
        "timestamp": 1589950836
    },
    {
        "content": "<p>Hi sorry, I probably shouldn't have spoken up earlier, I just have a big mouth sometimes. It felt a bit off topic when it got really into the details of one particular case, but I agree this general topic is very relevant. Sorry if I disrupted things.</p>",
        "id": 198181973,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1589972318
    },
    {
        "content": "<p>No biggie. Sometimes things get side-tracked for a while and it may be good to have a jolt. In this case, we were having a lighter moment at the time. But I got my message out in the end, it seems, so it's all good.</p>",
        "id": 198202507,
        "sender_full_name": "(=_=)",
        "timestamp": 1589983349
    }
]