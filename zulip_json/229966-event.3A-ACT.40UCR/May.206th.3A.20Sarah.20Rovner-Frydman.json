[
    {
        "content": "<p>In the sixth talk of the <a href=\"https://sites.google.com/ucr.edu/actucr/\" title=\"https://sites.google.com/ucr.edu/actucr/\">ACT@UCR seminar</a>, the irrepressible <a href=\"https://twitter.com/sarah_zrf\" title=\"https://twitter.com/sarah_zrf\">Sarah Rovner-Frydman</a> (better known here as <span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>) will tell us about a new approach to <a href=\"https://en.wikipedia.org/wiki/Separation_logic#Overview\" title=\"https://en.wikipedia.org/wiki/Separation_logic#Overview\">separation logic</a>, a way to reason about programs.</p>\n<p>She'll give her talk on Wednesday May 6th at 5 pm UTC, which is 10 am in California, or 1 pm on the east coast of the United States, or 6 pm in England.  It will be held online via Zoom, here:</p>\n<p><a href=\"https://ucr.zoom.us/j/607160601\" title=\"https://ucr.zoom.us/j/607160601\">https://ucr.zoom.us/j/607160601</a></p>\n<p>Afterwards we'll discuss her talk here!</p>\n<p>• May 6, Sarah Rovner-Frydman: Separation logic through a new lens.</p>\n<blockquote>\n<p><strong>Abstract.</strong> Separation logic aims to reason compositionally about the behavior of programs that manipulate shared resources. When working with separation logic, it is often necessary to manipulate information about program state in patterns of deconstruction and reconstruction. This achieves a kind of \"focusing\" effect which is somewhat reminiscent of using optics in a functional programming language. We make this analogy precise by showing that several interrelated techniques in the literature for managing these patterns of manipulation can be derived as instances of the general definition of profunctor optics. In doing so, we specialize the machinery of profunctor optics from categories to posets and to sets. This simplification makes most of this machinery look more familiar, and it reveals that much of it was already hiding in separation logic in plain sight.</p>\n</blockquote>",
        "id": 196269053,
        "sender_full_name": "John Baez",
        "timestamp": 1588656371
    },
    {
        "content": "<p>Yay! I saw heaps of talks on separation logic back in the day because London is its world capital (it was invented at Queen Mary where I did my PhD, but everybody involved did a mass exodus for UCL and Monoidics before I arrived), it will be very nice to see it in a totally different language</p>",
        "id": 196289191,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588673573
    },
    {
        "content": "<p>Between the topic and body of the announcement there are three different dates suggested for the talk...</p>",
        "id": 196298182,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588680211
    },
    {
        "content": "<p>Well 'Wednesday' is also mentioned, which suggests the 6th. Which is also where it is on <a href=\"https://teamup.com/ksfss6k4j1bxc8vztb\" title=\"https://teamup.com/ksfss6k4j1bxc8vztb\">the calendar</a>.</p>",
        "id": 196299219,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1588680954
    },
    {
        "content": "<p>Wednesday is correct</p>",
        "id": 196311264,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588687322
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> please fix your typos ;_;</p>",
        "id": 196311313,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588687329
    },
    {
        "content": "<p>Sorry for any typos - I'll fix 'em.  ACT@UCR mseeting are always on Wednesdays and I always announce them on the they're being held.</p>",
        "id": 196312622,
        "sender_full_name": "John Baez",
        "timestamp": 1588687882
    },
    {
        "content": "<p>I guess I was falling asleep.</p>",
        "id": 196312963,
        "sender_full_name": "John Baez",
        "timestamp": 1588688023
    },
    {
        "content": "<p>Go Sarah!</p>",
        "id": 196335842,
        "sender_full_name": "Emily Pillmore",
        "timestamp": 1588698086
    },
    {
        "content": "<p>Btw, there's a way to <em>really</em> delete a comment, by clicking the drop-down menu obtained via the downarrow that appears to the right of your comment when you move your mouse near the date.</p>",
        "id": 196337732,
        "sender_full_name": "John Baez",
        "timestamp": 1588698894
    },
    {
        "content": "<p>ah, she is hidden. Thanks <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span></p>",
        "id": 196338100,
        "sender_full_name": "Emily Pillmore",
        "timestamp": 1588699051
    },
    {
        "content": "<p>Can't wait for tomorrow :)</p>\n<p>I thought it was today, for some reason. Mixed up with the CUNY seminar i guess</p>",
        "id": 196338233,
        "sender_full_name": "Emily Pillmore",
        "timestamp": 1588699099
    },
    {
        "content": "<p>The fact that I gave the wrong date might have helped.  <span aria-label=\"crazy\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"crazy\">:crazy:</span></p>",
        "id": 196343320,
        "sender_full_name": "John Baez",
        "timestamp": 1588701658
    },
    {
        "content": "<p>the power in my house just flickered D:</p>",
        "id": 196637181,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588773087
    },
    {
        "content": "<p>if i'm mysteriously unreachable this afternoon, assume it went out :((</p>",
        "id": 196637217,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588773106
    },
    {
        "content": "<p>although</p>\n<ol>\n<li>i doubt it will? it doesn't seem to be flickering more yet</li>\n<li>if it does go out, i'll try to get in contact via mobile internet</li>\n</ol>",
        "id": 196637304,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588773130
    },
    {
        "content": "<p>Hi - I'm on Zoom, I hope you're here.</p>",
        "id": 196662779,
        "sender_full_name": "John Baez",
        "timestamp": 1588783545
    },
    {
        "content": "<p>I'll join in one minute <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 196663111,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588783685
    },
    {
        "content": "<p>Sarah's slides are here:</p>\n<ul>\n<li><a href=\"http://math.ucr.edu/home/baez/mathematical/ACTUCR/Rovner-Frydman_Separation_Logic.pdf\" title=\"http://math.ucr.edu/home/baez/mathematical/ACTUCR/Rovner-Frydman_Separation_Logic.pdf\">Separation logic through a new lens</a>.</li>\n</ul>",
        "id": 196663684,
        "sender_full_name": "John Baez",
        "timestamp": 1588783965
    },
    {
        "content": "<p>I am viewing sarahzrf's screen</p>",
        "id": 196664945,
        "sender_full_name": "Emily Pillmore",
        "timestamp": 1588784539
    },
    {
        "content": "<p>I have a meeting, but great job <span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>!</p>",
        "id": 196673471,
        "sender_full_name": "Emily Pillmore",
        "timestamp": 1588788009
    },
    {
        "content": "<p>Hi....</p>",
        "id": 196675272,
        "sender_full_name": "John Baez",
        "timestamp": 1588788903
    },
    {
        "content": "<p>Regarding Bartosz' prism question, references to \"separating disjunction\" are very rare, I've only seen it mentioned in this talk <a href=\"https://math.unice.fr/tacl/assets/2019/contributed/s2/3/4-docherty-pym.pdf\" title=\"https://math.unice.fr/tacl/assets/2019/contributed/s2/3/4-docherty-pym.pdf\">https://math.unice.fr/tacl/assets/2019/contributed/s2/3/4-docherty-pym.pdf</a>, where they suggest it's a form of CLL's \"par\"</p>",
        "id": 196675273,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588788903
    },
    {
        "content": "<p>I could kick things off with a really dumb question while we wait for the smart people to show up.</p>",
        "id": 196675317,
        "sender_full_name": "John Baez",
        "timestamp": 1588788939
    },
    {
        "content": "<p>What's a Tambara module?</p>",
        "id": 196675337,
        "sender_full_name": "John Baez",
        "timestamp": 1588788947
    },
    {
        "content": "<p>It sounds like a profunctor between monoidal categories such that... something.</p>",
        "id": 196675357,
        "sender_full_name": "John Baez",
        "timestamp": 1588788959
    },
    {
        "content": "<p>Yeah, that was great! I haven't learned much about lenses yet, and I just think about them as some kind of \"modular data access/manipulation\". How can you use that interpretation here? Or more specifically, what do the \"lens laws\" say in the context of separation logic?</p>",
        "id": 196675430,
        "sender_full_name": "Christian Williams",
        "timestamp": 1588788981
    },
    {
        "content": "<p>I think connecting optics with separation logic like that was very cool, and I liked a lot the examples! Maybe not only prisms but have you considered other actions to see if any gave some nice example?</p>\n<p>(Or even, is there any problem with defining optics in a bicategory? The optics themselves look fine, maybe we need to rewrite the Tambara modules?)</p>",
        "id": 196675824,
        "sender_full_name": "Mario Román",
        "timestamp": 1588789177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675337\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675337\">said</a>:</p>\n<blockquote>\n<p>What's a Tambara module?</p>\n</blockquote>\n<p>It's a profunctor between actegories (categories w/ an action of a monoidal category) equipped w/ a transformation P(A, B) → P(M . A, M . B), subject to a boatload of laws (which are all automatic in the proset case of course <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>)</p>",
        "id": 196676039,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789267
    },
    {
        "content": "<p>so a \"context-respecting relation\"</p>",
        "id": 196676070,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789283
    },
    {
        "content": "<p>The string-wrapping monoid reminded me of a programming construction that's not a formal language application.<br>\nA frequent coding pattern is to set up a context, then to do work in that context, and afterward to take it down.<br>\nTypical examples are opening and later closing a file, or allocating memory to use during the work, and later releasing the memory.<br>\nSo common is this that some programming languages have functions that do this wrapping.  Racket, for example, has a function call-with-output-file, that opens and closes a file all around calling one of its arguments for the \"work\".</p>",
        "id": 196676088,
        "sender_full_name": "Hendrik Boom",
        "timestamp": 1588789288
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676039\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676039\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675337\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675337\">said</a>:</p>\n<blockquote>\n<p>What's a Tambara module?</p>\n</blockquote>\n<p>It's a profunctor between actegories (categories w/ an action of a monoidal category) equipped w/ a transformation P(A, B) → P(M . A, M . B), subject to a boatload of laws (which are all automatic in the proset case of course <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>)</p>\n</blockquote>",
        "id": 196676115,
        "sender_full_name": "John Baez",
        "timestamp": 1588789302
    },
    {
        "content": "<p>Now is probably not the time, but sometime I'd like to see this boatload of laws compressed to something elegant.  I think Street and someone already did it...</p>\n<p>Anyway, you have a pile of more relevant questions.</p>",
        "id": 196676209,
        "sender_full_name": "John Baez",
        "timestamp": 1588789335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"299803\">Hendrik Boom</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676088\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676088\">said</a>:</p>\n<blockquote>\n<p>The string-wrapping monoid reminded me of a programming construction that's not a formal language application.<br>\nA frequent coding pattern is to set up a context, then to do work in that context, and afterward to take it down.<br>\nTypical examples are opening and later closing a file, or allocating memory to use during the work, and later releasing the memory.<br>\nSo common is this that some programming languages have functions that do this wrapping.  Racket, for example, has a function call-with-output-file, that opens and closes a file all around calling one of its arguments for the \"work\".</p>\n</blockquote>\n<p>in FP they usually call it \"bracket combinator\"</p>",
        "id": 196676236,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588789348
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675430\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675430\">said</a>:</p>\n<blockquote>\n<p>Yeah, that was great! I haven't learned much about lenses yet, and I just think about them as some kind of \"modular data access/manipulation\". How can you use that interpretation here? Or more specifically, what do the \"lens laws\" say in the context of separation logic?</p>\n</blockquote>\n<p>for that interpretation: it depends on what kind of optic, but for the kind i showed in the talk that give rise to ramification, they correspond to \"linear lenses\", where you're obligated to re-put once you get<br>\ni'm afraid i haven't looked very closely at the stuff on lawfulness for generalized optics, or at least not in this context :T</p>",
        "id": 196676355,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> have you looked into concurrent separation logics? There's a bunch of extra stuff there like ghost state, resource STSs, parallel composition rule..</p>",
        "id": 196676503,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588789486
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676355\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676355\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675430\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675430\">said</a>:</p>\n<blockquote>\n<p>Yeah, that was great! I haven't learned much about lenses yet, and I just think about them as some kind of \"modular data access/manipulation\". How can you use that interpretation here? Or more specifically, what do the \"lens laws\" say in the context of separation logic?</p>\n</blockquote>\n<p>for that interpretation: it depends on what kind of optic, but for the kind i showed in the talk that give rise to ramification, they correspond to \"linear lenses\"</p>\n</blockquote>\n<p>Oh that's very interesting!</p>",
        "id": 196676510,
        "sender_full_name": "Bruno Gavranović",
        "timestamp": 1588789488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676209\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676209\">said</a>:</p>\n<blockquote>\n<p>Now is probably not the time, but sometime I'd like to see this boatload of laws compressed to something elegant.  I think Street and someone already did it...</p>\n<p>Anyway, you have a pile of more relevant questions.</p>\n</blockquote>\n<p>here's the more elegant version: lax-equivariant functor C → PSh(D), where PSh(D) inherits an action from D</p>",
        "id": 196676586,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789538
    },
    {
        "content": "<p>bicategory of M-tambara modules is to bicategory of M-actegories as Prof is to Cat: they're related by a presheaf pseudomonad (or rather, they <em>should</em> be)</p>",
        "id": 196676763,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789622
    },
    {
        "content": "<p>I noticed that separation logic deals with a lot of resources. Do you know of any connection with linear logic?</p>",
        "id": 196676824,
        "sender_full_name": "Jade Master",
        "timestamp": 1588789647
    },
    {
        "content": "<p>there's some paper about \"relative pseudomonads\" that i havent actually read</p>",
        "id": 196676835,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789651
    },
    {
        "content": "<p>Mike Shulman was saying it looked like linear logic.... it very much does.</p>",
        "id": 196677023,
        "sender_full_name": "John Baez",
        "timestamp": 1588789718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276037\">Jade Master</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676824\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676824\">said</a>:</p>\n<blockquote>\n<p>I noticed that separation logic deals with a lot of resources. Do you know of any connection with linear logic?</p>\n</blockquote>\n<p>it is substructural like linear, but slightly different, the authors originally introduced it as a variant of bunched logic IIRC</p>",
        "id": 196677027,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588789718
    },
    {
        "content": "<p>It seems to me naively that linear logic cares about resources but not <em>where they are located</em>, while separation logic is more fine-grained in that it cares about where they are, in some rather abstract sense of \"where they are\".</p>",
        "id": 196677131,
        "sender_full_name": "John Baez",
        "timestamp": 1588789778
    },
    {
        "content": "<p>i greatly enjoyed the talk, the string example was lovely and that there is work in progress in coq too.</p>",
        "id": 196677142,
        "sender_full_name": "eric brunner",
        "timestamp": 1588789784
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276047\">Alex Gryzlov</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676503\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676503\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> have you looked into concurrent separation logics? There's a bunch of extra stuff there like ghost state, resource STSs, parallel composition rule..</p>\n</blockquote>\n<p>ish—i've been working with VST, and i've learned about ghost state &amp; shares to some extent, but i'm not extensively familiar with their use for concurrency itself, and the other stuff you mention, not really</p>",
        "id": 196677159,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789793
    },
    {
        "content": "<p>I'm currently working on a Coq framework for lock-free CSL, that's why I'm asking :)</p>",
        "id": 196677292,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588789828
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677131\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677131\">said</a>:</p>\n<blockquote>\n<p>It seems to me naively that linear logic cares about resources but not <em>where they are located</em>, while separation logic is more fine-grained in that it cares about where they are, in some rather abstract sense of \"where they are\".</p>\n</blockquote>\n<p>Right, this is what wikipedia says \"Separation logic supports the developing field of research described by Peter O'Hearn and others as local reasoning, whereby specifications and proofs of a program component mention only the portion of memory used by the component, and not the entire global state of the system. \"</p>",
        "id": 196677308,
        "sender_full_name": "Bruno Gavranović",
        "timestamp": 1588789834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276047\">Alex Gryzlov</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677027\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677027\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276037\">Jade Master</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676824\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676824\">said</a>:</p>\n<blockquote>\n<p>I noticed that separation logic deals with a lot of resources. Do you know of any connection with linear logic?</p>\n</blockquote>\n<p>it is substructural like linear, but slightly different, the authors originally introduced it as a variant of bunched logic IIRC</p>\n</blockquote>\n<p>Right, and bunched logic is a sort of extension/variant of linear logic. Not sure about categorical models for it, in general.</p>",
        "id": 196677356,
        "sender_full_name": "Gershom",
        "timestamp": 1588789861
    },
    {
        "content": "<p>Someone asked a question (in chat) at the very beginning about vanilla Hoare Logic's relation to transition systems. Hoare Logic can be thought of as an enrichment of the monoid M of commands in Rel(Pos) . The calculus of weakest preconditions gives a cartesian lifting  by which Hoare -&gt; M is a cloven fibration- so this gives a doctrine. For labelled transition systems, M is the monoid of labels. There's an adjunction of  this category of transition systems with the topos of trees, in which one can construct a higher order modal hyperdoctrine. But there's no separation there.  In the literature, a (partial) monoidal closed structure  models the separating conjunction and magic wand to give a mess called bunched implication hyperdoctrine.</p>",
        "id": 196677399,
        "sender_full_name": "Jon Aytac",
        "timestamp": 1588789888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677131\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677131\">said</a>:</p>\n<blockquote>\n<p>It seems to me naively that linear logic cares about resources but not <em>where they are located</em>, while separation logic is more fine-grained in that it cares about where they are, in some rather abstract sense of \"where they are\".</p>\n</blockquote>\n<p>that really only derives from having \"X is at Y\" as a primitive proposition</p>",
        "id": 196677406,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789891
    },
    {
        "content": "<p>Coming from physics, where \"locality\" is a big deal (in field theory), it's interesting to me to imagine logics that take \"locality\" seriously - not just what's true but <em>where</em> it's true, or <em>where</em> you have resources.</p>",
        "id": 196677421,
        "sender_full_name": "John Baez",
        "timestamp": 1588789901
    },
    {
        "content": "<p>if you understand an atom in linear logic as having a spatial meaning, you'll see similar phenomena, i think</p>",
        "id": 196677447,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588789913
    },
    {
        "content": "<p>An overview of the history of the development is given here: <a href=\"https://link.springer.com/article/10.1007/s13347-018-0312-8#Sec4\" title=\"https://link.springer.com/article/10.1007/s13347-018-0312-8#Sec4\">https://link.springer.com/article/10.1007/s13347-018-0312-8#Sec4</a></p>",
        "id": 196677550,
        "sender_full_name": "Gershom",
        "timestamp": 1588789945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276650\">Gershom</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677356\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677356\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276047\">Alex Gryzlov</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677027\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677027\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276037\">Jade Master</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676824\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676824\">said</a>:</p>\n<blockquote>\n<p>I noticed that separation logic deals with a lot of resources. Do you know of any connection with linear logic?</p>\n</blockquote>\n<p>it is substructural like linear, but slightly different, the authors originally introduced it as a variant of bunched logic IIRC</p>\n</blockquote>\n<p>Right, and bunched logic is a sort of extension/variant of linear logic. Not sure about categorical models for it, in general.</p>\n</blockquote>\n<p>I don't know the proper name for it, but IIRC it's modeled by a category with two monoidal structures</p>",
        "id": 196677591,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588789960
    },
    {
        "content": "<p>Hmm, are you suggesting you can build up some concept of locality from linear logic, or even build up separation logic within linear logic, <span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>?</p>",
        "id": 196677599,
        "sender_full_name": "John Baez",
        "timestamp": 1588789966
    },
    {
        "content": "<p>Or which observer sees the state?</p>",
        "id": 196677636,
        "sender_full_name": "Hendrik Boom",
        "timestamp": 1588789984
    },
    {
        "content": "<p>well, you can sort of understand the term \"separation logic\" as referring to a particular semantics for the logic of bunched implications (BI)</p>",
        "id": 196677724,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790025
    },
    {
        "content": "<p>along with the integration with hoare logic</p>",
        "id": 196677858,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790079
    },
    {
        "content": "<p>it's interesting that in practice BI isn't really used much in more advanced versions of SL and people just work directly with underlying PCMs</p>",
        "id": 196677873,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588790090
    },
    {
        "content": "<p>BI has models in closed monoidal heyting algebras</p>",
        "id": 196677884,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790096
    },
    {
        "content": "<p>Wooh, acronym city!  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 196677936,
        "sender_full_name": "John Baez",
        "timestamp": 1588790121
    },
    {
        "content": "<p>PCM = partial commutative monoid</p>",
        "id": 196677953,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790128
    },
    {
        "content": "<p>I guess the theory isn't advanced enough</p>",
        "id": 196677956,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588790131
    },
    {
        "content": "<p>when i talk about \"state fragments\" or \"resources\", this is generally formalized as a PCM</p>",
        "id": 196677988,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790157
    },
    {
        "content": "<p>so a given piece of state / a given resource X can be fragmented into A and B if A ⊕ B = X</p>",
        "id": 196678082,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790190
    },
    {
        "content": "<p>the archetypal example is partial functions from some domain of \"memory addresses\" to values, with union as the operation, defined only when the domains are disjoint</p>",
        "id": 196678195,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790260
    },
    {
        "content": "<p>\"resource\" is a bit of overloaded term here because in CSL it also means a predicate on the state that can be temporarily broken inside critical sections</p>",
        "id": 196678201,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588790262
    },
    {
        "content": "<p>anyway, BI is fairly similar to multiplicative intuitionistic linear logic—the biggest difference is that it has →</p>",
        "id": 196678339,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790312
    },
    {
        "content": "<p>actually yeah i believe models of MILL are closed monoidal lattices or closed monoidal distributive lattices or somethign</p>",
        "id": 196678503,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790387
    },
    {
        "content": "<p>Let's see, I thought \"MILL\" was about symmetric monoidal closed categories... is that right?</p>",
        "id": 196678515,
        "sender_full_name": "John Baez",
        "timestamp": 1588790392
    },
    {
        "content": "<p>Okay, our messages crossed in the night.</p>",
        "id": 196678576,
        "sender_full_name": "John Baez",
        "timestamp": 1588790405
    },
    {
        "content": "<p>oops! i indeed forgot a symmetric in front of both \"monoidal\"s up there</p>",
        "id": 196678592,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790415
    },
    {
        "content": "<p>\\&gt;.&lt;</p>",
        "id": 196678595,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790417
    },
    {
        "content": "<p>I think you get ordered logic if you drop \"symmetric\" part :)</p>",
        "id": 196678649,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588790448
    },
    {
        "content": "<p>sounds right</p>",
        "id": 196678671,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790459
    },
    {
        "content": "<p>If we \"deplete\", what I was saying was \"commutative monoidal closed posets\", though I don't think people tend to say that phrase.</p>",
        "id": 196678714,
        "sender_full_name": "John Baez",
        "timestamp": 1588790487
    },
    {
        "content": "<p>So anyway, what's this extra \"→\" thing that BI has?</p>",
        "id": 196678822,
        "sender_full_name": "John Baez",
        "timestamp": 1588790528
    },
    {
        "content": "<p>Can you describe in categorical terms?</p>",
        "id": 196678866,
        "sender_full_name": "John Baez",
        "timestamp": 1588790553
    },
    {
        "content": "<p>regular (non-linear) implication</p>",
        "id": 196678911,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588790583
    },
    {
        "content": "<p>Oh, so you need a cartesian structure too, for this → thing to be adjoint to that?</p>",
        "id": 196679003,
        "sender_full_name": "John Baez",
        "timestamp": 1588790628
    },
    {
        "content": "<p>yeah I think so</p>",
        "id": 196679015,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588790636
    },
    {
        "content": "<p>ah, sorry, i said \"BI has models in closed monoidal heyting algebras\" earlier but i guess you missed it</p>",
        "id": 196679120,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790684
    },
    {
        "content": "<p>and god dammit i meant MAILL not MILL</p>",
        "id": 196679156,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790707
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> by the way, regarding the thing you asked:</p>\n<p><a href=\"/user_uploads/21317/uQfpIKFMciz8KJN7JtxmAof_/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/uQfpIKFMciz8KJN7JtxmAof_/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/uQfpIKFMciz8KJN7JtxmAof_/image.png\"></a></div>",
        "id": 196679620,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790941
    },
    {
        "content": "<p>then: there's concepts in hoare logic of \"weakest precondition\" and \"strongest postcondition\", which are exactly functors wp_C, sp_C that represent/corepresent H_C—so that makes this a cloven bifibration</p>",
        "id": 196679651,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588790962
    },
    {
        "content": "<p>basically, linear logic contexts are multisets, and BI contexts are trees</p>",
        "id": 196680014,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588791142
    },
    {
        "content": "<p>though I wonder how LNL models factor into this</p>",
        "id": 196680043,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588791158
    },
    {
        "content": "<p>I need category theory to make me happy.  I'm extremely happy with \"MILL = commutative closed monoidal posets\", \"MAILL = closed monoidal Heyting algebras\".</p>\n<p>I guess the \"A\" means something like \"additive\", since we're throwing in coproducts... well, and products too I guess?</p>",
        "id": 196680098,
        "sender_full_name": "John Baez",
        "timestamp": 1588791196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282835\">Jon Aytac</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677399\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677399\">said</a>:</p>\n<blockquote>\n<p>Someone asked a question (in chat) at the very beginning about vanilla Hoare Logic's relation to transition systems. Hoare Logic can be thought of as an enrichment of the monoid M of commands in Rel(Pos) . The calculus of weakest preconditions gives a cartesian lifting  by which Hoare -&gt; M is a cloven fibration- so this gives a doctrine. For labelled transition systems, M is the monoid of labels. There's an adjunction of  this category of transition systems with the topos of trees, in which one can construct a higher order modal hyperdoctrine. But there's no separation there.  In the literature, a (partial) monoidal closed structure  models the separating conjunction and magic wand to give a mess called bunched implication hyperdoctrine.</p>\n</blockquote>\n<p>ooooh i missed this post and it sounds <em>fascinating</em>, do you have something i can read? ive seen bits and pieces of like half of the things you mention but i dont think ive seen how they all fit together like that</p>",
        "id": 196680113,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791205
    },
    {
        "content": "<p>tangential amusing story: one time i read part of a paper called \"A General Framework for Sound and Complete Floyd-Hoare Logics\" and it independently reinvented Ω-Prof/Rel(Pos)/(0, 1)-Prof / whatever you wanna call it, but it called it the \"Hoare category\"</p>",
        "id": 196680328,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> yeah A is for additive</p>",
        "id": 196680370,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791331
    },
    {
        "content": "<p>⊕ and &amp; are \"additive\" connectives in linear logic, with [co]cartesian categorical semantics</p>",
        "id": 196680408,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791352
    },
    {
        "content": "<p>this multiplicative/additive terminology is due to Girard I think</p>",
        "id": 196680529,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588791392
    },
    {
        "content": "<p>I think the intuition behind it is that additive connectives require \"adding up\" contexts</p>",
        "id": 196680575,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588791416
    },
    {
        "content": "<p>no, that's backwards!</p>",
        "id": 196680591,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791425
    },
    {
        "content": "<p>it's multiplicative connectives that accumulate contexts</p>",
        "id": 196680616,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791435
    },
    {
        "content": "<p>also, did people not classify sequent calculus rules as additive or multiplicative style before linear logic? i thought the classification of the connectives was named after the classification of rules</p>",
        "id": 196680651,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791454
    },
    {
        "content": "<p>maybe that's wrong <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> not sure why i thought that actually</p>",
        "id": 196680731,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791485
    },
    {
        "content": "<p>oh yeah sorry, it's rather the intuition of which distributes over which</p>",
        "id": 196680897,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588791570
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> i KNEW that at one point</p>",
        "id": 196681004,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791604
    },
    {
        "content": "<p>right, and \"exponentials turn additives into multiplicatives\"</p>",
        "id": 196681037,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791618
    },
    {
        "content": "<p>I think the terminology originally comes simply from the fact that in coherence spaces, multiplicatives give cartesian products of underlying sets and additives disjoint unions...</p>",
        "id": 196681069,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588791633
    },
    {
        "content": "<p>The other “explanations” are retrofitted.</p>",
        "id": 196681151,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588791679
    },
    {
        "content": "<p>Girard first discovered the coherence space model and reconstructed linear logic from it.</p>",
        "id": 196681346,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1588791767
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span>  it's a pity that you didn't mention the star ~ Day convolution link which I think you've previously discussed in some other stream around here</p>",
        "id": 196681603,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588791882
    },
    {
        "content": "<p>hahaha</p>",
        "id": 196681620,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791893
    },
    {
        "content": "<p>man i didn't have time</p>",
        "id": 196681628,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791897
    },
    {
        "content": "<p>i've been mining depleted categorical structure out of separation logic on and off for the past 6 months and by now i have a goddamn truckload of it</p>",
        "id": 196681802,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791975
    },
    {
        "content": "<p>i can only fit so much into an hour</p>",
        "id": 196681809,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588791980
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278171\">Mario Román</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675824\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196675824\">said</a>:</p>\n<blockquote>\n<p>I think connecting optics with separation logic like that was very cool, and I liked a lot the examples! Maybe not only prisms but have you considered other actions to see if any gave some nice example?</p>\n<p>(Or even, is there any problem with defining optics in a bicategory? The optics themselves look fine, maybe we need to rewrite the Tambara modules?)</p>\n</blockquote>\n<p>ack sorry i meant to reply to this earlier and then i got distracted and forgot</p>\n<p>yeah i've considered a bunch of other actions :) that's one of the main points i hope to develop<br>\nre: bicategory, i've poked at trying to define it a little bit but i've never gotten around to pursuing the details fully... i dunno whether there's a problem or not!</p>",
        "id": 196683041,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588792642
    },
    {
        "content": "<p>(to be precise, the generalization should be one such that you can recover the current definition by plugging in the delooping of a monoidal category)</p>",
        "id": 196683168,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588792707
    },
    {
        "content": "<p>as for other actions—<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mo>:</mo><mi mathvariant=\"bold\">M</mi><mo>→</mo><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">M</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\Delta : \\mathbf{M} \\to [A, \\mathbf{M}]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"mclose\">]</span></span></span></span> is always strong monoidal, so you can compose it with any action of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">M</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[A, \\mathbf{M}]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">M</span></span><span class=\"mclose\">]</span></span></span></span> to get an action—then in concrete representations, this can give rise to a ∀ if you rig things up right, since Δ ⊣ ∀</p>",
        "id": 196683189,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588792721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196680113\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196680113\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"282835\">Jon Aytac</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677399\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677399\">said</a>:</p>\n<blockquote>\n<p>Someone asked a question (in chat) at the very beginning about vanilla Hoare Logic's relation to transition systems. Hoare Logic can be thought of as an enrichment of the monoid M of commands in Rel(Pos) . The calculus of weakest preconditions gives a cartesian lifting  by which Hoare -&gt; M is a cloven fibration- so this gives a doctrine. For labelled transition systems, M is the monoid of labels. There's an adjunction of  this category of transition systems with the topos of trees, in which one can construct a higher order modal hyperdoctrine. But there's no separation there.  In the literature, a (partial) monoidal closed structure  models the separating conjunction and magic wand to give a mess called bunched implication hyperdoctrine.</p>\n</blockquote>\n<p>ooooh i missed this post and it sounds <em>fascinating</em>, do you have something i can read?</p>\n</blockquote>\n<p>For the last statement in the paragraph, as is often the case, Lars Birkedal has a nice paper on the topic: \"BI Hyperdoctrines and Higher-Order Separation Logic\" <a href=\"https://link.springer.com/content/pdf/10.1007%2F978-3-540-31987-0_17.pdf\" title=\"https://link.springer.com/content/pdf/10.1007%2F978-3-540-31987-0_17.pdf\">https://link.springer.com/content/pdf/10.1007%2F978-3-540-31987-0_17.pdf</a></p>\n<p>The observations about the fibrational story of Hoare logic and temporal logic- it's a story we told ourselves in our seminar last year, but it feels like something I might have learned in Bart Jacobs book! The topos of forest comes from Joyal and Moerdjik's study of algebraic set theory, but was repurposed in the 90s to understand the categorical semantics for the synchronous calculus of communicating systems. More recently, it's been used by (natch) Lars Birkedal in \"First Steps toward Synthetic Guarded Domain Theory\" and elsewhere...</p>\n<p>Anyways, I'm always interested in a fresh categorical understanding of separation logics, and tambara modules seems a cleaner route...  sort of in two meetings at once this morning to be honest so I hope to have the opportunity to ask more pointed questions later.... many thanks!</p>",
        "id": 196683610,
        "sender_full_name": "Jon Aytac",
        "timestamp": 1588792905
    },
    {
        "content": "<p>oh dammit that birkedal paper is literally one of the main places ive learned abt models of separation logic ahahaha</p>",
        "id": 196684018,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793088
    },
    {
        "content": "<p>i never did finish it tho &gt;.&lt;</p>",
        "id": 196684031,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793095
    },
    {
        "content": "<p>who's \"we\" in \"our seminar\"?</p>",
        "id": 196684073,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793123
    },
    {
        "content": "<p>oh, and \"First Steps toward Synthetic Guarded Domain Theory\" is where i learned to love the topos of trees :&gt;</p>",
        "id": 196684481,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793315
    },
    {
        "content": "<p>not that i finished that either</p>",
        "id": 196684530,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793332
    },
    {
        "content": "<p>Dropping by a bit late after teaching... MILL is a closed symmetric monoidal category/poset, MAILL adds finite products and coproducts, and BI additionally adds <em>cartesian</em> closure (and might leave out the coproducts, I don't remember).  So a model of BI is a poset (or category) that's cartesian closed and also symmetric monoidal closed.  The standard example is a presheaf category with a Day convolution symmetric monoidal structure, since presheaf categories are always also cartesian closed.</p>",
        "id": 196684751,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588793409
    },
    {
        "content": "<p>And back up on Tambara modules... a profunctor from A to B is equivalently a category equipped with a functor to the interval category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo>→</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">2 = (0 \\to 1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> whose fibers are A and B respectively.  Is a Tambara module similarly an actegory with an actegory-functor to 2, where 2 has the trivial action?</p>",
        "id": 196684961,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588793489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> Thanks for the pointer to the multiple-commands thing.  What about if your \"commands\" have input and output types; could you then consider them as forming a category rather than a mere monoid and be looking at a lax functor out of that?</p>",
        "id": 196685248,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588793598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196684751\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196684751\">said</a>:</p>\n<blockquote>\n<p>Dropping by a bit late after teaching... MILL is a closed symmetric monoidal category/poset, MAILL adds finite products and coproducts, and BI additionally adds <em>cartesian</em> closure (and might leave out the coproducts, I don't remember).  So a model of BI is a poset (or category) that's cartesian closed and also symmetric monoidal closed.  The standard example is a presheaf category with a Day convolution symmetric monoidal structure, since presheaf categories are always also cartesian closed.</p>\n</blockquote>\n<p>indeed, the canonical way to get models of separation logic is to take depleted copresheaves on a symmetric promonoidal proset, except typically restricted to the special case of \"taking subsets of a partial commutative monoid\"</p>",
        "id": 196685295,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793616
    },
    {
        "content": "<p>probably, re input and output types! if you work with effectful expressions rather than just commands, your hoare triples generally look like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>P</mi><mo stretchy=\"false\">}</mo><mtext> </mtext><mi>e</mi><mtext> </mtext><mo stretchy=\"false\">{</mo><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>Q</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{P\\}\\ e\\ \\{x.Q\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">}</span><span class=\"mspace\"> </span><span class=\"mord mathdefault\">e</span><span class=\"mspace\"> </span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">.</span><span class=\"mord mathdefault\">Q</span><span class=\"mclose\">}</span></span></span></span>, where you're binding a variable in the postcondition to refer to the value that the expression results in</p>",
        "id": 196685522,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793696
    },
    {
        "content": "<p>but i don't have much experience with that <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 196685550,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793703
    },
    {
        "content": "<p>This is probably the first talk on separation logic I've seen that didn't contain the words \"heap\" or \"pointer\".... I definitely ain't in London anymore</p>",
        "id": 196685610,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588793730
    },
    {
        "content": "<p>i didn't want to alienate people who only knew python ;)</p>",
        "id": 196685657,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793756
    },
    {
        "content": "<p>It often used to be presented as a method for reasoning about C and C++ specifically. Putting it in the context of Hoare logic is much nicer</p>",
        "id": 196685989,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588793895
    },
    {
        "content": "<p>wait, wha? i usually think of the term \"separation logic\" as being inclusive of the tie-in to hoare logic</p>",
        "id": 196686068,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793952
    },
    {
        "content": "<p>like i would say that the frame rule is basically the heart &amp; soul of \"separation logic\" as opposed to \"bunched implications\"</p>",
        "id": 196686117,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588793971
    },
    {
        "content": "<p>It could be I'm misremembering, it was a few years ago...</p>",
        "id": 196686174,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588793998
    },
    {
        "content": "<p>is it possible that they were annotating C programs with pre/post conditions?</p>",
        "id": 196686248,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794020
    },
    {
        "content": "<p>when you're reasoning about whole programs, one thing you might do is intersperse code and assertions, like</p>\n<div class=\"codehilite\"><pre><span></span><code>{P}\nC\n{Q}\nD\n{R}\n</code></pre></div>\n\n\n<p>the idea being that {P} C {Q} and {Q} D {R} should both hold, and then implicitly you want to apply sequencing</p>",
        "id": 196686398,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794092
    },
    {
        "content": "<p>On reflection, almost certainly yeah</p>",
        "id": 196686452,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1588794117
    },
    {
        "content": "<p>in fact, the notation {P} C {Q} was originally meant for this style—if you were writing a triple in isolation, you were meant to do P {C} Q</p>",
        "id": 196686504,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794126
    },
    {
        "content": "<p>but nobody does that anymore afaik</p>",
        "id": 196686514,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196684961\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196684961\">said</a>:</p>\n<blockquote>\n<p>And back up on Tambara modules... a profunctor from A to B is equivalently a category equipped with a functor to the interval category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo>→</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">2 = (0 \\to 1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> whose fibers are A and B respectively.  Is a Tambara module similarly an actegory with an actegory-functor to 2, where 2 has the trivial action?</p>\n</blockquote>\n<p>having finally read this, it sounds right to me!<br>\ntbh one thing i've been kind of wanting to look into is seeing if there's some crank you can turn to get facts like that automatically—like does this drop out of being a proarrow equipment or something</p>",
        "id": 196687144,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794380
    },
    {
        "content": "<p>I expect Tambara modules are also the <a href=\"https://ncatlab.org/nlab/show/codiscrete+cofibration\" title=\"https://ncatlab.org/nlab/show/codiscrete+cofibration\">codiscrete cofibrations</a> in the 2-category of actegories, which is closer to a general crank.  I don't know of a general 2-categorical way to talk about \"objects over 2\".</p>",
        "id": 196687519,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794541
    },
    {
        "content": "<p>hmm... actually i think there's one subtlety here—you need to know that the functor is <em>strong</em> equivariant, not just <em>lax</em> equivariant</p>",
        "id": 196687524,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794543
    },
    {
        "content": "<p>What does that mean?</p>",
        "id": 196687567,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794572
    },
    {
        "content": "<p>well, i don't know if those are established terms <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 196687607,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794585
    },
    {
        "content": "<p>i just mean <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⋅</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo>⋅</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M \\cdot F(A) \\cong F(M \\cdot A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span></span></span></span> as opposed to the lax version</p>",
        "id": 196687705,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794607
    },
    {
        "content": "<p>Where F is what?</p>",
        "id": 196687724,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794616
    },
    {
        "content": "<p>er, the functor to 2</p>",
        "id": 196687736,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794621
    },
    {
        "content": "<p>I would include that in my definition of \"actegory-functor\".</p>",
        "id": 196687806,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794656
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 196687819,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794664
    },
    {
        "content": "<p>I suppose one can talk about lax, colax, and pseudo actegory-functors, but for this sort of structural thing you would nearly always want to use the pseudo ones.</p>",
        "id": 196687865,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794697
    },
    {
        "content": "<p>well, a fair number of useful things are only lax, and tambara modules are lax as functors to presheaves</p>",
        "id": 196687870,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794700
    },
    {
        "content": "<p>what do you mean by \"this sort of structural thing\"?</p>",
        "id": 196687883,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794715
    },
    {
        "content": "<p>Defining structures internal to the 2-category of actegories.</p>",
        "id": 196687942,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794730
    },
    {
        "content": "<p>oh, like, the morphisms suitable for saying that an object classifies something?</p>",
        "id": 196687980,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794753
    },
    {
        "content": "<p>yeah.</p>",
        "id": 196687984,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794756
    },
    {
        "content": "<p>hmmm, alright</p>",
        "id": 196688037,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794787
    },
    {
        "content": "<p>well, the thing i mentioned was just—you want the functor to 2 to be strong, or else the action on the collage could send objects in one fiber to objects in the other</p>",
        "id": 196688208,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794875
    },
    {
        "content": "<p>i guess that's exactly the kind of issue you had in mind?</p>",
        "id": 196688233,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588794896
    },
    {
        "content": "<p>yeah.</p>",
        "id": 196688289,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588794929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676209\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196676209\">said</a>:</p>\n<blockquote>\n<p>Now is probably not the time, but sometime I'd like to see this boatload of laws compressed to something elegant.  I think Street and someone already did it...</p>\n<p>Anyway, you have a pile of more relevant questions.</p>\n</blockquote>\n<p>I haven't found a reference, but I at one point (mostly) verified that a Tambara module structure is equivalent to an action of an identity profunctor \"over\" the actions of monoidal cats. So something like $M(m,n) * P(a,b) -&gt; P(m<em>a, n</em>b)$. By a yoneda-like argument this can be recovered from its action on identity morphisms which is where the $P(a,b) -&gt; P(m<em>a,m</em>b)$ comes from. The laws are then just the laws of an action of a monoid</p>",
        "id": 196695867,
        "sender_full_name": "Max New",
        "timestamp": 1588798551
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677131\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196677131\">said</a>:</p>\n<blockquote>\n<p>It seems to me naively that linear logic cares about resources but not <em>where they are located</em>, while separation logic is more fine-grained in that it cares about where they are, in some rather abstract sense of \"where they are\".</p>\n</blockquote>\n<p>Actually that Docherty-Pym talk I've linked at the start of the thread explains it nicely: linear logic is intrinsic, in that its formulas themselves are resources, whereas separation logic merely describes how to deal with resources. There's a cool PL paper from this year that illustrates this point nicely by showing how to use separation logic as a metatheory for constructing a variant of a linear lambda calculus in a clean way: <a href=\"https://robbertkrebbers.nl/research/articles/intrinsic_sessions.pdf\" title=\"https://robbertkrebbers.nl/research/articles/intrinsic_sessions.pdf\">https://robbertkrebbers.nl/research/articles/intrinsic_sessions.pdf</a></p>",
        "id": 196707648,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588805154
    },
    {
        "content": "<p>i dunno, i think formulas in separation logic are resources too</p>",
        "id": 196707839,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588805318
    },
    {
        "content": "<p>but i haven't looked at the docherty-pym talk yet</p>",
        "id": 196707842,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588805327
    },
    {
        "content": "<p>i was actually just about to... let me have a look <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 196707851,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588805336
    },
    {
        "content": "<p>hmm, intinsic vs descriptive sounds like synthetic vs analytic to me :)</p>",
        "id": 196707917,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588805400
    },
    {
        "content": "<p>it sounds to me like they're suggesting that LL is intrinsic but not descriptive, whereas BI is both <a href=\"/user_uploads/21317/_H5vWFW03ejQ_4Lu1sjEHKzr/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/_H5vWFW03ejQ_4Lu1sjEHKzr/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/_H5vWFW03ejQ_4Lu1sjEHKzr/image.png\"></a></div>",
        "id": 196708581,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588805922
    },
    {
        "content": "<p>i am rather suspicious that this is just a mangled version of \"promonoidal proset\" or maybe \"copromonoidal proset\" <a href=\"/user_uploads/21317/L3eCcSHaWG9xdOqmmKps6PFY/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/L3eCcSHaWG9xdOqmmKps6PFY/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/L3eCcSHaWG9xdOqmmKps6PFY/image.png\"></a></div>",
        "id": 196708700,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806098
    },
    {
        "content": "<p>yeah, BI has a curry-howard version in alpha-lambda calculus, though I've never seen it used anywhere</p>",
        "id": 196709085,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806405
    },
    {
        "content": "<p>OTOH there's <a href=\"https://protz.github.io/mezzo/\" title=\"https://protz.github.io/mezzo/\">https://protz.github.io/mezzo/</a> but I'm not sure how closely it follows the rules of BI/SL</p>",
        "id": 196709118,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806436
    },
    {
        "content": "<p>what's αλ calc like?</p>",
        "id": 196709122,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806441
    },
    {
        "content": "<p>basically LC with tree-shaped contexts, take a look at <a href=\"http://www0.cs.ucl.ac.uk/staff/p.ohearn/papers/BunchedTyping.pdf\" title=\"http://www0.cs.ucl.ac.uk/staff/p.ohearn/papers/BunchedTyping.pdf\">http://www0.cs.ucl.ac.uk/staff/p.ohearn/papers/BunchedTyping.pdf</a></p>",
        "id": 196709215,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806507
    },
    {
        "content": "<p>cool</p>",
        "id": 196709219,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806514
    },
    {
        "content": "<p>i was daydreaming a while back about if you could give denotational semantics to some kind of \"separation type theory\" in a <em>1</em>-category of presheaves on a promonoidal proset...</p>",
        "id": 196709271,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806560
    },
    {
        "content": "<p>any relation perhaps? :o</p>",
        "id": 196709295,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806584
    },
    {
        "content": "<p>I dunno about prosets, but Hoare type theory is a thing, invented by my boss :)</p>",
        "id": 196709435,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806721
    },
    {
        "content": "<p>i have the hoare type theory paper saved, actually</p>",
        "id": 196709480,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806742
    },
    {
        "content": "<p>i started reading it and did not get very far before getting distracted 🤪</p>",
        "id": 196709490,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806758
    },
    {
        "content": "<p>would be fun to try plotting a distribution of how far i typically get into a paper before switching focus <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span> adhd is fun</p>",
        "id": 196709535,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806796
    },
    {
        "content": "<p>it looked semi-relevant but i don't think i got far enough to know if it was the kind of thing i was thinking of</p>",
        "id": 196709566,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806825
    },
    {
        "content": "<p>hmm, whom of these is your boss? :)<br>\n<a href=\"/user_uploads/21317/Y3aFy4kwUOKBJHWENYmhHPfC/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Y3aFy4kwUOKBJHWENYmhHPfC/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Y3aFy4kwUOKBJHWENYmhHPfC/image.png\"></a></div>",
        "id": 196709632,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806863
    },
    {
        "content": "<p>Nanevski, also Mietek is my colleague :)</p>",
        "id": 196709658,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806896
    },
    {
        "content": "<p>oh i know him from freenode :)</p>",
        "id": 196709684,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806915
    },
    {
        "content": "<p>that's why I mentioned him, I'm also there</p>",
        "id": 196709715,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806938
    },
    {
        "content": "<p>ooh wait, what's your nick?</p>",
        "id": 196709728,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806959
    },
    {
        "content": "<p>clayrat</p>",
        "id": 196709778,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588806968
    },
    {
        "content": "<p>...don't recognize it <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 196709795,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588806987
    },
    {
        "content": "<p>well, i think i knew the name mietek mostly from #haskell, so if you didn't hang out there...</p>",
        "id": 196709843,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588807045
    },
    {
        "content": "<p>well, this is a tangent</p>",
        "id": 196709847,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588807050
    },
    {
        "content": "<p>ah cool, thanks!</p>",
        "id": 196710113,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1588807276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> i was watching thru the video of the talk to see it from a viewer perspective &amp; hearing your question again i realize i think i partially missed your point—you were suggesting a single profunctor H : S ⇸ S, i'm guessing H(P, Q) is the set of commands such that {P} C {Q} holds?</p>",
        "id": 196731779,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588833609
    },
    {
        "content": "<p>that should be basically the same as the hom-functor of the displayed category i described, but it never occurred to me to write that profunctor down directly</p>",
        "id": 196731815,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588833662
    },
    {
        "content": "<p>actually, i think you get the total space of the displayed category equivalently to laxity of my functor to Prof if you equip H as a promonad <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 196731927,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588833767
    },
    {
        "content": "<p>...and now i want the relation of \"gives a valid hoare triple\" between S × S and commands to induce some kind of galois connection and for that to somehow make the promonad version come from one side and the displayed category version come from the other</p>",
        "id": 196731980,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588833837
    },
    {
        "content": "<p>but damn it's too late at night for me to think that one through</p>",
        "id": 196732026,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588833853
    },
    {
        "content": "<p>very tangentially: i found this while googling to check how common of a concept promonads are: <a href=\"https://math.stackexchange.com/a/372457\" title=\"https://math.stackexchange.com/a/372457\">https://math.stackexchange.com/a/372457</a><br>\nand the description of profunctor composition in terms of their collages reeks to me of structured cospan -style open systems :o</p>",
        "id": 196732265,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588834113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196731779\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196731779\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> i was watching thru the video of the talk to see it from a viewer perspective &amp; hearing your question again i realize i think i partially missed your point—you were suggesting a single profunctor H : S ⇸ S, i'm guessing H(P, Q) is the set of commands such that {P} C {Q} holds?</p>\n</blockquote>\n<p>Yes, that's what I meant.</p>",
        "id": 196772417,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588859251
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/196680651\">said</a>:</p>\n<blockquote>\n<p>also, did people not classify sequent calculus rules as additive or multiplicative style before linear logic? i thought the classification of the connectives was named after the classification of rules</p>\n</blockquote>\n<p>Because in \"normal\" logic additive and multiplicative formulations are equivalent. equiprovable, which is enough for people who only care about consequence relations. (ah, relevantists had been making the distinction too, but they were considered weird).</p>",
        "id": 198585639,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1590330638
    },
    {
        "content": "<p>sure, but i'm sure that people have cared about more than consequence relations since before linear logic</p>",
        "id": 198590722,
        "sender_full_name": "sarahzrf",
        "timestamp": 1590338940
    },
    {
        "content": "<p>proof theory is not so new, right?</p>",
        "id": 198590729,
        "sender_full_name": "sarahzrf",
        "timestamp": 1590338953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/198590722\">said</a>:</p>\n<blockquote>\n<p>sure, but i'm sure that people have cared about more than consequence relations since before linear logic</p>\n</blockquote>\n<p>well,  it depends on whom do you ask. most traditional logicians nowadays still only care about consequence relations.  </p>\n<p>until the 70s no reputable mathematical logician would think about modal logic, let alone relevance or other \"deviant\" logics (the expression is Quine's, I believe). my evidence for this is that if you go to the index of the Handbook of Mathematical Logic (1977) there's no modal logic. at all. yes there's Kripke-Platek axioms, but no modal logic. <br>\nwhen Linear Logic started there was a problem convincing people that monoidal structures were logical.</p>",
        "id": 198591257,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1590339748
    },
    {
        "content": "<p>well, traditional logicians are losers <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 198591344,
        "sender_full_name": "sarahzrf",
        "timestamp": 1590339903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/May.206th.3A.20Sarah.20Rovner-Frydman/near/198591344\">said</a>:</p>\n<blockquote>\n<p>well, traditional logicians are losers <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n</blockquote>\n<p>a bit  of history for you: separation logic came from Bunched Logic, (O'Hearn and Pym) and Bunched Logic was introduced in the Dagstuhl seminar that I organized in 1999 Linear Logic and Applications, <a href=\"https://www.dagstuhl.de/en/program/calendar/semhp/?semnr=99341\">https://www.dagstuhl.de/en/program/calendar/semhp/?semnr=99341</a>.</p>",
        "id": 198591798,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1590340589
    }
]