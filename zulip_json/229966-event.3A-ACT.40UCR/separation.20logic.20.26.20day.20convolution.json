[
    {
        "content": "<p>also, nice depleted day convolution there in that blog post <span aria-label=\"sunglasses\" class=\"emoji emoji-1f60e\" role=\"img\" title=\"sunglasses\">:sunglasses:</span></p>",
        "id": 192617570,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585798806
    },
    {
        "content": "<p>it's separating conjunction now</p>",
        "id": 192617579,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585798823
    },
    {
        "content": "<p>declaring it</p>",
        "id": 192617583,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585798831
    },
    {
        "content": "<p>Oh hmm.</p>",
        "id": 192617699,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799010
    },
    {
        "content": "<p>Where is the depleted day convolution in that post?</p>",
        "id": 192617707,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799032
    },
    {
        "content": "<p>it's the monoidal structure on presheaves!</p>",
        "id": 192617753,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799063
    },
    {
        "content": "<p>congratulations to <span class=\"user-mention\" data-user-id=\"276037\">@Jade Master</span> and <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> for their joint independent rediscovery of separation logic ^__^</p>",
        "id": 192617843,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799167
    },
    {
        "content": "<p>??? lol</p>",
        "id": 192617858,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799200
    },
    {
        "content": "<p>well, ok, if i were less generous i might say that it's an essential insight that resources need not be possible to combine in general</p>",
        "id": 192617881,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799275
    },
    {
        "content": "<p>I see what you mean about day convolution.  The day convolution here kind of reminds me of Minkowski sum.</p>",
        "id": 192617883,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799276
    },
    {
        "content": "<p>i just looked up minkowski sum</p>",
        "id": 192617928,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799297
    },
    {
        "content": "<p>it's day convolution <span aria-label=\"gun\" class=\"emoji emoji-1f52b\" role=\"img\" title=\"gun\">:gun:</span></p>",
        "id": 192617931,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799301
    },
    {
        "content": "<p>That is a bold claim but I guess I believe you</p>",
        "id": 192617947,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799349
    },
    {
        "content": "<p>I don't really understand how this stuff relates to separation logic.</p>",
        "id": 192618009,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799413
    },
    {
        "content": "<p>the standard general formulation of separation logic goes something like</p>",
        "id": 192618020,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799431
    },
    {
        "content": "<p>you have a partial commutative monoid (PCM for short)</p>",
        "id": 192618025,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799440
    },
    {
        "content": "<p>you think of its elements as \"resources\"</p>",
        "id": 192618035,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799458
    },
    {
        "content": "<p>its power set is a complete boolean algebra, whose elements you can see as \"assertions about a resource\"</p>",
        "id": 192618108,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799527
    },
    {
        "content": "<p>the operation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>∗</mo><mi>Q</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∣</mo><mi mathvariant=\"normal\">∃</mi><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mi mathvariant=\"normal\">.</mi><mtext> </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mo>⋅</mo><mi>b</mi><mo>∧</mo><mi>a</mi><mo>∈</mo><mi>P</mi><mo>∧</mo><mi>b</mi><mo>∈</mo><mi>Q</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">P \\ast Q = \\{x \\mid \\exist a, b.\\ x = a \\cdot b \\land a \\in P \\land b \\in Q\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">.</span><span class=\"mspace\"> </span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mclose\">}</span></span></span></span> is called \"separating conjunction\" and it means \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> <em>independently</em> hold of <em>disjoint parts</em> of the resource\"</p>",
        "id": 192618196,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799611
    },
    {
        "content": "<p>I don't think that John (definitely not me) discovered this idea about Petri nets and quantales.</p>",
        "id": 192618282,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799672
    },
    {
        "content": "<p>well, i may have been being a bit tongue in cheek <span aria-label=\"halo\" class=\"emoji emoji-1f607\" role=\"img\" title=\"halo\">:halo:</span></p>",
        "id": 192618296,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799685
    },
    {
        "content": "<p>anyway, sometimes you also generalize this stuff to <em>ordered</em> PCMs</p>",
        "id": 192618310,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799697
    },
    {
        "content": "<p>and then youll probably want to work with downsets or upsets</p>",
        "id": 192618321,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799710
    },
    {
        "content": "<p>but anyway, most of what that post is saying is basically the same exact thing as what you do in separation logic, w/ the PCM specialized to an ordered, non-partial one built from a petri net</p>",
        "id": 192618419,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799798
    },
    {
        "content": "<p>whereas historically separation logic originated as specialized to the PCM of <em>heap states</em></p>",
        "id": 192618431,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799833
    },
    {
        "content": "<p>if you model the state of memory in a program at a particular point as a finite partial function from some domain of \"addresses\" to some codomain of \"values\", then this PCM has such finite partial functions as elements, and its operation is union but defined only when the memories have disjoint domains</p>",
        "id": 192618481,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585799901
    },
    {
        "content": "<p>Okay cool.</p>",
        "id": 192618495,
        "sender_full_name": "Jade Master",
        "timestamp": 1585799944
    },
    {
        "content": "<p>anyway, preordered PCMs are a special case of symmetric <em>promonoidal</em> preorders, which are indeed the fundamental structure you need in order to be able to put day convolution on presheaves (altho many presentations only look at the case where you have a full monoidal product)</p>",
        "id": 192618572,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800047
    },
    {
        "content": "<p>What does promonoidal mean?</p>",
        "id": 192618698,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800233
    },
    {
        "content": "<p>monoid object in Prof</p>",
        "id": 192618702,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800239
    },
    {
        "content": "<p>so multiplying two objects only gets you a presheaf out</p>",
        "id": 192618746,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800267
    },
    {
        "content": "<p>Oh yeah. Like a partial monoid on a preorder</p>",
        "id": 192618747,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800268
    },
    {
        "content": "<p>a partial monoid gives this by just being either representable or empty and never anything more interesting</p>",
        "id": 192618755,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800304
    },
    {
        "content": "<p>All this day convoluting is really useful in seperation logic. Wow.</p>",
        "id": 192618760,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800315
    },
    {
        "content": "<p>:&gt;</p>",
        "id": 192618762,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800320
    },
    {
        "content": "<p>a slick way of setting up the fully general day convolution is like—so, in any monoidal category, if you have a comonoid structure on some object A and a monoid structure on B, you can make Hom(A, B) a monoid like this <a href=\"/user_uploads/21317/UJTd-lUvVCZpU2IhaBpeNBv3/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/UJTd-lUvVCZpU2IhaBpeNBv3/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/UJTd-lUvVCZpU2IhaBpeNBv3/image.png\"></a></div>",
        "id": 192618801,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800360
    },
    {
        "content": "<p>now, Prof is monoidal under product of categories</p>",
        "id": 192618857,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800405
    },
    {
        "content": "<p>so if we have a comonoid object C in it and a monoid object D in it, we can turn Prof(C, D) into a monoidal category</p>",
        "id": 192618888,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800451
    },
    {
        "content": "<p>The day convolution is the is the \"separating conjunction\" here?</p>",
        "id": 192618892,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800453
    },
    {
        "content": "<p>yeah</p>",
        "id": 192618897,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800461
    },
    {
        "content": "<p>now note that presheaves and copresheaves correspond to profunctors to or from 1 (um, i cant remember which is which), which is of course both a monoid and a comonoid</p>",
        "id": 192618955,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800512
    },
    {
        "content": "<p>so you can make the category of presheaves or copresheaves monoidal by making your category a monoid or comonoid object in Prof (i may have that backward)</p>",
        "id": 192618968,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800541
    },
    {
        "content": "<p>uh, i guess really i mean pseudomonoid/pseudocomonoid, whateverrrr</p>",
        "id": 192619021,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800603
    },
    {
        "content": "<p>You would also need set to be a (co)monoid right?</p>",
        "id": 192619033,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800620
    },
    {
        "content": "<p>(yes pseudo_</p>",
        "id": 192619040,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800633
    },
    {
        "content": "<p>nope, remember Set isn't showing up as a domain or codomain in Prof</p>",
        "id": 192619041,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800638
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.201st.3A.20John.20Baez/near/192618955\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.201st.3A.20John.20Baez/near/192618955\">said</a>:</p>\n<blockquote>\n<p>now note that presheaves and copresheaves correspond to profunctors to or from 1 (um, i cant remember which is which), which is of course both a monoid and a comonoid</p>\n</blockquote>",
        "id": 192619051,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800658
    },
    {
        "content": "<p>!</p>",
        "id": 192619057,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800671
    },
    {
        "content": "<p>if you have a bona fide monoidal structure on your category, you get a pseudomonoid <em>and</em> pseudocomonoid in Prof, since you can turn functors into profunctors in 2 directions</p>",
        "id": 192619116,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800741
    },
    {
        "content": "<p>and so you can get a day convolution on both presheaves and copresheaves</p>",
        "id": 192619125,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800756
    },
    {
        "content": "<p>Day convolution is the profunctor composition of the first monoidal structure with the second right?</p>",
        "id": 192619127,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800757
    },
    {
        "content": "<p>look @ that string diagram i posted :V</p>",
        "id": 192619133,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800785
    },
    {
        "content": "<p>Ah wait that doesn't make sense</p>",
        "id": 192619134,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800787
    },
    {
        "content": "<p>yeah sorry one sec.</p>",
        "id": 192619136,
        "sender_full_name": "Jade Master",
        "timestamp": 1585800792
    },
    {
        "content": "<p>(that's associativity, not the definition of the operation, but)</p>",
        "id": 192619145,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800820
    },
    {
        "content": "<p>anyway, if you start out with a pseudomonoid or pseudocomonoid C in Prof, iirc you only get day convolution on presheaves or copresheaves, since you can only rig up C's half of that diagram on either the top or the bottom, not both ways</p>",
        "id": 192619213,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800923
    },
    {
        "content": "<p>actually i guess this simplifies a bit if you're convolving specifically presheaves/copresheaves since in string diagram terms the monoid/comonoid structure on the tensor unit becomes totally implicit</p>",
        "id": 192619291,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585800971
    },
    {
        "content": "<p>(i dont actually know if this monoidal category structure on Prof(C, D) is standard and/or also referred to as \"day convolution\", but it would make sense to me if it was)</p>",
        "id": 192619371,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801089
    },
    {
        "content": "<p>I don't see how the term with the hom of C is showing up in the day convolution from this. I'm probably missing something obvious.</p>",
        "id": 192619477,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801299
    },
    {
        "content": "<p>hom of C?</p>",
        "id": 192619480,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801308
    },
    {
        "content": "<p>OH</p>",
        "id": 192619529,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801357
    },
    {
        "content": "<p>shit, sorry!!</p>",
        "id": 192619531,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801360
    },
    {
        "content": "<p>those aren't cups and caps</p>",
        "id": 192619533,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801373
    },
    {
        "content": "<p>notice the white dot in the middle &amp; that they're forking—Y shaped</p>",
        "id": 192619540,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801385
    },
    {
        "content": "<p>that's the monoid &amp; comonoid operations</p>",
        "id": 192619543,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801397
    },
    {
        "content": "<p>i could, probably stand to annotate better :|</p>",
        "id": 192619547,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801404
    },
    {
        "content": "<p>Yeah I knew that.</p>",
        "id": 192619548,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801406
    },
    {
        "content": "<p>wait then what do you mean by hom of C?</p>",
        "id": 192619551,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801414
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/Day+convolution\" title=\"https://ncatlab.org/nlab/show/Day+convolution\">https://ncatlab.org/nlab/show/Day+convolution</a></p>",
        "id": 192619556,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801426
    },
    {
        "content": "<p>The definition here has this C(c1 x c2,c) term.</p>",
        "id": 192619596,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801444
    },
    {
        "content": "<p>oic, i thought you meant there was a hom in what <em>i'd</em> written &gt;.&lt;</p>",
        "id": 192619599,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801448
    },
    {
        "content": "<p>that's because the formula there is for when the pseudo[co?]monoid structure on C in Prof comes from a pseudomonoid structure in Cat</p>",
        "id": 192619614,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801508
    },
    {
        "content": "<p>you get a profunctor from a functor by putting it on one side of Hom</p>",
        "id": 192619619,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801520
    },
    {
        "content": "<p>Yes. A monoidal category is the same as a pseudomonoid in Cat I'm pretty sure</p>",
        "id": 192619711,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801631
    },
    {
        "content": "<p>Oh I see. You're doing a version starting with a promonoidal category.</p>",
        "id": 192619729,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801664
    },
    {
        "content": "<p>i meant \"monoidal category\", im not more sure of that than you are, i just wanted to repeat \"pseudomonoid\" for prosody</p>",
        "id": 192619730,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801671
    },
    {
        "content": "<p>Cool I get what's going on now.</p>",
        "id": 192619733,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801678
    },
    {
        "content": "<p>:)</p>",
        "id": 192619734,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801681
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 192619769,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801683
    },
    {
        "content": "<p>sorry for the scrambled explanation</p>",
        "id": 192619787,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585801720
    },
    {
        "content": "<p>It's a nice way to understand Day convolution.</p>",
        "id": 192619803,
        "sender_full_name": "Jade Master",
        "timestamp": 1585801758
    },
    {
        "content": "<p>well, to remember the definition maybe <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 192620129,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802198
    },
    {
        "content": "<p>im not sure how enlightening it is as to what day convolution <em>means</em></p>",
        "id": 192620133,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802212
    },
    {
        "content": "<p>personally i think the day i learned that separating conjunction was an instance of day convolution was the day that day convolution clicked for me, or at least started to click</p>",
        "id": 192620155,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802262
    },
    {
        "content": "<p>Yeah. This is pretty cool.</p>",
        "id": 192620207,
        "sender_full_name": "Jade Master",
        "timestamp": 1585802312
    },
    {
        "content": "<p>(i saw the classic, expanded definition of separating conjunction in the case where the PCM is memories considerably before i ever heard the word \"coend\")</p>",
        "id": 192620213,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802331
    },
    {
        "content": "<p>anyway, the fact that day convolution generally admits a closed structure is sick as hell</p>",
        "id": 192620322,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802488
    },
    {
        "content": "<p>i dont know of any particular name for it other than \"the closed structure for day convolution\", so i kinda prefer to use the name from separation logic, which is <em>magic wand</em></p>",
        "id": 192620380,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802536
    },
    {
        "content": "<p>because the connective is written like <a href=\"/user_uploads/21317/BU0UFiC2-bu9QtTX7gYuwANk/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/BU0UFiC2-bu9QtTX7gYuwANk/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/BU0UFiC2-bu9QtTX7gYuwANk/image.png\"></a></div>",
        "id": 192620404,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802605
    },
    {
        "content": "<p>What is the seperation logic interpretation of the internal hom?</p>",
        "id": 192620493,
        "sender_full_name": "Jade Master",
        "timestamp": 1585802706
    },
    {
        "content": "<p>was about to write it down <span aria-label=\"halo\" class=\"emoji emoji-1f607\" role=\"img\" title=\"halo\">:halo:</span></p>",
        "id": 192620497,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802715
    },
    {
        "content": "<p>in the (0, 0)-case, it's like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>−</mo><mo>∗</mo><mi>Q</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∣</mo><mi mathvariant=\"normal\">∀</mi><mi>y</mi><mo separator=\"true\">,</mo><mi>a</mi><mi mathvariant=\"normal\">.</mi><mtext> </mtext><mi>y</mi><mo>∈</mo><mi>P</mi><mo>→</mo><mi>x</mi><mo>⋅</mo><mi>y</mi><mo>=</mo><mi>a</mi><mo>→</mo><mi>a</mi><mo>∈</mo><mi>Q</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">P -* Q = \\{x \\mid \\forall y, a.\\  y \\in P \\to x \\cdot y = a \\to a \\in Q \\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∗</span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord\">.</span><span class=\"mspace\"> </span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mclose\">}</span></span></span></span></p>",
        "id": 192620584,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802775
    },
    {
        "content": "<p>in other words: P wand Q holds of a resource if whenever you can merge it with a resource satisfying P, you get something satisfying Q</p>",
        "id": 192620609,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802841
    },
    {
        "content": "<p>a resource satisfying P wand Q is a resource satisfying Q missing a resource satisfying P</p>",
        "id": 192620679,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802893
    },
    {
        "content": "<p>i once saw a really great illustration of this but im not sure whether id be able to find it again—give me one sec</p>",
        "id": 192620690,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585802926
    },
    {
        "content": "<p>okay i found my screenshot of the illustration but id be hard pressed to find where it came from, which is a pity since i remember there being more great illustrations :(</p>",
        "id": 192620718,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803000
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/Jwul12k1kxNSoFkLcKIr9FEl/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Jwul12k1kxNSoFkLcKIr9FEl/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Jwul12k1kxNSoFkLcKIr9FEl/image.png\"></a></div>",
        "id": 192620721,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803002
    },
    {
        "content": "<p>what does . and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">⋅</span></span></span></span> mean?</p>",
        "id": 192620846,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803149
    },
    {
        "content": "<p>. just goes after the variables in a quantifier</p>",
        "id": 192620867,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803214
    },
    {
        "content": "<p>\\cdot is the PCM operation</p>",
        "id": 192620868,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803221
    },
    {
        "content": "<p>that illustration is nice, but the kerning is shit</p>",
        "id": 192620912,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803245
    },
    {
        "content": "<p>I don't understand the illustration but I get what the magic wand is now.</p>",
        "id": 192620999,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803390
    },
    {
        "content": "<p>oh ;_;</p>",
        "id": 192621001,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803396
    },
    {
        "content": "<p>hmm, guess different visualizations work for different ppl</p>",
        "id": 192621006,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803418
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 192621007,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803420
    },
    {
        "content": "<p>idea is supposed to be that things are marked with assertions that describe em</p>",
        "id": 192621025,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803451
    },
    {
        "content": "<p>so we have this resource labelled P -* Q because it satisfies that</p>",
        "id": 192621028,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803471
    },
    {
        "content": "<p>and the property it has which means that is that we can stick together any of these other pieces labelled P and then the whole composite can be circled and labeled Q</p>",
        "id": 192621081,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803511
    },
    {
        "content": "<p>Should there be a there exists in the quantifier you wrote?</p>",
        "id": 192621083,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803521
    },
    {
        "content": "<p>no</p>",
        "id": 192621086,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803527
    },
    {
        "content": "<p>you're thinking for a?</p>",
        "id": 192621097,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803544
    },
    {
        "content": "<p>Yeah. Like is it a \"for all y and for all a\"?</p>",
        "id": 192621115,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803579
    },
    {
        "content": "<p>yeah</p>",
        "id": 192621117,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803583
    },
    {
        "content": "<p>we don't want to require that something satisfying P -* Q be possible to merge with everything satisfying P, just that if it <em>can</em> be merged with a given thing satisfying P, then blah blah</p>",
        "id": 192621121,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803591
    },
    {
        "content": "<p>so we need to ∀ the a</p>",
        "id": 192621124,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803595
    },
    {
        "content": "<p>Should the first implication not be there?</p>",
        "id": 192621176,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803616
    },
    {
        "content": "<p>why not</p>",
        "id": 192621186,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803631
    },
    {
        "content": "<p>Is it \" for all y and a with y in P, x times y = a implies that a is in Q\"</p>",
        "id": 192621270,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803787
    },
    {
        "content": "<p>yeah</p>",
        "id": 192621274,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803797
    },
    {
        "content": "<p>sorry, you write enough coq or haskell and you get totally used to chained arrows</p>",
        "id": 192621286,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803820
    },
    {
        "content": "<p>What you have written is \" for all y and a with y in P implies x times y = a implies that a is in Q\"</p>",
        "id": 192621287,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803821
    },
    {
        "content": "<p>that's how you would write what you said!!!</p>",
        "id": 192621291,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803838
    },
    {
        "content": "<p>formally!!</p>",
        "id": 192621292,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803839
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 192621330,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803845
    },
    {
        "content": "<p>unless you put the quantifier into the forall</p>",
        "id": 192621332,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803853
    },
    {
        "content": "<p>i couldve just done that i guess</p>",
        "id": 192621333,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803856
    },
    {
        "content": "<p>but that's shorthand for what i wrote anyway!</p>",
        "id": 192621335,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803867
    },
    {
        "content": "<p><span aria-label=\"curry\" class=\"emoji emoji-1f35b\" role=\"img\" title=\"curry\">:curry:</span></p>",
        "id": 192621343,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803902
    },
    {
        "content": "<p>I'm a logic noob. Is it like for all y and a with y in P is the context and x times y = a is the assumption</p>",
        "id": 192621355,
        "sender_full_name": "Jade Master",
        "timestamp": 1585803928
    },
    {
        "content": "<p>you can say \"for all a and y\", and then you can add an assumption with \"blah blah implies ...\"</p>",
        "id": 192621405,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803970
    },
    {
        "content": "<p>\"y in P\" is a premise here</p>",
        "id": 192621408,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803978
    },
    {
        "content": "<p>we have 2 premises: y in P and x \\cdot y = a</p>",
        "id": 192621415,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585803986
    },
    {
        "content": "<p>It's not like the first premise implies the second?</p>",
        "id": 192621437,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804022
    },
    {
        "content": "<p>no, → is pretty much universally right-associative</p>",
        "id": 192621443,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804040
    },
    {
        "content": "<p>So why should there be an implication?</p>",
        "id": 192621444,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804040
    },
    {
        "content": "<p>for pretty much this reason</p>",
        "id": 192621447,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804044
    },
    {
        "content": "<p>you could also put this as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>∈</mo><mi>P</mi><mo>∧</mo><mi>x</mi><mo>⋅</mo><mi>y</mi><mo>=</mo><mi>a</mi><mo>→</mo><mi>a</mi><mo>∈</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">y \\in P \\land x \\cdot y = a \\to a \\in Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span></p>",
        "id": 192621452,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804066
    },
    {
        "content": "<p>That's by convention?</p>",
        "id": 192621453,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804067
    },
    {
        "content": "<p>yeah</p>",
        "id": 192621455,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804070
    },
    {
        "content": "<p>Ok</p>",
        "id": 192621495,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804083
    },
    {
        "content": "<p>but it's about as standard of a convention as multiplication binding tighter than addition, where a convention is followed, has been my experience</p>",
        "id": 192621506,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804109
    },
    {
        "content": "<p>like i said tho, u write enough coq and u just get used to stating \"suppose n &gt; m, and m is prime, and blah, then foo\" as <code>n &gt; m -&gt; prime m -&gt; blah -&gt; foo</code></p>",
        "id": 192621520,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804171
    },
    {
        "content": "<p>I remember pemdas but there's no i for implication in it <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 192621521,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804175
    },
    {
        "content": "<p>pemdis</p>",
        "id": 192621522,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804182
    },
    {
        "content": "<p>When you want someone to write something down</p>",
        "id": 192621564,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804213
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/separation.20logic.20.26.20day.20convolution/near/192621081\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/separation.20logic.20.26.20day.20convolution/near/192621081\">said</a>:</p>\n<blockquote>\n<p>and the property it has which means that is that we can stick together any of these other pieces labelled P and then the whole composite can be circled and labeled Q</p>\n</blockquote>",
        "id": 192621582,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804300
    },
    {
        "content": "<p>holy shit that was a trainwreck of a sentence</p>",
        "id": 192621626,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804343
    },
    {
        "content": "<p>i swear it's grammatical</p>",
        "id": 192621629,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804346
    },
    {
        "content": "<p>\"and the property it has which means that, is that we can...\"</p>",
        "id": 192621638,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804377
    },
    {
        "content": "<p>Is it like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>P</mi><mo>−</mo><mo>∗</mo><mi>Q</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>P</mi><mo>⊆</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">(P -* Q) * P\\subseteq Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord mathdefault\">Q</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span></p>",
        "id": 192621649,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804403
    },
    {
        "content": "<p>not =</p>",
        "id": 192621657,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804408
    },
    {
        "content": "<p>but ⊢</p>",
        "id": 192621670,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804411
    },
    {
        "content": "<p>it's a closed structure!</p>",
        "id": 192621684,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804419
    },
    {
        "content": "<p>of course we have an evaluation map, but of course it's not an iso in general</p>",
        "id": 192621688,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804434
    },
    {
        "content": "<p>er, sorry, i misread the 2nd Q there as a P</p>",
        "id": 192621726,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804451
    },
    {
        "content": "<p>did you intend to write that, or was it a typo</p>",
        "id": 192621728,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804461
    },
    {
        "content": "<p>Yeah P makes more sense</p>",
        "id": 192621734,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804490
    },
    {
        "content": "<p>...editing...</p>",
        "id": 192621736,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804497
    },
    {
        "content": "<p>sdfjkj still wrong</p>",
        "id": 192621742,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804512
    },
    {
        "content": "<p>Jade wrote:</p>\n<blockquote>\n<p>I don't think that John (definitely not me) discovered this idea about Petri nets and quantales.</p>\n</blockquote>\n<p>Yeah, in <a href=\"https://johncarlosbaez.wordpress.com/2019/10/06/quantales-from-petri-nets/\" title=\"https://johncarlosbaez.wordpress.com/2019/10/06/quantales-from-petri-nets/\">that blog article of mine</a> I was reporting on this:</p>\n<ul>\n<li>Uffe Engberg and Glynn Winskel, <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.37.3821&amp;rep=rep1&amp;type=pdf\" title=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.37.3821&amp;rep=rep1&amp;type=pdf\">Petri nets as models of linear logic</a>, in <em>Colloquium on Trees in Algebra and Programming</em>, Springer, Berlin, 1990, pp. 147-161.</li>\n</ul>\n<p>To anyone who wants a summary: they're getting a model of linear logic from a  Petri net, simply by taking the free commutative monoidal category on it, then demoting that to a commutative monoidal <em>poset</em>, and then forming the poset of downsets in that, which is a commutative quantale (i.e., a commutative monoid in the category of cocomplete posets, also known as <a href=\"https://ncatlab.org/nlab/show/suplattice\" title=\"https://ncatlab.org/nlab/show/suplattice\">suplattices</a>).</p>\n<p>I think some of this was my own reinterpretation of what they are doing.   I prefer the category theory to the linear logic.</p>\n<p>We could summarize all this by saying: start with a Petri net, form the free commutative monoidal poset on that.  A poset is a Bool-enriched category, the poset of downsets on a poset P is the category of Bool-enriched presheaves on P, and the method of transferring a monoidal structure from a monoidal poset to its poset of downsets is the Boole-enriched version of Day convolution.</p>",
        "id": 192621747,
        "sender_full_name": "John Baez",
        "timestamp": 1585804529
    },
    {
        "content": "<p>it's (P -* Q) * P ⊢ Q</p>",
        "id": 192621797,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804570
    },
    {
        "content": "<p>\"a poset is a bool-enriched category\" heyting is turning over in his grave <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 192621835,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804623
    },
    {
        "content": "<p>also it's <em>definitely</em> not \\in, that doesn't make sense—maybe you mean \\subseteq</p>",
        "id": 192621850,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804658
    },
    {
        "content": "<p>which is indeed what i mean by ⊢</p>",
        "id": 192621856,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804665
    },
    {
        "content": "<p>lol okay thank you for teaching me logic :)</p>",
        "id": 192621901,
        "sender_full_name": "Jade Master",
        "timestamp": 1585804694
    },
    {
        "content": "<p>but when i said it was still wrong, i meant you replaced the wrong Q with a P <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 192621905,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804697
    },
    {
        "content": "<p>ok nice <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 192621928,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804774
    },
    {
        "content": "<p>so if you satisfy (P -* Q) * P, you definitely satisfy Q, because you have a portion which satisfies P and you have a portion which, when combined with something that satisfies P, gives something that satisfies Q</p>",
        "id": 192621982,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804823
    },
    {
        "content": "<p>but the converse doesn't hold</p>",
        "id": 192621989,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804834
    },
    {
        "content": "<p>first: for an arbitrary P and Q, there may be resources satisfying Q that have no subpart satisfying P</p>",
        "id": 192621996,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804854
    },
    {
        "content": "<p>and second: even if you can separate a resource that satisfies Q into a portion which satisfies P and another one, that doesnt mean the other one satisfies P -* Q</p>",
        "id": 192622014,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804898
    },
    {
        "content": "<p>because P -* Q means Q needs to still hold if you replace the P portion with any other P portion that will fit</p>",
        "id": 192622023,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804920
    },
    {
        "content": "<p>whereas maybe Q holding of the overall resource relies on it being this <em>particular</em> P portion</p>",
        "id": 192622062,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585804927
    },
    {
        "content": "<p>anyway, the fact that we have an adjunction is of course<br>\nP ⊢ Q -* R<br>\n&lt;-&gt;<br>\nP * Q ⊢ R</p>",
        "id": 192622158,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585805105
    },
    {
        "content": "<p>i.e.:<br>\nanything satisfying P will satisfy R once a Q thing is merged with it<br>\nIFF<br>\nanything separately satisfying P and Q satisfies R</p>",
        "id": 192622220,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585805177
    },
    {
        "content": "<p>thinkin about the case where we have the monoidal product of concatenation on the set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">A^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> of finite sequences of elements of some set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span></p>",
        "id": 192991283,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586142240
    },
    {
        "content": "<p>then day convolution in the powerset is concatenation of languages, and its adjoint is this thing <a href=\"https://en.wikipedia.org/wiki/Quotient_of_a_formal_language\" title=\"https://en.wikipedia.org/wiki/Quotient_of_a_formal_language\">https://en.wikipedia.org/wiki/Quotient_of_a_formal_language</a></p>",
        "id": 192991349,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586142307
    },
    {
        "content": "<p>you can make statements like</p>",
        "id": 192991411,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586142367
    },
    {
        "content": "<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>⊗</mo><mi>Q</mi><mo>∧</mo><msup><mi>P</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊗</mo><msup><mi>Q</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊣</mo><mo>⊢</mo><mi mathvariant=\"normal\">∃</mi><mi>s</mi><mo>∈</mo><msup><mi>A</mi><mo>∗</mo></msup><mi mathvariant=\"normal\">.</mi><mspace linebreak=\"newline\"></mspace><mo stretchy=\"false\">(</mo><mi>P</mi><mo>∧</mo><msup><mi>P</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊗</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>Q</mi><mo>∧</mo><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mover accent=\"true\"><mo>⊸</mo><mo>^</mo></mover><msup><mi>Q</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∨</mo><mspace linebreak=\"newline\"></mspace><mo stretchy=\"false\">(</mo><mi>P</mi><mo>∧</mo><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>⊸</mo><msup><mi>P</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>Q</mi><mo>∧</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>⊗</mo><msup><mi>Q</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P \\otimes Q \\land P&#x27; \\otimes Q&#x27; \\dashv\\vdash \\exists s \\in A^*.\\\\\n(P \\land P&#x27; \\otimes y(s)) \\otimes (Q \\land (y(s) \\hat\\multimap Q&#x27;)) \\lor\\\\\n(P \\land (y(s) \\multimap P&#x27;)) \\otimes (Q \\land y(s) \\otimes Q&#x27;)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8852220000000001em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.996332em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊣</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.738696em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\">.</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8852220000000001em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0633em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8132999999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mrel amsrm\">⊸</span></span><span style=\"top:-3.11886em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊸</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>",
        "id": 192991503,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586142595
    },
    {
        "content": "<p>okay maybe that's not very readable <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 192991543,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586142606
    },
    {
        "content": "<p>for whatever it's worth, by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi></mrow><annotation encoding=\"application/x-tex\">\\exists</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">∃</span></span></span></span> i mean a sup and by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mo>⊸</mo><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat\\multimap</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8132999999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8132999999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mrel amsrm\">⊸</span></span><span style=\"top:-3.11886em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> i mean the other adjoint to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span>, which is not symmetric since string concat is not</p>",
        "id": 192991708,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586142864
    }
]