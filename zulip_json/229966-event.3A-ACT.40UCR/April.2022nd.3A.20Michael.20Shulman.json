[
    {
        "content": "<p>In the fourth talk of the <a href=\"https://sites.google.com/ucr.edu/actucr/\" title=\"https://sites.google.com/ucr.edu/actucr/\">ACT@UCR seminar</a>, <a href=\"https://home.sandiego.edu/~shulman/\" title=\"https://home.sandiego.edu/~shulman/\">Michael Shulman</a> will tell us how to create nice string diagams for any closed symmetric monoidal category. </p>\n<p>His talk will take place on <strong>Wednesday April 22nd</strong> at 5 pm UTC, which is 10 am in California, or 1 pm on the east coast of the United States, or 6 pm in England.  It will be held online via Zoom, here:</p>\n<p><a href=\"https://ucr.zoom.us/j/607160601\" title=\"https://ucr.zoom.us/j/607160601\">https://ucr.zoom.us/j/607160601</a></p>\n<p>He needs to teach right after his talk - but he will join our discussions here at 8pm UTC, which is 1 pm in California or 4 pm on the east coast of the US, or 9 pm in England.</p>",
        "id": 194825085,
        "sender_full_name": "John Baez",
        "timestamp": 1587485306
    },
    {
        "content": "<ul>\n<li>Michael Shulman, Star-autonomous envelopes.</li>\n</ul>\n<p><strong>Abstract.</strong> Symmetric monoidal categories with duals, a.k.a. compact monoidal categories, have a pleasing string diagram calculus.  In particular, any compact monoidal category is closed with [A,B] = (A* ⊗ B), and the transpose of A ⊗ B → C to A → [B,C] is represented by simply bending a string. Unfortunately, a closed symmetric monoidal category cannot even be embedded fully-faithfully into a compact one unless it is traced; and while string diagram calculi for closed monoidal categories have been proposed, they are more complicated, e.g. with \"clasps\" and \"bubbles\".  In this talk we obtain a string diagram calculus for closed symmetric monoidal categories that looks almost like the compact case, by fully embedding any such category in a star-autonomous one (via a functor that preserves the closed structure) and using the known string diagram calculus for star-autonomous categories.  No knowledge of star-autonomous categories will be assumed.</p>",
        "id": 194825184,
        "sender_full_name": "John Baez",
        "timestamp": 1587485356
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>  </mtext></mrow><annotation encoding=\"application/x-tex\">\\;</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0em;vertical-align:0em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span></span></span></p>\n<p>This is especially interesting to me since Mike Stay and I introduced string diagrams for monoidal closed categories in a somewhat <em>ad hoc</em> way in our <a href=\"https://arxiv.org/abs/0903.0340\" title=\"https://arxiv.org/abs/0903.0340\">Rosetta Stone</a> paper - but the resulting diagrams required clasps and bubbles.  Shulman's new approach sounds attractive.</p>",
        "id": 194825464,
        "sender_full_name": "John Baez",
        "timestamp": 1587485480
    },
    {
        "content": "<p>Here's our string reduction for beta reduction in the cartesian closed category coming from the lambda calculus, for example:</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/vg-m3GpNcC41fnnpsRcVdvJ3/beta_reduction.jpg\" title=\"/user_uploads/21317/vg-m3GpNcC41fnnpsRcVdvJ3/beta_reduction.jpg\"><img src=\"/user_uploads/21317/vg-m3GpNcC41fnnpsRcVdvJ3/beta_reduction.jpg\"></a></div>",
        "id": 194826322,
        "sender_full_name": "John Baez",
        "timestamp": 1587485886
    },
    {
        "content": "<p>This sounds awesome.  But I have a regular conflict at that time.  Are the UCR talks recorded?</p>",
        "id": 194865246,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1587505305
    },
    {
        "content": "<p>they are!</p>",
        "id": 194865398,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587505407
    },
    {
        "content": "<p>Here's our YT channel:<br>\n<a href=\"https://www.youtube.com/channel/UCUQlS-R4O094jP0sGHDnrjA\" title=\"https://www.youtube.com/channel/UCUQlS-R4O094jP0sGHDnrjA\">https://www.youtube.com/channel/UCUQlS-R4O094jP0sGHDnrjA</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"channel\" href=\"https://www.youtube.com/channel/UCUQlS-R4O094jP0sGHDnrjA\" title=\"https://www.youtube.com/channel/UCUQlS-R4O094jP0sGHDnrjA\"><img src=\"https://i.ytimg.com/vi/channel/default.jpg\"></a></div>",
        "id": 194866286,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587505933
    },
    {
        "content": "<p>Michael Shulman's talk is based on this paper:</p>\n<ul>\n<li>Michael Shulman, <a href=\"https://arxiv.org/abs/2004.08487\" title=\"https://arxiv.org/abs/2004.08487\">Star-autonomous envelopes</a>.</li>\n</ul>",
        "id": 194883153,
        "sender_full_name": "John Baez",
        "timestamp": 1587523149
    },
    {
        "content": "<p>I don't expect I'll make it through the entire paper, and I'll certainly be skimming lightly over the proofs.  But after the talk everyone should be better-equipped to go read the paper.</p>",
        "id": 194883439,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587523571
    },
    {
        "content": "<p>BTW, in John's example string diagram, the conclusion is that you can just omit the clasps and bubbles and it still works!</p>",
        "id": 194883477,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587523667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194826322\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194826322\">said</a>:</p>\n<blockquote>\n<p>Here's our string reduction for beta reduction in the cartesian closed category coming from the lambda calculus, for example:</p>\n<p><a href=\"/user_uploads/21317/vg-m3GpNcC41fnnpsRcVdvJ3/beta_reduction.jpg\" title=\"beta_reduction.jpg\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"2em\"></mspace></mrow><annotation encoding=\"application/x-tex\"> \\qquad </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0em;vertical-align:0em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span></span></span></span> beta reduction</a></p>\n</blockquote>\n<p>hmmmmmmm havent i seen something suspiciously like this on joe's twitter</p>",
        "id": 194886534,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587528593
    },
    {
        "content": "<p>Wow, this paper looks great. Looking forward to the talk.</p>",
        "id": 194892161,
        "sender_full_name": "Christian Williams",
        "timestamp": 1587536608
    },
    {
        "content": "<p>ooh, proof net stuff?</p>",
        "id": 194963312,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587575871
    },
    {
        "content": "<p>yesss, proof nets</p>",
        "id": 194963605,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587575994
    },
    {
        "content": "<p>Among other things this talk somehow made proof nets seem more approachable than ever before, to me at least!</p>",
        "id": 194969868,
        "sender_full_name": "John Baez",
        "timestamp": 1587578840
    },
    {
        "content": "<p>I wonder what is the star-autonomous envelope of a Cartesian closed category? A category that is Cartesian and star autonomous is necessarily a poset, right? I wonder what comes out of the construction then.</p>",
        "id": 194969916,
        "sender_full_name": "Robin Piedeleu",
        "timestamp": 1587578859
    },
    {
        "content": "<p>So I guess you get a cartesian closed category embedded in a star-autonomous one that can't itself typically be cartesian closed....</p>",
        "id": 194970061,
        "sender_full_name": "John Baez",
        "timestamp": 1587578928
    },
    {
        "content": "<p>This would be a great question for <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>.</p>",
        "id": 194970096,
        "sender_full_name": "John Baez",
        "timestamp": 1587578945
    },
    {
        "content": "<p>It would be fun for me to see what you get when you start with Set.</p>",
        "id": 194970140,
        "sender_full_name": "John Baez",
        "timestamp": 1587578973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970061\">said</a>:</p>\n<blockquote>\n<p>So I guess you get a cartesian closed category embedded in a star-autonomous one that can't itself typically be cartesian closed....</p>\n</blockquote>\n<p>It might be spiritually akin to embedding Cat into Prof, where the cartesian product is no longer the \"cartesian\" product in Prof.</p>",
        "id": 194970229,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1587579008
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 194970266,
        "sender_full_name": "John Baez",
        "timestamp": 1587579036
    },
    {
        "content": "<p>I wonder what is the envelop of Vect (where objects are vector spaces that may be infinite dimensional).</p>",
        "id": 194970362,
        "sender_full_name": "Nicolas Blanco",
        "timestamp": 1587579103
    },
    {
        "content": "<p>organisers: any chance of having the video of Mike's talk uploaded w/ enough time to watch before Mike comes back online?</p>",
        "id": 194970457,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587579140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970229\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970229\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970061\">said</a>:</p>\n<blockquote>\n<p>So I guess you get a cartesian closed category embedded in a star-autonomous one that can't itself typically be cartesian closed....</p>\n</blockquote>\n<p>It might be spiritually akin to embedding Cat into Prof, where the cartesian product is no longer the \"cartesian\" product in Prof.</p>\n</blockquote>\n<p>You somehow flatten the higher-order structure when you embed Cat in Prof, or Set in Rel in that way. The embedding is not <em>closed</em> monoidal, or am I confused?</p>",
        "id": 194970495,
        "sender_full_name": "Robin Piedeleu",
        "timestamp": 1587579158
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277342\">Robin Piedeleu</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970495\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970495\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970229\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970229\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970061\">said</a>:</p>\n<blockquote>\n<p>So I guess you get a cartesian closed category embedded in a star-autonomous one that can't itself typically be cartesian closed....</p>\n</blockquote>\n<p>It might be spiritually akin to embedding Cat into Prof, where the cartesian product is no longer the \"cartesian\" product in Prof.</p>\n</blockquote>\n<p>You somehow flatten the higher-order structure when you embed Cat in Prof, or Set in Rel in that way. The embedding is not <em>closed</em> monoidal, or am I confused?</p>\n</blockquote>\n<p>Embedding sets into spans or  jointly monic spans rel, the cartesian product no longer is even a categorical product.</p>",
        "id": 194970857,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1587579357
    },
    {
        "content": "<p>So what's the relation between Chu(Cat, Set) and Prof?</p>",
        "id": 194970859,
        "sender_full_name": "Bartosz Milewski",
        "timestamp": 1587579357
    },
    {
        "content": "<p>You're right about that. Prof (for small cats) is compact closed.</p>",
        "id": 194970863,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1587579359
    },
    {
        "content": "<p>The Chu construction won't be compact closed.</p>",
        "id": 194970950,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1587579384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"295673\">Aleks Kissinger</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970457\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194970457\">said</a>:</p>\n<blockquote>\n<p>organisers: any chance of having the video of Mike's talk uploaded w/ enough time to watch before Mike comes back online?</p>\n</blockquote>\n<p>All depends on how hard I work.  I'll try it.</p>",
        "id": 194971000,
        "sender_full_name": "John Baez",
        "timestamp": 1587579417
    },
    {
        "content": "<p>It's taking Zoom a while to process the recording.  I can make a crappy unedited version available pretty soon though.</p>",
        "id": 194971242,
        "sender_full_name": "John Baez",
        "timestamp": 1587579516
    },
    {
        "content": "<p>Yeah, I didn't mean to throw people off with my remark about Prof. I tried to hedge that before with the word \"spiritually\", just referring to the fact that the cartesian product will no longer be cartesian in this or that envelope. Seems everyone understood that.</p>",
        "id": 194971430,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1587579624
    },
    {
        "content": "<p>Anyway, I'd like to see what happens when we do this game to Set.  I guess <em>one</em> way to think about it is to learn how to draw valid string diagrams with caps and cups in (the star-autonomous envelope of) Set, and learn to work with them, and get some intuition for them.</p>",
        "id": 194971451,
        "sender_full_name": "John Baez",
        "timestamp": 1587579635
    },
    {
        "content": "<p>it would be amusing if this just produces Rel</p>",
        "id": 194971485,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587579658
    },
    {
        "content": "<p>oh wait, i guess he said it was fully faithful</p>",
        "id": 194971509,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587579667
    },
    {
        "content": "<p>oh, and the thing about compact closure &gt;.&lt;</p>",
        "id": 194971543,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587579694
    },
    {
        "content": "<p>Yeah, it can't be Rel.</p>",
        "id": 194971571,
        "sender_full_name": "John Baez",
        "timestamp": 1587579707
    },
    {
        "content": "<p>I think that in Chu(Cat,Set) the profunctors are the objects.</p>",
        "id": 194971579,
        "sender_full_name": "Nicolas Blanco",
        "timestamp": 1587579714
    },
    {
        "content": "<p>So I believe we're defining a 2-functor from SMCC to *Auto, but I'm having trouble finding this in the paper.<br>\nDoes this seem right; would this be a left 2-adjoint?</p>",
        "id": 194971855,
        "sender_full_name": "Christian Williams",
        "timestamp": 1587579834
    },
    {
        "content": "<p>Not SMC - symmetric monoidal closed categories, right?</p>",
        "id": 194972001,
        "sender_full_name": "John Baez",
        "timestamp": 1587579890
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\">said</a>:</p>\n<blockquote>\n<p>Anyway, I'd like to see what happens when we do this game to Set.  I guess <em>one</em> way to think about it is to learn how to draw valid string diagrams with caps and cups in (the star-autonomous envelope of) Set, and learn to work with them, and get some intuition for them.</p>\n</blockquote>\n<p>In a *-autonomous category (or more generally, a linearly distributive category) there is a tractable algorithm for checking the validity of proof nets.  I wonder if there is such a way to check if a net in the envelope is in the image of the embedding.</p>",
        "id": 194972061,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1587579918
    },
    {
        "content": "<p>i've homological algebra at 1 so i'll miss the follow-up. i'll re-watch and take notes. nicely done talk. glad to see the multicategory bits towards the 11:00 mark. thanks!</p>",
        "id": 194972154,
        "sender_full_name": "eric brunner",
        "timestamp": 1587579963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277391\">Cole Comfort</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\">said</a>:</p>\n<blockquote>\n<p>Anyway, I'd like to see what happens when we do this game to Set.  I guess <em>one</em> way to think about it is to learn how to draw valid string diagrams with caps and cups in (the star-autonomous envelope of) Set, and learn to work with them, and get some intuition for them.</p>\n</blockquote>\n<p>In a *-autonomous category (or more generally, a linearly distributive category) there is a tractable algorithm for checking the validity of proof nets.  I wonder if there is such a way to check if a net in the envelope is in the image of the embedding.</p>\n</blockquote>\n<p>There are correctness criteria for intuitionistic proof nets, by Lamarche, I believe.</p>",
        "id": 194972218,
        "sender_full_name": "Robin Piedeleu",
        "timestamp": 1587580007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276120\">@Nicolas Blanco</span> looks like a morphism (P : C ⇸ D) → (Q : C' ⇸ D') will be a functor F : C → C' and a functor G : D' → D such that G^* ∘ P = Q ∘ F_*</p>",
        "id": 194972449,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580117
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971855\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971855\">said</a>:</p>\n<blockquote>\n<p>So I believe we're defining a 2-functor from SMCC to *Auto, but I'm having trouble finding this in the paper.<br>\nDoes this seem right; would this be a left 2-adjoint?</p>\n</blockquote>\n<p>It definitely has the flavor of a left 2-adjoint.   Maybe Mike or someone can prove that.</p>",
        "id": 194972471,
        "sender_full_name": "John Baez",
        "timestamp": 1587580130
    },
    {
        "content": "<p>The name \"envelope\" would suggest this as well.</p>",
        "id": 194972515,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587580152
    },
    {
        "content": "<p>i bet in a 2-chu construction thats a ≅ instead</p>",
        "id": 194972527,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971855\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971855\">said</a>:</p>\n<blockquote>\n<p>So I believe we're defining a 2-functor from SMCC to *Auto, but I'm having trouble finding this in the paper.<br>\nDoes this seem right; would this be a left 2-adjoint?</p>\n</blockquote>\n<p>It looks like the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">*P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> at the bottom of page 2, except that SMCCs are being considered as symmetric multicategories and hence polycategories.<br>\n(Edit: this only gives *-polycategories, not *-autonomous categories.)</p>",
        "id": 194972531,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587580161
    },
    {
        "content": "<p>if P and Q are hom functors for 2 categories, then the morphisms between them are gonna be adjunctions :o</p>",
        "id": 194972569,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277342\">Robin Piedeleu</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972218\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972218\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277391\">Cole Comfort</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\">said</a>:</p>\n<blockquote>\n<p>Anyway, I'd like to see what happens when we do this game to Set.  I guess <em>one</em> way to think about it is to learn how to draw valid string diagrams with caps and cups in (the star-autonomous envelope of) Set, and learn to work with them, and get some intuition for them.</p>\n</blockquote>\n<p>In a *-autonomous category (or more generally, a linearly distributive category) there is a tractable algorithm for checking the validity of proof nets.  I wonder if there is such a way to check if a net in the envelope is in the image of the embedding.</p>\n</blockquote>\n<p>There are correctness criteria for intuitionistic proof nets, by Lamarche, I believe.</p>\n</blockquote>\n<p>If mean a correctness result for monoidal closed categories using the string diagrams of intuitionistic proof nets, if I understood the talk correctly.  Could one not form a proof net in the envelope which does not correspond to a morphism in the monoidal closed category.</p>",
        "id": 194972687,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1587580236
    },
    {
        "content": "<p>it does seem like the chu construction might naturally lend itself to double categories—anyone know about that?</p>",
        "id": 194972754,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277391\">@Cole Comfort</span> mike said that the embedding was fully faithful, so it just comes down to whether the domain &amp; codomain are objects in the image of the embedding</p>",
        "id": 194972876,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580323
    },
    {
        "content": "<p>Hey, <em>I</em> was gonna say that.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 194972968,
        "sender_full_name": "John Baez",
        "timestamp": 1587580375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972754\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972754\">said</a>:</p>\n<blockquote>\n<p>it does seem like the chu construction might naturally lend itself to double categories—anyone know about that?</p>\n</blockquote>\n<p>Mike Shulman did that (even poly double category) ^_^<br>\n<a href=\"https://arxiv.org/pdf/1806.06082.pdf\" title=\"https://arxiv.org/pdf/1806.06082.pdf\">https://arxiv.org/pdf/1806.06082.pdf</a></p>",
        "id": 194972970,
        "sender_full_name": "Nicolas Blanco",
        "timestamp": 1587580377
    },
    {
        "content": "<p>yeah lol i was ctrl+f'ing \"double\" on the nlab page for chu construction while typing that in here and i found a thing but i couldnt tell if it was what i was looking for <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 194973045,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580416
    },
    {
        "content": "<p>wait omg i remember googling a while back about whether multivariable adjunctions were a thing and i think i almost landed on an ncatcafe page about something related to this o_o</p>",
        "id": 194973153,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580451
    },
    {
        "content": "<p>neat</p>",
        "id": 194973177,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580459
    },
    {
        "content": "<p>oh jeez this looks like a rabbit hole</p>",
        "id": 194973384,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580548
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194973153\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194973153\">said</a>:</p>\n<blockquote>\n<p>wait omg i remember googling a while back about whether multivariable adjunctions were a thing and i think i almost landed on an ncatcafe page about something related to this o_o</p>\n</blockquote>\n<p>Indeed multivariable adjunctions are important for polycategories. The 2-polycategory MVAdj is analogous to the 2-category Adj. In particular multivariable adjunctions are profunctors representable in each variables.</p>",
        "id": 194973935,
        "sender_full_name": "Nicolas Blanco",
        "timestamp": 1587580786
    },
    {
        "content": "<p>i should learn about polycategories sometime</p>",
        "id": 194974045,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580830
    },
    {
        "content": "<p>they seem pleasant</p>",
        "id": 194974064,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587580840
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277391\">Cole Comfort</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\">said</a>:</p>\n<blockquote>\n<p>Anyway, I'd like to see what happens when we do this game to Set.  I guess <em>one</em> way to think about it is to learn how to draw valid string diagrams with caps and cups in (the star-autonomous envelope of) Set, and learn to work with them, and get some intuition for them.</p>\n</blockquote>\n<p>In a *-autonomous category (or more generally, a linearly distributive category) there is a tractable algorithm for checking the validity of proof nets.  I wonder if there is such a way to check if a net in the envelope is in the image of the embedding.</p>\n</blockquote>\n<p>The embedding given by the result is full, so as long as the net depicts a morphism between objects in the image, it's in the image too, no?</p>",
        "id": 194974274,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1587580934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> thanks!</p>",
        "id": 194974304,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587580953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277285\">Martti Karvonen</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194974274\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194974274\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277391\">Cole Comfort</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194972061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194971451\">said</a>:</p>\n<blockquote>\n<p>Anyway, I'd like to see what happens when we do this game to Set.  I guess <em>one</em> way to think about it is to learn how to draw valid string diagrams with caps and cups in (the star-autonomous envelope of) Set, and learn to work with them, and get some intuition for them.</p>\n</blockquote>\n<p>In a *-autonomous category (or more generally, a linearly distributive category) there is a tractable algorithm for checking the validity of proof nets.  I wonder if there is such a way to check if a net in the envelope is in the image of the embedding.</p>\n</blockquote>\n<p>The embedding given by the result is full, so as long as the net depicts a morphism between objects in the image, it's in the image too, no?</p>\n</blockquote>\n<p>Yes, I realize, this now</p>",
        "id": 194974331,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1587580979
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295673\">@Aleks Kissinger</span>  - sorry, that was the wrong talk.  Zoom is still \"processing\".</p>",
        "id": 194974408,
        "sender_full_name": "John Baez",
        "timestamp": 1587581025
    },
    {
        "content": "<p>haha, okay. i was confused when your message vanished. :)</p>\n<p>i think there is a way you can live-stream on youtube in parallel w Zoom, then once the stream is over it stays as a normal video. however i'm not (yet) in possession of the techical know-how to do this</p>",
        "id": 194974650,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587581135
    },
    {
        "content": "<p>According to <span class=\"user-mention\" data-user-id=\"275989\">@Paolo Perrone</span> YouTube allows this when your channel has at least 1000 subscribers.</p>",
        "id": 194974796,
        "sender_full_name": "John Baez",
        "timestamp": 1587581199
    },
    {
        "content": "<p>He's doing it for the MIT seminar.</p>",
        "id": 194974822,
        "sender_full_name": "John Baez",
        "timestamp": 1587581212
    },
    {
        "content": "<p>Maybe I should tell everyone on Twitter to subscribe to our channel.... I hadn't thought it was worthwhile, but maybe now I do.</p>",
        "id": 194974903,
        "sender_full_name": "John Baez",
        "timestamp": 1587581259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194969868\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194969868\">said</a>:</p>\n<blockquote>\n<p>Among other things this talk somehow made proof nets seem more approachable than ever before, to me at least!</p>\n</blockquote>\n<p>how much sequent calculus do you know?</p>",
        "id": 194975115,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581364
    },
    {
        "content": "<p>No more than strictly necessary, I guess.</p>",
        "id": 194975139,
        "sender_full_name": "John Baez",
        "timestamp": 1587581382
    },
    {
        "content": "<p>because if you know your sequent calculus, proof nets should be very appealing once you get the idea</p>",
        "id": 194975142,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581383
    },
    {
        "content": "<p>John, you and I ought to talk about proof nets some time.</p>",
        "id": 194975337,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1587581491
    },
    {
        "content": "<p>I would be really happy if I could understand Gentzen's proof of the consistency of Peano arithmetic using \"cut elimination\" and other things.  (Induction up to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ϵ</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\epsilon_0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the only part I really get!)</p>",
        "id": 194975339,
        "sender_full_name": "John Baez",
        "timestamp": 1587581491
    },
    {
        "content": "<p>cut elimination is cool :)</p>",
        "id": 194975378,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581514
    },
    {
        "content": "<p>Okay, <span class=\"user-mention\" data-user-id=\"277611\">@Todd Trimble</span>.  That sounds vaguely threatening.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>   But I know it's not.</p>",
        "id": 194975389,
        "sender_full_name": "John Baez",
        "timestamp": 1587581522
    },
    {
        "content": "<p>I get the vague idea of cut elimination.</p>",
        "id": 194975446,
        "sender_full_name": "John Baez",
        "timestamp": 1587581547
    },
    {
        "content": "<p>That is, I vaguely get the idea of cut elimination.</p>",
        "id": 194975457,
        "sender_full_name": "John Baez",
        "timestamp": 1587581558
    },
    {
        "content": "<p>although personally, i only really appreciated it once i grasped the sort of organizational principles of natural deduction, of sequent calculus, and how they were different and related</p>",
        "id": 194975518,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581604
    },
    {
        "content": "<p>Somehow sources that talk about Gentzen's proof of the consistency of PA often shy away from laying out the whole proof... I get the feeling that it's really complicated.</p>",
        "id": 194975562,
        "sender_full_name": "John Baez",
        "timestamp": 1587581636
    },
    {
        "content": "<p>i think gentzen's proof of cut eliminiation goes through a mix rule to account for contraction</p>",
        "id": 194975634,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581660
    },
    {
        "content": "<p>you can't really do that in, say, linear logic, and it gets considerably trickier</p>",
        "id": 194975657,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581677
    },
    {
        "content": "<p>I get the basic idea of the sequent calculus and how it's different from natural deduction.</p>",
        "id": 194975683,
        "sender_full_name": "John Baez",
        "timestamp": 1587581690
    },
    {
        "content": "<p>Anyway, yes, I'd someday like a slow and patient explanation of proof nets, with tons of pictures - this thing Mike said is better than anything I'd seen so far, or at least it <em>felt</em> better.</p>",
        "id": 194975770,
        "sender_full_name": "John Baez",
        "timestamp": 1587581745
    },
    {
        "content": "<p>But it would really \"clinch the deal\" if after a lot of work I understood Gentzen's proof of the consistency of PA.</p>",
        "id": 194975863,
        "sender_full_name": "John Baez",
        "timestamp": 1587581775
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 194975877,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581787
    },
    {
        "content": "<p>oh, by the way—theres a thing called logitext you can use to do sequent calculus derivations in your browser, but it doesnt support linear logic or gentzen's LJ/LK, so i made my own version <a href=\"https://github.com/sarahzrf/sequents\" title=\"https://github.com/sarahzrf/sequents\">https://github.com/sarahzrf/sequents</a></p>\n<p>ive found it super useful for doing derivations when i need to develop my intuition</p>",
        "id": 194976149,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587581906
    },
    {
        "content": "<p>Okay, <span class=\"user-mention\" data-user-id=\"295673\">@Aleks Kissinger</span> , I think this one is for real:</p>\n<p><a href=\"https://ucr.zoom.us/rec/share/2uJ2JJX53GdJYLeW8maCfv8_HNzXeaa8g3AYq_AMy0fmnGVIynGw4BEb_UzBX6c6?startTime=1587573842000\" title=\"https://ucr.zoom.us/rec/share/2uJ2JJX53GdJYLeW8maCfv8_HNzXeaa8g3AYq_AMy0fmnGVIynGw4BEb_UzBX6c6?startTime=1587573842000\">https://ucr.zoom.us/rec/share/2uJ2JJX53GdJYLeW8maCfv8_HNzXeaa8g3AYq_AMy0fmnGVIynGw4BEb_UzBX6c6?startTime=1587573842000</a></p>",
        "id": 194976373,
        "sender_full_name": "John Baez",
        "timestamp": 1587582005
    },
    {
        "content": "<p>The show starts around 20 minutes or so...</p>",
        "id": 194976529,
        "sender_full_name": "John Baez",
        "timestamp": 1587582093
    },
    {
        "content": "<p>do i need a password?</p>",
        "id": 194977545,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587582612
    },
    {
        "content": "<p>You shouldn't - are you stuck?</p>",
        "id": 194977790,
        "sender_full_name": "John Baez",
        "timestamp": 1587582749
    },
    {
        "content": "<p>I guess this plan to do things quicker than usual isn't much quicker...</p>",
        "id": 194977864,
        "sender_full_name": "John Baez",
        "timestamp": 1587582793
    },
    {
        "content": "<p>The next approach is to get the video here:</p>\n<p><a href=\"http://math.ucr.edu/home/baez/mathematical/ACTUCR/Shulman_Star-Autonomous_Envelopes_original.mp4\" title=\"http://math.ucr.edu/home/baez/mathematical/ACTUCR/Shulman_Star-Autonomous_Envelopes_original.mp4\">http://math.ucr.edu/home/baez/mathematical/ACTUCR/Shulman_Star-Autonomous_Envelopes_original.mp4</a></p>",
        "id": 194978432,
        "sender_full_name": "John Baez",
        "timestamp": 1587583082
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/jcOxUshrR38i-CS_Sed02Vm3/Screenshot-from-2020-04-22-20-17-45.png\" title=\"Screenshot-from-2020-04-22-20-17-45.png\">Screenshot-from-2020-04-22-20-17-45.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/jcOxUshrR38i-CS_Sed02Vm3/Screenshot-from-2020-04-22-20-17-45.png\" title=\"Screenshot-from-2020-04-22-20-17-45.png\"><img src=\"/user_uploads/21317/jcOxUshrR38i-CS_Sed02Vm3/Screenshot-from-2020-04-22-20-17-45.png\"></a></div><p>looks like this ^^</p>",
        "id": 194978481,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587583095
    },
    {
        "content": "<p>That last link works for me</p>",
        "id": 194978578,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1587583148
    },
    {
        "content": "<p>second link works!</p>",
        "id": 194978586,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587583150
    },
    {
        "content": "<p>Oh, this seems to be the password:</p>\n<p>5p!*u3$@</p>",
        "id": 194978592,
        "sender_full_name": "John Baez",
        "timestamp": 1587583152
    },
    {
        "content": "<p>That should let you livestream it, maybe more easily than the version on my website.</p>",
        "id": 194978634,
        "sender_full_name": "John Baez",
        "timestamp": 1587583179
    },
    {
        "content": "<p>(I never do things this way... I usually take my time and put the videos on YouTube...)</p>",
        "id": 194978708,
        "sender_full_name": "John Baez",
        "timestamp": 1587583208
    },
    {
        "content": "<p>Just finished teaching, now going to each lunch.  Will be back in half an hour to chat.  In the meantime I've posted my \"slides\" at <a href=\"http://home.sandiego.edu/~shulman/papers/clsaut-act-ucr.pdf\" title=\"http://home.sandiego.edu/~shulman/papers/clsaut-act-ucr.pdf\">http://home.sandiego.edu/~shulman/papers/clsaut-act-ucr.pdf</a> .</p>",
        "id": 194980058,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587583809
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 194980196,
        "sender_full_name": "John Baez",
        "timestamp": 1587583882
    },
    {
        "content": "<p>Hello everyone!</p>",
        "id": 194984138,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587585718
    },
    {
        "content": "<p>Hi!</p>",
        "id": 194984510,
        "sender_full_name": "John Baez",
        "timestamp": 1587585908
    },
    {
        "content": "<p>So there were a bunch of questions already in this thread...</p>",
        "id": 194984537,
        "sender_full_name": "John Baez",
        "timestamp": 1587585923
    },
    {
        "content": "<blockquote>\n<p>it does seem like the chu construction might naturally lend itself to double categories—anyone know about that?</p>\n</blockquote>",
        "id": 194984566,
        "sender_full_name": "John Baez",
        "timestamp": 1587585947
    },
    {
        "content": "<p>Also:</p>\n<blockquote>\n<p>So I believe we're defining a 2-functor from [symmetric monoidal closed categories] to [star-autonomous categories, but I'm having trouble finding this in the paper.</p>\n<p>Does this seem right; would this be a left 2-adjoint?</p>\n</blockquote>",
        "id": 194984700,
        "sender_full_name": "John Baez",
        "timestamp": 1587586010
    },
    {
        "content": "<p>I see there was one question about cartesian closed categories.  John is right that when you start with a cartesian closed category, you end up embedding it in a *-autonomous one whose tensor is no longer cartesian.  However, you can do a bit better than this: although I didn't mention it in the talk, in the paper I also proved that you can choose the embedding to preserve any given set of nonempty limits and colimits that exist in C.  So if you start from a cartesian closed category and choose the embedding to also preserve binary products, then for objects A and B <em>in the image of the embedding</em>, the tensor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊠</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\boxtimes B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin amsrm\">⊠</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> will still be a cartesian product in the envelope.  But it won't be the case for objects that aren't in the image of the embedding, and the unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">⊤</mi></mrow><annotation encoding=\"application/x-tex\">\\top</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">⊤</span></span></span></span> won't generally be terminal in the envelope.</p>",
        "id": 194984728,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586026
    },
    {
        "content": "<p>That's nice!   I was wondering what your construction would give in the case of (Set, x), and now I'm wondering that about this new \"improved\" version too.</p>",
        "id": 194984889,
        "sender_full_name": "John Baez",
        "timestamp": 1587586099
    },
    {
        "content": "<p>Yes, it's interesting to see explicitly what happens in Set, or more generally to a cartesian closed category.  I worked this out in some more detail at one point, let me see if I can reconstruct it.</p>",
        "id": 194984951,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586134
    },
    {
        "content": "<p>But first to reply to the other questions: as was pointed out by someone else, the Chu construction is indeed naturally a double category, in which the other kind of morphism is covariant in <em>both</em> components.  This is sketched (and used!) in the paper; more details (along with the 2-Chu construction) are in my other paper <a href=\"http://tac.mta.ca/tac/volumes/35/4/35-04abs.html\" title=\"http://tac.mta.ca/tac/volumes/35/4/35-04abs.html\">http://tac.mta.ca/tac/volumes/35/4/35-04abs.html</a> .</p>",
        "id": 194985139,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586220
    },
    {
        "content": "<p>It's very finicky, since the association between derivations and ordinals is a bit wrong: you get some \"off by 2\" errors at places. Obviously it's spelled out in all its gory in Troelstra &amp; Schwichtenberg poorly named \"Basic Proof Theory\"</p>",
        "id": 194985478,
        "sender_full_name": "Cody Roux",
        "timestamp": 1587586426
    },
    {
        "content": "<p>I have a feeling Cody's comment is a response to some earlier stuff about Gentzen's proof, not Mike's latest comment!  (I always make this sort of slip myself.)</p>",
        "id": 194985611,
        "sender_full_name": "John Baez",
        "timestamp": 1587586490
    },
    {
        "content": "<p>As for functoriality, the envelope is <em>not</em> the left 2-adjoint from closed symmetric monoidal categories to *-autonomous ones.  I believe it is a functor, but the pieces it's put together from have different universal properties.  First, the construction of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> is the left adjoint from multicategories to *-polycategories (polycategories equipped with strictly involutive duals).  Next we forget the *-structure to get a polycategory, then apply Hyland's \"modules\" functor -- I'm not sure what sort of universal property that has.  Finally we apply the Chu construction, which is a <em>right</em> adjoint from csmc's with specified objects (or more generally \"sub-unary polycategories\") to *-autonomous categories (or more generally *-polycategories).  So the envelope is a composite of left adjoints, right adjoints, and functors without any obvious adjoint.</p>",
        "id": 194985712,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586553
    },
    {
        "content": "<p>However, we can <em>use</em> the envelope to show that the unit of the free-forgetful adjunction between closed symmetric monoidal categories and *-autonomous ones is <em>also</em> fully faithful.  This is sometimes called a \"full completeness\" result.  This is also in the paper: we use an idea of Lafont involving Artin gluing, combined with the <a href=\"https://ncatlab.org/nlab/show/double+gluing\" title=\"https://ncatlab.org/nlab/show/double+gluing\">double gluing</a> construction for *-autonomous categories.</p>",
        "id": 194986066,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586722
    },
    {
        "content": "<p>(Hmm, looks like maybe the 2-hour delay lost most of the audience?  Sorry.)</p>",
        "id": 194986262,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586813
    },
    {
        "content": "<p>i've got a question :)</p>",
        "id": 194986296,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587586834
    },
    {
        "content": "<p>Please!</p>",
        "id": 194986316,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586846
    },
    {
        "content": "<p>By the way, is this double gluing construction the same as the one that appears in your paper on Reedy model category structures?</p>",
        "id": 194986331,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587586853
    },
    {
        "content": "<p>(just finished you talk, in recorded form. thanks for the nice talk btw)</p>",
        "id": 194986334,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587586854
    },
    {
        "content": "<p>if you do this for some concrete category (people already discussed Set), does the co-tensor in the *-autonomous envelope tell you something, or is it just a purely formal thing?</p>",
        "id": 194986484,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587586940
    },
    {
        "content": "<p>I think someone previously asked what the envelope looks like for vector spaces over a field, I would be interested in knowing this.</p>",
        "id": 194986570,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1587586987
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span> No, it's different.</p>",
        "id": 194986577,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587586991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986066\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986066\">said</a>:</p>\n<blockquote>\n<p>However, we can <em>use</em> the envelope to show that the unit of the free-forgetful adjunction between closed symmetric monoidal categories and *-autonomous ones is <em>also</em> fully faithful.  This is sometimes called a \"full completeness\" result.  This is also in the paper: we use an idea of Lafont involving Artin gluing, combined with the <a href=\"https://ncatlab.org/nlab/show/double+gluing\" title=\"https://ncatlab.org/nlab/show/double+gluing\">double gluing</a> construction for *-autonomous categories.</p>\n</blockquote>\n<p>How does one see that  such an adjunction exists in the first place?</p>",
        "id": 194986606,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1587587008
    },
    {
        "content": "<p>maybe \"tell you something\" is a bit vague. i guess what i'm getting at is the par is always hard to get some kind of \"computational\" interpretation for, so i'm wondering if there is some hope coming from doing your construction to familiar categories</p>",
        "id": 194986781,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587587103
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277285\">Martti Karvonen</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986606\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986606\">said</a>:</p>\n<blockquote>\n<p>How does one see that  such an adjunction exists in the first place?</p>\n</blockquote>\n<p>By 2-categorical abstract nonsense.  (-:  Because closedness and *-autonomy involve contravariant operations, the 2-categories involved have to be restricted to have only invertible 2-cells.  But then both are described by finitary 2-monads on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mi>g</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Cat}_g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> (the 2-category of categories, functors, and natural isomorphisms), and 2-monad theory implies that the forgetful functor between the categories of algebras and pseudomorphisms has a left biadjoint.</p>",
        "id": 194986827,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587587133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986066\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986066\">said</a>:</p>\n<blockquote>\n<p>However, we can <em>use</em> the envelope to show that the unit of the free-forgetful adjunction between closed symmetric monoidal categories and *-autonomous ones is <em>also</em> fully faithful.  This is sometimes called a \"full completeness\" result.  This is also in the paper: we use an idea of Lafont involving Artin gluing, combined with the <a href=\"https://ncatlab.org/nlab/show/double+gluing\" title=\"https://ncatlab.org/nlab/show/double+gluing\">double gluing</a> construction for *-autonomous categories.</p>\n</blockquote>\n<p>Hi. Thanks for the really nice talk! Could you elaborate on this quoted point, please? Are your saying that you can use the envelope construction to show that another construction of a *autonomous category from a csmc (namely, the adjoint to the forgetful functor) is also an embedding? Could you give some brief outline of how this proof goes, please?</p>",
        "id": 194986853,
        "sender_full_name": "Rui Soares Barbosa",
        "timestamp": 1587587151
    },
    {
        "content": "<p>It sounds like a lot of people would like to see the the construction compiled out more concretely.  First let's look at the two representable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>-modules associated to an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∈</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">A\\in \\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>.  We have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>よ</mtext><mi>A</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">;</mo><mi mathvariant=\"normal\">Δ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∗</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">;</mo><mi mathvariant=\"normal\">Δ</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">よ_A(\\Gamma;\\Delta) = \\ast\\mathcal{C}(\\Gamma; \\Delta,A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">Γ</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mopen\">(</span><span class=\"mord\">Γ</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">;</mo><mi mathvariant=\"normal\">Δ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∗</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">,</mo><mi>A</mi><mo separator=\"true\">;</mo><mi mathvariant=\"normal\">Δ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{}_Aよ(\\Gamma;\\Delta) = \\ast\\mathcal{C}(\\Gamma,A; \\Delta)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mopen\">(</span><span class=\"mord\">Γ</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mopen\">(</span><span class=\"mord\">Γ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 194987212,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587587299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986827\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986827\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277285\">Martti Karvonen</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986606\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986606\">said</a>:</p>\n<blockquote>\n<p>How does one see that  such an adjunction exists in the first place?</p>\n</blockquote>\n<p>By 2-categorical abstract nonsense.  (-:  Because closedness and *-autonomy involve contravariant operations, the 2-categories involved have to be restricted to have only invertible 2-cells.  But then both are described by finitary 2-monads on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mi>g</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Cat}_g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> (the 2-category of categories, functors, and natural isomorphisms), and 2-monad theory implies that the forgetful functor between the categories of algebras and pseudomorphisms has a left biadjoint.</p>\n</blockquote>\n<p>So the same reasoning should imply that there's a similar adjunction between closed SMCS and compact one's, right? It's just that the unit isn't full and faithful, unlike here.</p>",
        "id": 194987408,
        "sender_full_name": "Martti Karvonen",
        "timestamp": 1587587400
    },
    {
        "content": "<p>Because of the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>, the homset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">;</mo><mi mathvariant=\"normal\">Δ</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}(\\Gamma;\\Delta,A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mopen\">(</span><span class=\"mord\">Γ</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span></span></span></span> is nonempty only when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span></span></span></span> contains no formal duals and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span></span></span></span> consists entirely of formal duals, in which case we are just looking at morphisms into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> out of some tensor product of objects in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>.  That is, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>よ</mtext><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">よ_A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is essentially just the presheaf represented by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> as a multicategory.</p>",
        "id": 194987473,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587587412
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"277285\">@Martti Karvonen</span> Yes.)</p>",
        "id": 194987540,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587587454
    },
    {
        "content": "<p>On the other hand, the homset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">,</mo><mi>A</mi><mo separator=\"true\">;</mo><mi mathvariant=\"normal\">Δ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}(\\Gamma,A; \\Delta)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mopen\">(</span><span class=\"mord\">Γ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Δ</span><span class=\"mclose\">)</span></span></span></span> is nonempty only when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo separator=\"true\">,</mo><msup><mi mathvariant=\"normal\">Δ</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\Gamma,\\Delta^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8831359999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">Γ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> contains exactly one formal dual, say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">B^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>, in which case it reduces to a homset <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Φ</mi><mo separator=\"true\">,</mo><mi>A</mi><mo separator=\"true\">;</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}(\\Phi,A ; B)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mopen\">(</span><span class=\"mord\">Φ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> as a multicategory.  So <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext></mrow><annotation encoding=\"application/x-tex\">{}_Aよ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span></span></span></span> is the \"covariant representable at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> as a multicategory\".  And since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> is closed, a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi><mo>⊗</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi \\otimes A \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">Φ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is equivalently a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mo stretchy=\"false\">[</mo><mi mathvariant=\"normal\">Φ</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">A \\to [\\Phi,B]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">Φ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span></span></span></span>.  So just as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>よ</mtext><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">よ_A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> knows about morphisms with codomain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> and with domain decomposed as a tensor product, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext></mrow><annotation encoding=\"application/x-tex\">{}_Aよ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span></span></span></span> knows about morphisms with domain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> and with codomain decomposed as an iterated internal-hom.</p>",
        "id": 194987972,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587587659
    },
    {
        "content": "<p>The image of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> in the envelope consists of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>よ</mtext><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">よ_A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext></mrow><annotation encoding=\"application/x-tex\">{}_Aよ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span></span></span></span> together with the obvious pairing between them.  So intuitively, it consists of both \"representable functors\" at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>, in a multi/poly-categorical sense.  This is reminiscent of the <a href=\"https://ncatlab.org/nlab/show/Isbell+envelope\" title=\"https://ncatlab.org/nlab/show/Isbell+envelope\">https://ncatlab.org/nlab/show/Isbell+envelope</a> (the reuse of the term \"envelope\" is presumably not a coincidence!) in which <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> embeds via its ordinary pair of representable functors and the pairing between them.</p>",
        "id": 194988215,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587587790
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194985611\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194985611\">said</a>:</p>\n<blockquote>\n<p>I have a feeling Cody's comment is a response to some earlier stuff about Gentzen's proof, not Mike's latest comment!  (I always make this sort of slip myself.)</p>\n</blockquote>\n<p>Yes I forgot to quote your earlier comment, I'm embarrassed to say. Also when I started writing it, it was less high up, but then I got distracted by a phone call...</p>",
        "id": 194988256,
        "sender_full_name": "Cody Roux",
        "timestamp": 1587587828
    },
    {
        "content": "<p>A general object of the envelope of a polycategory <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{P}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span></span></span></span></span> consists of a pair of modules <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>M</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup></mrow><annotation encoding=\"application/x-tex\">M^+,M^-</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9657709999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span></span></span></span> and a pairing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>M</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"script\">P</mi></mrow><annotation encoding=\"application/x-tex\">(M^+,M^-) \\to \\mathcal{P}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span></span></span></span></span>.  I like to think of the sets <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>M</mi><mo>+</mo></msup><mo stretchy=\"false\">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>m</mi></msub><mo separator=\"true\">;</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M^+(A_1,\\dots,A_m;B_1,\\dots,B_n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> as encoding all the ways to \"produce <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>\" while consuming some specified inputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and parallely producing some other specified outputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">B_j</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, and similarly <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>M</mi><mo>−</mo></msup></mrow><annotation encoding=\"application/x-tex\">M^-</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span></span></span></span> encodes all the ways to \"consume <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>\".  For the representable pair <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mtext>よ</mtext><mi>A</mi></msub><mo separator=\"true\">,</mo><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(よ_A, {}_Aよ)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mclose\">)</span></span></span></span>, we interpret \"producing\" and \"consuming\" in the obvious way in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{P}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span></span></span></span></span> itself.</p>",
        "id": 194988751,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588110
    },
    {
        "content": "<p>The pairing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>M</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"script\">P</mi></mrow><annotation encoding=\"application/x-tex\">(M^+,M^-)\\to\\mathcal{P}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span></span></span></span></span> tells you what happens if you \"produce <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>\" and then \"consume\" what was produced.</p>",
        "id": 194988830,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588153
    },
    {
        "content": "<p>Saying that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> respects the tensor in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{P}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span></span></span></span></span> says that when producing or consuming <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, having an input of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊠</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\boxtimes B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin amsrm\">⊠</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is the same as having two inputs of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, and similarly for the cotensor.  In particular, saying that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> respects the formal cotensors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msup><mi>A</mi><mo>∗</mo></msup><mtext>⅋</mtext><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">[A,B] = A^* ⅋ B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\">⅋</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> says that when producing or consuming <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, having an output of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[A,B]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span></span></span></span> is the same as having an input of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> and an output of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>",
        "id": 194989111,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588338
    },
    {
        "content": "<p>(I'm building up to trying to answer <span class=\"user-mention\" data-user-id=\"295673\">@Aleks Kissinger</span> 's question about cotensors in the envelope here.)</p>",
        "id": 194989159,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588363
    },
    {
        "content": "<p>The formula for cotensors in a Chu construction is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>M</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mtext>⅋</mtext><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>N</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><msup><mi>M</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><msup><mi>N</mi><mo>+</mo></msup><mo stretchy=\"false\">]</mo><msub><mo>×</mo><mrow><mo stretchy=\"false\">[</mo><msup><mi>M</mi><mo>−</mo></msup><mo>⊗</mo><msup><mi>N</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">]</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mi>N</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>+</mo></msup><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo>⊗</mo><msup><mi>N</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(M^+,M^-) ⅋ (N^+,N^-) = ([M^-,N^+] \\times_{[M^-\\otimes N^-,d]} [N^-,M^+] , M^- \\otimes N^-)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">⅋</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.126531em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7026642857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">⊗</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7026642857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">d</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 194989328,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588458
    },
    {
        "content": "<p>(....digesting....)</p>",
        "id": 194989852,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587588724
    },
    {
        "content": "<p>If we compile that out for modules, using the definitions of the internal-hom for modules (which I didn't mention in the talk), we see that to produce <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>M</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mtext>⅋</mtext><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>N</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(M^+,M^-)⅋(N^+,N^-)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">⅋</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> using inputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span></span></span></span> and outputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span></span></span></span>, we have to give, for every way of consuming <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> using inputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Φ</span></span></span></span> and outputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\Psi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ψ</span></span></span></span>, a way of producing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span> using inputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">Γ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi,\\Gamma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">Φ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Γ</span></span></span></span> and outputs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">Ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta,\\Psi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">Δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">Ψ</span></span></span></span>, and dually, that are natural and compatible.</p>",
        "id": 194989885,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588750
    },
    {
        "content": "<p>This is quite a mouthful, but I think it has a sort of dialoguey flavor: we're trying to produce <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span> in \"parallel\", so whenever in the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>-thread we encounter a \"user\" who claims to be able to consume an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, we can turn around and use that consumption as a way to produce an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span> for any user of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span>-thread.  Of course that much is true in any Chu construction; Hyland's envelope enhances it by carrying around the inputs and outputs.</p>",
        "id": 194990122,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587588891
    },
    {
        "content": "<p>i guess you can say the same thing about representables, replacing \"producing/consuming M/N\" with objects in the category we started with?</p>",
        "id": 194990309,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587588986
    },
    {
        "content": "<p>Exactly,  But I believe it's not very interesting when applied to representables <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mtext>よ</mtext><mi>A</mi></msub><mo separator=\"true\">,</mo><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(よ_A,{}_A よ)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mclose\">)</span></span></span></span> in the envelope of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\ast \\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>.  Because the only way to consume the representable at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> is to have an output object, say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, and a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">A\\to X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.  But there is no way in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\ast\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> to <em>produce</em> the representable at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> that <em>also</em> has another output object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.  So it seems that there is no way of producing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mtext>よ</mtext><mi>A</mi></msub><mo separator=\"true\">,</mo><msub><mrow></mrow><mi>A</mi></msub><mtext>よ</mtext><mo stretchy=\"false\">)</mo><mtext>⅋</mtext><mo stretchy=\"false\">(</mo><msub><mtext>よ</mtext><mi>B</mi></msub><mo separator=\"true\">,</mo><msub><mrow></mrow><mi>B</mi></msub><mtext>よ</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(よ_A,{}_A よ) ⅋ (よ_B,{}_B よ)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mclose\">)</span><span class=\"mord\">⅋</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord cjk_fallback\">よ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">よ</span><span class=\"mclose\">)</span></span></span></span>.  I'm not sure whether that's exactly right, but I do remember from the last time I thought about it that ⅋s of representables were not very interesting.</p>",
        "id": 194990512,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587589107
    },
    {
        "content": "<p>However, it seems that there are nontrivial ways to <em>consume</em> ⅋s of representables as long as we are willing to produce multiple outputs, say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, by giving a pair of morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">A\\to X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">B\\to Y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> (or vice versa).  (This uses the tensor product of modules, which again I didn't describe in the talk.)  This sort of makes sense to me if I think of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> as a \"sequential language\" that's being \"imported\" into a world with parallelism.</p>",
        "id": 194990777,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587589250
    },
    {
        "content": "<p>What was the original inspiration for this development, if you don't mind my asking a soft question? Was the motivation originally string diagrams, or had you spotted that Hyland's construction could be modified in this way beforehand, or something else entirely?</p>",
        "id": 194991035,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587589396
    },
    {
        "content": "<p>And now to come back to an earlier question:<br>\n<span class=\"user-mention silent\" data-user-id=\"295800\">Rui Soares Barbosa</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986853\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194986853\">said</a>:</p>\n<blockquote>\n<p>Are you saying that you can use the envelope construction to show that another construction of a *autonomous category from a csmc (namely, the adjoint to the forgetful functor) is also an embedding? Could you give some brief outline of how this proof goes, please?</p>\n</blockquote>\n<p>Yes, that's right.  Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">v</mi></mrow><mi mathvariant=\"script\">C</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Env}_{\\mathcal{C}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">E</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">v</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is *-autonomous, the embedding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mo>↪</mo><msub><mrow><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">v</mi></mrow><mi mathvariant=\"script\">C</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} \\hookrightarrow \\mathrm{Env}_{\\mathcal{C}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">E</span><span class=\"mord mathrm\">n</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">v</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> factors through the free *-autonomous category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span> generated by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>.  Now we do a version of Artin gluing along this induced functor of *-autonomous categories, and show that the functor from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span> lifts to the gluing category.  Therefore, the universal property of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span> gives a section of the projection from the gluing category, from which we can extract full-faithfulness of the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mo>→</mo><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}\\to\\mathcal{D}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span>.  This general idea of using gluing is due to Lafont (perhaps in an unpublished thesis?), and was applied to \"double gluing\" for *-autonomous categories by Hyland-Schalk and Hassei.</p>",
        "id": 194991517,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587589657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> Personally, my original motivation <em>was</em> actually string diagrams!  I asked a MathOverflow question <a href=\"https://mathoverflow.net/q/343167/49\" title=\"https://mathoverflow.net/q/343167/49\">https://mathoverflow.net/q/343167/49</a> about embeding csmc's in *-autonomous categories and didn't get any answers, and started thinking about how to do it.</p>",
        "id": 194991699,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587589769
    },
    {
        "content": "<p>In fact I was motivated by one particular kind of \"string diagram\", the \"sharing graphs\" used in \"optimal evaluations\" for lambda-calculus, which are closely related to linear logic and *-autonomous categories.  I wanted to know whether they could be interpreted semantically in some *-autonomous category that would directly yield results about the original lambda-calculus for CCCs.  (I asked about this too at CStheory SE <a href=\"https://cstheory.stackexchange.com/q/45628/28847\" title=\"https://cstheory.stackexchange.com/q/45628/28847\">https://cstheory.stackexchange.com/q/45628/28847</a>.)  Unfortunately this result isn't enough for what I really wanted, which is for <em>each step</em> of the sharing-graph evaluation to have a semantic meaning: in addition to involving the exponentials , these graph manipulations seem to produce things that are not even proof nets, so there is still something to understand better there.</p>",
        "id": 194992002,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587589935
    },
    {
        "content": "<p>But I think having a nice string diagram calculus for csmc's should be useful in practice too.</p>",
        "id": 194992066,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587589980
    },
    {
        "content": "<p>Absolutely. Exponentially more expressive than smc's.</p>",
        "id": 194992301,
        "sender_full_name": "Christian Williams",
        "timestamp": 1587590127
    },
    {
        "content": "<blockquote>\n<p>exponentially</p>\n</blockquote>\n<p>I see what you did there! :D</p>",
        "id": 194992859,
        "sender_full_name": "Mike Stay",
        "timestamp": 1587590409
    },
    {
        "content": "<p>That's really interesting, thank you! It would be beautiful to be able to describe these sorts of results about optimal evaluations entirely categorically.</p>",
        "id": 194992900,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587590429
    },
    {
        "content": "<p>I have to go to a department meeting in a few minutes, but feel free to ask further questions; I'll come back to this thread later.</p>",
        "id": 194993186,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587590613
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 194997072,
        "sender_full_name": "John Baez",
        "timestamp": 1587593196
    },
    {
        "content": "<p>Actually, I have a question for you all.  How did the handwritten \"slides\" compare to slides made with LaTeX/beamer?  They were certainly much faster for me to make, especially with all the string diagram pictures, and if I'd had another hour to prepare I could easily have finished preparing them for the entire talk.  Plus it was nice to be able to easily write on them during the talk for emphasis.  So I'm tempted to go the same route in future e-seminars as well.  But I wonder how the experience was for the audience?</p>",
        "id": 195015142,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587612265
    },
    {
        "content": "<p>they were fairly nice</p>",
        "id": 195015320,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587612545
    },
    {
        "content": "<p>I also liked your slides, Mike. In some ways the part were you drew them on the fly was even easier to follow ...</p>",
        "id": 195016003,
        "sender_full_name": "Alexander Kurz",
        "timestamp": 1587613653
    },
    {
        "content": "<p>Your slides written on the fly worked well for me.</p>",
        "id": 195016136,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1587613884
    },
    {
        "content": "<p>Yes, writing things on the fly has at least one notable benefit, namely that of slowing things down to the pace of writing.  (-:</p>",
        "id": 195017017,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587614985
    },
    {
        "content": "<p>slowing you down is good. doodling and commenting is good too. i prefer to watch the strings draw themselves.</p>",
        "id": 195017930,
        "sender_full_name": "eric brunner",
        "timestamp": 1587616313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195015142\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195015142\">said</a>:</p>\n<blockquote>\n<p>Actually, I have a question for you all.  How did the handwritten \"slides\" compare to slides made with LaTeX/beamer? </p>\n</blockquote>\n<p>I liked them too. It's a nice compromise between a whiteboard talk, where it becomes a bit tedious if the speaker needs to draw something fairly elaborate, and slides.</p>",
        "id": 195030639,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587630229
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194976149\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194976149\">said</a>:</p>\n<blockquote>\n<p>so i made my own version <a href=\"https://github.com/sarahzrf/sequents\" title=\"https://github.com/sarahzrf/sequents\">https://github.com/sarahzrf/sequents</a></p>\n</blockquote>\n<p>This is great!</p>",
        "id": 195031604,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587630893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> I have a question on your question: What setup did you use to write directly onto Zoom while also having a webcam facing you? Was it PC + graphics tablet? (I did manage to mirror an iPad to a projector once, but it involved a lot of metaphorical string and duck tape)</p>",
        "id": 195045498,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1587640204
    },
    {
        "content": "<p>I think that hand-written slides are typically better than beamer slides, especially written or annotated on the fly: I liked them.</p>",
        "id": 195052232,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587644520
    },
    {
        "content": "<p>Thanks for the feedback everyone.  <span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> I used a Wacom One tablet, with the software xournal under ubuntu.  I got the Wacom back when we were all preparing for remote teaching, and have liked it very much for my zoom lectures; my impression is that it works much better than an iPad/Android tablet.</p>",
        "id": 195064412,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587650362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195015142\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195015142\">said</a>:</p>\n<blockquote>\n<p>Actually, I have a question for you all.  How did the handwritten \"slides\" compare to slides made with LaTeX/beamer?  They were certainly much faster for me to make, especially with all the string diagram pictures, and if I'd had another hour to prepare I could easily have finished preparing them for the entire talk.  Plus it was nice to be able to easily write on them during the talk for emphasis.  So I'm tempted to go the same route in future e-seminars as well.  But I wonder how the experience was for the audience?</p>\n</blockquote>\n<p>Handwriting is much better than slides imho. Slides always taste like canned material for me, and make me super sleepy. Witnessing a process in real time is definitely more engaging.</p>",
        "id": 195067275,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587651511
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195064412\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195064412\">said</a>:</p>\n<blockquote>\n<p>Thanks for the feedback everyone.  <span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> I used a Wacom One tablet, with the software xournal under ubuntu.  I got the Wacom back when we were all preparing for remote teaching, and have liked it very much for my zoom lectures; my impression is that it works much better than an iPad/Android tablet.</p>\n</blockquote>\n<p>A thing I recently set up consists in a webcam being placed above my desk, so you can see my hands and the surface. Then I just use a bunch of A3 paper and coloured markers to draw :D (I tried with a graphic tablet but it felt absolutely painful to use, so I resorted to more analog alternatives :P )</p>",
        "id": 195067378,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587651567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195067275\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195067275\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195015142\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195015142\">said</a>:</p>\n<blockquote>\n<p>Actually, I have a question for you all.  How did the handwritten \"slides\" compare to slides made with LaTeX/beamer?  They were certainly much faster for me to make, especially with all the string diagram pictures, and if I'd had another hour to prepare I could easily have finished preparing them for the entire talk.  Plus it was nice to be able to easily write on them during the talk for emphasis.  So I'm tempted to go the same route in future e-seminars as well.  But I wonder how the experience was for the audience?</p>\n</blockquote>\n<p>Handwriting is much better than slides imho. Slides always taste like canned material for me, and make me super sleepy. Witnessing a process in real time is definitely more engaging.</p>\n</blockquote>\n<p>hmm... maybe i should live-code for my talk then ;)</p>",
        "id": 195072411,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587653506
    },
    {
        "content": "<p>/s</p>",
        "id": 195072667,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587653587
    },
    {
        "content": "<p>Live coding is amazing! Btw we are livecoding on idris right now</p>",
        "id": 195072850,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587653655
    },
    {
        "content": "<p>I liked the approach of writing as you talked, <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>.  It's the social-distancing version of the mathematician's old-style chalk talk, which I've always liked better than slides <em>when done competently</em>.</p>",
        "id": 195100192,
        "sender_full_name": "John Baez",
        "timestamp": 1587666066
    },
    {
        "content": "<p>there's the rub</p>",
        "id": 195100227,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587666092
    },
    {
        "content": "<p>The only problem was that you seemed to be running out of time near the end, <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>, and since you had to rush off there wasn't time for discussions out loud on Zoom.  The written discussions here were great, but there's something fun (in my opinion) about hearing people <em>talk</em> about math.</p>",
        "id": 195100358,
        "sender_full_name": "John Baez",
        "timestamp": 1587666165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> Thanks for the feedback!  I would probably have done better time-wise if I'd had a chance to practice the talk in advance.  And I was sad to have to rush off afterwards too.</p>",
        "id": 195106125,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587669009
    },
    {
        "content": "<p>By the way, I'm scheduled to talk in the MIT categories seminar in a few weeks, and trying to decide what to talk about.  I suppose probably there is large overlap in the audiences for these two online seminars?</p>",
        "id": 195106223,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587669080
    },
    {
        "content": "<p>I think there's a very large overlap, though I must sadly admit I only have the energy to attend the ACT@UCR one, so I haven't been in that overlap.</p>",
        "id": 195106448,
        "sender_full_name": "John Baez",
        "timestamp": 1587669235
    },
    {
        "content": "<p>Also, everything is recorded and put on YouTube, so everyone who wants to see your first talk will.  For example, <span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> missed your talk but now he's <a href=\"https://twitter.com/_julesh_/status/1253263776205475842\" title=\"https://twitter.com/_julesh_/status/1253263776205475842\">excited about the video</a>.  So, you should probably only talk about the same thing if you plan to do better or highlight some other aspects.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/_julesh_/status/1253263776205475842\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/972424350736486401/RyVTQIgf_normal.jpg\"></a><p>I'm only 1/3 of the way through Mike Shulman's ACT@UCR seminar and my mind has already been extremely thoroughly blown by string diagrams for linearly distributive categories... I don't even know whether this is new or if it already existed and I missed it\n<a href=\"https://t.co/dvF5LMSdv5\" title=\"https://t.co/dvF5LMSdv5\">https://www.youtube.com/watch?v=5CjSu5hLtcw</a></p><span>- julesh (@_julesh_)</span></div></div>",
        "id": 195106694,
        "sender_full_name": "John Baez",
        "timestamp": 1587669361
    },
    {
        "content": "<p>Well, I could certainly plan to do better; you can always do something better the second time around.  But it probably wouldn't be that interesting to everyone who already saw or watched this talk if I just give a better version of it.  However, there's a lot in the paper that I didn't even mention this time, so I might consider coming at it from a different direction.  Thanks!</p>",
        "id": 195110519,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587671198
    },
    {
        "content": "<p>Yes, I think doing something a bit new would be great.  I think a lot of people (like me) loved your talk but didn't fully grasp all of it, so coming at the same material from a different angle would be interesting to a lot of us.</p>",
        "id": 195110750,
        "sender_full_name": "John Baez",
        "timestamp": 1587671307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> At times during your talk it seemed like you were \"pointing\" at some notation on your slides, but I couldn't work out where you were pointing. Some times I could see a \"pointing\" dot, but sometimes not. I don't know if anyone else had this problem...</p>",
        "id": 195130073,
        "sender_full_name": "Simon Burton",
        "timestamp": 1587682992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277321\">@Simon Burton</span> Thanks for that feedback.  I realized at the time that I was probably creating that issue, but didn't have the spare brainpower to solve it.  The software I'm using doesn't have a \"cursor\" other than a tiny dot -- although perhaps that may be configurable, I can look into it.  Of course one thing to do is to just circle or underline things, but when I was on the pre-prepared \"slides\" I somehow felt reluctant to do that; I'm not sure why.  (-:</p>",
        "id": 195139729,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587693610
    },
    {
        "content": "<p>Speaking of software, what I would really like is a sketchpad/whiteboard program much like xournal, but augmented with beamer-like selective display features.  That is, I'd like to be able to draw a slide by hand, then select part of it and say \"hide this part first and display it on the second appearance\" and so on, and then \"compile\" such a thing to a PDF for the presentation.  I don't suppose anyone knows of such a piece of software?</p>",
        "id": 195139823,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587693779
    },
    {
        "content": "<p>Hmm, maybe I could get something like that with xournal's \"layer\" feature.</p>",
        "id": 195146620,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587703701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195139823\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195139823\">said</a>:</p>\n<blockquote>\n<p>Speaking of software, what I would really like is a sketchpad/whiteboard program much like xournal, but augmented with beamer-like selective display features.  That is, I'd like to be able to draw a slide by hand, then select part of it and say \"hide this part first and display it on the second appearance\" and so on, and then \"compile\" such a thing to a PDF for the presentation.  I don't suppose anyone knows of such a piece of software?</p>\n</blockquote>\n<p>I've achieved something like this with powerpoint, but its handwriting (aka \"Windows Ink\") support is a bit clunky and I prefer to stick in Linux during my workday.</p>",
        "id": 195172083,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587725574
    },
    {
        "content": "<p>What I end up doing in practice is duplicating a page lots of times when I'm done with it, and start erasing stuff off earlier pages. But this is very brittle if you want change something on the slide</p>",
        "id": 195172198,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587725650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194989328\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194989328\">said</a>:</p>\n<blockquote>\n<p>The formula for cotensors in a Chu construction is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>M</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mtext>⅋</mtext><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>N</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><msup><mi>M</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><msup><mi>N</mi><mo>+</mo></msup><mo stretchy=\"false\">]</mo><msub><mo>×</mo><mrow><mo stretchy=\"false\">[</mo><msup><mi>M</mi><mo>−</mo></msup><mo>⊗</mo><msup><mi>N</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">]</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mi>N</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>+</mo></msup><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><msup><mi>M</mi><mo>−</mo></msup><mo>⊗</mo><msup><mi>N</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(M^+,M^-) ⅋ (N^+,N^-) = ([M^-,N^+] \\times_{[M^-\\otimes N^-,d]} [N^-,M^+] , M^- \\otimes N^-)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">⅋</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.126531em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7026642857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">⊗</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7026642857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">d</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.</p>\n</blockquote>\n<p>Can I point out that this actually comes from Dialectica? the Chu version can get away with  the trick of only considering co-extensional objects, so it does not need the pullback to be explicitly described.</p>",
        "id": 195192704,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1587737375
    },
    {
        "content": "<p>I'm not sure what you mean.  The Chu construction is not a special case of the Dialectica construction; as I explained in my paper comparing them, at the polycategorical level they're both instances of a general thing, but their representability conditions are different.</p>",
        "id": 195200005,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587740276
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195200005\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195200005\">said</a>:</p>\n<blockquote>\n<p>I'm not sure what you mean.  The Chu construction is not a special case of the Dialectica construction; as I explained in my paper comparing them, at the polycategorical level they're both instances of a general thing, but their representability conditions are different.</p>\n</blockquote>\n<p>Yes, of course the Chu construction is not a special case of the Dialectica construction. But as I wrote in the  paper  <a href=\"http://www.tac.mta.ca/tac/volumes/17/7/17-07.pdf\" title=\"http://www.tac.mta.ca/tac/volumes/17/7/17-07.pdf\">http://www.tac.mta.ca/tac/volumes/17/7/17-07.pdf</a> individual constructions can be compared. the 'par' of the Chu construction is obtained by a pullback of the corresponding par in Dialectica in the first component. However, because Chu is more symmetric than Dialectica, you do not need to use the pullback in your message above, you can simply use the other component, as while Dialectica maps as (f,F) and they don't need to be the same, Chu maps are (f,f*) and one determines the other.</p>",
        "id": 195216698,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1587747686
    },
    {
        "content": "<p>But if you're explaining the Chu construction to someone who doesn't already know about the Dialectica construction, saying that the Chu formula \"actually\" comes from (or more precisely, can be constructed from) the Dialectica construction is not, I think, helpful.  (-:</p>",
        "id": 195221129,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587749688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195221129\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195221129\">said</a>:</p>\n<blockquote>\n<p>But if you're explaining the Chu construction to someone who doesn't already know about the Dialectica construction, saying that the Chu formula \"actually\" comes from (or more precisely, can be constructed from) the Dialectica construction is not, I think, helpful.  (-:</p>\n</blockquote>\n<p>Well, I did enjoy the historic reconstruction of the Chu internal-hom!<br>\nJust watched your talk, very nice indeed! Many thanks! I have two complaints though:</p>\n<ol>\n<li>why don't you say smcc (symmetric monoidal closed category) like all the old people?</li>\n<li>You could/should have given the reference to Martin's envelope, right? <br>\nMore seriously, if I was giving a similar talk, I'd start from the logic and say that the reason I want to compute (string diagrams or not) with smccs  is that they are the kernel of all intuitionistic-like logic systems. and there (because A* is the internal-hom into \\bot,  &lt;A, \\bot&gt; , the natural iso A<em>\\times A--&gt; \\bot is obviously true,  it's just evaluation. But the natural iso \\top--&gt;A\\times A</em> corresponds to some sort of Law of Excludded  Middle (A or not A) which is very debatable!</li>\n</ol>",
        "id": 195226470,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1587752596
    },
    {
        "content": "<ol>\n<li>Because I generally think of the monoidal structure as given first and closedness as a property of it.  You can do it the other way of course, but I find that way easier to think about.</li>\n</ol>",
        "id": 195232263,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587755630
    },
    {
        "content": "<ol start=\"2\">\n<li>Yes, I forgot to write down the name of the paper in which Martin defined the envelope; IIRC it's \"Proof theory in the abstract\".  I did attribute it to him though.</li>\n</ol>",
        "id": 195232435,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587755712
    },
    {
        "content": "<p>One can of course motivate things in many different ways.  I think there are a lot of people who may care about using string diagrams to reason about csmcs (or smccs <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span>) but who aren't interesting in intuitionstic and/or linear logics at all.  (Maybe they <em>should</em> be interested in those logics, but even if so, to convince them of that we have to start from where they are.)</p>",
        "id": 195232686,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587755831
    },
    {
        "content": "<p>I have two questions related more broadly to the Chu construction:</p>\n<ol>\n<li>The theory of model categories is self-dual. Is there some useful way to embed {model categories + Quillen adjunctions} in Chu(something) (similarly to how Adj embeds in Chu(Cat, Set))? Where \"something\" would be some flavor of \"half a model category structure\", e.g., a cofibration category?</li>\n</ol>",
        "id": 195245388,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587762908
    },
    {
        "content": "<ol start=\"2\">\n<li>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> are locally presentable categories then they have a tensor product <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C \\otimes D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> which is the universal category equipped with a bivariate adjunction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>×</mo><mi>D</mi><mo>→</mo><mi>C</mi><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C \\times D \\to C \\otimes D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C \\otimes D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> can be constructed by the formula <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⊗</mo><mi>D</mi><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>R</mi></msup><mo stretchy=\"false\">(</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C \\otimes D = \\mathrm{Hom}^{R}(C^{\\mathrm{op}}, D)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span> (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>R</mi></msup><mo stretchy=\"false\">(</mo><mo>−</mo><mo separator=\"true\">,</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}^{R}(-, -)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span> denotes the category of right adjoints). In this case <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> is almost never itself locally presentable, but it still formally appears to make sense to compute<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>⊗</mo><mi>D</mi><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>R</mi></msup><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>L</mi></msup><mo stretchy=\"false\">(</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>C</mi><msup><mo stretchy=\"false\">)</mo><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>=</mo><mo stretchy=\"false\">[</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>C</mi><msup><mo stretchy=\"false\">]</mo><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op} \\otimes D = \\mathrm{Hom}^R(C, D) = \\mathrm{Hom}^L(D, C)^\\mathrm{op} = [D, C]^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">L</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span><br>\nwhere <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>L</mi></msup><mo stretchy=\"false\">(</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[D, C] = \\mathrm{Hom}^L(D, C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">L</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span> is the internal Hom, the category of left adjoints. On the other hand I could not find any use for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>⊗</mo><msup><mi>D</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op} \\otimes D^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span>.<br>\nThis feels similar to the formula for the tensor product in the Chu construction, but I don't see quite how they are related.</li>\n</ol>",
        "id": 195246743,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587763757
    },
    {
        "content": "<p>One thing that always bugged me a bit is that the definition of a model category is self-dual, but in practice we can say a lot more about, for example, combinatorial model categories, and this condition breaks the symmetry. It might be nice to have a framework which restores the duality.</p>",
        "id": 195247285,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587764086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195246743\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195246743\">said</a>:</p>\n<blockquote>\n<p>This feels similar to the formula for the tensor product in the Chu construction, but I don't see quite how they are related.</p>\n</blockquote>\n<p>I guess we just identify <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(C, 0)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0, C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span> and then the formulas for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C \\otimes D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op} \\otimes D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> work out correctly, and we get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>⊗</mo><msup><mi>D</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">C^\\mathrm{op} \\otimes D^\\mathrm{op} = 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>. This last definition never occurred to me, probably because I did not imagine that the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mo>−</mo><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">-^\\mathrm{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.747722em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mbin\">−</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> duality should relate two different tensor products.</p>",
        "id": 195248422,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587764940
    },
    {
        "content": "<p>Regarding (2), things get much nicer if you drop down to posets where the local-presentability issues go away.  Then you can say that the category <a href=\"https://ncatlab.org/nlab/show/SupLat\" title=\"https://ncatlab.org/nlab/show/SupLat\">Sup</a> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous, with an analogous tensor product that represents maps that preserve joins in each variable separately, and the duality <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{\\mathrm{op}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span></span> which isn't a problem since we dropped local presentability.</p>",
        "id": 195254887,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587769835
    },
    {
        "content": "<p>Thinking about this example, and how it fails to generalize from 0-categories to 1-categories due to annoying size issues, is what led me to the <a href=\"https://golem.ph.utexas.edu/category/2017/11/the_polycategory_of_multivaria.html\" title=\"https://golem.ph.utexas.edu/category/2017/11/the_polycategory_of_multivaria.html\">polycategory of multivariable adjunctions</a>.  The underlying polycategory of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous category Sup is in fact a full sub-polycategory of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MAdj}_0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span></span></span></span>, the polycategory of posets and multivariable adjunctions.  So <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MAdj}_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span></span></span></span>, the polycategory of 1-categories and multivariable adjunctions, is a natural replacement for the nonexistent <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous analogue of Sup for 1-categories.</p>",
        "id": 195255559,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587770431
    },
    {
        "content": "<p>Now if a 2-variable functor between locally presentable categories is cocontinuous in each variable, it has both right adjoints by the adjoint functor theorem.  Thus, the underlying multicategory of the monoidal category of locally presentable categories is a full sub-multicategory of the underlying multicategory of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MAdj}_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span></span></span></span> -- but, as you said, since locally presentable categories aren't closed under the duality of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MAdj}_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span></span></span></span>, the multiple-codomain morphisms in the polycategory structure aren't visible to them.</p>",
        "id": 195256360,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587771262
    },
    {
        "content": "<p>On the other hand, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MAdj}_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span></span></span></span> embeds as a full sub-polycategory of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">u</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Chu}(\\mathrm{Cat},\\mathrm{Set})</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">h</span><span class=\"mord mathrm\">u</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span><span class=\"mclose\">)</span></span></span></span>, which <em>is</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous, and I think its structure comes close to reflecting the tensor product of locally presentable categories as you mentioned.  The formula for the tensor product in a Chu construction is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>A</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>A</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>⊠</mo><mo stretchy=\"false\">(</mo><msup><mi>B</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>B</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><msup><mi>A</mi><mo>+</mo></msup><mo>⊗</mo><msup><mi>B</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><msup><mi>A</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>B</mi><mo>−</mo></msup><mo stretchy=\"false\">]</mo><msub><mo>×</mo><mrow><mo stretchy=\"false\">[</mo><msup><mi>A</mi><mo>−</mo></msup><mo>⊗</mo><msup><mi>B</mi><mo>−</mo></msup><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">]</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mi>B</mi><mo>+</mo></msup><mo separator=\"true\">,</mo><msup><mi>A</mi><mo>−</mo></msup><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(A^+,A^-)\\boxtimes (B^+,B^-) = (A^+ \\otimes B^+, [A^+,B^-] \\times_{[A^-\\otimes B^-, d]} [B^+,A^-])</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin amsrm\">⊠</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.126531em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7026642857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">⊗</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7026642857142857em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">d</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.021331em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span>.  If we apply this to objects in the image of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><mo>↪</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">u</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Adj}\\hookrightarrow \\mathrm{Chu}(\\mathrm{Cat},\\mathrm{Set})</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">h</span><span class=\"mord mathrm\">u</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span><span class=\"mclose\">)</span></span></span></span>, i.e. of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(C^{\\mathrm{op}},C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>, we get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>×</mo><msup><mi>D</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mi>D</mi><mo stretchy=\"false\">]</mo><msub><mo>×</mo><mrow><mo stretchy=\"false\">[</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>×</mo><msup><mi>D</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mi>D</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(C^{\\mathrm{op}}\\times D^{\\mathrm{op}}, [C^{\\mathrm{op}},D] \\times_{[C^{\\mathrm{op}}\\times D^{\\mathrm{op}},\\mathrm{Set}]} [D^{\\mathrm{op}},C])</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5935428571428571em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">t</span></span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span>.  And the second component of this is just <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>R</mi></msup><mo stretchy=\"false\">(</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}^R(C^{\\mathrm{op}},D)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span> -- but the first component is not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mi>R</mi></msup><mo stretchy=\"false\">(</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mi>D</mi><msup><mo stretchy=\"false\">)</mo><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}^R(C^{\\mathrm{op}},D)^{\\mathrm{op}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.164561em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.914561em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span></span>.  So it feels like the monoidal structure on locally presentable categories should be some kind of (co)reflection of this, but I'm not sure off the top of my head exactly how.</p>",
        "id": 195257811,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587772889
    },
    {
        "content": "<p>That was a long answer to question (2).  I wish I had as much to say about question (1), which sounds like an interesting idea.  To start with, there should be an analogue of the polycategory <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">j</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MAdj}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">A</span><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">j</span></span></span></span></span> in which the categories are equipped with wfs (or a pair of wfs, or full model structures) and the morphisms are multivariable wfs/Quillen adjunctions.  But can we embed it in a Chu construction?</p>",
        "id": 195258262,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587773366
    },
    {
        "content": "<p>The Hom(-, -) of a model category is a sort of right Quillen bifunctor--that's what the lifting properties say.</p>",
        "id": 195258676,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587773893
    },
    {
        "content": "<p>Maybe to be safer we can take simplicial model categories, so that the Hom objects take values in a genuine model category, but we shouldn't really need this.</p>",
        "id": 195258688,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587773941
    },
    {
        "content": "<p>Yeah, anything that works should probably work for ordinary model categories with a set-valued homfunctor and relating to the wfs (mono,epi) on Set.  However, I don't see yet how to make anything work: how does the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>×</mo><mi>C</mi><mo>→</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">C^{\\mathrm{op}}\\times C \\to \\mathrm{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">t</span></span></span></span></span> encode the lifting properties by combining some structures on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{\\mathrm{op}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span></span> and mapping that structure to (mono,epI) in Set?  The pullback corner that appears in the lifting property is a pullback <em>in Set</em>, and I don't see how to make that happen.</p>",
        "id": 195258850,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587774212
    },
    {
        "content": "<p>Well, you could regard Hom as taking values in Set^op, or more specifically the opposite of the structure with (C = monos, AF = epis, AC = isos, F = all). The problem though is that you would need to put the structure of both wfses into the original category that we apply the Chu construction to, so it doesn't seem to gain very much.</p>",
        "id": 195259316,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587774864
    },
    {
        "content": "<p>I don't see how to make it work even if we do that.  Do you?</p>",
        "id": 195259429,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587775009
    },
    {
        "content": "<p>Start with VMod = V-enriched model categories and left Quillen functors, and embed VMod in Chu(VMod, V^op) via <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> maps to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">p</mi></mrow><mo>:</mo><mi>C</mi><mo>⊗</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>→</mo><msup><mi>V</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(C, C^{\\mathrm{op}}, \\mathrm{Map} : C \\otimes C^{\\mathrm{op}} \\to V^{\\mathrm{op}})</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">p</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 195259539,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775198
    },
    {
        "content": "<p>Perhaps I should write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">p</mi></mrow><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Map}^{\\mathrm{op}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.932062em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">p</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.737622em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span></span></p>",
        "id": 195259588,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775225
    },
    {
        "content": "<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> is just notation for a multimorphism of V-model categories</p>",
        "id": 195259613,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775310
    },
    {
        "content": "<p>How can <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> be \"just notation for\" a <em>morphism</em>?</p>",
        "id": 195259660,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587775358
    },
    {
        "content": "<p>What is the closed symmetric monoidal structure on VMod?</p>",
        "id": 195259693,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587775434
    },
    {
        "content": "<p>Sorry, I mean <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>⊗</mo><mi>D</mi><mo>→</mo><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">F : C \\otimes D \\to E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> is just notation for a multimorphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>∈</mo><mrow><mi mathvariant=\"normal\">V</mi><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi><mo separator=\"true\">;</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F \\in \\mathrm{VMod}(C, D; E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">V</span><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 195259738,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775446
    },
    {
        "content": "<p>i.e. a Quillen V-bifunctor or whatever order the adjectives go in.</p>",
        "id": 195259759,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775479
    },
    {
        "content": "<p>I think VMod is usually not a closed symmetric monoidal category but I assume it's also okay to start with a multicategory--does it need to be more than that?</p>",
        "id": 195259820,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775564
    },
    {
        "content": "<p>A polycategory?</p>",
        "id": 195259828,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775574
    },
    {
        "content": "<p>Yes, you can do the Chu construction to a multicategory, but you'll only get a polycategory out rather than a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous category.  So it's unclear that we'd be gaining very much that way versus just directly defining a polycategory of model categories.</p>",
        "id": 195259920,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587775753
    },
    {
        "content": "<p>Particularly as I needed to define the whole multicategory VMod first before even applying the Chu construction. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 195259997,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587775852
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 195260016,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1587775902
    },
    {
        "content": "<p>Yeah -- I was hoping that the lifting properties could be encoded somehow in the \"pairings\" appearing in the Chu construction, which would have made it more nontrivial.  But as I said, I don't see how.</p>",
        "id": 195260709,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587776884
    },
    {
        "content": "<p>Well, they are encoded in the fact that the pairing is a Quillen V-bifunctor. If you have a cofibration in C and a cofibration in C^op (i.e. a fibration in C) and you pair them, you get a cofibration in V^op (i.e. a fibration in V) which is acyclic if one of the original ones is--then you can lift the (cofibrant) unit of V into this acyclic fibration of V to produce lifts for squares in C.</p>",
        "id": 195261062,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587777418
    },
    {
        "content": "<p>The problem is to \"unencode\" it from the original data.</p>",
        "id": 195261065,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587777425
    },
    {
        "content": "<p>For example, suppose I define a \"left V-semimodel category\" to be a V-cocomplete V-category (or V-module category) with a class of weak equivalences that satisfies 2-out-of-3 and any old class of cofibrations. Let's look for V-categories M equipped with three classes (C, W, F) such that (M, W, C) and (M^op, W^op, F^op) are left V-semimodel categories and Map^op is a Quillen V-bifunctor (defined using cofibrations and acyclic cofibrations).</p>",
        "id": 195261396,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587777965
    },
    {
        "content": "<p>Then I claim the pairing tells me I have lifts.</p>",
        "id": 195261406,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587778007
    },
    {
        "content": "<p>However, I totally lost the factorizations.</p>",
        "id": 195261407,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587778012
    },
    {
        "content": "<p>Maybe an algebraic WFS would fare better? It's easier to imagine having half of one of those.</p>",
        "id": 195261771,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587778651
    },
    {
        "content": "<p>Yes of course, what I meant was to encode them in a notion of morphism in a category, not morphism in a multicategory.</p>",
        "id": 195263967,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587782617
    },
    {
        "content": "<p>I think I've got it!  But I'm not sure how well I can explain it in the rudimentary TeX available here.  Maybe I'll make it a blog post or something.</p>",
        "id": 195266064,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587786382
    },
    {
        "content": "<p>(Where \"it\" = a Chu construction of a closed symmetric monoidal category that contains model categories and Quillen multifunctors as a full sub-polycategory.  The objects of the Chu construction have a generalized form of lifting, but not factorizations or weak equivalences.)</p>",
        "id": 195266077,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587786470
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195139823\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195139823\">said</a>:</p>\n<blockquote>\n<p>Speaking of software, what I would really like is a sketchpad/whiteboard program much like xournal, but augmented with beamer-like selective display features.  That is, I'd like to be able to draw a slide by hand, then select part of it and say \"hide this part first and display it on the second appearance\" and so on, and then \"compile\" such a thing to a PDF for the presentation.  I don't suppose anyone knows of such a piece of software?</p>\n</blockquote>\n<p>I came across Xournal++ today (<a href=\"https://github.com/xournalpp/xournalpp\" title=\"https://github.com/xournalpp/xournalpp\">https://github.com/xournalpp/xournalpp</a>), which after messing with it for a bit seems to be much-improved over Xournal (and is being actively developed, unlike the latter). It seems to have reasonable layer support and a scripting/plugin interface, so maybe this is hackable into a nice platform for presentations.</p>",
        "id": 195335734,
        "sender_full_name": "Aleks Kissinger",
        "timestamp": 1587909090
    },
    {
        "content": "<p>Coincidentally I was just experimenting with xournal++ yesterday.  I like its added features, but unfortunately it seems rather buggy.  For instance, at least in the linux version, if more than one layer is displayed, then the selection tool doesn't work on objects in the top layer, but it does allow you to select objects in the <em>bottom</em> layer with the effect of <em>duplicating</em> them into the top layer.  Also It crashes frequently.</p>",
        "id": 195336497,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587910345
    },
    {
        "content": "<p>Original xournal also has some bugs I've found, but none as annoying / dangerous as total crashes.  Sometimes it loses its ability to get pen input correctly until a restart, but I can still save my work and quit normally.</p>",
        "id": 195336560,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587910453
    },
    {
        "content": "<p>How do you guys deal with wacom tablets + ubuntu? I tried to configure mine but basically my wacom tablet is treated as a pointer, with absolute positioning. Clearly the writing experience is nightmarish in this way</p>",
        "id": 195337049,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587911344
    },
    {
        "content": "<p>As i mentioned before, I then opted to have a webcam pointed at my desk surface. Still, I'd be happy to have a decent way to draw with a graphic tablet <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 195337114,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587911425
    },
    {
        "content": "<p>Sorry, what do you mean by \"absolute positioning\"?</p>",
        "id": 195337621,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587912361
    },
    {
        "content": "<p>My wacom tablet acts as a display too, so I just touch on the display where I want to write and it shows up under my pen.  I haven't tried using one that isn't also a display; I think I would have a lot of trouble writing on one surface but only seeing what I'm writing appear on a totally separate screen.</p>",
        "id": 195337823,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587912645
    },
    {
        "content": "<p>But I know a couple of people who are doing it without a problem, so YMMV (and I haven't tried, so maybe it would work fine for me too).</p>",
        "id": 195337842,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587912673
    },
    {
        "content": "<p>I mean that there is a bijective function between the surface of the screen and the surface of the tablet. So if i put my pen, say, at the extreme top left corner, that's where my mouse ends up being. Instead, I'd like a bijective mapping between the surface of my tablet and a window on my screen, which would allow me to use all the available space on the tablet to draw</p>",
        "id": 195337895,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587912739
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195337823\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195337823\">said</a>:</p>\n<blockquote>\n<p>My wacom tablet acts as a display too, so I just touch on the display where I want to write and it shows up under my pen.  I haven't tried using one that isn't also a display; I think I would have a lot of trouble writing on one surface but only seeing what I'm writing appear on a totally separate screen.</p>\n</blockquote>\n<p>This is a huge plus. I'm considering the idea of buying a remarkable mainly for this</p>",
        "id": 195337920,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1587912794
    },
    {
        "content": "<p>Ah.  Well, just maximize the window.  (-:</p>",
        "id": 195339591,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1587915509
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195266077\" title=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/195266077\">said</a>:</p>\n<blockquote>\n<p>(Where \"it\" = a Chu construction of a closed symmetric monoidal category that contains model categories and Quillen multifunctors as a full sub-polycategory.  The objects of the Chu construction have a generalized form of lifting, but not factorizations or weak equivalences.)</p>\n</blockquote>\n<p>Here it is: <a href=\"https://golem.ph.utexas.edu/category/2020/04/model_categories_as_a_chu_cons.html\" title=\"https://golem.ph.utexas.edu/category/2020/04/model_categories_as_a_chu_cons.html\">https://golem.ph.utexas.edu/category/2020/04/model_categories_as_a_chu_cons.html</a></p>",
        "id": 195486680,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1588029545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.2022nd.3A.20Michael.20Shulman/near/194974796\">said</a>:</p>\n<blockquote>\n<p>According to <span class=\"user-mention silent\" data-user-id=\"275989\">Paolo Perrone</span> YouTube allows this when your channel has at least 1000 subscribers.</p>\n</blockquote>\n<p>Hey guys, I discovered that this limit exists only if you stream from your phone or tablet. If you use a laptop, there is no limit! :)</p>",
        "id": 199745920,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1591277249
    },
    {
        "content": "<p>Oh, cool!</p>",
        "id": 199773296,
        "sender_full_name": "John Baez",
        "timestamp": 1591288136
    },
    {
        "content": "<p>I come somewhat late for this talk, but here is a question, if anyone is still there: how would you represent this nested internal hom, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[[X,Y],[A,B]]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span></span></span></span>, using Mike's string diagrams? Somehow I'm struggling.</p>",
        "id": 224056650,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1611675582
    },
    {
        "content": "<p>Ask <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>!</p>",
        "id": 224060543,
        "sender_full_name": "John Baez",
        "timestamp": 1611676952
    },
    {
        "content": "<p>In a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous category, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo><mo>≅</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>⊗</mo><msup><mi>Y</mi><mo>∗</mo></msup><mo stretchy=\"false\">)</mo><mtext>⅋</mtext><mo stretchy=\"false\">(</mo><msup><mi>A</mi><mo>∗</mo></msup><mtext>⅋</mtext><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[[X,Y],[A,B]] \\cong (X \\otimes Y^*) ⅋ (A^* ⅋ B)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">⅋</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\">⅋</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span>.  So this would be represented by four strings labeled <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X,Y,A,B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, with the middle two strings pointing up and the outer two strings pointing down.</p>",
        "id": 224074687,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611682683
    },
    {
        "content": "<p>Of course that alone doesn't have enough information to distinguish it from, say, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mtext>⅋</mtext><mo stretchy=\"false\">(</mo><msup><mi>Y</mi><mo>∗</mo></msup><mo>⊗</mo><msup><mi>A</mi><mo>∗</mo></msup><mo stretchy=\"false\">)</mo><mtext>⅋</mtext><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X ⅋ (Y^* \\otimes A^*) ⅋ B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">⅋</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">⅋</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> or any other way of putting together the objects.  Relatedly, it's also not a valid complete <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord\">∗</span></span></span></span>-autonomous string diagram (i.e. it doesn't represent the identity morphism of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[[X,Y],[A,B]]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span></span></span></span>), because for such a thing all the strings coming in at the top have to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span>'ed together and those coming out the bottom have to be ⅋'ed together.  Whenever such a configuration of four strings occurs inside a valid complete string diagram, the algorithm for checking validity will automatically tell you how the strings are to be combined with the two tensor products.</p>",
        "id": 224075182,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1611682889
    },
    {
        "content": "<p>I see, thank you. But if I understood your talk correctly, while there are many ways of interpreting that string diagram in a *-autonomous category, there's only one way to make sense of that in a closed category, is that correct?</p>",
        "id": 224079239,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1611684447
    }
]