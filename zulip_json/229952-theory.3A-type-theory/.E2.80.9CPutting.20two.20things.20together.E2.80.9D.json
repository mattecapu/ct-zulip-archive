[
    {
        "content": "<p>The issue of choosing some concepts as “primitives”, and others as constructed from primitives by rules, is a subject I wish to study in its own right, rather than leaving as a background assumption in some theory.</p>\n<p>A common presentation of logic and formal systems includes the concept of “terms”, as well as “function symbols”, and the notion of “application” of a function symbol to terms. For example, here is how one paper regarding a certain term-rewriting algorithm begins:</p>\n<p><a href=\"/user_uploads/21317/3JRg2s3FYx28dK2XeFkan5Jb/ECC1EF6E-21A8-4B79-A2DC-B89B6F117D48.jpg\">knuth-bendix.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/3JRg2s3FYx28dK2XeFkan5Jb/ECC1EF6E-21A8-4B79-A2DC-B89B6F117D48.jpg\" title=\"knuth-bendix.jpg\"><img data-original-dimensions=\"1179x1388\" src=\"/user_uploads/thumbnail/21317/3JRg2s3FYx28dK2XeFkan5Jb/ECC1EF6E-21A8-4B79-A2DC-B89B6F117D48.jpg/840x560.webp\"></a></div><p>Implicitly, it seems like there are already a number of “mental concepts” being used here, to present some of this information.</p>\n<p>We are told there is something called “terms”, and something called “function symbols”. This, alone, already seems to imply that:</p>\n<ul>\n<li>there are “things”</li>\n<li>there are “types of things”</li>\n</ul>\n<p>Even those rudimentary concepts probably contain more structure than one might initially realize. This may become more evident when one tries to “formalize”, or at least “analyze”, those concepts in turn. </p>\n<p>For example: a “type” of a “thing” is something that stands in relation to a given thing; is associated with it. But, is a “type of a thing” itself also a “thing”? Is “thing” the most general mental concept possible, which anything conceivable or expressible is one of? Or, in this scenario, is “thing” a special type, and there are other concepts which “stand above” “thing” - properties, qualities, conditions of/on things? One could say that “the notion of ‘type’” is itself a “thing”, just by virtue of me being able to talk about it. One could also say that “thing” is a type, given that everything that exists (apparently) is of some type - at minimum, the type of “thing”.</p>\n<p>Given these issues, I have recently started trying to define fundamental mathematical concepts in terms of “mental concepts”, rather than thinking there is some “canonical formal system” which I can formalize everything in.</p>\n<p>I believe one of the most essential mental concepts is “putting two things together”. I have actually considered calling this “the axiom of reification”, which says something like “if you have two things, you can put them together, and that itself counts as ‘a thing’”.</p>\n<p>Is this a good way to “get off the ground”, to define “the application of a function symbol to a term”? We might conceive of “application” in numerous ways. For example, it could just be seen as string concatenation, where we literally take a symbol “<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>” and put it in front of a string of symbols “<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">t_1t_2t_3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>”. In set theory, it seems to me that “putting two things together” would be forming the set pairing the two things. If we needed them to be ordered, we could form the ordered pair. </p>\n<p>But a lot of the time, if we try to use pre-existing theoretical frameworks to formalize something so “primitive”, I think we might be putting the cart before the horse, and it will only introduce more problems, more things to be formalized.</p>\n<p>I think the most barebones aspect of what we are calling “function application”, in this context, is just “putting two things together”. It does not matter “in what order they are packaged together” (as in, an ordered pair like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>3</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f, t_1, t_2, t_3)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>); so long as whoever is “perceiving” this theory can mentally differentiate which element has which role (<em>this</em> symbol is the function symbol, <em>this</em> is the first argument to the function, <em>this</em> the second one, etc.) (To be extra nuanced: even though the arguments to the function carry information about their “order” relative to the function, they way we “store” this information does not itself have to be “ordered”.)</p>\n<p>Is this a good way to avoid a bottomless chain of formalization? That the “application of a function symbol to terms” is just a pure mental concept, prior to any mathematical theories of sets, pairing, unions, functions, products, types, etc., which just says “putting them together”?</p>",
        "id": 482787710,
        "sender_full_name": "Julius Hamilton",
        "timestamp": 1731777989
    },
    {
        "content": "<p>it's turtles all the way down.  you pick your object language, pick your meta language, and then start proving theorems or writing programs.  anything else is philosophy,</p>",
        "id": 482825503,
        "sender_full_name": "Ryan Wisnesky",
        "timestamp": 1731814846
    },
    {
        "content": "<p>Regarding \"putting two things together\" you might find MERGE in generative linguistics of interest. See: <a href=\"https://arxiv.org/abs/2305.18278\">https://arxiv.org/abs/2305.18278</a> and related papers by same authors.</p>",
        "id": 482875907,
        "sender_full_name": "Rich Hilliard",
        "timestamp": 1731860806
    }
]