[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> i'm gonna reply to this here <a href=\"https://twitter.com/_julesh_/status/1246528993903497222\" title=\"https://twitter.com/_julesh_/status/1246528993903497222\">https://twitter.com/_julesh_/status/1246528993903497222</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/_julesh_/status/1246528993903497222\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/972424350736486401/RyVTQIgf_normal.jpg\"></a><p><a href=\"https://twitter.com/sarah_zrf\" title=\"https://twitter.com/sarah_zrf\">@sarah_zrf</a> A bit... at least I read a bunch of Jacobs' book and I'm generally intimidated and confused by the whole thing, but I know at least some of the basics</p><span>- julesh (@_julesh_)</span></div></div>",
        "id": 192925154,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586031465
    },
    {
        "content": "<p>basically the idea is like</p>",
        "id": 192925375,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586031809
    },
    {
        "content": "<p>if you're interpreting your type theory in a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>, and you have a typing judgment <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo><mi>A</mi><mtext> </mtext><mrow><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\vdash A\\ \\mathsf{type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathsf\">t</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathsf\">p</span><span class=\"mord mathsf\">e</span></span></span></span></span>, then you should of course have an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi>A</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo><mo>∈</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\llbracket A \\rrbracket \\in \\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span> to act as its semantics</p>",
        "id": 192925441,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586031905
    },
    {
        "content": "<p>but say you have a judgment <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>:</mo><mi>A</mi><mo>⊢</mo><mi>B</mi><mtext> </mtext><mrow><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow></mrow><annotation encoding=\"application/x-tex\">x : A \\vdash B\\ \\mathsf{type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathsf\">t</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathsf\">p</span><span class=\"mord mathsf\">e</span></span></span></span></span>, and your language is dependently typed, so that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span> may well appear free in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>—we don't just want an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span></p>",
        "id": 192925515,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032028
    },
    {
        "content": "<p>rather, the semantics of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> should be a family of objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span></span>, <em>parameterized by</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi>A</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\llbracket A \\rrbracket</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span></span></span></span></p>",
        "id": 192925535,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032058
    },
    {
        "content": "<p>that's an object of the slice category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"normal\">/</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi>A</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} / \\llbracket A \\rrbracket</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span><span class=\"mord\">/</span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span></span></span></span>!</p>",
        "id": 192925540,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229952-type-theory/topic/dependent.20types/near/192925154\" title=\"#narrow/stream/229952-type-theory/topic/dependent.20types/near/192925154\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> i'm gonna reply to this here <a href=\"https://twitter.com/_julesh_/status/1246528993903497222\" title=\"https://twitter.com/_julesh_/status/1246528993903497222\">https://twitter.com/_julesh_/status/1246528993903497222</a></p>\n</blockquote>\n<p>What's the context on this? I'm a big Bart Jacobs fan myself!</p>",
        "id": 192925693,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586032259
    },
    {
        "content": "<p>click thru &amp; see</p>",
        "id": 192925858,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032485
    },
    {
        "content": "<p>anyway tho, in general if we have a context <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span></span></span></span>, that determines an object in some category, and then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo>⊢</mo><mi>A</mi><mtext> </mtext><mrow><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\Gamma \\vdash A\\ \\mathsf{type}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathsf\">t</span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathsf\">p</span><span class=\"mord mathsf\">e</span></span></span></span></span> determines an object in the slice category over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi mathvariant=\"normal\">Γ</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\llbracket \\Gamma \\rrbracket</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord\">Γ</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span></span></span></span></p>",
        "id": 192925932,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032584
    },
    {
        "content": "<p>and then if you write a term <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo>⊢</mo><mi>e</mi><mo>:</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma \\vdash e : A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>, that gives a global element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi>A</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\llbracket A \\rrbracket</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span></span></span></span></p>",
        "id": 192925945,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032627
    },
    {
        "content": "<p>so, something that i was tweeting about the other day with like 4am brain and which finally clicked for me was like...</p>",
        "id": 192925952,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229952-type-theory/topic/dependent.20types/near/192925858\" title=\"#narrow/stream/229952-type-theory/topic/dependent.20types/near/192925858\">said</a>:</p>\n<blockquote>\n<p>click thru &amp; see</p>\n</blockquote>\n<p>I tried but the thread is not visible in either profile :/.</p>",
        "id": 192925961,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586032677
    },
    {
        "content": "<p>you should be able to click the twitter link itself, not our @</p>",
        "id": 192926011,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032699
    },
    {
        "content": "<p>but i can screenshot it if you want, one sec</p>",
        "id": 192926019,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032716
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/Z0FXFJb37CwvnQmh0slRXe7B/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Z0FXFJb37CwvnQmh0slRXe7B/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Z0FXFJb37CwvnQmh0slRXe7B/image.png\"></a></div>",
        "id": 192926030,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032764
    },
    {
        "content": "<p>I still think we're talking at cross purposes..... the idea behind what I originally said is that the <em>syntax</em> of languages ought to reflect the categorical semantics</p>",
        "id": 192926037,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586032786
    },
    {
        "content": "<p>Inspired by mixed linear-nonlinear logic, really</p>",
        "id": 192926081,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586032803
    },
    {
        "content": "<p>and im claiming that it does :&gt;</p>",
        "id": 192926085,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032807
    },
    {
        "content": "<p>in this case</p>",
        "id": 192926086,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032809
    },
    {
        "content": "<p>Hm, I don't see that</p>",
        "id": 192926089,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586032816
    },
    {
        "content": "<p>it was a bit tongue in cheek, but i actually kinda like this viewpoint</p>",
        "id": 192926092,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032817
    },
    {
        "content": "<p>lemme continue</p>",
        "id": 192926094,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032822
    },
    {
        "content": "<p>if you have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo>⊢</mo><mi>x</mi><mo>:</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma \\vdash x : A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>—i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span> is a variable of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi></mrow><annotation encoding=\"application/x-tex\">\\Gamma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Γ</span></span></span></span>—then that's still <em>a global element in a slice category</em></p>",
        "id": 192926127,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032877
    },
    {
        "content": "<p>a slice category over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi mathvariant=\"normal\">Γ</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\llbracket \\Gamma \\rrbracket</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord\">Γ</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span></span></span></span> is the category where there is a global parameter of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟦</mo><mi mathvariant=\"normal\">Γ</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\llbracket \\Gamma \\rrbracket</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord\">Γ</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.17777777777777778em;\"></span><span class=\"mclose\">]</span></span></span></span></span></p>",
        "id": 192926168,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032923
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229952-type-theory/topic/dependent.20types/near/192926037\" title=\"#narrow/stream/229952-type-theory/topic/dependent.20types/near/192926037\">said</a>:</p>\n<blockquote>\n<p>I still think we're talking at cross purposes..... the idea behind what I originally said is that the <em>syntax</em> of languages ought to reflect the categorical semantics</p>\n</blockquote>\n<p>What exactly do you mean by \"reflect\"?</p>",
        "id": 192926172,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586032938
    },
    {
        "content": "<p>so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>'s categorical semantics is \"one of the components of the global parameter\"</p>",
        "id": 192926179,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586032988
    },
    {
        "content": "<p>i contend, at least semiseriously and for the purpose of this conversation, that having free variables at all is a syntax that reflects working in a slice category!</p>",
        "id": 192926231,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033049
    },
    {
        "content": "<p>Ok, I can buy that</p>",
        "id": 192926237,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033072
    },
    {
        "content": "<p>whenever you add a free variable, you move up a slice, or at least base change</p>",
        "id": 192926239,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033080
    },
    {
        "content": "<p>and whenever you bind a variable, you're applying an adjunction</p>",
        "id": 192926248,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033108
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><mo>⊣</mo><mi mathvariant=\"normal\">Δ</mi><mo>⊣</mo><mo>∏</mo></mrow><annotation encoding=\"application/x-tex\">\\sum \\dashv \\Delta \\dashv \\prod</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span></span></span></span></p>",
        "id": 192926252,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033132
    },
    {
        "content": "<p>Then I need to refine what I said a bit. We have lexical scoping (??) for slice categories, and then another example is how do-notation drops you into the internal syntax of a kleisli category.... but my crazy idea is that all these things should be programmer-definable instead of having a fixed-for-all-time collection of adjunctions provided by the language</p>",
        "id": 192926296,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033194
    },
    {
        "content": "<p>yeah that would be sick as hell</p>",
        "id": 192926303,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033227
    },
    {
        "content": "<p>but i just mean like</p>",
        "id": 192926306,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033236
    },
    {
        "content": "<p>the story behind that tweet was basically just</p>",
        "id": 192926308,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033243
    },
    {
        "content": "<p>Another example that was really the motivating one is the language based on call by push value, where you have a strict language and a lazy language and operators that go between them</p>",
        "id": 192926311,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033246
    },
    {
        "content": "<p>One of my zen principles is that if you make your language strict you went wrong, and if you make it lazy you went wrong, the only true path is to put them on exactly equal footing with neither preferred</p>",
        "id": 192926375,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033320
    },
    {
        "content": "<p>i had a shower thought like \"hmm... modalities are [co]monads b/c youre, like, really talking about something in another category thru the lens of this one, so ur moving thru an adjunction... what if u had a type constructor that really <em>was</em> an adjoint instead of a monad... wait a second, didnt jules tweet something like that before... wait a second, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><mo>⊣</mo><mi mathvariant=\"normal\">Δ</mi><mo>⊣</mo><mo>∏</mo></mrow><annotation encoding=\"application/x-tex\">\\sum \\dashv \\Delta \\dashv \\prod</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span></span></span></span>... lmao im gonna tweet this\"</p>",
        "id": 192926387,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033361
    },
    {
        "content": "<p>All the things I've seen that do that have a lot of extra boilerplate.</p>",
        "id": 192926392,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033375
    },
    {
        "content": "<p>Ah, I get it</p>",
        "id": 192926452,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033431
    },
    {
        "content": "<p>And yeah. I guess nobody knows how to make it work, otherwise someone would have done it already</p>",
        "id": 192926481,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033460
    },
    {
        "content": "<p>By the way, have you read Compiling with Classical Connectives?</p>",
        "id": 192926489,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033483
    },
    {
        "content": "<p>nope, whats it about</p>",
        "id": 192926492,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033492
    },
    {
        "content": "<p>I don't know CBPV very well, but CwCC seems like it's probably that on steroids.</p>",
        "id": 192926538,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033524
    },
    {
        "content": "<p>It kind of has a bunch of somewhat different ideas crammed into one paper, but they're all cool.</p>",
        "id": 192926546,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033571
    },
    {
        "content": "<p>CwCC looks like an emoticon</p>",
        "id": 192926554,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033591
    },
    {
        "content": "<p>The thing that really started me on that train of thought was linear-nonlinear logic. So you start with linear logic, where the ! modality looks like a comonad. Then in the categorical semantics it really is a comonad, but after a lot of work in the 90s everyone agreed that the \"right\" categorical semantics of linear logic is a \"linear-nonlinear adjunction\" between a *-autonomous category and a cartesian category, where ! gets decomposed. And then Benton invented linear-nonlinear logic, which is a syntactic reformulation of linear logic that directly reflects the categorical semantics</p>",
        "id": 192926558,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033600
    },
    {
        "content": "<p>waittttt i thought the \"right\" categorical semantics <em>was</em> a comonad <span aria-label=\"cold sweat\" class=\"emoji emoji-1f630\" role=\"img\" title=\"cold sweat\">:cold_sweat:</span></p>",
        "id": 192926565,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033636
    },
    {
        "content": "<p>\"seely comonad\" or sth</p>",
        "id": 192926604,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033652
    },
    {
        "content": "<p>i havent looked into categorical semantics of linear logic much</p>",
        "id": 192926611,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033665
    },
    {
        "content": "<p>I kinda cut my teeth in category theory reading \"categorical semantics of linear logic\" by Melliès, so I always take his word on this</p>",
        "id": 192926637,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033748
    },
    {
        "content": "<p>Anyhow, one of the things in CwCC is a type theory that's like sequent calculus, with multiple consequents. It has all the linear connectives, but I think the sequents are not linear.</p>",
        "id": 192926638,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033751
    },
    {
        "content": "<p>Instead the connectives are distinguished by their inherent polarity, which maps to an evaluation strategy that makes the reduction deterministic, and you can shift between them.</p>",
        "id": 192926683,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033781
    },
    {
        "content": "<p>I don't think I read that paper, but I love this stuff.... if I wasn't doing game theory I'd like to be a French logician</p>",
        "id": 192926702,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033852
    },
    {
        "content": "<p>be a french PL theorist instead</p>",
        "id": 192926707,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033871
    },
    {
        "content": "<p>So <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span></span></span></span> is a positive connective whose values are a choice of two positive values, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>⅋</mtext></mrow><annotation encoding=\"application/x-tex\">⅋</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0em;vertical-align:0em;\"></span><span class=\"mord\">⅋</span></span></span></span> is a negative connective whose covalues are pairs of two negative covalues.</p>",
        "id": 192926710,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033876
    },
    {
        "content": "<p>well, is there a difference</p>",
        "id": 192926711,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033878
    },
    {
        "content": "<p>French programming languages = French logic + naming things to make English speakers uncomfortable</p>",
        "id": 192926762,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586033906
    },
    {
        "content": "<p>have you seen abramsky's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">E</mi></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{PE}_2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">P</span><span class=\"mord mathrm\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>?</p>",
        "id": 192926770,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033918
    },
    {
        "content": "<p>Positive values are built out of constructors, and negative covalues are built out of projections. Negative values are built by copattern matching and positive covalues are built by pattern matching.</p>",
        "id": 192926780,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033947
    },
    {
        "content": "<p>its what im most familiar with, given that ive been working with it for my degree project</p>",
        "id": 192926786,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586033992
    },
    {
        "content": "<p>But, it also has semantics for call-by-need, and call-by-<em>coneed</em>. The latter avoids duplicate work when capturing continuations.</p>",
        "id": 192926787,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586033992
    },
    {
        "content": "<p>hmmmm that sounds like the dual calculus <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 192926839,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586034011
    },
    {
        "content": "<p>Then in a later section it also shows how to have arbitrary (co)data definitions whose constructors/projections are specified by sequents.</p>",
        "id": 192926875,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586034066
    },
    {
        "content": "<p>And how to compile it back to the linear logic set of connectives.</p>",
        "id": 192926883,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586034086
    },
    {
        "content": "<p>Ok, I'd like to know what \"coneed\" is, but I'd like to go to bed even more</p>",
        "id": 192926887,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586034095
    },
    {
        "content": "<p>imagine going to bed at only 10pm</p>",
        "id": 192926896,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586034115
    },
    {
        "content": "<p>when there is PL to be done</p>",
        "id": 192926899,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586034121
    },
    {
        "content": "<p>I'm normally more of a night person, but I'm living with my dad who is a morning person with far more determination than me. And also I don't have enough enthusiasm to work on weekends</p>",
        "id": 192926969,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586034204
    },
    {
        "content": "<p>the week is a principal homogeneous space for the action of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mn>7</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}_7</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83889em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>",
        "id": 192927030,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586034263
    },
    {
        "content": "<p>at least, when i'm at home and lying in bed all day <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span></p>",
        "id": 192927118,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586034420
    },
    {
        "content": "<blockquote>\n<p>do-notation drops you into the internal syntax of a kleisli category.... but my crazy idea is that all these things should be programmer-definable</p>\n</blockquote>\n<p>isn't this the idea behind embedded domain specific languages?</p>",
        "id": 192927167,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1586034483
    },
    {
        "content": "<p>Racket is particularly big on this</p>",
        "id": 192927176,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1586034536
    },
    {
        "content": "<p>I have a couple of cool demos that might be relevant to this discussion, I'll probably show them soon-ish. Just have to do a bit more polish first...</p>",
        "id": 192931767,
        "sender_full_name": "Andre Knispel",
        "timestamp": 1586042364
    },
    {
        "content": "<p>I've been trying to wrap my head around Sigma and Pi types for a while now. I find that the hardest part is understanding how the type level and value level interact in a kind of zigzagging way. I finally think I understand, and I drew this diagram to try to make it clear what is going on. Would be happy to hear if I'm on the right track.</p>\n<p><a href=\"https://drive.google.com/file/d/19qfBnTk0e7AxMBCGGi9QEZ_ZXjAPpQ80/view?usp=drivesdk\">https://drive.google.com/file/d/19qfBnTk0e7AxMBCGGi9QEZ_ZXjAPpQ80/view?usp=drivesdk</a></p>",
        "id": 210132596,
        "sender_full_name": "Avi Craimer",
        "timestamp": 1600178252
    },
    {
        "content": "<p>That looks right.</p>",
        "id": 210136778,
        "sender_full_name": "Dan Doel",
        "timestamp": 1600180113
    }
]