[
    {
        "content": "<p>Is there a word for \"both game-semantic and game-theoretic\" ?<br>\nIs there a stream for game foo?</p>",
        "id": 193639138,
        "sender_full_name": "Faré",
        "timestamp": 1586574025
    },
    {
        "content": "<p>Apart from about 4 or 5 papers tops, in my opinion there is close to zero overlap between game theory and game semantics</p>",
        "id": 193652378,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586599006
    },
    {
        "content": "<p>Think about the theory of natural numbers and the theory of real numbers. They're both about numbers and there's a little surface similarity, but once you get into any depth there's pretty much zero overlap</p>",
        "id": 193652389,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586599067
    },
    {
        "content": "<p>Yet, the project I'm working on is right at this overlap: decentralized applications using blockchain smart contracts as arbiters. Game theory applies so that incentives should be aligned to follow the protocol and not cheat or default or timeout. Game semantics applies to prove safety properties and/or to interactively convince the arbiter of who is right.</p>",
        "id": 193670597,
        "sender_full_name": "Faré",
        "timestamp": 1586626163
    },
    {
        "content": "<p>Hi, does anyone know of work on what might be called \"compositional mechanism design\"? AFAIK, you can't perform arbitrary computations on elicited truth values if the computations have effects, because that would disrupt the mechanism.</p>",
        "id": 194820137,
        "sender_full_name": "Haskell",
        "timestamp": 1587483285
    },
    {
        "content": "<p>It would be great to be able to elicit truth valuations and treat them like ordinary inputs in programming and string them to outputs without having to worry about agents backpropagating on the program and hijacking it to get the personally desired outcome.</p>",
        "id": 194820638,
        "sender_full_name": "Haskell",
        "timestamp": 1587483482
    }
]