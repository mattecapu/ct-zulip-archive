[
    {
        "content": "<p>How do filtered colimits appear in Type theory (HoTT or Martin-Lof for instance)?<br>\nIs it some inductive-recursive-inductive-something type?</p>",
        "id": 230184366,
        "sender_full_name": "Alexander Gietelink Oldenziel",
        "timestamp": 1615664528
    },
    {
        "content": "<p>Can you say a bit more about what you mean by \"appear\"?  Do you mean how do we construct filtered colimits when working in type theory as a foundation for mathematics?  Basically just like any other colimit, as a non-recursive higher inductive type.  (Although, again like any other colimit, in HoTT there are issues with expressing (homotopy) colimits of arbitrary types (rather than just sets) over infinite diagram categories.)</p>",
        "id": 230207069,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615690269
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/233104-theory.3A-logic/topic/filtered.20colimits.20and.20type.20theory/near/230207069\">said</a>:</p>\n<blockquote>\n<p>Can you say a bit more about what you mean by \"appear\"?  Do you mean how do we construct filtered colimits when working in type theory as a foundation for mathematics?  Basically just like any other colimit, as a non-recursive higher inductive type.  (Although, again like any other colimit, in HoTT there are issues with expressing (homotopy) colimits of arbitrary types (rather than just sets) over infinite diagram categories.)</p>\n</blockquote>\n<p>Ah, right. I think I was hoping that filtered colimits had some kind of interesting type-theoretic characterization rather than being a particular kind of general colimits/non-recursive HIT if that makes sense?</p>",
        "id": 230218449,
        "sender_full_name": "Alexander Gietelink Oldenziel",
        "timestamp": 1615704692
    },
    {
        "content": "<p>Well, I don't think they do.  Although some of the <em>applications</em> of filtered colimits can be achieved directly with recursive HITs.  Plus filtered colimits are less generally useful in the absence of choice principles, since then there are fewer compact objects.</p>",
        "id": 230234076,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1615723295
    }
]