[
    {
        "content": "<p>Hi all, I'm a systems biologists with some difficulties to understand monoidal categories. In Seven Sketches and elsewhere, these are visualized as wiring diagrams, but to me it occurs that they could also be visualized as shown in the <a href=\"https://q.uiver.app/#q=WzAsMTIsWzAsMCwiQywxIl0sWzEsMCwiQyxCIl0sWzIsMCwiQyxDIl0sWzQsMCwiQyJdLFswLDEsIkIsMSJdLFsxLDEsIkIsQiJdLFsyLDEsIkIsQyJdLFs0LDEsIkIiXSxbMCwyLCIxLDEiXSxbMSwyLCIxLEIiXSxbMiwyLCIxLEMiXSxbNCwyLCIxIl0sWzAsMSwiIiwwLHsiY29sb3VyIjpbMCw2MCw2MF19XSxbMSwyLCIiLDAseyJjb2xvdXIiOlsxMjAsNjAsNjBdfV0sWzQsMCwie3tnLGlkXzF9fSJdLFs0LDUsIiIsMCx7ImNvbG91ciI6WzAsNjAsNjBdfV0sWzUsMV0sWzUsNl0sWzYsMiwiIiwwLHsiY29sb3VyIjpbMTIwLDYwLDYwXX1dLFs2LDcsIlxcYmlnb3RpbWVzIiwwLHsiY3VydmUiOi0yLCJzdHlsZSI6eyJib2R5Ijp7Im5hbWUiOiJkYXNoZWQifX19XSxbNywzLCJnIiwwLHsiY29sb3VyIjpbMTIwLDYwLDYwXX0sWzEyMCw2MCw2MCwxXV0sWzgsNCwie3tmLGlkXzF9fSJdLFs4LDksInt7aWRfMSwgZn19IiwyXSxbOSw1LCIiLDAseyJjb2xvdXIiOlswLDYwLDYwXX1dLFs5LDEwLCJ7aWRfMSxnfSIsMl0sWzEwLDYsIiIsMCx7ImNvbG91ciI6WzAsNjAsNjBdfV0sWzExLDcsImYiLDAseyJjb2xvdXIiOlswLDYwLDYwXX0sWzAsNjAsNjAsMV1dXQ==\">example below</a> on the right, where colors indicate one of many possibilities for the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⨂</mo><mo>:</mo><mi mathvariant=\"script\">C</mi><mo>×</mo><mi mathvariant=\"script\">C</mi><mo>→</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\bigotimes: \\mathcal{C} \\times \\mathcal{C} \\rightarrow \\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⨂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span><br>\n<a href=\"/user_uploads/21317/7TcdGKvfFYsrN5GvmThEpOaS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/7TcdGKvfFYsrN5GvmThEpOaS/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"638x353\" src=\"/user_uploads/thumbnail/21317/7TcdGKvfFYsrN5GvmThEpOaS/image.png/840x560.webp\"></a></div><p>If that's correct, I'm wondering what it means for this example from the Catlab docs:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"nd\">@present</span><span class=\"w\"> </span><span class=\"n\">Cooking</span><span class=\"p\">(</span><span class=\"n\">FreeSymmetricMonoidalCategory</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">begin</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">WholeEgg</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RawEgg</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Shell</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Egg</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Pan</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Cheese</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Scramble</span><span class=\"p\">)</span><span class=\"o\">::</span><span class=\"kt\">Ob</span>\n<span class=\"w\">  </span><span class=\"n\">crack</span><span class=\"o\">::</span><span class=\"n\">Hom</span><span class=\"p\">(</span><span class=\"n\">WholeEgg</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RawEgg⊗Shell</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"c\"># fry::Hom(RawEgg⊗Pan, Egg⊗Pan)  # Let's ignore for now</span>\n<span class=\"w\">  </span><span class=\"c\"># scramble::Hom(RawEgg⊗Cheese⊗Pan, Scramble⊗Pan)  # Let's ignore for now</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⨂</mo></mrow><annotation encoding=\"application/x-tex\">\\bigotimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⨂</span></span></span></span> is used in the Homs, it seems to me that I am working with the product category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">k</mi><mi mathvariant=\"script\">i</mi><mi mathvariant=\"script\">n</mi><mi mathvariant=\"script\">g</mi></mrow><mo>×</mo><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">k</mi><mi mathvariant=\"script\">i</mi><mi mathvariant=\"script\">n</mi><mi mathvariant=\"script\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathcal{Cooking} \\times \\mathcal{Cooking}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\">kin</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\">kin</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span> here, not with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">k</mi><mi mathvariant=\"script\">i</mi><mi mathvariant=\"script\">n</mi><mi mathvariant=\"script\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{Cooking}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\">kin</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span> directly. Is that correct?</p>\n<p>If so, what does <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">k</mi><mi mathvariant=\"script\">i</mi><mi mathvariant=\"script\">n</mi><mi mathvariant=\"script\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{Cooking}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\">kin</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span> look like then? Certainly it must contain <code>WholeEgg, RawEgg, Shell, Egg, Pan, Cheese, Scramble</code> (and <code>munit()</code>)  as objects; and due to <code>crack::Hom(WholeEgg, RawEgg⊗Shell)</code> (i.e. <code>crack::Hom(munit()⊗WholeEgg, RawEgg⊗Shell)</code>) it must also contain <code>c1::Hom(munit(), RawEgg) and c2::Hom(WholeEgg, Shell)</code>. Due to symmetry I would also assume that  <code>c3::Hom() and c4::Hom()</code> are part of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">o</mi><mi mathvariant=\"script\">k</mi><mi mathvariant=\"script\">i</mi><mi mathvariant=\"script\">n</mi><mi mathvariant=\"script\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{Cooking}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mord mathnormal\">oo</span><span class=\"mord mathnormal\">kin</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span>. Does that seem right?</p>\n<p>If so, I still don't know how exactly the ⊗ functor looks like. I see multiple possibilities (trivially it could even send all objects to <code>munit()</code> and all morphisms to <code>id(munit())</code>), but it does not seem necessary to pin it down to one of the possibilities.</p>\n<p>Thanks in advance for your help!</p>",
        "id": 499835386,
        "sender_full_name": "Paul Lang",
        "timestamp": 1739569248
    },
    {
        "content": "<p>Hi Paul! I'm not sure how to read your visualization. Are you defining a monoidal product on the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>→</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">1\\to B\\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>? If so, it looks as if you're trying to define <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>⊗</mo><mi>B</mi><mo>=</mo><mn>1</mn><mo>⊗</mo><mi>C</mi><mo>=</mo><mn>1.</mn></mrow><annotation encoding=\"application/x-tex\">1\\otimes B=1\\otimes C=1.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.</span></span></span></span> But that's not allowed: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> has to be a unit, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>⊗</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">1\\otimes B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> has to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">B.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">.</span></span></span></span></p>",
        "id": 499838594,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570441
    },
    {
        "content": "<p>I similarly can't parse the coloring of the arrows on the left in any consistent way.</p>",
        "id": 499838661,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570468
    },
    {
        "content": "<p>Regarding your question, no, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{RawEgg}\\otimes \\mathrm{Pan}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">RawEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Pan</span></span></span></span></span> is an object in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">k</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Cooking}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">Cooking</span></span></span></span></span> itself, namely, the tensor product of the two objects <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{RawEgg}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">RawEgg</span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Pan}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Pan</span></span></span></span></span>. In the same way, if I consider the monoidal structure on the category of sets given by the cartesian product and I mention <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>×</mo><mi>T</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">S\\times T,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span></span></span></span> I'm talking about the <em>set</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>×</mo><mi>T</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">S\\times T,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span></span></span></span> not the object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mo separator=\"true\">,</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(S,T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo>×</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}\\times\\mathsf{Set}.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span><span class=\"mord\">.</span></span></span></span></p>",
        "id": 499838950,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570573
    },
    {
        "content": "<p>How it works is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">k</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Cooking}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">Cooking</span></span></span></span></span> is the symmetric monoidal category <em>freely generated</em> by the provided data. Every pair of objects in a symmetric monoidal category must have a tensor product, which is how you produce that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{RawEgg}\\otimes \\mathrm{Pan}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">RawEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Pan</span></span></span></span></span> object: you wouldn't be finished freely generated an smc if it weren't there yet!</p>",
        "id": 499839214,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570664
    },
    {
        "content": "<p>You do <em>not</em> need to see <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">k</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{crack}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">crack</span></span></span></span></span> as having domain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>⊗</mo><mrow><mi mathvariant=\"normal\">W</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{munit}() \\otimes \\mathrm{WholeEgg}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">munit</span></span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">WholeEgg</span></span></span></span></span>, any more than you need to see a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A\\to B\\times C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> as \"really\" having domain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>×</mo><mi>A</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">1\\times A.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">.</span></span></span></span></p>",
        "id": 499839399,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570727
    },
    {
        "content": "<p>This should clarify why <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>c</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">c_1,c_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> need not exist. You can have homs between tensor products of objects that are not, themselves, tensor products of homs.</p>",
        "id": 499839477,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570756
    },
    {
        "content": "<p>I have no idea what <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mn>3</mn></msub><mo>:</mo><mo>:</mo><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">c_3::\\mathrm{Hom}()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">::</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span> would even mean: homs have to have a domain and a codomain.</p>",
        "id": 499839573,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570775
    },
    {
        "content": "<p>How the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span> functor works, overall, is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">k</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Cooking}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">Cooking</span></span></span></span></span> has as objects all formal tensor products of <em>strings</em> of generating objects, such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">W</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">l</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">W</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{WholeEgg}\\otimes \\mathrm{RawEgg}\\otimes \\mathrm{Shell}\\otimes \\mathrm{WholeEgg}.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">WholeEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">RawEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Shell</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">WholeEgg</span></span><span class=\"mord\">.</span></span></span></span> Then the tensor product just takes two of these strings and concatenates them! Similarly, morphisms are built by tensor and composition out of generating morphisms, which in this case are just identities, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">k</mi></mrow><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{crack},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">crack</span></span><span class=\"mpunct\">,</span></span></span></span> and the transposition symmetries such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi><mo>:</mo><mrow><mi mathvariant=\"normal\">W</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>≅</mo><mrow><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>⊗</mo><mrow><mi mathvariant=\"normal\">W</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">g</mi><mi mathvariant=\"normal\">g</mi></mrow><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\tau: \\mathrm{WholeEgg}\\otimes \\mathrm{RawEgg} \\cong \\mathrm{RawEgg}\\otimes \\mathrm{WholeEgg}.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">WholeEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">RawEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">RawEgg</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">WholeEgg</span></span><span class=\"mord\">.</span></span></span></span></p>",
        "id": 499839928,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570926
    },
    {
        "content": "<p>There's a lot going on here, but I hope that helps!</p>",
        "id": 499839943,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739570933
    },
    {
        "content": "<p>Hi Kevin, thank you for your quick and detailed response. Yes, I was trying to define a product on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>→</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">1 \\rightarrow B \\rightarrow C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>; would this coloring make sense (red maps to f, green maps to g, black maps to the respective identity morphisms; 1⊗1 is sent to 1, 1⊗B, B⊗B and B⊗1 are sent to B, the rest is sent to C)?<br>\n<a href=\"/user_uploads/21317/Q-wzkWwZ9klQ1pXzsRmxzCBC/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Q-wzkWwZ9klQ1pXzsRmxzCBC/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"654x375\" src=\"/user_uploads/thumbnail/21317/Q-wzkWwZ9klQ1pXzsRmxzCBC/image.png/840x560.webp\"></a></div><p><del>Anyway, as your response suggests, the picture above is not a good MWE for the Cooking category, as I would also have to include <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>×</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>B</mi><mo>×</mo><mi>C</mi><mo separator=\"true\">,</mo><mi>B</mi><mo>×</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">1 \\times B, B \\times C, B \\times ... \\times C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> etc on the right side, so I would never be done drawing. Is the illustration below a better way to think about monoidal categories and the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⨂</mo><mo>:</mo><mi mathvariant=\"script\">C</mi><mo>×</mo><mi mathvariant=\"script\">C</mi><mo>→</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\bigotimes: \\mathcal{C} \\times \\mathcal{C} \\rightarrow \\mathcal{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">⨂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>?</del><br>\n<a href=\"/user_uploads/21317/53iMhQtGd-KbTHSJL8mrlFgm/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/53iMhQtGd-KbTHSJL8mrlFgm/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"886x634\" src=\"/user_uploads/thumbnail/21317/53iMhQtGd-KbTHSJL8mrlFgm/image.png/840x560.webp\"></a></div>",
        "id": 499844589,
        "sender_full_name": "Paul Lang",
        "timestamp": 1739572988
    },
    {
        "content": "<p>That picture is now a complete description of a monoidal structure on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>→</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">1\\to B\\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, as it looks like you’ve realized: we could define it concisely as the monoidal structure given by coproduct, or in order theoretic terms, by <em>join</em>.</p>",
        "id": 499852131,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739576529
    },
    {
        "content": "<p>It’s true that monoidal categories are usually infinite for reasons you were starting to think about in the crossed-out section.</p>",
        "id": 499852175,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739576556
    },
    {
        "content": "<p>Thanks Kevin, I was thinking about your responses a bit and I assume <em>freely generated</em> means that you use the tensor product to generate an infinite set of objects from a finete set of objects.</p>\n<p>This would then mean that</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"nd\">@present</span><span class=\"w\"> </span><span class=\"n\">C1</span><span class=\"p\">(</span><span class=\"n\">FreeCategory</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">begin</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">)</span><span class=\"o\">::</span><span class=\"kt\">Ob</span>\n<span class=\"w\">  </span><span class=\"n\">f</span><span class=\"o\">::</span><span class=\"n\">Hom</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">g</span><span class=\"o\">::</span><span class=\"n\">Hom</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>contains three objects, A, B and C, and two non-identity morphisms, f and g; and while the <code>ThCategory</code> would allow for a morphism <code>h::Hom(B, C)</code>, to exist <code>C1</code> does not contain it. <code>C1</code> is a category with a finite number of objects and morphisms and can be presented as a graph via <code>to_graphviz(C1)</code>.</p>\n<p>But what about a monoidal category:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"nd\">@present</span><span class=\"w\"> </span><span class=\"n\">C2</span><span class=\"p\">(</span><span class=\"n\">FreeSymmetricMonoidalCategory</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">begin</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">)</span><span class=\"o\">::</span><span class=\"kt\">Ob</span>\n<span class=\"w\">  </span><span class=\"n\">f</span><span class=\"o\">::</span><span class=\"n\">Hom</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">g</span><span class=\"o\">::</span><span class=\"n\">Hom</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">h</span><span class=\"o\">::</span><span class=\"n\">Hom</span><span class=\"p\">(</span><span class=\"n\">A⊗B</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>As before, this category contains the objects, A, B and C and two morphisms, f and g. Additionally, it contains <code>munit()</code> and the morphism h. As before, while the <code>ThSymmetricMonoidalCategory</code> would allow for a morphism <code>Hom(B, C)</code> to exist, <code>C1</code> does not contain it. In contrast to before, however, <code>C2</code> has infinitely many objects and morphisms. Although not explicitly specified above, <code>C2</code> contains objects like A⊗B, A⊗C, A⊗...⊗A, and morphisms like f⊗g::Hom(A⊗A,B⊗C), f⊗h::Hom(A⊗(A⊗B), B⊗C), g⊗...⊗g::Hom(A⊗...⊗A, C⊗...⊗C), etc. Since <code>C2</code> is a category with an infinite number of objects and morphisms it cannot be presented as a graph (consistent with <code>to_graphviz(C2)</code> erroring out). So the picture on the right below is not a complete picture of <code>C2</code> (though I hope the color coding is consistent with the functorial property of ⊗ this time - dotted morphisms map to identities).<br>\n<a href=\"/user_uploads/21317/Ga_gxOYD4Rt64TTODitvJtmY/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Ga_gxOYD4Rt64TTODitvJtmY/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1381x613\" src=\"/user_uploads/thumbnail/21317/Ga_gxOYD4Rt64TTODitvJtmY/image.png/840x560.webp\"></a></div><p>Also, a wiring diagram is never a complete representation of a monoidal category. It does a completely different thing: it is just one of many \"programs\" that can be written in the language of a certain monoidal category. Is this correct? I think some of my confusion came from asking myself how graph presentations of a category and wiring diagrams can be interconverted . But it seems that was a wrong question - they can't.</p>\n<p>One thing that still puzzles me is whether the monoid presented below is also a monoidal category. Cause that would contradict my conclusion from above that \"a category with an infinite number of objects (i.e. here <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>×</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>×</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M \\times ... \\times M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>) and morphisms it cannot be presented as a graph\"<br>\n<a href=\"/user_uploads/21317/pVYIRSD5ZPSeIUsrj1afcvFY/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/pVYIRSD5ZPSeIUsrj1afcvFY/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"868x622\" src=\"/user_uploads/thumbnail/21317/pVYIRSD5ZPSeIUsrj1afcvFY/image.png/840x560.webp\"></a></div>",
        "id": 500036431,
        "sender_full_name": "Paul Lang",
        "timestamp": 1739733388
    },
    {
        "content": "<p>Yes, everything up to your last question sounds right. A string diagram in a (symmetric) monoidal category represents a single morphism, not the whole category, and in the great majority of cases a symmetric monoidal category is infinite.</p>",
        "id": 500058626,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739751640
    },
    {
        "content": "<p>However, such an object can still be <em>presented</em> by a finite graph, which is exactly what the “@present” macro does! It’s specified as “the free symmetric monoidal category generated by the following graph [some minor details about what I mean by graph elided]”. The same thing is happening with your quote from Seven Sketches: the finite graph with a single vertex and a single loop freely generates the infinite category corresponding to the monoid of natural numbers.</p>",
        "id": 500058771,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1739751770
    },
    {
        "content": "<p>I see. That makes sense. Thanks Kevin!</p>",
        "id": 500182888,
        "sender_full_name": "Paul Lang",
        "timestamp": 1739797948
    }
]