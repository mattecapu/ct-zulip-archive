[
    {
        "content": "<p>Apparently you can \"differentiate\" a regex and get an efficient algorithm for matching them. This sounds like CT in disguise, <a href=\"http://matt.might.net/articles/implementation-of-regular-expression-matching-in-scheme-with-derivatives/\" title=\"http://matt.might.net/articles/implementation-of-regular-expression-matching-in-scheme-with-derivatives/\">http://matt.might.net/articles/implementation-of-regular-expression-matching-in-scheme-with-derivatives/</a> but I don't know how. Paging Dr. <span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> for a lensology consult.</p>",
        "id": 194353662,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1587064427
    },
    {
        "content": "<p>if it;s the same thing as this <a href=\"https://en.wikipedia.org/wiki/Brzozowski_derivative\" title=\"https://en.wikipedia.org/wiki/Brzozowski_derivative\">https://en.wikipedia.org/wiki/Brzozowski_derivative</a></p>",
        "id": 194353831,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587064497
    },
    {
        "content": "<p>then it's the adjoint to day convolution</p>",
        "id": 194353854,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587064506
    },
    {
        "content": "<p>but i was just leaving so i cant explain in detail rn :|</p>",
        "id": 194353889,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587064527
    },
    {
        "content": "<p>day convolution in this case is concatenation of languages, though</p>",
        "id": 194353909,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587064542
    },
    {
        "content": "<p>so this is the closed monoidal structure on the powerset of strings</p>",
        "id": 194353980,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587064566
    },
    {
        "content": "<p>err sorry i was actually thinking of this <a href=\"https://en.wikipedia.org/wiki/Quotient_of_a_formal_language\" title=\"https://en.wikipedia.org/wiki/Quotient_of_a_formal_language\">https://en.wikipedia.org/wiki/Quotient_of_a_formal_language</a><br>\nbut they are closely related</p>",
        "id": 194354246,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587064695
    },
    {
        "content": "<p>Not deeply categorical but getting closer is rutten’s usage in discrete coinductive differential stream calculus <a href=\"https://www.cwi.nl/~janr/papers/files-of-papers/tcs308.pdf\" title=\"https://www.cwi.nl/~janr/papers/files-of-papers/tcs308.pdf\">https://www.cwi.nl/~janr/papers/files-of-papers/tcs308.pdf</a></p>",
        "id": 194386647,
        "sender_full_name": "Gershom",
        "timestamp": 1587085978
    },
    {
        "content": "<p>ok now i can say a bit more</p>",
        "id": 194386930,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086380
    },
    {
        "content": "<p>in (0, 0)-categories—i.e., sets (well, more or less)—the equivalent to taking the category of presheaves is taking the powerset</p>",
        "id": 194386998,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086450
    },
    {
        "content": "<p>the equivalent to the yoneda embedding is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>↦</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">x \\mapsto \\{x\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">}</span></span></span></span> and the equivalent of the yoneda lemma is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>S</mi><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mo stretchy=\"false\">{</mo><mi>x</mi><mo stretchy=\"false\">}</mo><mo>⊆</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">x \\in S \\iff \\{x\\} \\subseteq S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span></p>",
        "id": 194387014,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086483
    },
    {
        "content": "<p>now, a monoidal (0, 0)-category is just a monoid</p>",
        "id": 194387024,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086517
    },
    {
        "content": "<p>if you take the monoid Σ* of strings on some alphabet Σ, then day convolution on its \"(0, 1)-category of presheaves\" (powerset ordered under inclusion) looks like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊗</mo><mi>K</mi><mo>≜</mo><mo stretchy=\"false\">{</mo><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mo>∣</mo><msub><mi>s</mi><mn>1</mn></msub><mo>∈</mo><mi>L</mi><mo separator=\"true\">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo>∈</mo><mi>K</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">L \\otimes K \\triangleq \\{s_1 s_2 \\mid s_1 \\in L, s_2 \\in K\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.99865em;vertical-align:-0.08198em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">}</span></span></span></span></p>",
        "id": 194387110,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086619
    },
    {
        "content": "<p>this is not <em>symmetric</em> monoidal—it's not a commutative monoid—so when i say it's closed i mean it has 2 different internal homs</p>",
        "id": 194387177,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086705
    },
    {
        "content": "<p>one satisfying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊗</mo><mi>K</mi><mo>⊆</mo><mi>O</mi><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mi>L</mi><mo>⊆</mo><mi>K</mi><mo>⊸</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">L \\otimes K \\subseteq O \\iff L \\subseteq K \\multimap O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊸</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span></span></span></span> and the other satisfying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊗</mo><mi>K</mi><mo>⊆</mo><mi>O</mi><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mi>K</mi><mo>⊆</mo><mi>L</mi><mo><mover accent=\"true\"><mo>⊸</mo><mo>^</mo></mover></mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">L \\otimes K \\subseteq O \\iff K \\subseteq L \\mathrel{\\hat\\multimap} O</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8132999999999999em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8132999999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mrel amsrm\">⊸</span></span><span style=\"top:-3.11886em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span></span></span></span></p>",
        "id": 194387278,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086824
    },
    {
        "content": "<p>these are the \"quotients of a formal language\" in that wikipedia article</p>",
        "id": 194387295,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086866
    },
    {
        "content": "<p>the brzozowski derivative is in particular the quotient of something by a singleton language—i.e., by the result of yoneda-embedding some string</p>",
        "id": 194387345,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587086909
    },
    {
        "content": "<p>so the derivative of L with respect to a string s is gonna be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo><mover accent=\"true\"><mo>⊸</mo><mo>^</mo></mover></mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">y(s) \\mathrel{\\hat\\multimap} L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0633em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8132999999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mrel amsrm\">⊸</span></span><span style=\"top:-3.11886em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span></p>",
        "id": 194387439,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587087011
    },
    {
        "content": "<p>incidentally, the | operator in regex is coproduct in this (0, 1)-category, and kleene star is taking the free monoid of something :-)</p>",
        "id": 194387555,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587087175
    },
    {
        "content": "<p>Following a link chain from Gershom's suggestion: <a href=\"https://ir.cwi.nl/pub/28550/\" title=\"https://ir.cwi.nl/pub/28550/\">https://ir.cwi.nl/pub/28550/</a> Rutten's recent textbook on coalgebra. has some category theory, automata, derivatives, what have you. Pretty interesting looking</p>",
        "id": 194392906,
        "sender_full_name": "Philip Zucker",
        "timestamp": 1587094363
    },
    {
        "content": "<p>Jeez, this thread is mind-blowing.</p>",
        "id": 194408528,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1587111753
    },
    {
        "content": "<p>Is it just me or Brzozowski's derivative looks suspisciously like localization of a ring? Which, incidentally, is used by algebraic geometers to talk about derivatives</p>",
        "id": 194408647,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1587111837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> I love your \"low dimensional\" category theory, it's incredible how seemingly advanced machinery was hiding in plain sight down in the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>/<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> world</p>",
        "id": 194408834,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1587111960
    },
    {
        "content": "<p>Pretty!</p>",
        "id": 194419859,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1587118630
    },
    {
        "content": "<p>come see my talk for the ACT seminar on the 6th then :-)</p>",
        "id": 194441203,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587130773
    },
    {
        "content": "<p>unless i procrastinate too hard on making slides and have to bail <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 194441227,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587130786
    },
    {
        "content": "<p>regarding kleene star being free monoid:</p>",
        "id": 194444150,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132043
    },
    {
        "content": "<p>a monoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> has morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>→</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">I \\to M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⊗</mo><mi>M</mi><mo>→</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M \\otimes M \\to M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>; at level (0, 1), this is <em>all</em> you need, because there can be only one choice for those morphisms, and all diagrams commute automatically—being a monoid is a <em>property</em> of an element in a monoidal proset, not a <em>structure</em> to equip it with</p>",
        "id": 194444283,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132117
    },
    {
        "content": "<p>the tensor unit in our monoidal proset is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>ε</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(\\varepsilon)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ε</span><span class=\"mclose\">)</span></span></span></span>, empty-string language</p>",
        "id": 194444385,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132154
    },
    {
        "content": "<p>so a language <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span> is a monoid if both</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>ε</mi><mo stretchy=\"false\">)</mo><mo>⊆</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">y(\\varepsilon) \\subseteq L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ε</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span>, or equivalently <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi><mo>∈</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon \\in L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">ε</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊗</mo><mi>L</mi><mo>⊆</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L \\otimes L \\subseteq L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span></li>\n</ol>",
        "id": 194444678,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132291
    },
    {
        "content": "<p>i.e., if it parses the empty string and it parses any concatenation of things in itself</p>",
        "id": 194444737,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132320
    },
    {
        "content": "<p>then the sub-proset of P(Σ*) whose elements are the monoids is reflective—has a left adjoint to its inclusion, \"taking the free monoid\"</p>",
        "id": 194444968,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132413
    },
    {
        "content": "<p>the property is that for all languages <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span> and languages that are monoids <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>L</mi><mo stretchy=\"false\">)</mo><mo>⊆</mo><mi>M</mi><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mi>L</mi><mo>⊆</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">F(L) \\subseteq M \\iff L \\subseteq M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">L</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span></p>",
        "id": 194445055,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132466
    },
    {
        "content": "<p>and of course L* is always a monoid for any L, so we can restrict it to a function of the right type; it is monotone; and it's not hard to check that it satisfies the property i just wrote</p>",
        "id": 194445236,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132538
    },
    {
        "content": "<p>so it's takng the free monoid!</p>",
        "id": 194445255,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132548
    },
    {
        "content": "<p>alternatively, observe that it <em>literally is defined the same way as this construction of free monoids</em><br>\n<a href=\"/user_uploads/21317/r2ZcUhZE9ZDnBQPTv_QCVxsn/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/r2ZcUhZE9ZDnBQPTv_QCVxsn/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/r2ZcUhZE9ZDnBQPTv_QCVxsn/image.png\"></a></div>",
        "id": 194445442,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587132613
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> wow, the \"low dimensional\" explanation is really cool. Have you seen this paper?</p>\n<p>Change Actions: Models of Generalised Differentiation (<a href=\"https://arxiv.org/abs/1902.05465\" title=\"https://arxiv.org/abs/1902.05465\">https://arxiv.org/abs/1902.05465</a>)</p>\n<p>It gives a framework in which the derivative of regular expressions fit.</p>",
        "id": 194454062,
        "sender_full_name": "Jesse Sigal",
        "timestamp": 1587135877
    },
    {
        "content": "<p>i have not <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 194454740,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587136163
    },
    {
        "content": "<p>also: hey neat to see you again :)</p>",
        "id": 194454988,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587136214
    },
    {
        "content": "<p><em>you</em> should come see my talk too</p>",
        "id": 194455067,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587136219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276072\">sarahzrf</span> <a href=\"#narrow/stream/229125-practice.3A-software/topic/Differentiating.20Regex/near/194454988\" title=\"#narrow/stream/229125-practice.3A-software/topic/Differentiating.20Regex/near/194454988\">said</a>:</p>\n<blockquote>\n<p>also: hey neat to see you again :)</p>\n</blockquote>\n<p>Indeed, same :D</p>",
        "id": 194456400,
        "sender_full_name": "Jesse Sigal",
        "timestamp": 1587136630
    },
    {
        "content": "<p>Yep, ACT@UCR is on my google calendar <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 194456443,
        "sender_full_name": "Jesse Sigal",
        "timestamp": 1587136646
    },
    {
        "content": "<p>for the record: the reason i had such a ready-made rant about this topic is that i've literally gone and formalized bits of it in coq before<br>\n<a href=\"/user_uploads/21317/_bbvZ8M9h5CfK2hVuHX738_Q/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/_bbvZ8M9h5CfK2hVuHX738_Q/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/_bbvZ8M9h5CfK2hVuHX738_Q/image.png\"></a></div>",
        "id": 194457578,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587137130
    },
    {
        "content": "<p>(<code>language</code> there is defined by <code>Definition language : Type := PSh str.</code>)</p>",
        "id": 194457728,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587137187
    },
    {
        "content": "<p>This is great. The terminology coincides with the derivative of combinatorial species, which is also exponentiating by a representable: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>S</mi><mo>≃</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mo>⊗</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y(c)\\Rightarrow S \\simeq S(c\\otimes -)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span>. <a href=\"http://bergeron.math.uqam.ca/wp-content/uploads/2013/11/book.pdf\" title=\"http://bergeron.math.uqam.ca/wp-content/uploads/2013/11/book.pdf\">http://bergeron.math.uqam.ca/wp-content/uploads/2013/11/book.pdf</a></p>\n<p>It's also useful for algebraic data types <a href=\"http://strictlypositive.org/calculus/\" title=\"http://strictlypositive.org/calculus/\">http://strictlypositive.org/calculus/</a>;<br>\nand the derivative of operads describes variable binding, e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">b</mi><mi mathvariant=\"normal\">s</mi></mrow><mo>:</mo><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>L</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{abs}:(y(1)\\Rightarrow L)\\to L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">b</span><span class=\"mord mathrm\">s</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">L</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span>. <a href=\"https://homepages.inf.ed.ac.uk/gdp/publications/Abstract_Syn.pdf\" title=\"https://homepages.inf.ed.ac.uk/gdp/publications/Abstract_Syn.pdf\">https://homepages.inf.ed.ac.uk/gdp/publications/Abstract_Syn.pdf</a></p>\n<p><span class=\"user-mention\" data-user-id=\"277574\">@Conor McBride</span>, do you have any thoughts as to how this notion of regex derivative is connected to the derivative of data types?</p>",
        "id": 194501923,
        "sender_full_name": "Christian Williams",
        "timestamp": 1587158783
    },
    {
        "content": "<p>i am reminded that the tangent bundle of a space is given by exponentiating it by a particular infinitesimal object</p>",
        "id": 194511474,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587165597
    },
    {
        "content": "<p>that's a rather differential thing</p>",
        "id": 194511480,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587165601
    },
    {
        "content": "<p>and representables are tiny, altho \"infinitesimal\" is maybe not appropriate here going by the definition im seeing when opening the nlab page again (it seems to be for <em>cartesian</em> closure), and anyway im not sure whether theyre infinitesimal here in addition to tiny, wld have to think about it</p>",
        "id": 194511548,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587165648
    },
    {
        "content": "<p>re: derivative of operads, an operad <em>is</em> a monoid in species (where ⊗ is species composition), right?</p>",
        "id": 194528523,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587190168
    },
    {
        "content": "<p>so derivative of species ~ derivative of operads?</p>",
        "id": 194528528,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587190192
    },
    {
        "content": "<p>...oooooh that's the <em>point</em> you were making? &gt;.&lt;</p>",
        "id": 194528529,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587190201
    }
]