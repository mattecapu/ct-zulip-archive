[
    {
        "content": "<p>Hello all. This is the official topic of discussion for Joachim Kock's talk, \"The incidence comodule bialgebra of the Baez-Dolan construction\".<br>\nDate and time: Thursday, April 16, 12 noon EDT (Boston time).</p>",
        "id": 194037043,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1586960220
    },
    {
        "content": "<p>Zoom: <a href=\"https://mit.zoom.us/j/280120646\" title=\"https://mit.zoom.us/j/280120646\">https://mit.zoom.us/j/280120646</a><br>\nYoutube: <a href=\"https://youtu.be/rfF0Z-eNXJI\" title=\"https://youtu.be/rfF0Z-eNXJI\">https://youtu.be/rfF0Z-eNXJI</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"rfF0Z-eNXJI\" href=\"https://youtu.be/rfF0Z-eNXJI\" title=\"https://youtu.be/rfF0Z-eNXJI\"><img src=\"https://i.ytimg.com/vi/rfF0Z-eNXJI/default.jpg\"></a></div>",
        "id": 194037713,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1586960477
    },
    {
        "content": "<p>In 2 minutes we start!</p>",
        "id": 194327122,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1587052734
    },
    {
        "content": "<p>is there some kind of smallness assumption we're carrying for this?<br>\nedit: as most people are probably not reading this concurently with the lecture, I asked this when he mentioned incidence algebras; as when I've seen them before they usually need the category to be locally small</p>",
        "id": 194328430,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1587053231
    },
    {
        "content": "<p>Is there one loop missing from the tree on the bottom of page 6?</p>",
        "id": 194330419,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1587054077
    },
    {
        "content": "<p>Yes, there was one loop missing from that graph I think</p>",
        "id": 194336161,
        "sender_full_name": "philip hackney",
        "timestamp": 1587056585
    },
    {
        "content": "<p>The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span> constructions are related to multiplication and composition of formal power series respectively. Are there nice categorical interpretations of similar constructions corresponding to other operations on formal power series, and, if so, does this process of considering the two-sided bar construction on other operations lead to other interesting relationships (e.g. to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span>, etc.)?</p>",
        "id": 194336492,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587056719
    },
    {
        "content": "<p>I do set theory regularly work with trees of ordinal height instead of finite trees.  I was a lost for parts of the talk (I there were a lot of things I had to google concurrently), but the machinery you're building here seems like it may be a good way to think about infinite trees<br>\nIs there any issues I should look out for when trying to generalize in this way?</p>",
        "id": 194337371,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1587057132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281268\">Brian Pinsky</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194328430\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194328430\">said</a>:</p>\n<blockquote>\n<p>is there some kind of smallness assumption we're carrying for this?<br>\nedit: as most people are probably not reading this concurently with the lecture, I asked this when he mentioned incidence algebras; as when I've seen them before they usually need the category to be locally small</p>\n</blockquote>\n<p>Yes, categories and operads should be required to be locally finite, if you want to take their incidence coalgebras in vector spaces.</p>\n<p>I forget to mention this, because I actually work at the objective level of groupoid slices, where these finiteness conditions are not required.</p>\n<p>The vector space spanned by B is then the groupoid slice Grpd/B. But that's a longer story I decided not to go into.</p>",
        "id": 194338175,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587057518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194336492\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194336492\">said</a>:</p>\n<blockquote>\n<p>The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span> constructions are related to multiplication and composition of formal power series respectively. Are there nice categorical interpretations of similar constructions corresponding to other operations on formal power series, and, if so, does this process of considering the two-sided bar construction on other operations lead to other interesting relationships (e.g. to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span>, etc.)?</p>\n</blockquote>\n<p>At the moment I have to answer 'I don't know' to this one. There is a lot to be said in terms of polynomial functors, but then perhaps the simplicial perspective is not so prominent.</p>",
        "id": 194338371,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587057615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281268\">Brian Pinsky</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194337371\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194337371\">said</a>:</p>\n<blockquote>\n<p>I do set theory regularly work with trees of ordinal height instead of finite trees.  I was a lost for parts of the talk (I there were a lot of things I had to google concurrently), but the machinery you're building here seems like it may be a good way to think about infinite trees<br>\nIs there any issues I should look out for when trying to generalize in this way?</p>\n</blockquote>\n<p>I think an important aspect is that all trees here are operadic trees, meaning that they have open-ended edges for leaves and root (and that a nullary operation is not the same thing as a leaf). One can quite easily consider <em>infinitely branching</em> trees, just by allowed P to be not finitary. But trees with infinite braches are not so easy to deal with. For example, it is not so clear what it means to be a leaf...</p>",
        "id": 194338657,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587057767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276625\">Joachim Kock</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194338657\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194338657\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281268\">Brian Pinsky</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194337371\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194337371\">said</a>:</p>\n<blockquote>\n<p>I do set theory regularly work with trees of ordinal height instead of finite trees.  I was a lost for parts of the talk (I there were a lot of things I had to google concurrently), but the machinery you're building here seems like it may be a good way to think about infinite trees<br>\nIs there any issues I should look out for when trying to generalize in this way?</p>\n</blockquote>\n<p>I think an important aspect is that all trees here are operadic trees, meaning that they have open-ended edges for leaves and root (and that a nullary operation is not the same thing as a leaf). One can quite easily consider <em>infinitely branching</em> trees, just by allowed P to be not finitary. But trees with infinite braches are not so easy to deal with. For example, it is not so clear what it means to be a leaf...</p>\n</blockquote>\n<p>Generally such trees won't have leaves.  You can add an additional tree on top of a branch through your tree.</p>",
        "id": 194338991,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1587057930
    },
    {
        "content": "<p>What do these construction tell us when the operad is just a small category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>? My guess is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> would be the free category on the underlying graph of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>. I can carry the description of the BD construction, that would produce another operad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span>, which is not a category. Does this theorem about the interaction of these two, once unwrapped, says something that would sound familiar about categories?</p>",
        "id": 194339258,
        "sender_full_name": "Thibaut Benjamin",
        "timestamp": 1587058036
    },
    {
        "content": "<p>That is what sounds difficult to me: to be able to graft a tree onto an infinite branch without having a leaf to graft it onto! It will all look completely different from the current formalism.</p>",
        "id": 194339409,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587058098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276625\">@Joachim Kock</span>: thank you for the very interesting talk! I really enjoy your style of presentation — the explicit examples throughout really help give a better intuition.</p>\n<blockquote>\n<p>At the moment I have to answer 'I don't know' to this one. There is a lot to be said in terms of polynomial functors, but then perhaps the simplicial perspective is not so prominent.</p>\n</blockquote>\n<p>The question was possibly a little too tangential to the main discussion (it was indeed inspired by the plethora of operations on species, and wondering if there was a similar story to be told simplicially). But even for these two operations, the connection is very interesting.</p>",
        "id": 194339574,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587058198
    },
    {
        "content": "<p>Another question that is probably far too open-ended: does/might the construction carry over to other kinds of operads (e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>-operads), or is there something special about planar operads that facilitates this connection, which would be unlikely to generalise?</p>",
        "id": 194340223,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587058485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276625\">Joachim Kock</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194339409\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194339409\">said</a>:</p>\n<blockquote>\n<p>That is what sounds difficult to me: to be able to graft a tree onto an infinite branch without having a leaf to graft it onto! It will all look completely different from the current formalism.</p>\n</blockquote>\n<p>It does take some getting used to.  I'll try to read your paper and I'll let you know if I come up with something interesting or more questions.<br>\nIf you (or some random other person reading the chat) want a more concrete example to think about, a nice example of a tree is the set of incresing, ordinal length sequences of rational numbers; you can put another sequence on top of any sequence that converges.   This tuns out to be a tree of height <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> with no cofinal branch.</p>",
        "id": 194340313,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1587058524
    },
    {
        "content": "<p>Maybe related to <span class=\"user-mention\" data-user-id=\"279935\">@Thibaut Benjamin</span>'s question. I was reminded of the relationship between the (standard) simplicial localization of a category with weak equivalences, which is built from the free category monad and whose simplicial structure involves \"substitution\", and the hammock localization, whose simplicial structure involves composition in the category. Is there more than a loose connection here?</p>",
        "id": 194340378,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587058559
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"279935\">Thibaut Benjamin</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194339258\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194339258\">said</a>:</p>\n<blockquote>\n<p>What do these construction tell us when the operad is just a small category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>? My guess is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> would be the free category on the underlying graph of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n</blockquote>\n<p>That's right.</p>\n<blockquote>\n<p>I can carry the description of the BD construction, that would produce another operad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span>, which is not a category. Does this theorem about the interaction of these two, once unwrapped, says something that would sound familiar about categories?</p>\n</blockquote>\n<p>I did try that, and there are some analysis of this in my paper, but nothing striking to take home.</p>\n<p>The case of monoids is interesting though! It gives a whole class of examples of comodule bialgebras employed in the <em>mould calculus</em> of Jean Écalle in the theory of resurgent functions.</p>",
        "id": 194340494,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587058605
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194340223\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194340223\">said</a>:</p>\n<blockquote>\n<p>Another question that is probably far too open-ended: does/might the construction carry over to other kinds of operads (e.g. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span></span></span></span>-operads), or is there something special about planar operads that facilitates this connection, which would be unlikely to generalise?</p>\n</blockquote>\n<p>Maybe I was not very clear about this, but all the operads here were symmetric.</p>\n<p>It is not so easy to do the nonsymmetric case of the Baez-Dolan construction, basically because you need to invent an ordering of the nodes in a planar tree. One can immediately think of many such standard orderings, but none of them work immediately. This led Hermida-Makkai-Power to a certain notion of non-standard amalgamation. Another way around this (just for the sake of the Baez-Dolan construction) is to use polynomial monads over sets (without a monad map to the free monoid monad which would give the planar case). The BD construction for set polynomials works really nice, and it covers the sigma-cofibrant symmetric operads. These are precisely those that arise as symmetrisation of nonsymmetric operads, so in this round-about sense, polynomial monads over Set cover nonsymmetric operads.</p>\n<p>What the bar construction is concerned, one can do all kind of relative versions, such as braided operads. At the objective level, this gives braided bialgebras, but once you take cardinality to get down to vector spaces they are just commutative bialgebras again.</p>\n<p>But for the Baez-Dolan construction, the problem is the same as for the planar case. If P is a T-operad, P-circ is not necessarily a T-operad anymore. (It will be a T-circ operad. I think in the long run a good setting for the Baez-Dolan construction is that of operadic categories.</p>",
        "id": 194341701,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587059152
    },
    {
        "content": "<p>Ah, I see, that makes a lot of sense, thank you.</p>",
        "id": 194342196,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587059392
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194340378\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194340378\">said</a>:</p>\n<blockquote>\n<p>Maybe related to <span class=\"user-mention silent\" data-user-id=\"279935\">Thibaut Benjamin</span>'s question. I was reminded of the relationship between the (standard) simplicial localization of a category with weak equivalences, which is built from the free category monad and whose simplicial structure involves \"substitution\", and the hammock localization, whose simplicial structure involves composition in the category. Is there more than a loose connection here?</p>\n</blockquote>\n<p>That sounds promising. There is one case of categories as operads that I did work out in the paper in more detail, namely the case of free categories on a quiver. The simplicial situation is an example of this. In this case we are talking about 'paths with stations'. The P*^ is then just about concatenating paths-with-stations. The BD construction is about substituting paths-with-stations into the stages of paths-with-stations. I wonder if this is related to the localisations you consider.</p>",
        "id": 194342698,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587059622
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281268\">Brian Pinsky</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194340313\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194340313\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276625\">Joachim Kock</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194339409\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/April.2016.20-.20Joachim.20Kock's.20talk/near/194339409\">said</a>:</p>\n<blockquote>\n<p>That is what sounds difficult to me: to be able to graft a tree onto an infinite branch without having a leaf to graft it onto! It will all look completely different from the current formalism.</p>\n</blockquote>\n<p>It does take some getting used to.  I'll try to read your paper and I'll let you know if I come up with something interesting or more questions.<br>\nIf you (or some random other person reading the chat) want a more concrete example to think about, a nice example of a tree is the set of incresing, ordinal length sequences of rational numbers; you can put another sequence on top of any sequence that converges.   This tuns out to be a tree of height <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> with no cofinal branch.</p>\n</blockquote>\n<p>I am not familiar with these things at all. I don't know what <em>trees of height <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> with no cofinal branch means</em> :-(</p>\n<p>I am interested to learn about this. One thing that happens a lot in combinatorics, in particular in the theory of symmetric functions, is <em>doubling the alphabet</em>. This is essentially just taking the ordinal sum <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi><mo>+</mo><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega + \\omega</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>. I would like to see this as the grafting of one infinite linear tree on top of another, but I don't understand how it should work :-(</p>",
        "id": 194343282,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587059844
    },
    {
        "content": "<p>Some fine print:</p>\n<p>In my talk, in order to simplify, I was working at the level of groupoid slices, instead of the category of vector spaces, but didn't tell anybody :-(</p>\n<p>Actually, for me this a main point, that this is possible. But if I always went in this direction, all my talks would be the same. So I suppressed all this and was sloppy with the distinction between the objective level and the vector-space level.</p>\n<p>Briefly, instead of considering coalgebras in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">V</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">c</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Vect}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">V</span><span class=\"mord mathbf\">e</span><span class=\"mord mathbf\">c</span><span class=\"mord mathbf\">t</span></span></span></span></span>, I was considering coalgebras in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">L</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Lin}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">L</span><span class=\"mord mathbf\">i</span><span class=\"mord mathbf\">n</span></span></span></span></span>, the category of groupoid slices <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"bold\">G</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">p</mi><mi mathvariant=\"bold\">d</mi></mrow><mrow><mi mathvariant=\"normal\">/</mi><mi>S</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Grpd}_{/S}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1135799999999998em;vertical-align:-0.41913999999999996em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">G</span><span class=\"mord mathbf\">r</span><span class=\"mord mathbf\">p</span><span class=\"mord mathbf\">d</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.28086em;\"><span style=\"top:-2.45586em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">/</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.41913999999999996em;\"><span></span></span></span></span></span></span></span></span></span> and linear functors (i.e. given by spans). The comultiplication formula, which is the same for any simplicial groupoid, is then given by the canonical span <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo><mover><mo><mo>⟵</mo></mo><msub><mi>d</mi><mn>1</mn></msub></mover></mo><msub><mi>X</mi><mn>2</mn></msub><mo><mover><mo><mo>⟶</mo></mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>d</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>d</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow></mover></mo><msub><mi>X</mi><mn>1</mn></msub><mo>×</mo><msub><mi>X</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">X_1 \\stackrel{d_1}\\longleftarrow X_2 \\stackrel{(d_2,d_0)}\\longrightarrow X_1 \\times X_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.458208em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.308208em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⟵</span></span></span><span style=\"top:-3.7220999999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.572em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4220000000000002em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⟶</span></span></span><span style=\"top:-3.7969999999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. The simplification obtained by this 'categorification viewpoint' is that it is never necessary to impose any finiteness conditions.</p>\n<p>The proof of the comodule-bialgebra conditions becomes a question of establishing and equivalence of groupoids.</p>\n<p>On the other hand, it is certainly interesting to be able to take homotopy cardinality to land in vector spaces and make contact with the rest of mathematics. For this to be possible, the simplicial groupoids should be <em>locally finite</em>. For operads, this means that for every operation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span></span></span></span>, there is only a finite number of ways if could have arisen from the composition law as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>b</mi><mo>∘</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">r= b\\circ (a_1,\\ldots, a_k)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.</p>\n<p>This is more than just question of properly mentioning assumptions. The problem is that while <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> is always locally finite (no matter what <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> we start with), the Baez-Dolan construction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>P</mi><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">P^\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span> is <em>never</em> locally finite :-( So in the version of the theorem I explained in the talk, it is never possible to take homotopy cardinality :-(  The solution to this problem, which I completely ignored, it to take the <em>reduced</em> Baez-Dolan construction. This means to discard all nullary operations. This takes some work, but it is not as artificial as it seems: even in the most elementary case (the identity monad) we see the need for this: multiplying formal power series is always safe, but in order to substitute one into another,  the first must be required to have no constant term!</p>\n<p>I skipped all this in order to focus on the main ideas. The details are in the paper, of course.</p>",
        "id": 194353373,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1587064283
    },
    {
        "content": "<p>Here's the video of today's talk! The HD version should be ready soon, at the same address.<br>\n<a href=\"https://youtu.be/V22mXse3txE\" title=\"https://youtu.be/V22mXse3txE\">https://youtu.be/V22mXse3txE</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"V22mXse3txE\" href=\"https://youtu.be/V22mXse3txE\" title=\"https://youtu.be/V22mXse3txE\"><img src=\"https://i.ytimg.com/vi/V22mXse3txE/default.jpg\"></a></div>",
        "id": 194384446,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1587083626
    }
]