[
    {
        "content": "<p>Hello all. This is the official topic of discussion for David Myers' talk, \"Homotopy Type Theory for doing Category Theory\".<br>\nDate and time: Thursday, March 26, 12 noon EDT (Boston time).<br>\nStreaming link here: <a href=\"https://youtu.be/1xm8vDwWf3Y\" target=\"_blank\" title=\"https://youtu.be/1xm8vDwWf3Y\">https://youtu.be/1xm8vDwWf3Y</a> .</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"1xm8vDwWf3Y\" href=\"https://youtu.be/1xm8vDwWf3Y\" target=\"_blank\" title=\"https://youtu.be/1xm8vDwWf3Y\"><img src=\"https://i.ytimg.com/vi/1xm8vDwWf3Y/default.jpg\"></a></div>",
        "id": 191656371,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585075889
    },
    {
        "content": "<p>Yay, looking forward to this -- been wanting to understand this better for some time</p>",
        "id": 191671861,
        "sender_full_name": "Brendan Fong",
        "timestamp": 1585083721
    },
    {
        "content": "<p>Wow great. This should be cool.</p>",
        "id": 191673357,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585084513
    },
    {
        "content": "<p>Dear all,</p>\n<p>Apparently YouTube has a nationwide problem with live streaming today, so we cannot have the seminar there.<br>\nWe will use Zoom instead. Please all come to this call:</p>\n<p>Join Zoom Meeting<br>\n<a href=\"https://zoom.us/j/667324456?pwd=akVmZlM4T01uZjlpZzl1VEpSRW1Vdz09\" title=\"https://zoom.us/j/667324456?pwd=akVmZlM4T01uZjlpZzl1VEpSRW1Vdz09\">https://zoom.us/j/667324456?pwd=akVmZlM4T01uZjlpZzl1VEpSRW1Vdz09</a><br>\nMeeting ID: 667 324 456<br>\nPassword: 562708</p>\n<p>Sorry for the inconvenience and for the short notice.</p>\n<p>See you there!<br>\nPaolo</p>",
        "id": 191905898,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585238091
    },
    {
        "content": "<p>Do we still use this chat or Zoom's?</p>",
        "id": 191906413,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585238249
    },
    {
        "content": "<p>We'll use here in Zulip</p>",
        "id": 191906682,
        "sender_full_name": "Brendan Fong",
        "timestamp": 1585238328
    },
    {
        "content": "<p>(It has better threading, and is easier to browse for people who can't join us live)</p>",
        "id": 191906809,
        "sender_full_name": "Brendan Fong",
        "timestamp": 1585238380
    },
    {
        "content": "<p>Welcome everyone! We are about to start. We are on Zoom!</p>",
        "id": 191906821,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585238385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276053\">Brendan Fong</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/March.2026.20-.20David.20Myers'.20talk/near/191906682\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/March.2026.20-.20David.20Myers'.20talk/near/191906682\">said</a>:</p>\n<blockquote>\n<p>We'll use here in Zulip</p>\n</blockquote>\n<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 191907268,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585238542
    },
    {
        "content": "<p>Does anybody else have problems with sound?</p>",
        "id": 191907426,
        "sender_full_name": "Georgios Bakirtzis",
        "timestamp": 1585238616
    },
    {
        "content": "<p>It is very stuttery for me</p>",
        "id": 191907471,
        "sender_full_name": "Alex Rice",
        "timestamp": 1585238633
    },
    {
        "content": "<p>ditto</p>",
        "id": 191907546,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585238653
    },
    {
        "content": "<p>Same</p>",
        "id": 191907703,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585238724
    },
    {
        "content": "<p>I hear it well. Sorry to hear you are not! <br>\nIn any case, we are recording locally, so that in case of connection problems (of the speaker or of the audience), there will be an HD video up to re-watch!</p>",
        "id": 191907733,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585238734
    },
    {
        "content": "<p>I can still hear ok enough</p>",
        "id": 191907779,
        "sender_full_name": "Alex Rice",
        "timestamp": 1585238754
    },
    {
        "content": "<p>st-t-t-t-t-ttuter!</p>",
        "id": 191908544,
        "sender_full_name": "Alex Kavvos",
        "timestamp": 1585239048
    },
    {
        "content": "<p>It seems I missed the memo (for not being on the mailing list). Can someone share the zoom link?</p>",
        "id": 191908713,
        "sender_full_name": "Emily Riehl",
        "timestamp": 1585239121
    },
    {
        "content": "<p>Some messages above</p>",
        "id": 191908782,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585239136
    },
    {
        "content": "<p><a href=\"https://zoom.us/j/667324456?pwd=akVmZlM4T01uZjlpZzl1VEpSRW1Vdz09\" title=\"https://zoom.us/j/667324456?pwd=akVmZlM4T01uZjlpZzl1VEpSRW1Vdz09\">https://zoom.us/j/667324456?pwd=akVmZlM4T01uZjlpZzl1VEpSRW1Vdz09</a></p>",
        "id": 191908784,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585239137
    },
    {
        "content": "<p>Thanks</p>",
        "id": 191908892,
        "sender_full_name": "Emily Riehl",
        "timestamp": 1585239183
    },
    {
        "content": "<p>Does the expression <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∏</mo><mrow><mi>a</mi><mo>:</mo><mi>A</mi></mrow></msub><mi>B</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\prod_{a:A} B(a)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">:</span><span class=\"mord mathdefault mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span></span></span></span> assume that A has elements?</p>",
        "id": 191909278,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585239332
    },
    {
        "content": "<p>don't think so</p>",
        "id": 191909306,
        "sender_full_name": "Alex Rice",
        "timestamp": 1585239347
    },
    {
        "content": "<p>How about \"pairs (a,b) s.t. a:A, b:B\"?  That looks awfully set-like.</p>",
        "id": 191909501,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585239419
    },
    {
        "content": "<p>What do you mean by \"has elements\"?</p>",
        "id": 191909733,
        "sender_full_name": "Thomas Read",
        "timestamp": 1585239510
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276048\">Mike Stay</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/March.2026.20-.20David.20Myers'.20talk/near/191909278\" title=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/March.2026.20-.20David.20Myers'.20talk/near/191909278\">said</a>:</p>\n<blockquote>\n<p>Does the expression <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∏</mo><mrow><mi>a</mi><mo>:</mo><mi>A</mi></mrow></msub><mi>B</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\prod_{a:A} B(a)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">:</span><span class=\"mord mathdefault mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span></span></span></span> assume that A has elements?</p>\n</blockquote>\n<p>you should think of its elements like functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>→</mo><msub><mo>∪</mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></msub><msub><mi>B</mi><mi>a</mi></msub></mrow><annotation encoding=\"application/x-tex\">f : A \\to \\cup_{a \\in A} B_a</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8607em;vertical-align:-0.17737em;\"></span><span class=\"mord\"><span class=\"mbin\">∪</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathdefault mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17737em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><msub><mi>B</mi><mi>a</mi></msub></mrow><annotation encoding=\"application/x-tex\">f(a) \\in B_a</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. so if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> is empty, it will also be empty.</p>",
        "id": 191909768,
        "sender_full_name": "Alex Kavvos",
        "timestamp": 1585239528
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 191910020,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585239637
    },
    {
        "content": "<p>While we're paused: can he move his mouse pointer off the middle of the slide?</p>",
        "id": 191910156,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585239685
    },
    {
        "content": "<p>I answered my question myself</p>",
        "id": 191910620,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1585239857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276048\">@Mike Stay</span> The use of \"(a,b) : A x B\" is just notation. You could equally state the rule as</p>\n<p>(formation rule) Given types A and B there is a type A x B.<br>\n(introduction rule) Given a : A and b : B there is a term p : A x B.<br>\n(elimination rule) Given any x : A x B there are terms y : A and z : B.<br>\n(computation rule) If you apply the elimination rule to a term formed by the introduction rule you get a : A and b : B back.<br>\n(other computation rule) If you apply the introduction rule after the elimination rule you get x : A x B back.</p>",
        "id": 191911275,
        "sender_full_name": "Emily Riehl",
        "timestamp": 1585240038
    },
    {
        "content": "<p>The stutter seems to be a volume-related issue.  When he starts to talk quietly, zoom stops transmitting clearly.</p>",
        "id": 191912234,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585240354
    },
    {
        "content": "<p>Nothing wrong with talking about the <em>elements</em> of a type. The term <em>term</em> just evokes syntax, and the intuition that type theory is about syntax has to die. In the same vein, set theory will soon disappear, and <em>element</em> will naturally be used to describe the things that inhabit types ;)</p>",
        "id": 191913807,
        "sender_full_name": "Philipp G. Haselwarter",
        "timestamp": 1585240919
    },
    {
        "content": "<p>i tend to disagree. the \"element\" relation makes one think of working with some form of set. \"inhabitant\" is a better word imho.</p>",
        "id": 191915993,
        "sender_full_name": "Gershom",
        "timestamp": 1585241793
    },
    {
        "content": "<blockquote>\n<p>that type theory is about syntax has to die</p>\n</blockquote>\n<p>I very much disagree :)</p>",
        "id": 191916251,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585241916
    },
    {
        "content": "<p>concrete syntax and grammars, yes, but not abstract syntax</p>",
        "id": 191916278,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585241939
    },
    {
        "content": "<p>Thanks everyone for coming! Late questions are always welcome, here in this thread :)<br>\nWe will upload the video to Youtube as soon as possible.</p>",
        "id": 191917423,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585242391
    },
    {
        "content": "<p>Couldn't attend. Will there be a video uploaded on the Youtube channel in spite of the streaming not having happened on Youtube?</p>",
        "id": 191948539,
        "sender_full_name": "Pierre Cagne",
        "timestamp": 1585256633
    },
    {
        "content": "<p>Yes, they recorded the talk using Zoom and will upload it eventually.</p>",
        "id": 191950243,
        "sender_full_name": "Mike Stay",
        "timestamp": 1585257383
    },
    {
        "content": "<p>Hi all! Here is the video of today's talk. <a href=\"https://youtu.be/nalC40POVLU\" title=\"https://youtu.be/nalC40POVLU\">https://youtu.be/nalC40POVLU</a><br>\nWe did our best to improve the quality combining the two recordings. Some \"stuttering\" is still there, but the talk should be understandable. Sorry again for the technical glitches, we really didn't expect that <em>YouTube could go down</em>!</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"nalC40POVLU\" href=\"https://youtu.be/nalC40POVLU\" title=\"https://youtu.be/nalC40POVLU\"><img src=\"https://i.ytimg.com/vi/nalC40POVLU/default.jpg\"></a></div>",
        "id": 191956269,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585261184
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275989\">@Paolo Perrone</span> what software do you use for recording the video of the person superimposed on the video of the slides?</p>",
        "id": 192057398,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1585332341
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275927\">@James Fairbanks</span>  OBS, and I have to say it works like a charm. <a href=\"https://obsproject.com/\" title=\"https://obsproject.com/\">https://obsproject.com/</a></p>",
        "id": 192058160,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1585332693
    }
]