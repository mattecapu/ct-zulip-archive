[
    {
        "content": "<p>Hi all! This is the thread of discussion for Prakash' talk, \"Projected limits of Markov processes\".<br>\nWhen: Thursday September 3, 12 noon EDT (Boston time). <br>\n(Note that the time of the talk is back to usual.)</p>",
        "id": 208729738,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1598985787
    },
    {
        "content": "<p>Zoom meeting:<br>\n<a href=\"https://mit.zoom.us/j/280120646\">https://mit.zoom.us/j/280120646</a><br>\nMeeting ID: 280 120 646</p>\n<p>Youtube live stream:<br>\n<a href=\"https://youtu.be/editZPH4lZk\">https://youtu.be/editZPH4lZk</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"editZPH4lZk\" href=\"https://youtu.be/editZPH4lZk\"><img src=\"https://i.ytimg.com/vi/editZPH4lZk/default.jpg\"></a></div>",
        "id": 208729753,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1598985795
    },
    {
        "content": "<p>Note also that this is the third talk in a series, albeit it should be self-contained.</p>\n<ul>\n<li>The first talk has been given in the ACT@UCR seminar (<a href=\"#narrow/stream/229966-ACT.40UCR-seminar/topic/April.208th.3A.20Prakash.20Panangaden\">thread here</a>, <a href=\"https://www.youtube.com/watch?v=nkdKecWxvoY\">video here</a>);<div class=\"youtube-video message_inline_image\"><a data-id=\"nkdKecWxvoY\" href=\"https://www.youtube.com/watch?v=nkdKecWxvoY\"><img src=\"https://i.ytimg.com/vi/nkdKecWxvoY/default.jpg\"></a></div></li>\n<li>The second talk has been given at the Categorical Probability and Statistics workshop (<a href=\"#narrow/stream/238032-Categorical-Probability.20and.20Statistics.202020.20workshop/topic/Jun.208.3A.20Prakash.20Panangaden's.20talk\">thread here</a>, <a href=\"https://www.youtube.com/watch?v=elaHJm1M2P0\">video here</a>).<div class=\"youtube-video message_inline_image\"><a data-id=\"elaHJm1M2P0\" href=\"https://www.youtube.com/watch?v=elaHJm1M2P0\"><img src=\"https://i.ytimg.com/vi/elaHJm1M2P0/default.jpg\"></a></div></li>\n</ul>",
        "id": 208730163,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1598985972
    },
    {
        "content": "<p>Hello! 20 minutes to start!</p>",
        "id": 208986513,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1599147601
    },
    {
        "content": "<p>Here's the video!<br>\n<a href=\"https://youtu.be/ApDkCro7-v8\">https://youtu.be/ApDkCro7-v8</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"ApDkCro7-v8\" href=\"https://youtu.be/ApDkCro7-v8\"><img src=\"https://i.ytimg.com/vi/ApDkCro7-v8/default.jpg\"></a></div>",
        "id": 209038786,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1599173791
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"281695\">@Prakash Panangaden</span>! Unfortunately I've had to leave early yesterday, so let me ask my question here.</p>\n<p>I wonder to what extent your result can be generalized to arbitrary diagram shapes, such as the case of continuous time. In other words, since a Markov process is a functor from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span>, the category with a single object and endomorphism monoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span>, to Stoch, the Kleisli category of the Giry monad. A labelled Markov process is likewise a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">B</mi><mi>L</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>L</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mrow><mi mathvariant=\"monospace\">S</mi><mi mathvariant=\"monospace\">t</mi><mi mathvariant=\"monospace\">o</mi><mi mathvariant=\"monospace\">c</mi><mi mathvariant=\"monospace\">h</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B}List(L) \\to \\mathtt{Stoch}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathtt\">S</span><span class=\"mord mathtt\">t</span><span class=\"mord mathtt\">o</span><span class=\"mord mathtt\">c</span><span class=\"mord mathtt\">h</span></span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>L</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">List(L)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mclose\">)</span></span></span></span> is the free monoid generated by the set of labels <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>. So does your theory of bisimulation and approximation generalize to considering categories of functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>→</mo><mrow><mi mathvariant=\"monospace\">S</mi><mi mathvariant=\"monospace\">t</mi><mi mathvariant=\"monospace\">o</mi><mi mathvariant=\"monospace\">c</mi><mi mathvariant=\"monospace\">h</mi></mrow></mrow><annotation encoding=\"application/x-tex\">D \\to \\mathtt{Stoch}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathtt\">S</span><span class=\"mord mathtt\">t</span><span class=\"mord mathtt\">o</span><span class=\"mord mathtt\">c</span><span class=\"mord mathtt\">h</span></span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> is an arbitrary small category, and one can define bisimulation and prove approximations for these in the same way?</p>\n<p>I'm asking this because it could potentially be of interest in the theory of discrete groups, where approximation properties of a measure-theoretical flavour (such as amenability) are of interest, and perhaps there's some relation to your approximation results?</p>",
        "id": 209081434,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1599218419
    },
    {
        "content": "<p>Hi Tobias,<br>\nI hope this reply reaches you.  I am very interested in the continuous-time case but there are all kinds of new phenomena in that case and I am not sure if a generic argument would capture all that.  I can’t really answer your question without thinking hard about it but I would think that bisimulation should generalize to the case you want.<br>\nPerhaps we can discuss this over the coming months.<br>\nBest wishes,<br>\nPrakash</p>",
        "id": 209081879,
        "sender_full_name": "Prakash Panangaden",
        "timestamp": 1599218782
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"281695\">@Prakash Panangaden</span>! That makes sense to me. I understand that the case of continuous time comes with many other subtleties that a generic treatment would not see, so I had mentioned it only to give an obvious example. I think that the case of discrete group actions could be more interesting.</p>",
        "id": 209163812,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1599285929
    }
]