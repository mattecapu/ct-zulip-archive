[
    {
        "content": "<p>Hello all, here's the stream for David's talk, \"Polynomial functors II: Seven wonders of the composition product\".</p>",
        "id": 198796450,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590514929
    },
    {
        "content": "<p>Youtube live stream:<br>\n<a href=\"https://youtu.be/bLVHO5LxUY0\">https://youtu.be/bLVHO5LxUY0</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"bLVHO5LxUY0\" href=\"https://youtu.be/bLVHO5LxUY0\"><img src=\"https://i.ytimg.com/vi/bLVHO5LxUY0/default.jpg\"></a></div>",
        "id": 198796459,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590514939
    },
    {
        "content": "<p>Zoom meeting:<br>\n<a href=\"https://mit.zoom.us/j/280120646\">https://mit.zoom.us/j/280120646</a><br>\nMeeting ID: 280 120 646</p>",
        "id": 198796485,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590514955
    },
    {
        "content": "<p>The slides are available, here: <a href=\"http://math.mit.edu/~dspivak/informatics/talks/poly2_wondersMIT2020.pdf\">http://math.mit.edu/~dspivak/informatics/talks/poly2_wondersMIT2020.pdf</a></p>",
        "id": 198943502,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590608972
    },
    {
        "content": "<p>A lot of the wonderful properties of Poly seems to be 'shared' with Species (and also of other categories from concurrency theory based on [Inj, Set] ). I've been slowly exploring what makes all those monoidal structures on [A, B] work, as a way to understand how they all fit together.</p>",
        "id": 199020926,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1590672000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296322\">@Jacques Carette</span> can you name some of the other categories from concurrency theory of which you are thinking? :-)</p>",
        "id": 199038209,
        "sender_full_name": "Gershom",
        "timestamp": 1590679680
    },
    {
        "content": "<p>I'm mainly thinking of the functor category I mentioned, from (finite sets + injections) to Set. It seems to be quite pervasive.</p>",
        "id": 199038458,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1590679793
    },
    {
        "content": "<p>Is this the same thing as the schanuel topos (<a href=\"https://ncatlab.org/nlab/show/Schanuel+topos\">https://ncatlab.org/nlab/show/Schanuel+topos</a>)? I know of a variety of uses in computer science, but I'm sure which concurrency theory applications you're thinking of?</p>",
        "id": 199039312,
        "sender_full_name": "Gershom",
        "timestamp": 1590680170
    },
    {
        "content": "<p>The Schanuel topos is a subcategory of [Inj, Set], where the functors are pullback-preserving.</p>",
        "id": 199039549,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590680289
    },
    {
        "content": "<p>I'll dig up some references - I can't immediately find good ones.</p>",
        "id": 199040153,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1590680591
    },
    {
        "content": "<p>Hello all! We start in 10 minutes.</p>",
        "id": 199041082,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590681017
    },
    {
        "content": "<p>30 seconds!</p>",
        "id": 199042198,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590681565
    },
    {
        "content": "<p>Do you have a link?</p>",
        "id": 199042208,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1590681572
    },
    {
        "content": "<p>Never mind!</p>",
        "id": 199042315,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1590681622
    },
    {
        "content": "<p>What does Poly not have that Set has?</p>",
        "id": 199044101,
        "sender_full_name": "Nikolaj Kuntner",
        "timestamp": 1590682513
    },
    {
        "content": "<p>Can you go over what morphisms in poly are again?</p>",
        "id": 199044766,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1590682819
    },
    {
        "content": "<p>(in my head it's a generalization of \"divides\" for classic polynomials but I'm not sure that's right)</p>",
        "id": 199044869,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1590682869
    },
    {
        "content": "<p>Okay thanks</p>",
        "id": 199045048,
        "sender_full_name": "Brian Pinsky",
        "timestamp": 1590682942
    },
    {
        "content": "<p>I first encountered Inj in <a href=\"https://www.sciencedirect.com/science/article/pii/S0890540102929688\">A fully abstract model for the Pi-calculus</a>.</p>",
        "id": 199049403,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1590685090
    },
    {
        "content": "<p>The discussion of symmetry and lists reminds me of this old post on combinatorics from brent which is about ordered vs. unordered gadgets. List is the sum over ordered n-tuples, so one also may want to consider sets as the sum over unordered n-tuples: <a href=\"https://byorgey.wordpress.com/2012/08/24/unordered-tuples-and-type-algebra/\">https://byorgey.wordpress.com/2012/08/24/unordered-tuples-and-type-algebra/</a></p>",
        "id": 199049750,
        "sender_full_name": "Gershom",
        "timestamp": 1590685244
    },
    {
        "content": "<p><a href=\"https://www.cis.upenn.edu/~sweirich/papers/yorgey-thesis.pdf\">https://www.cis.upenn.edu/~sweirich/papers/yorgey-thesis.pdf</a></p>",
        "id": 199050149,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1590685442
    },
    {
        "content": "<p>Is there an expectation that all of this structure should also arise in the context of general polynomial functors on locally cartesian-closed categories, or did anything described in the talk particularly rely on Set?</p>",
        "id": 199051461,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590685963
    },
    {
        "content": "<p>I missed the talk but the slides are nice, thanks!  The definition of cofunctor is reminiscent of cartesian liftings in a fibration.  Can a cofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C \\to D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> be identified with something like a span <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>←</mo><mi>E</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">D \\leftarrow E \\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> of functors in which the first leg is a discrete opfibration and the second leg is bijective on objects?</p>",
        "id": 199052613,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1590686411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>: a similar characterisation of (internal) cofunctors is given in Clarke's <a href=\"http://www.cs.ox.ac.uk/ACT2019/preproceedings/Bryce%20Clarke.pdf\">Internal Lenses as Functors and Cofunctors</a>.</p>",
        "id": 199053576,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590686788
    },
    {
        "content": "<p>Not just similar but identical!  Thanks.</p>",
        "id": 199054447,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1590687098
    },
    {
        "content": "<p>The best kind of similar <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 199055163,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590687443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199052613\">said</a>:</p>\n<blockquote>\n<p>Can a cofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C \\to D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> be identified with something like a span <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>←</mo><mi>E</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">D \\leftarrow E \\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> of functors in which the first leg is a discrete opfibration and the second leg is bijective on objects?</p>\n</blockquote>\n<p>That's right. One interesting thing about this is that this kind of span is precisely those that induce coalgebra homomorphisms on the incidence coalgebras. It works the same for decomposition spaces more generally than category objects, but then the bijective-on-objects should be<br>\nbijective on objects and inner Kan fibration. (For category objects the inner-Kan-fibration condition is automatic.)</p>",
        "id": 199069597,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590693750
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199051461\">said</a>:</p>\n<blockquote>\n<p>Is there an expectation that all of this structure should also arise in the context of general polynomial functors on locally cartesian-closed categories, or did anything described in the talk particularly rely on Set?</p>\n</blockquote>\n<p>Yes, it should be exactly the same in the general case.</p>",
        "id": 199069820,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590693837
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199053576\">said</a>:</p>\n<blockquote>\n<p>A similar characterisation of (internal) cofunctors is given in Clarke's <a href=\"http://www.cs.ox.ac.uk/ACT2019/preproceedings/Bryce%20Clarke.pdf\">Internal Lenses as Functors and Cofunctors</a>.</p>\n</blockquote>\n<p>Thanks, this is very nice.</p>",
        "id": 199071417,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590694286
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276625\">Joachim Kock</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199069597\">said</a>:</p>\n<blockquote>\n<p>this kind of span is precisely those that induce coalgebra homomorphisms on the incidence coalgebras</p>\n</blockquote>\n<p>Sorry, I was too fast: not exactly the same, but an important example of. To get coalgebra homomorphisms, it is enough for the forward leg to be culf. Discrete opfibration is an example of that.</p>",
        "id": 199071966,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590694554
    },
    {
        "content": "<p>What does culf mean?</p>",
        "id": 199073092,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1590694906
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199073092\">said</a>:</p>\n<blockquote>\n<p>What does culf mean?</p>\n</blockquote>\n<p>Sorry --- it's for conservative and unique-lifting-of-factorisations, also known as discrete Conduché fibration. (In higher settings, the discrete-Conduché-fibration terminology becomes a bit akward, because discreteness is no longer appropriate (and in any case these things were discovered before Conduché.) Actually 'conservative' is implied by 'ulf' for categories,  but in more general simplicial situations, it is nice to have it as a separate condition.</p>",
        "id": 199074941,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590695516
    },
    {
        "content": "<p>Hey all, here's the permanent video: <br>\n<a href=\"https://youtu.be/3AOGDTr1zrY\">https://youtu.be/3AOGDTr1zrY</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"3AOGDTr1zrY\" href=\"https://youtu.be/3AOGDTr1zrY\"><img src=\"https://i.ytimg.com/vi/3AOGDTr1zrY/default.jpg\"></a></div>",
        "id": 199092803,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1590703995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199052613\">said</a>:</p>\n<blockquote>\n<p>The definition of cofunctor is reminiscent of cartesian liftings in a fibration. </p>\n</blockquote>\n<p>The link between cofunctors and opcartesian lifts for split opfibrations is the topic of my recent preprint: <a href=\"https://arxiv.org/abs/2004.00187\">Internal split opfibrations and cofunctors</a></p>",
        "id": 199093396,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1590704445
    },
    {
        "content": "<p>I didn't notice before, this is the Topos Institute youtube channel, a sign of the future</p>",
        "id": 199132798,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1590744936
    },
    {
        "content": "<p>CORRECTION</p>\n<p>In my comment after David's talk, I said there is a fifth monoidal structure, namely the Hadamard product (which for power series is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>∑</mo><msub><mi>a</mi><mi>i</mi></msub><msup><mi>z</mi><mi>i</mi></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mo>∑</mo><msub><mi>b</mi><mi>i</mi></msub><msup><mi>z</mi><mi>i</mi></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∑</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><msup><mi>z</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">(\\sum a_i z^i)(\\sum b_i z^i) = \\sum (a_i b_i) z^i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074674em;vertical-align:-0.25001em;\"></span><span class=\"mopen\">(</span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.074674em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span></span></span></span></span></span></span></span>). Unfortunately it's not true for the whole category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Poly}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"mord mathbf\">o</span><span class=\"mord mathbf\">l</span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">y</span></span></span></span></span> David talks about. The Hadamard product is functorial only in cartesian natural transformations, not in general ones :-(</p>\n<p>For example: we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>y</mi><mn>1</mn></msup><mi mathvariant=\"normal\">@</mi><msup><mi>y</mi><mn>1</mn></msup><mo>=</mo><msup><mi>y</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">y^1 @ y^1 = y^1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mord\">@</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span>; there is a map  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>y</mi><mn>1</mn></msup><mo>→</mo><msup><mi>y</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">y^1 \\to y^3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span> (induced by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>→</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">3\\to 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>); and we have  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>y</mi><mn>1</mn></msup><mi mathvariant=\"normal\">@</mi><msup><mi>y</mi><mn>3</mn></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">y^1 @ y^3 = 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mord\">@</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>. But there is no map from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>y</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">y^1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>.</p>\n<p>Sorry about the mistake. (I am too used to working only with cartesian natural transformations, which are the ones relevant for operad theory).</p>",
        "id": 199276862,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590874348
    },
    {
        "content": "<p>That actually resolves a difficulty I was having yesterday defining the Hadamard product; I thought I must be missing something because I couldn't get it to work. Thank you for clarifying!</p>",
        "id": 199277366,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590875182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296322\">@Jacques Carette</span> did you manage to dig up the further monoidal product you mentioned in the questions at the end of the talk?<br>\nEDIT: Ah, I see, that's what the thesis link was for.</p>",
        "id": 199301446,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1590923040
    },
    {
        "content": "<p>Right, that link was thrown there live, without explanation. The monoidal structure is called the 'arithmetic product' by those who first pointed it out (Maia and Mendez - <a href=\"https://www.sciencedirect.com/science/article/pii/S0012365X07007960\">https://www.sciencedirect.com/science/article/pii/S0012365X07007960</a>) from 2008.  The link to Brent's thesis is because he explains it nicely.  <span class=\"user-mention\" data-user-id=\"276625\">@Joachim Kock</span> said that this might also be the Dirichlet product?</p>\n<p>I've also found the set of slides <a href=\"https://www.slideshare.net/vieplivee/mit-0309-nopause\">https://www.slideshare.net/vieplivee/mit-0309-nopause</a> that introduces the relation with a product on graphs to be quite interesting.</p>",
        "id": 199303147,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1590926034
    },
    {
        "content": "<p>The arithmetic product of species is also called the Dirichlet product, yes.</p>",
        "id": 199303205,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590926137
    },
    {
        "content": "<p>Did anyone work out if that restricts to Poly in a nice way? It certainly doesn't in the finitary world, but we have that much more flexibility here.</p>",
        "id": 199309517,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1590938026
    },
    {
        "content": "<p>David described the Dirichlet product of polynomials in his talk (the tensor product <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span>).</p>",
        "id": 199309699,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590938377
    },
    {
        "content": "<p>Oh my mistake, I was looking at the <a href=\"https://en.wikipedia.org/wiki/Dirichlet_convolution\">Dirichlet convolution</a>, which from its unit I gather is a distinct concept, and isn't even related to polynomials...</p>",
        "id": 199310077,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1590939049
    },
    {
        "content": "<p>By the way, I listed the 5 main monoidal structures on species <a href=\"https://ncatlab.org/nlab/show/species#operations_on_species\">on the nLab</a>.</p>",
        "id": 199315649,
        "sender_full_name": "John Baez",
        "timestamp": 1590949243
    },
    {
        "content": "<p>Does anyone know why Poly is the subcategory of [Set,Set] spanned by functors that preserve connected limits?</p>",
        "id": 199321762,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1590960253
    },
    {
        "content": "<p><a href=\"https://arxiv.org/pdf/0906.4931.pdf\">Polynomial functors and polynomial monads</a> gives proofs/references for the equivalence of this characterisation with others in Section 1.18.</p>",
        "id": 199322314,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1590961395
    },
    {
        "content": "<p>If a functor preserves connected limits and the terminal, then it preserves all limits. So if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>S</mi><mi>e</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">F: Set \\to Set</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span></span></span></span> preserves connected limits, then the evident induced functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>F</mi><mo>∗</mo></msup><mo>:</mo><mi>S</mi><mi>e</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi mathvariant=\"normal\">/</mi><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F^\\ast: Set \\to Set/F(1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">/</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>, taking <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">!</mo><mo stretchy=\"false\">)</mo><mo>:</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(!): F(X) \\to F(1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mclose\">!</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>, preserves all limits. Then, pulling back along each element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>:</mo><mn>1</mn><mo>→</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x: 1 \\to F(1)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> gives a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mo>∗</mo></msup><msup><mi>F</mi><mo>∗</mo></msup><mo>:</mo><mi>S</mi><mi>e</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo>≃</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">x^\\ast F^\\ast: Set \\to Set/(F(1) \\to Set/1 \\simeq Set</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">/</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span></span></span></span> which preserves limits, hence is representable, say a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>hom</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>S</mi><mrow><mi>F</mi><mo separator=\"true\">,</mo><mi>x</mi></mrow></msub><mo separator=\"true\">,</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hom(S_{F, x}, -)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mop\">hom</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span>. In the end we get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>≅</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msub><mi>hom</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>S</mi><mrow><mi>F</mi><mo separator=\"true\">,</mo><mi>x</mi></mrow></msub><mo separator=\"true\">,</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F \\cong \\sum_{x \\in F(1)} \\hom(S_{F, x}, -)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.22471em;vertical-align:-0.47471em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.22528999999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.47471em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">hom</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 199322361,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1590961453
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"277611\">@Todd Trimble</span>.  Why does the pullback <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mo lspace=\"0em\" rspace=\"0em\">∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">x^{*}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span> preserve limits?  Why must a set functor preserving limits be representable?</p>",
        "id": 199338083,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1590988964
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> asked:</p>\n<blockquote>\n<p>Is there an expectation that all of this structure should also arise in the context of general polynomial functors on locally cartesian-closed categories, or did anything described in the talk particularly rely on Set?</p>\n</blockquote>\n<p>and I replied</p>\n<blockquote>\n<p>Yes, it should be exactly the same in the general case.</p>\n</blockquote>\n<p>It was silly of me to answer like this.</p>\n<p>There are several subtleties or even problems, when passing from Set to more general locally cartesian categories: for example sometimes you have to demand that some objects are discrete/complemented/decidable; you have to make more careful distinction between internal sums and external sums; you generally have to assume natural transformations are strong (that's automatic in Set). Altogether I think my answer was bad.</p>",
        "id": 199341977,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590994953
    },
    {
        "content": "<p>I have already made several comments that were too fast :-( I should take a break.</p>",
        "id": 199341995,
        "sender_full_name": "Joachim Kock",
        "timestamp": 1590994999
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280784\">Joshua Meyers</span> <a href=\"#narrow/stream/229457-MIT-Categories.20Seminar/topic/May.2028.3A.20David.20Spivak's.20talk/near/199338083\">said</a>:</p>\n<blockquote>\n<p>Thanks <span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span>.  Why does the pullback <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mo lspace=\"0em\" rspace=\"0em\">∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">x^{*}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span> preserve limits?  Why must a set functor preserving limits be representable?</p>\n</blockquote>\n<p>The functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">x^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> preserves limits because it has a left adjoint, namely the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mo stretchy=\"false\">!</mo></msub><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mi mathvariant=\"normal\">/</mi><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">x_!\\colon \\mathsf{Set} \\to \\mathsf{Set}/X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">!</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span><span class=\"mord\">/</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> which sends a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> to the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mn>1</mn><mover><mo stretchy=\"true\">→</mo><mpadded lspace=\"0.3em\" width=\"+0.6em\"><mi>x</mi></mpadded></mover><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">A \\to 1 \\xrightarrow{x} X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.934392em;vertical-align:-0.01100000000000001em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.923392em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg height=\"0.522em\" preserveAspectRatio=\"xMaxYMin slice\" viewBox=\"0 0 400000 522\" width=\"400em\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128 -16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20  11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7  39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85 -40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5 -12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67  151.7 139 205zm0 0v40h399900v-40z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.01100000000000001em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.</p>\n<p>If a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">F\\colon \\mathsf{Set} \\to \\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span> preserves limits, then it has a left adjoint <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">L</span></span></span></span> by the special adjoint functor theorem, hence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>≅</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(X) \\cong \\mathsf{Set}(1, F(X)) \\cong \\mathsf{Set}(L(1), X)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">L</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>, which says that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span></span></span></span> is representable.</p>",
        "id": 199349005,
        "sender_full_name": "Paolo Capriotti",
        "timestamp": 1591002255
    }
]