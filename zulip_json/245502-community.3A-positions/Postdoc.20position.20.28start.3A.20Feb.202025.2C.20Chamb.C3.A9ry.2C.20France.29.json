[
    {
        "content": "<p>Hi all,</p>\n<p>The <a href=\"https://lama.univ-smb.fr\">LAMA</a> offers a full-time, 18 month postdoc position starting February 2025. The deadline is really soon: December 9! (Although the position should be re-published if not filled.)</p>\n<p>The details are here</p>\n<p><a href=\"https://univ-smb.nous-recrutons.fr/poste/nzyn17a55c-chercheur-post-doctorant-fh-usmb-shine-guli-anr-22-exes-0017/\">https://univ-smb.nous-recrutons.fr/poste/nzyn17a55c-chercheur-post-doctorant-fh-usmb-shine-guli-anr-22-exes-0017/</a></p>\n<p>and there</p>\n<p><a href=\"https://www.univ-smb.fr/wp-content/uploads/2024/11/offre-emploi-post-doc-2024-100__lama_guli_vf.pdf\">https://www.univ-smb.fr/wp-content/uploads/2024/11/offre-emploi-post-doc-2024-100__lama_guli_vf.pdf</a></p>\n<p>but let us give a brief summary.</p>\n<p>Most numerical simulation programs compute with very little checks for physical consistency. Typically, adding a length (in metres) to a force (in newtons) is not detected as an error by the programming language. But the very purpose of type systems is to detect inconsistencies of a similar nature. E.g., they prevent addition of numerical values with arrays. Until now, programming language theorists have proposed solutions that are conceptually clear, but too naive to cover all use cases. On the other hand, other attempts tried to handle numerous cases independently, but eventually came out as too complex to be usable.</p>\n<p>The goal of the present postdoc position is to try and design a conceptually clear solution covering all use cases.</p>\n<p>The successful applicant will be based at LAMA, and work with <span class=\"user-mention\" data-user-id=\"383799\">@Tom Hirschowitz</span> and <span class=\"user-mention\" data-user-id=\"665763\">@Pierre Hyvernat</span>, but also with <span class=\"user-mention\" data-user-id=\"651326\">@Vincent Reverdy</span> (who is a numerical physicist and the Particle Physics Laboratory in Annecy).</p>\n<p>Relevant skills for the position include: type theory, category theory, programming language theory, programming in proof assistants, implementation of programming languages. It is definitely not necessary to possess all these skills to be successful.</p>\n<p>Please don't hesitate to contact us if you have any question,<br>\nTom Hirschowitz<br>\nPierre Hyvernat<br>\nVincent Reverdy</p>",
        "id": 483029124,
        "sender_full_name": "Tom Hirschowitz",
        "timestamp": 1731938216
    }
]