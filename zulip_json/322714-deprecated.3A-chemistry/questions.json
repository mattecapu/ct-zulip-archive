[
    {
        "content": "<p>This is a section specifically for <em>questions</em> related to the AMS Mathematical Research Community on category theory and chemistry.  Feel free to ask any question here!</p>",
        "id": 281234720,
        "sender_full_name": "John Baez",
        "timestamp": 1651707085
    },
    {
        "content": "<p>Here is a question I got:</p>\n<blockquote>\n<p>1) You gonna talk later about 'open' chemical reaction. What is the difference between open and closed chemical reactions? Are there some examples for each of them? So any chemical reaction is either open or closed? i.e can not be both open and closed at the same time?  Last time, if am not mistaken we talked about Petri nets and defined them as open systems (a system that interacts with its environment).</p>\n</blockquote>",
        "id": 281235100,
        "sender_full_name": "John Baez",
        "timestamp": 1651707369
    },
    {
        "content": "<p>It doesn't make sense to say an individual chemical reaction is open or closed.  What make sense is to talk about 1) a Petri net with rates, and 2) an open Petri net with rates.</p>",
        "id": 281235189,
        "sender_full_name": "John Baez",
        "timestamp": 1651707450
    },
    {
        "content": "<p>I informally explained Petri nets with rates on Tuesday; but it's good to know the precise definition:</p>\n<p>Petri nets are defined in Definition 2 <a href=\"http://math.ucr.edu/home/baez/RxNet.pdf\">here</a>, and Petri nets with rates are defined in Definition 8.   (In Definition 8 I call them \"reaction networks with rates\", but that is probably confusing.  Let's call them Petri nets with rates!)   So, please take a look at these.</p>",
        "id": 281235489,
        "sender_full_name": "John Baez",
        "timestamp": 1651707620
    },
    {
        "content": "<p>We use Petri nets with rates to get differential equations describing how the concentrations of a bunch of chemicals change over time due to reactions.</p>",
        "id": 281235566,
        "sender_full_name": "John Baez",
        "timestamp": 1651707683
    },
    {
        "content": "<p>But the key to using category theory is to study <em>open</em> Petri nets with rates.   I drew some pictures of them on Tuesday, but again it's good to know the precise definition.</p>",
        "id": 281235692,
        "sender_full_name": "John Baez",
        "timestamp": 1651707775
    },
    {
        "content": "<p>Open Petri nets are defined in Definition 3, and open Petri nets with rates are defined in Definition 9.    (Again, I foolishly called them \"open reaction networks\" and \"open reaction networks with rates.)</p>",
        "id": 281235922,
        "sender_full_name": "John Baez",
        "timestamp": 1651707962
    },
    {
        "content": "<p><strong>The idea is that an <em>open</em> Petri net with rates lets you study a bunch of chemical reactions where chemicals can also flow in and out of the whole system.</strong></p>",
        "id": 281235976,
        "sender_full_name": "John Baez",
        "timestamp": 1651707998
    },
    {
        "content": "<p>To understand this, it may be easiest to go to page 18 and start reading where it says </p>\n<blockquote>\n<p>\"To make these ideas more concrete, let us see in an example how to go from<br>\nan open reaction network with rates to an open dynamical system and then its<br>\nopen rate equation.\"</p>\n</blockquote>",
        "id": 281236048,
        "sender_full_name": "John Baez",
        "timestamp": 1651708074
    },
    {
        "content": "<p>I also gave a <a href=\"https://www.youtube.com/watch?v=IyJP_7ucwWo\">talk on this</a>, and I explain how to get a system of differential equations from an <em>open</em> Petri nets starting at minute 25:00.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"IyJP_7ucwWo\" href=\"https://www.youtube.com/watch?v=IyJP_7ucwWo\"><img src=\"https://uploads.zulipusercontent.net/c700bfd2047d424c50a91dcfdedba4a09e38bb20/68747470733a2f2f692e7974696d672e636f6d2f76692f49794a505f37756377576f2f64656661756c742e6a7067\"></a></div>",
        "id": 281236441,
        "sender_full_name": "John Baez",
        "timestamp": 1651708402
    },
    {
        "content": "<blockquote>\n<p>2) When considering computer language and monoidal category C. Hereby a computer Language, you mean this could be C++, Java etc? by a program here you mean a code?</p>\n</blockquote>\n<p>Yes, in any computer language where you can write a program that takes as input data of type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and gives as output data of type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, you can think of that program as a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f: X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>.</p>",
        "id": 281236538,
        "sender_full_name": "John Baez",
        "timestamp": 1651708493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/questions/near/281236538\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>2) When considering computer language and monoidal category C. Hereby a computer Language, you mean this could be C++, Java etc? by a program here you mean a code?</p>\n</blockquote>\n<p>Yes, in any computer language where you can write a program that takes as input data of type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and gives as output data of type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, you can think of that program as a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f: X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>.</p>\n</blockquote>\n<p>Adding onto this: there are horribly non-type-centric languages where it is not as meaningful as one might hope to speak of the \"input and output\" types of routines.  For example, if one adopts a style of C programming that involves lots of arguments-passed-by-reference, then in some sense one would like to say that the by-value input and output types are both producted with those arguments.  Similarly with other \"side effects\".   If doesn't do this, then one still gets a category but the resulting syntax-semantics relation feels far from functorial.  In PL there is recentish and to-me-marvelously-exciting work on a type theory of \"EFFECTS\", which avoids both the ridgid non-mutability of haskell and the amorphous spaghetti of C.</p>",
        "id": 281338718,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1651774827
    },
    {
        "content": "<p>Silly question: what's a good / preferred notion of arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>R</mi><mo>→</mo><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f: R \\to R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> for reaction networks <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>? </p>\n<p>Should an arrow just be a graph homomorphism mapping complexes to complexes, transitions to transition and which is monotone w.r.t. weights? Or should it be a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>→</mo><msup><mi>S</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">S \\to S&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> from the species of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> to those of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> which induces a graph homomorphism described as above? Or should it be something else entirely? </p>\n<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>  from you paper with Blake, it looks to me that you're implicitly using the second notion (maps between sets of species) since it looks like the arrows within a homcategory of the bicategory of open reaction networks are equivalence classes of spans of sets. Am I going in the right direction here? <br>\nIn your book you mention a <a href=\"https://arxiv.org/pdf/1008.5359.pdf\">paper by Deville and Lerman</a> , is that a good place to find a discussion about different ways of defining arrows between reaction networks? Or do the naïve ideas I sketched above suffice? </p>\n<p>Thanks a lot! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 281857103,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1652203043
    },
    {
        "content": "<p>Hi!   I don't remember any work on morphisms between reaction networks besides my own.  In particular, I'm pretty sure DeVille and Lerman didn't talk about this.</p>",
        "id": 281919146,
        "sender_full_name": "John Baez",
        "timestamp": 1652245476
    },
    {
        "content": "<p>For my own work I use morphisms between Petri nets, not morphisms between reaction networks.</p>",
        "id": 281919168,
        "sender_full_name": "John Baez",
        "timestamp": 1652245523
    },
    {
        "content": "<p>We can translate back and forth between reaction networks and Petri nets, as I described in our last Zoom meeting, but Petri nets seem to be better in a bunch of ways.</p>",
        "id": 281919260,
        "sender_full_name": "John Baez",
        "timestamp": 1652245566
    },
    {
        "content": "<p>There's a pretty obvious notion of morphism between Petri nets, explained for example on page 26 here:</p>\n<ul>\n<li>John Baez, Kenny Courser and Christina Vasilakopolou, <a href=\"https://math.ucr.edu/home/baez/cospans.pdf\">Structured versus decorated cospans</a>.</li>\n</ul>",
        "id": 281919472,
        "sender_full_name": "John Baez",
        "timestamp": 1652245812
    },
    {
        "content": "<p>Morphisms between Petri nets with rates are a bit more tricky; my first definition of these (in some paper I won't show you) was <em>wrong</em>, and it was only after talking to <span class=\"user-mention\" data-user-id=\"276589\">@Sophie Libkind</span> that I realized this and corrected it.   The corrected version is <a href=\"https://math.ucr.edu/home/baez/cospans.pdf\">on the top of page 27</a> of that same paper.</p>",
        "id": 281919684,
        "sender_full_name": "John Baez",
        "timestamp": 1652246058
    },
    {
        "content": "<p>Sorry to make you look at this paper, but it saves me some time not to write the definition here.</p>",
        "id": 281919813,
        "sender_full_name": "John Baez",
        "timestamp": 1652246236
    },
    {
        "content": "<p>Briefly: a map between Petri nets is a map sending species to species, and also a map sending transitions to transitions; these maps need to be compatible with how every transition has a bunch of species as input and a bunch of species as output.</p>",
        "id": 281919904,
        "sender_full_name": "John Baez",
        "timestamp": 1652246332
    },
    {
        "content": "<p>For Petri nets with rates, the map sending transitions to transitions also needs to be compatible with the rate constants.</p>",
        "id": 281919928,
        "sender_full_name": "John Baez",
        "timestamp": 1652246372
    },
    {
        "content": "<p>\"Compatible\" is a vague description that's made completely precise using some commutative diagrams and an equation.</p>",
        "id": 281920005,
        "sender_full_name": "John Baez",
        "timestamp": 1652246430
    },
    {
        "content": "<p>Now, back to what you started out saying: since we can translate between Petri nets and reaction networks, we can figure out how the concept of <em>morphism between Petri nets</em> gives a notion of <em>morphism between reaction networks</em>.</p>",
        "id": 281920065,
        "sender_full_name": "John Baez",
        "timestamp": 1652246517
    },
    {
        "content": "<p>I've never actually done this .   You might enjoy giving it a try.   I think it'll be more like this:</p>\n<blockquote>\n<p>a graph homomorphism mapping complexes to complexes, transitions to transitions...</p>\n</blockquote>\n<p>than your other choice.</p>",
        "id": 281920164,
        "sender_full_name": "John Baez",
        "timestamp": 1652246631
    },
    {
        "content": "<p>When it comes to reaction networks <em>with rates</em>, I think that if several transitions are mapped to one, their rate constants must add up to equal that one's rate constant.</p>",
        "id": 281920235,
        "sender_full_name": "John Baez",
        "timestamp": 1652246688
    },
    {
        "content": "<p>\"Monotone\" is not good enough because we want the differential equations they give to obey a very precise relation (discussed in my paper with Kenny and Christina), not just some sort of inequality.</p>",
        "id": 281920270,
        "sender_full_name": "John Baez",
        "timestamp": 1652246737
    },
    {
        "content": "<p>Hi John, thanks for the great answer! </p>\n<p>And thanks for pointing the paper with Kenny and Christina out, it's good to have this at hand!</p>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/questions/near/281920270\">said</a>:</p>\n<blockquote>\n<p>\"Monotone\" is not good enough because we want the differential equations they give to obey a very precise relation (discussed in my paper with Kenny and Christina), not just some sort of inequality.</p>\n</blockquote>\n<p>This sounds like a very important insight that I didn't pick up from your paper with Blake; all the more reason to read the structured vs decorated cospans paper <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 281923643,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1652250500
    }
]