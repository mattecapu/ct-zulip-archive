[
    {
        "content": "<p>A thought  stemming from our work on additive invariants on open petri nets (which could possibly be a follow-up paper) is that we really should think about pushout-preserving functors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">N</mi><mo>≤</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}_\\leq </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2952em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">≤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> or to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">F</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{FinSet}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">FinSet</span></span></span></span></span>. Since there will be many more such functors in these cases.</p>\n<p>For open graphs where the interfaces are cliques, there should be uncountably-many such functors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">N</mi><mo>≤</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}_\\leq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2952em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">≤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> (I'm saying this based on <a href=\"https://arxiv.org/abs/2104.01841\">my paper with Z. Kocsis</a> and based on <a href=\"https://link.springer.com/article/10.1007/BF01917434\">this paper by R. Halin</a>). So I suspect that the situation gets more interesting for open petri nets as well. </p>\n<p>All of this is also not even mentioning that most of the (graph-theoretically) interesting functors from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">G</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">p</mi><mi mathvariant=\"bold\">h</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Grph}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Grph</span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">F</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{FinSet}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">FinSet</span></span></span></span></span> aren't even pushout-preserving... so there's probably a whole other world to explore there even for Petri nets!</p>",
        "id": 286927239,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1655823871
    },
    {
        "content": "<p>This is neat.   Invariants (functors) are useful when they are powerful (close to faithful) and easy to compute, but these two properties tend to conflict each other.  So it's nice to explore the world of invariants of open Petri nets that are more powerful but a bit harder to compute than functors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{B} \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">B</span><span class=\"mord mathbb\">N</span></span></span></span>.</p>",
        "id": 286931371,
        "sender_full_name": "John Baez",
        "timestamp": 1655825533
    },
    {
        "content": "<p>Having \"uncountably\" many functors is not necessarily as amazing as it sounds, since there are uncountably many functions from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>T</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{T,F\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">}</span></span></span></span>, but in some sense they're all \"generated\" from the functions that take the value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> at one number and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> at all others.</p>",
        "id": 286932143,
        "sender_full_name": "John Baez",
        "timestamp": 1655825793
    },
    {
        "content": "<p>(\"Some sense\": for example, these functions form a Boolean algebra, which is generated as a Boolean algebra by the characteristic functions of singletons.)</p>",
        "id": 286932338,
        "sender_full_name": "John Baez",
        "timestamp": 1655825846
    },
    {
        "content": "<p>Hmm, yes, that's a good point. <br>\nIn think that something living between (in terms of `complexity') <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"bold\">N</mi><mo>≤</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}_\\leq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9313em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2952em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">≤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> should be a good place to look</p>",
        "id": 286934540,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1655826622
    },
    {
        "content": "<p>Although, in relation to your second point, I know that, for Graphs whose interfaces are cliques, the maxing functors are quite interesting (they include stuff like the <a href=\"https://en.wikipedia.org/wiki/Hadwiger_number\">Hadwiger number</a>, modified chromatic number and modified connectivity number).</p>",
        "id": 286934953,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1655826771
    },
    {
        "content": "<p>so I'm guessing that, by analogy, there would probably be also a fair amount of structure that would crop-up in Petri nets for similar functors?</p>",
        "id": 286935125,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1655826833
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/286932338\">said</a>:</p>\n<blockquote>\n<p>(\"Some sense\": for example, these functions form a Boolean algebra, which is generated as a Boolean algebra by the characteristic functions of singletons.)</p>\n</blockquote>\n<p>Nitpick: we probably want to say \"complete lattice\" instead of \"boolean algebra\", since the latter just have finitary operations.  Said another way, those indicator functions generate the sub-algebra of all finite and all cofinite support functions rather than the full algebra of all functions.</p>",
        "id": 286955405,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1655835823
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481356\">Benjamin Merlin Bumpus</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/286927239\">said</a>:</p>\n<blockquote>\n<p>A thought  stemming from our work on additive invariants on open petri nets (which could possibly be a follow-up paper) is that we really should think about pushout-preserving functors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">N</mi><mo>≤</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}_\\leq </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2952em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">≤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> or to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">F</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{FinSet}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">FinSet</span></span></span></span></span>. Since there will be many more such functors in these cases.</p>\n</blockquote>\n<p>Pushout preservation is a pretty strong condition.  For example, we can build any closed petri net by starting with connected closed petri nets with one or zero transitions and taking pushouts along sets (i.e. transitionless closed petri nets).  But finite sets themselves are either empty or are pushouts of smaller finite sets along an empty set.</p>\n<p>Thus, a  class function from ClosedPetri to N-as-a-poset that sends pushouts to pushouts is determined by where it sends the empty set, the singleton set, and connected closed petri nets with exactly one transition.  I think this gives us another classification theorem of the form \"every such class function sends a closed petri net to max ( b,  max (instead of sum) over a_i ), where i ranges through the degree-labeled transitions present in the closed petri net \".  Here, b and the countably many a_i are freely chooseable natural numbers.</p>",
        "id": 286956927,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1655836625
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281272\">Sam Tenka</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/286955405\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/286932338\">said</a>:</p>\n<blockquote>\n<p>(\"Some sense\": for example, these functions form a Boolean algebra, which is generated as a Boolean algebra by the characteristic functions of singletons.)</p>\n</blockquote>\n<p>Nitpick: we probably want to say \"complete lattice\" instead of \"boolean algebra\", since the latter just have finitary operations.  </p>\n</blockquote>\n<p>Yes you're right... I secretly meant \"complete Boolean algebra\".</p>",
        "id": 286983137,
        "sender_full_name": "John Baez",
        "timestamp": 1655851260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281272\">Sam Tenka</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/286956927\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"481356\">Benjamin Merlin Bumpus</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/286927239\">said</a>:</p>\n<blockquote>\n<p>A thought  stemming from our work on additive invariants on open petri nets (which could possibly be a follow-up paper) is that we really should think about pushout-preserving functors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">N</mi><mo>≤</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}_\\leq </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2952em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">≤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> or to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">F</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{FinSet}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">FinSet</span></span></span></span></span>. Since there will be many more such functors in these cases.</p>\n</blockquote>\n<p>Pushout preservation is a pretty strong condition.  For example, we can build any closed petri net by starting with connected closed petri nets with one or zero transitions and taking pushouts along sets (i.e. transitionless closed petri nets).  But finite sets themselves are either empty or are pushouts of smaller finite sets along an empty set.</p>\n<p>Thus, a  class function from ClosedPetri to N-as-a-poset that sends pushouts to pushouts is determined by where it sends the empty set, the singleton set, and connected closed petri nets with exactly one transition.  I think this gives us another classification theorem of the form \"every such class function sends a closed petri net to max ( b,  max (instead of sum) over a_i ), where i ranges through the degree-labeled transitions present in the closed petri net \".  Here, b and the countably many a_i are freely chooseable natural numbers.</p>\n</blockquote>\n<p>I agree with what you said. However, I should point out that I was handvawing a bit earlier: for the case of graphs, you get lots of interesting functors if you have the following set-up: <br>\n-- you are looking at functors of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><msub><mrow><mi mathvariant=\"bold\">G</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">p</mi><mi mathvariant=\"bold\">h</mi></mrow><mrow><mi>m</mi><mi>o</mi><mi>n</mi><mi>o</mi></mrow></msub><mo>→</mo><msub><mi mathvariant=\"double-struck\">N</mi><mo>≤</mo></msub></mrow><annotation encoding=\"application/x-tex\">F: \\mathbf{Grph}_{mono} \\to \\mathbb{N}_\\leq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Grph</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2952em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">≤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"bold\">G</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">p</mi><mi mathvariant=\"bold\">h</mi></mrow><mrow><mi>m</mi><mi>o</mi><mi>n</mi><mi>o</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Grph}_{mono} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Grph</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span></span></span></span> is the category of graphs and and monomorphisms<br>\n-- rather than  being pushout preserving (since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"bold\">G</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">p</mi><mi mathvariant=\"bold\">h</mi></mrow><mrow><mi>m</mi><mi>o</mi><mi>n</mi><mi>o</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Grph}_{mono} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Grph</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span></span></span></span> doesn't have pushouts) , <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> is required to be <strong><em>proxy-pushout</em></strong> preserving whenever we take proxy-pushouts over complete graphs. </p>\n<p>(Another note, I tend to gravitate to thinking about the \"closed\" version of things for these kinds of questions. This has to do with what we discussed last week in our meeting:  in the monic \"open\" case we get the \"accidental\" <em>left-and-right private-node functors</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">L</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">R</span></span></span></span> which are pretty much just a by-product of the choice of cospan and hence not really a feature of the Petri net itself... Does that make sense? I'm not yet caffeinated, and I feel like I explained this better last week <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span> ) </p>\n<p>(P.S. Zoltan and I introduced proxy-pushouts in the paper I linked and, as I recently found-out, <span class=\"user-mention\" data-user-id=\"294337\">@Matthew Di Meglio</span>  adopted this terminology in <a href=\"https://mdimeglio.github.io/papers/The_category_of_asymmetric_lenses_and_its_proxy_pullbacks.pdf\">Cpt. 3 of his thesis</a> (and he does lots of cool stuff with it!); so, if you're interested, you can read a bit about what a proxy-pushout is in either of these.)</p>",
        "id": 287017123,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1655884398
    },
    {
        "content": "<p>Excited to learn more about this from you!  Haven't yet had time or caffeine myself to digest.<br>\nNote: in the result written in the chemistry subgroup, we find a whole bunch of \"accidental\" functors related to the left and right private node functors.  Though accidental, they are interersting!</p>",
        "id": 287066625,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1655910121
    },
    {
        "content": "<p>oh, yes, I agree, they are definitely interesting since they describe invariants that are inherent to the \"openness\" <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\nall I meant to say is that I think it's a good idea to study both kinds (from \"open\" and \"closed\" worlds) independently.. but simultaneously.</p>",
        "id": 287155350,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1655970544
    },
    {
        "content": "<p>Yesterday <span class=\"user-mention\" data-user-id=\"281272\">@Sam Tenka</span>,  <span class=\"user-mention\" data-user-id=\"497033\">@Layla</span>, <span class=\"user-mention\" data-user-id=\"496337\">@Jordy Lopez Garcia</span> and I had a rather satisfying meeting in which we essentially finished off all of the remaining cases of the \"additive invariants of Petri nets\" project (which we'll write-up soon and share with the rest of you <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> ). </p>\n<p>Anyway, one big take-away for me was that, in both the \"regular\" and the monic cases, the additive invariants seem to be generated by two families <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Set}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3303em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Set</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Petri}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Petri</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of functors. </p>\n<p>The first family --  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Set}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3303em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Set</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> -- consists of all the functors that generate (as linear combinations) the additive invariants <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">p</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">F</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Csp}(\\mathbf{FinSet}) \\to \\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Csp</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">FinSet</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span>.</p>\n<p>The second family -- <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Petri}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Petri</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> -- consists of the functors which generate (as linear combinations) the following class of  functors: those of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi></mrow><mo>→</mo><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Petri} \\to \\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Petri</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span> which are \"additive over pushouts\". </p>\n<p>There's probably a slicker way to write this second condition, but I'm running late for a meeting, so I'll have to just think about it later. </p>\n<p>Anyway, these observations make me wonder whether something like the situation above is always is the case. What I mean is, suppose I decorate a cospan category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Csp}(\\mathbf{C})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Csp</span></span><span class=\"mopen\">(</span><span class=\"mord mathbf\">C</span><span class=\"mclose\">)</span></span></span></span> with objects form some category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">D</span></span></span></span>; is it true that the additive invariants from this decorated cospan category are always going to be generated by two families which respectively  generate the \"additive\" invariants <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">C</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Csp}(\\mathbf{C}) \\to \\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Csp</span></span><span class=\"mopen\">(</span><span class=\"mord mathbf\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span> and the \"additive-over-pushout\"-invariants from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">D</span></span></span></span>? </p>\n<p>I suspect that this naïve conjecture isn't true in general, but I do think that some better reformulation of the conjecture is indeed true.. </p>\n<p>Anyway, I find this pretty exciting <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  .. but I'm late for my meeting, so bye! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 287309495,
        "sender_full_name": "Benjamin Merlin Bumpus (he/him)",
        "timestamp": 1656063322
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481356\">Benjamin Merlin Bumpus</span> <a href=\"#narrow/stream/322714-practice.3A-chemistry/topic/invariants.20of.20Petri.20nets/near/287309495\">said</a>:</p>\n<blockquote>\n<p>Yesterday <span class=\"user-mention silent\" data-user-id=\"281272\">Sam Tenka</span>,  <span class=\"user-mention silent\" data-user-id=\"497033\">Layla</span>, <span class=\"user-mention silent\" data-user-id=\"496337\">Jordy Lopez Garcia</span> and I had a rather satisfying meeting in which we essentially finished off all of the remaining cases of the \"additive invariants of Petri nets\" project (which we'll write-up soon and share with the rest of you <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> ). </p>\n<p>Anyway, one big take-away for me was that, in both the \"regular\" and the monic cases, the additive invariants seem to be generated by two families <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Set}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3303em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Set</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Petri}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Petri</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of functors. </p>\n<p>The first family --  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Set}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3303em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Set</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> -- consists of all the functors that generate (as linear combinations) the additive invariants <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">p</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">F</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Csp}(\\mathbf{FinSet}) \\to \\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Csp</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">FinSet</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span>.</p>\n<p>The second family -- <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}_{\\mathbf{Petri}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0993em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Petri</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> -- consists of the functors which generate (as linear combinations) the following class of  functors: those of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi></mrow><mo>→</mo><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Petri} \\to \\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Petri</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span> which are \"additive over pushouts\". </p>\n<p>There's probably a slicker way to write this second condition, but I'm running late for a meeting, so I'll have to just think about it later. </p>\n<p>Anyway, these observations make me wonder whether something like the situation above is always is the case. What I mean is, suppose I decorate a cospan category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Csp}(\\mathbf{C})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Csp</span></span><span class=\"mopen\">(</span><span class=\"mord mathbf\">C</span><span class=\"mclose\">)</span></span></span></span> with objects from some category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">D</span></span></span></span>; is it true that the additive invariants from this decorated cospan category are always going to be generated by two families which respectively  generate the \"additive\" invariants <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">C</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Csp}(\\mathbf{C}) \\to \\mathbf{B}\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Csp</span></span><span class=\"mopen\">(</span><span class=\"mord mathbf\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbf\">B</span><span class=\"mord mathbb\">N</span></span></span></span> and the \"additive-over-pushout\"-invariants from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathbf\">D</span></span></span></span>? </p>\n</blockquote>\n<p>Something like that would be really cool.   If you're doing decorated cospans I suspect the answer has to depend on the functor used to define the decorated cospan category, which recall is a lax monoidal pseudofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi mathvariant=\"sans-serif\">C</mi><mo>→</mo><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">F: \\mathsf{C} \\to \\mathbf{Cat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span></span></span></span>.</p>",
        "id": 287360184,
        "sender_full_name": "John Baez",
        "timestamp": 1656091542
    },
    {
        "content": "<p>When you talk about \"decorating with objects from some category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">D</span></span></span></span>, it sounds like you're really talking about <em>structured</em> cospans: setting up a structured cospans category involves a left adjoint <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>:</mo><mi mathvariant=\"sans-serif\">C</mi><mo>→</mo><mi mathvariant=\"sans-serif\">D</mi></mrow><annotation encoding=\"application/x-tex\">L : \\mathsf{C} \\to \\mathsf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">D</span></span></span></span>.</p>",
        "id": 287360302,
        "sender_full_name": "John Baez",
        "timestamp": 1656091622
    },
    {
        "content": "<p>In this case I feel the answer to your question of \"classifying all the additive invariants\" must involve not just <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">D</span></span></span></span> but also the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>:</mo><mi mathvariant=\"sans-serif\">C</mi><mo>→</mo><mi mathvariant=\"sans-serif\">D</mi></mrow><annotation encoding=\"application/x-tex\">L : \\mathsf{C} \\to \\mathsf{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">D</span></span></span></span>.</p>",
        "id": 287360385,
        "sender_full_name": "John Baez",
        "timestamp": 1656091675
    },
    {
        "content": "<p>But anyway,  maybe carefully handling the case of Petri nets will give you a better feeling for these more general questions.</p>",
        "id": 287360519,
        "sender_full_name": "John Baez",
        "timestamp": 1656091732
    }
]