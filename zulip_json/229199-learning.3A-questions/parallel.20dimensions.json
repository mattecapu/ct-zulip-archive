[
    {
        "content": "<p>String diagrams are great!  For example, they are really helpful when doing tensor computations in linear algebra.  One often uses one of the page's dimensions to denote arrow composition and another to denote tensor (in other words, one often works with Vect equipped with tensor as its the monoidal operation).  But there are times when direct sum is useful, too.  Are there standard notations for working with two monoidal operations at once?  This is not a math question so much as a psychological question about eyeball ergonomics.</p>",
        "id": 193109249,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1586211304
    },
    {
        "content": "<p>Many people have struggled with this, but basically they all give up.</p>",
        "id": 193109679,
        "sender_full_name": "John Baez",
        "timestamp": 1586211532
    },
    {
        "content": "<p>Wait, really? Me and <span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span> are working on this recently. It's not quite straightforward but it doesn't seem <em>that</em> difficult. I can't describe the surface diagrams in words though</p>",
        "id": 193110935,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586212259
    },
    {
        "content": "<p>Certainly I've been informally using surface diagrams for 2 interacting monoidal products in game theory, on the assumption that probably nothing will go wrong</p>",
        "id": 193110997,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586212299
    },
    {
        "content": "<p>(I'll come back to this tomorrow, going to sleep now)</p>",
        "id": 193111095,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586212358
    },
    {
        "content": "<p>there's a recent StackExchange question on this topic: <a href=\"https://math.stackexchange.com/questions/3583052/string-diagrams-when-you-have-two-monoidal-products\" title=\"https://math.stackexchange.com/questions/3583052/string-diagrams-when-you-have-two-monoidal-products\">https://math.stackexchange.com/questions/3583052/string-diagrams-when-you-have-two-monoidal-products</a></p>",
        "id": 193111129,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1586212389
    },
    {
        "content": "<p>This is an ongoing topic of research. I think the last people looking into it atm are <span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> and <span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span></p>",
        "id": 193111374,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586212593
    },
    {
        "content": "<p>In general there are also different flavors of this depending on how the monoidal structure interact, e.g. if they distribute over each other</p>",
        "id": 193111419,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586212636
    },
    {
        "content": "<p>but the general agreement is that a graphical calculus should be some flavour of surface diagrams. What is really hard to pind down is what kind of topological moves are allowed or not, e.g. can surfaces cross each other?</p>",
        "id": 193111492,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586212682
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Parallel.20Dimensions.20.3Ao/near/193110935\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Parallel.20Dimensions.20.3Ao/near/193110935\">said</a>:</p>\n<blockquote>\n<p>Wait, really? Me and <span class=\"user-mention silent\" data-user-id=\"276320\">Antonin Delpeuch</span> are working on this recently. It's not quite straightforward but it doesn't seem <em>that</em> difficult. I can't describe the surface diagrams in words though</p>\n</blockquote>\n<p>I don't think it's difficult in principle; it's just enough of a pain in the butt to draw and read these diagrams that they never seem to catch on as a practical tool.  For example, in quantum mechanics we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span>, but you don't see many (any?) people using string or surface diagrams involving <em>both</em> these monoidal structures.</p>",
        "id": 193111607,
        "sender_full_name": "John Baez",
        "timestamp": 1586212765
    },
    {
        "content": "<p>Top secret spoiler alert: Antonin has made a web tool for typesetting these kind of surface diagrams in Javascript. It looks pretty good, he's not ready to announce it yet though</p>",
        "id": 193112114,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586213080
    },
    {
        "content": "<p>Well, at least wrt the stuff we were doing in Ox tho ⊕ had a marginal role wrt tensor, which was basically the only parallel operation we were interested in</p>",
        "id": 193115569,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586215788
    },
    {
        "content": "<p>Also, there were people like Jamie Vicary using surface diagrams with applications in quantum logic, if I'm not wrong</p>",
        "id": 193115673,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586215872
    },
    {
        "content": "<p>Yes, Jamie and <span class=\"user-mention\" data-user-id=\"276048\">@Mike Stay</span> used some surface diagrams in quantum theory and cryptography... not for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span> though.</p>",
        "id": 193124261,
        "sender_full_name": "John Baez",
        "timestamp": 1586224713
    },
    {
        "content": "<p>Here's one I made earlier. This is a picture of a game (as in game theory), specifically the market entry game. Here the usual sequential and parallel dimensions are actual temporally sequential and parallel composition. The parallel sheets are indeed parallel universes, in the sense that in any given play of the game only one of them \"runs\". The monoidal product corresponding to that I call \"external choice\", terminology I took from game semantics<br>\n(<a href=\"user_uploads/21317/cDtZvobjgPu84Hl06cLA70c-/EHKBjrnXYAEfqLb.jpg\" title=\"user_uploads/21317/cDtZvobjgPu84Hl06cLA70c-/EHKBjrnXYAEfqLb.jpg\">https://categorytheory.zulipchat.com/user_uploads/21317/cDtZvobjgPu84Hl06cLA70c-/EHKBjrnXYAEfqLb.jpg</a>)</p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/21317/cDtZvobjgPu84Hl06cLA70c-/EHKBjrnXYAEfqLb.jpg\" title=\"https://categorytheory.zulipchat.com/user_uploads/21317/cDtZvobjgPu84Hl06cLA70c-/EHKBjrnXYAEfqLb.jpg\"><img src=\"user_uploads/21317/cDtZvobjgPu84Hl06cLA70c-/EHKBjrnXYAEfqLb.jpg\"></a></div>",
        "id": 193160670,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586251877
    },
    {
        "content": "<p>Don't you need to tear the paper sometimes? I'm imagining writing something like<br>\n<a href=\"/user_uploads/21317/Jhkpx_JtNkMw5Xl43f83_kiR/image.png\" title=\"image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Jhkpx_JtNkMw5Xl43f83_kiR/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Jhkpx_JtNkMw5Xl43f83_kiR/image.png\"></a></div><p>both sides to be interpreted as something like A(C+D) = AC + AD</p>",
        "id": 193188862,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586266864
    },
    {
        "content": "<p>I think this is one of the design choices! In the approach me and Antonin are taking we don't allow the left hand diagram, which means we're using a sort of normal form representation where we always fully distribute the 2 monoidal structures. That causes some different headaches, but simplifies the topology</p>",
        "id": 193189239,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267022
    },
    {
        "content": "<p>The specific headache that our approach causes is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> is no longer simply disjoint union of diagrams - you need to do a whole rewriting step</p>",
        "id": 193189391,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267074
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193189391\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193189391\">said</a>:</p>\n<blockquote>\n<p>The specific headache that our approach causes is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> is no longer simply disjoint union of diagrams - you need to do a whole rewriting step</p>\n</blockquote>\n<p>OMG T_T</p>",
        "id": 193189665,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267190
    },
    {
        "content": "<p>Or I guess (just idle doodling) the left-hand diagram should actually look like this. Then if you take a vertical cross section it also looks like a string diagram - it seems more like it would have a sensible interpretation that way.</p>\n<p><a href=\"/user_uploads/21317/AXt2u0ov4BKdH7VVcbqbubyL/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/AXt2u0ov4BKdH7VVcbqbubyL/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/AXt2u0ov4BKdH7VVcbqbubyL/image.png\"></a></div>",
        "id": 193189815,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586267257
    },
    {
        "content": "<p>Yes</p>",
        "id": 193189852,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267272
    },
    {
        "content": "<p>Now you're making me question whether our decision was the right one.....</p>",
        "id": 193189880,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267281
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193189815\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193189815\">said</a>:</p>\n<blockquote>\n<p>Or I guess (just idle doodling) the left-hand diagram should actually look like this. Then if you take a vertical cross section it also looks like a string diagram - it seems more like it would have a sensible interpretation that way.</p>\n<p><a href=\"/user_uploads/21317/AXt2u0ov4BKdH7VVcbqbubyL/image.png\" title=\"image.png\">image.png</a></p>\n</blockquote>\n<p>Yes, this seems right to me as well</p>",
        "id": 193190031,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267351
    },
    {
        "content": "<p>When you draw it like that, it's easy to see that it's isotopic to the other representation: move the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> wire down to the seam where it becomes critical, then it splits into 2 wires</p>",
        "id": 193190071,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267368
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193190071\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193190071\">said</a>:</p>\n<blockquote>\n<p>When you draw it like that, it's easy to see that it's isotopic to the other representation: move the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> wire down to the seam where it becomes critical, then it splits into 2 wires</p>\n</blockquote>\n<p>That's interesting, intuitively I'd have said that you can choose if the wire has to slid on one branch or on the other</p>",
        "id": 193190256,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267436
    },
    {
        "content": "<p>This comes from the specific type of distributivity you have, I guess. Probably you get your thing from a linearly distributive category</p>",
        "id": 193190446,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267517
    },
    {
        "content": "<p>Yes, my category is way more well behaved because it's freely generated</p>",
        "id": 193190567,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267564
    },
    {
        "content": "<p>Read parallel sheets as \"or\". If you have an A and either a B or a C, then you either have an A and a B, or you have an A and a C</p>",
        "id": 193190575,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267568
    },
    {
        "content": "<p>so we just allow all the possible branchings</p>",
        "id": 193190590,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267574
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193190575\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193190575\">said</a>:</p>\n<blockquote>\n<p>Read parallel sheets as \"or\". If you have an A and either a B or a C, then you either have an A and a B, or you have an A and a C</p>\n</blockquote>\n<p>Yes, clearly it works with this interpretaton, but I really don't like what happens at the graphical level then</p>",
        "id": 193190647,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267597
    },
    {
        "content": "<p>You shouldn't have this kind of discontiuities if the graphical calculus is right. Are you sure 3 dimensions are enough?</p>",
        "id": 193190706,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267633
    },
    {
        "content": "<p>3 dimensions is all that the gods gave us to work with in our universe, have to make the best of them</p>",
        "id": 193190812,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267677
    },
    {
        "content": "<p>What I mean is</p>",
        "id": 193190829,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267687
    },
    {
        "content": "<p>maybe this stuff really lives in somethig bigger, you are dealing with a projection, and that's where the weird stuff comes from</p>",
        "id": 193190866,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267710
    },
    {
        "content": "<p>Me and Antonin are working with distributive monoidal categories, where one of the monoidal structures is cocartesian. So it's just like string diagrams for a cocartesian monoidal category, where you can merge 2 wires and you can push any generating morphism across the critical point, which moves between 1 copy and 2 copies</p>",
        "id": 193191100,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267834
    },
    {
        "content": "<p>Same thing but 1 dimension higher. (I think that there's some <em>justification</em> going on that makes that formal, that this is just something in the category of something, but we didn't figure that out yet)</p>",
        "id": 193191290,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586267922
    },
    {
        "content": "<p>I see what you are doing now. then the diagram above is a bit misleading tho. You want the border between A and D + C to be explicitly drawn, I guess</p>",
        "id": 193191408,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267980
    },
    {
        "content": "<p>That border really is a morphism, no?</p>",
        "id": 193191423,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586267990
    },
    {
        "content": "<p>Yes. It's a \"special\" morphism in the same sense as a monoid. I think it's unambiguous to just represent it as a border, same as a monoid is unambiguous with 2 joining wires</p>",
        "id": 193192024,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586268253
    },
    {
        "content": "<p>Yes, that is correct. Also this means that you diagrams are read bottom up and that surfaces can be forked downwards and not upwards, right?</p>",
        "id": 193192235,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586268335
    },
    {
        "content": "<p>Ah yes, we now have twice as many dimensions to have flame wars about</p>",
        "id": 193192366,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586268384
    },
    {
        "content": "<p>xD</p>",
        "id": 193192532,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586268460
    },
    {
        "content": "<p>One context where this makes sense to me: let's say we're in Cat, and we have functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi><mo>×</mo><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">F:C\\to D\\times E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>:</mo><mi>D</mi><mo>×</mo><mi>E</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">G:D\\times E \\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, and we also have a natural transformation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>η</mi><mo>:</mo><msub><mrow><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">d</mi></mrow><mi>C</mi></msub><mo>⇒</mo><mi>F</mi><mo separator=\"true\">;</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">\\eta:\\mathrm{id}_C\\Rightarrow F;G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">d</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span>. Then we might draw it as <a href=\"/user_uploads/21317/9mg5nSDWrMMWwpLfjjxuBqDe/image.png\" title=\"image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/9mg5nSDWrMMWwpLfjjxuBqDe/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/9mg5nSDWrMMWwpLfjjxuBqDe/image.png\"></a></div><p>One can imagine this getting a lot more complicated if you have lots of functors between lots of Cartesian product categories, and lots of natural transformations between them.</p>",
        "id": 193195351,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586269620
    },
    {
        "content": "<p>(more on string diagrams for Cat: <a href=\"https://arxiv.org/pdf/1401.7220.pdf\" title=\"https://arxiv.org/pdf/1401.7220.pdf\">https://arxiv.org/pdf/1401.7220.pdf</a>)</p>",
        "id": 193195747,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586269774
    },
    {
        "content": "<p>Wait, isn't the type of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi><mo>×</mo><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">G: C \\to D \\times E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> as well?</p>",
        "id": 193195802,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586269798
    },
    {
        "content": "<p>Sorry, it should have been <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>×</mo><mi>E</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">D\\times E \\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>",
        "id": 193195902,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586269828
    },
    {
        "content": "<p>I'm reading the diagram left to right and top to bottom</p>",
        "id": 193195936,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586269846
    },
    {
        "content": "<p>Oh, you are reading bottom up, yes</p>",
        "id": 193195950,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586269851
    },
    {
        "content": "<p>Yes, in this situation it makes sense indeed, but in the setting above you'd probably draw this as a box</p>",
        "id": 193196046,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586269889
    },
    {
        "content": "<p>If a boundary denotes a structural morphism, then you can only splt in one way, since coproducts have a diagonal monoid but not a diagonal comonoid</p>",
        "id": 193196117,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586269919
    },
    {
        "content": "<p>In the general setting of surface diagrams this -- and many other weird things such as the ones you can do with <a href=\"http://homotopy.io\" title=\"http://homotopy.io\">homotopy.io</a> -- make sense, yes</p>",
        "id": 193196239,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586269953
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276071\">@Nathaniel Virgo</span> Did you really pick all this up since my lectures in January? That's amazingly fast...</p>",
        "id": 193196833,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586270174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275901\">@Jules Hedges</span> yep :)</p>",
        "id": 193196896,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586270203
    },
    {
        "content": "<p>Nice... I've been slowly picking this up for years...</p>",
        "id": 193196973,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586270241
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276438\">@Fabrizio Genovese</span> I'm not sure what you mean exactly (I am pretty new to this and mostly just playing around) but the right-hand boundary of my surface diagram is a string diagram <a href=\"/user_uploads/21317/Ant6adOaBCvwssMDguO4GPDU/image.png\" title=\"image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Ant6adOaBCvwssMDguO4GPDU/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Ant6adOaBCvwssMDguO4GPDU/image.png\"></a></div><p>you need the extra dimension to express the natural transformation</p>",
        "id": 193197038,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586270268
    },
    {
        "content": "<p>While I'm thinking about it, let me invite <span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span> to this stream and also poke <span class=\"user-mention\" data-user-id=\"277391\">@Cole Comfort</span></p>",
        "id": 193198034,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586270664
    },
    {
        "content": "<p>This is from Reutter, David J., and Jamie Vicary. \"Shaded tangles for the design and verification of quantum circuits.\" <a href=\"/user_uploads/21317/nsCSQdXJ6t4NTIARFc_k9VEM/Monoidal.png\" title=\"Monoidal.png\">Monoidal.png</a> <br>\nThey bring in the direct sum via the 2cells. Not sure if this is at all related to what the original question was...<br>\n<a href=\"https://royalsocietypublishing.org/doi/full/10.1098/rspa.2018.0338\" title=\"https://royalsocietypublishing.org/doi/full/10.1098/rspa.2018.0338\">https://royalsocietypublishing.org/doi/full/10.1098/rspa.2018.0338</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/nsCSQdXJ6t4NTIARFc_k9VEM/Monoidal.png\" title=\"Monoidal.png\"><img src=\"/user_uploads/21317/nsCSQdXJ6t4NTIARFc_k9VEM/Monoidal.png\"></a></div>",
        "id": 193198850,
        "sender_full_name": "Simon Burton",
        "timestamp": 1586270987
    },
    {
        "content": "<p>A meta-problem I believe we have is that most of the literature on surface diagrams is brain-meltingly difficult. I think there's a gap in the market for a \"user's guide to surface diagrams\"</p>",
        "id": 193199661,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586271314
    },
    {
        "content": "<p>+1!</p>",
        "id": 193199717,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586271335
    },
    {
        "content": "<p>One question for this thread is, how does Cat with its product relate to (for example) Vect with tensor product and direct sum as two monoidal products, as in Sam's question? That might tell us how surface diagrams for Vect-with-two-monoidal-operators \"should\" look.</p>",
        "id": 193199905,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586271401
    },
    {
        "content": "<p>On the topic of gaps in the market, I'd really like to see an introduction to category theory that uses graphical reasoning from the start, e.g. for functors and natural transformations, not just for monoidal categories. It seems like it's massively underutilised as a way of making the basics easy to grasp.</p>",
        "id": 193200874,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586271743
    },
    {
        "content": "<p>There's \"Category Theory Using String Diagrams\" by Dan Marsden. I think it's good, but I got totally lost at section 5.1 where he starts using boxes to notate (the action of) functors.</p>",
        "id": 193202552,
        "sender_full_name": "Simon Burton",
        "timestamp": 1586272390
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193200874\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193200874\">said</a>:</p>\n<blockquote>\n<p>On the topic of gaps in the market, I'd really like to see an introduction to category theory that uses graphical reasoning from the start, e.g. for functors and natural transformations, not just for monoidal categories. It seems like it's massively underutilised as a way of making the basics easy to grasp.</p>\n</blockquote>\n<p>Last year I tried teaching a course doing exactly that, which forced me to do lots of nonconventional choices (eg introduce an “elementary” definition of bicategories very early on). Here's the <a href=\"https://www.irif.fr/~ahadziha/teaching.html\" title=\"https://www.irif.fr/~ahadziha/teaching.html\">lecture notes</a>.</p>",
        "id": 193204259,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586272960
    },
    {
        "content": "<p>This is still all done maths-style with rigorous definitions. I guess one could try to introduce the graphical calculus “informally” by example, instead.</p>",
        "id": 193204595,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586273065
    },
    {
        "content": "<p>Wow, great, I will definitely check these out!</p>",
        "id": 193204793,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586273135
    },
    {
        "content": "<p>Anyway I would like one day to expand this into a more comprehensive book!</p>",
        "id": 193204825,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586273144
    },
    {
        "content": "<p>Cool!!</p>",
        "id": 193206549,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586273808
    },
    {
        "content": "<p>Nice! (I hope the book will be open access!)</p>",
        "id": 193206857,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1586273945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193197038\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193197038\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> I'm not sure what you mean exactly (I am pretty new to this and mostly just playing around) but the right-hand boundary of my surface diagram is a string diagram <a href=\"/user_uploads/21317/Ant6adOaBCvwssMDguO4GPDU/image.png\" title=\"image.png\">image.png</a> </p>\n<p>you need the extra dimension to express the natural transformation</p>\n</blockquote>\n<p>What I mean is this: In 1-dimensional string diagrams you have morphisms drawn as boxes. everything that is not a box is a structural morphism, e.g. an identity (wire), a symmetry (swap), etc</p>",
        "id": 193207626,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586274281
    },
    {
        "content": "<p>If you have more structure, e.g. your product is cartesian, then you also have a diagonal in the structure, that is, a comonoid, which you still want to denote with some special notation</p>",
        "id": 193207700,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586274318
    },
    {
        "content": "<p>In the example about bimonoidal categories we split surfaces top -&gt; bottom. This actually denotes the application of the structural morphism corresponding to the coproduct monoid</p>",
        "id": 193207862,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586274374
    },
    {
        "content": "<p>As you do with structural morphisms in other graphical settings, you don't draw anything specific. You just draw a boundary and merge the surfaces bottom top and it's implied you are applying the coproduct monoid there</p>",
        "id": 193207931,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586274416
    },
    {
        "content": "<p>But you cannot do the opposite, because the coproduct monoidal structure does not come together a comonoid. So if you split in the other direction (bottom to top) you have to actually decorate the boundary with something saying what this split amounts to</p>",
        "id": 193208131,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586274494
    },
    {
        "content": "<p>actually I don't think you can do it at all in the bimonoidal case, but maybe I'm mistaken</p>",
        "id": 193208270,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586274553
    },
    {
        "content": "<p>Oh I see. But this is just a question of graphical style, isn't it? If we're doing normal string diagrams we draw boxes around the morphisms because they're convenient to write labels on, but conceptually we can still think of them as points if we want to. Once we extend those points into lines it gets harder to draw boxes around them, so I just wrote \"F\" and \"G\" next to the lines instead. (This is exactly the style Marsden uses in 2D, I just replaced a line connecting two 2d regions with a line connecting three regions.)</p>\n<p>In the bimonoidal example I drew I guess we can interpret the dashed line as the structural morphism, so maybe that's a reasonable convention to adopt: dashed line means coproduct monoid, solid lines mean other morphisms.</p>",
        "id": 193210692,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586275535
    },
    {
        "content": "<p>(But I'm kind of unsure - I'm not really familiar with the definitions for bimonoidal categories and I'm really just drawing pictures here. It seems like Cat + cartesian product should be quite similar to a bimonoidal category to me, though.)</p>",
        "id": 193211286,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586275763
    },
    {
        "content": "<p>I get your intuition, also can't figured out where it comes from. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> in this guise is a monoidal bicategory, I wonder whether monoidal bicategories are like bimonoidal categories?</p>",
        "id": 193211531,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1586275851
    },
    {
        "content": "<p>I feel like it is not possible to make sense of an arbitrary composition of such structural morphisms to interpret it as an object in a free bimonoidal category. For me that is where this syntax fails. If you only represent straight sheets (so, objects normalized as sums of products), you avoid this problem.</p>",
        "id": 193212351,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1586276164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193210692\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193210692\">said</a>:</p>\n<blockquote>\n<p>Oh I see. But this is just a question of graphical style, isn't it? If we're doing normal string diagrams we draw boxes around the morphisms because they're convenient to write labels on, but conceptually we can still think of them as points if we want to. Once we extend those points into lines it gets harder to draw boxes around them, so I just wrote \"F\" and \"G\" next to the lines instead. (This is exactly the style Marsden uses in 2D, I just replaced a line connecting two 2d regions with a line connecting three regions.)</p>\n<p>In the bimonoidal example I drew I guess we can interpret the dashed line as the structural morphism, so maybe that's a reasonable convention to adopt: dashed line means coproduct monoid, solid lines mean other morphisms.</p>\n</blockquote>\n<p>Yes, it is just a matter of style indeed. In this case we may say that an undecorated boundary is structural. Still I feel I'd make a lot of confusion that way <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 193212846,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1586276387
    },
    {
        "content": "<p>I was recently wondering if you could develop some calculational set of rules for using ordinary 2d string diagrams when you have two monoidal structures AND you know some relationship between them, eg distribution. Then could you record some data about the \"inactive\" monoidal structure in labels on the strings, then apply the distributions rules somehow that switches which monoidal structure is \"active\".</p>",
        "id": 193214567,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1586277199
    },
    {
        "content": "<p>If it works out nicely, I could imagine doing calculations where you switch back and forth a few times depending on what the next step in the calculation requires.</p>",
        "id": 193214648,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1586277241
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275914\">Joe Moeller</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193214567\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193214567\">said</a>:</p>\n<blockquote>\n<p>I was recently wondering if you could develop some calculational set of rules for using ordinary 2d string diagrams when you have two monoidal structures AND you know some relationship between them, eg distribution. Then could you record some data about the \"inactive\" monoidal structure in labels on the strings, then apply the distributions rules somehow that switches which monoidal structure is \"active\".</p>\n</blockquote>\n<p>Cool!  This reminds me of <a href=\"https://arxiv.org/abs/1706.00526\" title=\"https://arxiv.org/abs/1706.00526\">https://arxiv.org/abs/1706.00526</a> (page 44), by <span class=\"user-mention\" data-user-id=\"275965\">@Evan Patterson</span></p>",
        "id": 193214764,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1586277295
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193211531\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193211531\">said</a>:</p>\n<blockquote>\n<p>I get your intuition, also can't figured out where it comes from. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> in this guise is a monoidal bicategory, I wonder whether monoidal bicategories are like bimonoidal categories?</p>\n</blockquote>\n<p>Maybe it works like this:</p>\n<p>A monoidal category is basically a bicategory with only one object. The objects of the monoidal category are the 1-cells of the bicategory, and the 2-cells become the morphisms. That’s why the string diagrams for a monoidal category look like monochrome versions of the ones for a bicategory - there's only one object, so the regions between the wires are all the same colour.</p>\n<p>In the same sense, is a bimonoidal category a monoidal bicategory with only one object?</p>",
        "id": 193219343,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586279458
    },
    {
        "content": "<p>A monoidal bicategory with one object is usually called a \"braided monoidal category\".  But you can think of a braided monoidal category as having two monoidal structures, a vertical and a horizontal one, related by an interchange law.  </p>\n<p>One beautiful way to see these two monoidal structures is to use this fact: a braided monoidal category is a monoidal category in the 2-category of monoidal categories - just like a commutative monoid is a monoid in the category of monoids.  I think this was proved by Joyal and Street in their paper \"Braided tensor categories\".</p>",
        "id": 193221835,
        "sender_full_name": "John Baez",
        "timestamp": 1586280644
    },
    {
        "content": "<p>Oh of course, one object means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>×</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A\\times A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> is the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>, so the extra dimension goes away. So that's not the right analogy, but it still feels like surface diagrams for bimonoidal categories should be like monochrome versions of diagrams for monoidal bicategories. I'll have to think about it some more.</p>\n<p>(Or rather the distinct sheets go away but the extra dimension stays relevant for the strings - it'd be interesting to understand that properly one day.)</p>",
        "id": 193249903,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586294321
    },
    {
        "content": "<p>Continuing this thought process, I think I have a fairly straightforward way to make diagrams for bimonoidal categories, which I think should work. This is all informal still, but maybe concrete enough to be potentially useful.</p>\n<p>The trick is to notice that my Cat diagram can be seen as a smooth transformation from a string diagram on the left to another string diagram on the right, with just a 'local' discontinuity at the natural transformation.<br>\n<a href=\"/user_uploads/21317/xBLUKLrLzgsTuk-ZvFrSvH9V/image.png\" title=\"image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/xBLUKLrLzgsTuk-ZvFrSvH9V/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/xBLUKLrLzgsTuk-ZvFrSvH9V/image.png\"></a></div><p>So my idea is that to make nice sheet diagrams for a bimonoidal category, we need to make nice string-like diagrams for the <em>objects</em>. Then we make the sheet diagram by adding an extra dimension, where the morphisms appear as local discontinuities.</p>",
        "id": 193328872,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586356533
    },
    {
        "content": "<p>Do we know how to solve the decategorified problem of making diagrams for rings?</p>",
        "id": 193329067,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1586356626
    },
    {
        "content": "<p>For a general category with two monoidal operations, it seems like a reasonable way to do this would be to draw the objects as points on wires, with one monoidal operation being sequential composition (putting two dots next to each other on the same wire) and the other being parallel composition (putting two wires next to each other)</p>",
        "id": 193329073,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586356628
    },
    {
        "content": "<p>E.g. if we happen to have in our category that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⊗</mo><mi>C</mi><mo>≅</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>⊗</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>⊕</mo><mo stretchy=\"false\">(</mo><mi>B</mi><mo>⊗</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(A\\oplus B)\\otimes C \\cong (A\\otimes C)\\oplus(B\\otimes C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span>, then we might write it like this</p>\n<p><a href=\"/user_uploads/21317/0Z-Ex95mbAitYEAWBjbMEBGe/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/0Z-Ex95mbAitYEAWBjbMEBGe/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/0Z-Ex95mbAitYEAWBjbMEBGe/image.png\"></a></div>",
        "id": 193329370,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586356763
    },
    {
        "content": "<p>To make that into a surface diagram we just make a smooth transition from one of those to the other, adding a discontinuity to represent the isomorphism where it's needed. (I've drawn the diagram top-down to avoid any need for mental rotation)</p>\n<p><a href=\"/user_uploads/21317/grUFqLNhODBj58FRXaGXkrnj/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/grUFqLNhODBj58FRXaGXkrnj/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/grUFqLNhODBj58FRXaGXkrnj/image.png\"></a></div>",
        "id": 193329522,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586356825
    },
    {
        "content": "<p>My idea is that any morphism should be representable like this, either as a point on a wire, or at a junction between wires, which may or may not also be a junction between sheets.</p>",
        "id": 193329739,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586356925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276945\">@Oscar Cunningham</span> I don't know - does what I described above do that, or is there a problem with it that I've missed?</p>",
        "id": 193329832,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586356975
    },
    {
        "content": "<p>Of course we have to choose which monoidal operation is parallel and which is sequential composition. If we did it the other way round, the above diagrams would look like this (but I think this way is a bit more awkward.) <a href=\"/user_uploads/21317/uILT3vOx2g6rY8oJewNdjc01/image.png\" title=\"image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/uILT3vOx2g6rY8oJewNdjc01/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/uILT3vOx2g6rY8oJewNdjc01/image.png\"></a></div><p>(The dotted line is just to help the eye - the 'C' wire splits in two at the same point where the tube bifurcates into two legs.)</p>",
        "id": 193330155,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586357125
    },
    {
        "content": "<p>I think that would work for rings too</p>",
        "id": 193330450,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1586357272
    },
    {
        "content": "<p>Note that if we're in, e.g., Vect, we can still do things like \"bending the wires around\" to represent unit and counit. If we chose tensor product as sequential composition then this corresponds to bending a wire around while staying in the same sheet, but if the tensor product is parallel composition then it corresponds to bending the whole sheet around. Does anyone have an example of something interesting to draw that involves both products?</p>",
        "id": 193334062,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586358712
    },
    {
        "content": "<p>I think in the pictures above you don't have room for composition anymore. The problem is really representing <em>three</em> operations in a 2d diagram.</p>",
        "id": 193337240,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1586360110
    },
    {
        "content": "<p>Here's a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>→</mo><mi>C</mi><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">f:A\\oplus B \\to C\\otimes D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> being composed with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">d</mi></mrow><mi>C</mi></msub><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>:</mo><mi>D</mi><mo>→</mo><mi>E</mi><mo>⊕</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{id}_C\\otimes (g:D\\to E\\oplus F)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">d</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span>. <a href=\"user_uploads/21317/OjWwyKQf9dy9AzDvkNf5GJMO/image.png\" title=\"user_uploads/21317/OjWwyKQf9dy9AzDvkNf5GJMO/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/21317/OjWwyKQf9dy9AzDvkNf5GJMO/image.png\" title=\"image.png\"><img src=\"user_uploads/21317/OjWwyKQf9dy9AzDvkNf5GJMO/image.png\"></a></div><p>The idea is to use one dimension each for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span></span></span></span> (left-right), <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊕</span></span></span></span> (front-back) and composition (up-down).</p>",
        "id": 193339101,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586360810
    },
    {
        "content": "<p>Sorry, I hadn't seen that yet. Yes, moving up to 3d seems necessary.</p>",
        "id": 193341681,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1586361925
    },
    {
        "content": "<p>It seems kind of a cool principle to me actually - the process to get from string diagrams to these 3D sheet diagrams is the same as the process to get from one-dimensional equations to string diagrams. It would totally make sense to consider morphisms between <em>these</em> diagrams, if only we could draw or perceive the 4D diagrams that would result. (Well we could animate them. But 5D is right out.)</p>",
        "id": 193342299,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586362205
    },
    {
        "content": "<p>It is incredibly natural, but it's also impractical. There's a discussion going on in <a class=\"stream\" data-stream-id=\"232162\" href=\"/#narrow/stream/232162-learning.3A-show-and-tell\">#learning: show and tell</a> about how hard it is to create surface diagrams, as I'm sure you know. And as you point out, going higher is simply not feasible.</p>",
        "id": 193343089,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1586362576
    },
    {
        "content": "<p>I don't think the lack of practicality is a show-stopping issue for me at this point.</p>",
        "id": 193347138,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1586364377
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193329522\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193329522\">said</a>:</p>\n<blockquote>\n<p>To make that into a surface diagram we just make a smooth transition from one of those to the other, adding a discontinuity to represent the isomorphism where it's needed. (I've drawn the diagram top-down to avoid any need for mental rotation)</p>\n<p><a href=\"/user_uploads/21317/grUFqLNhODBj58FRXaGXkrnj/image.png\" title=\"image.png\">image.png</a></p>\n</blockquote>\n<p>This is so beautiful.</p>",
        "id": 193476748,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1586450576
    },
    {
        "content": "<p>Sorry to necro the thread, but I think if you use 3d diagrams (full proof surfaces), instead of 2.5d (proof sheets) to represent morphisms in a bimonoidal category, then I think you run into some problems, unless the 3rd dimension is properly constrained.  If we are allowed to tear sheets apart like in <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193188862\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193188862\">https://categorytheory.zulipchat.com/#narrow/stream/229199-learning.3A-basic.20questions/topic/parallel.20dimensions/near/193188862</a> , then things go horribly wrong.</p>",
        "id": 196204362,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1588609203
    }
]