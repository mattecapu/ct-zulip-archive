[
    {
        "content": "<p>Exercise 1.1.i.</p>\n<p>Consider a morphism f : x → y. Show that if there exists a pair of morphisms g,h: y ⇒ x so that gf = 1x and fh = 1y, then g = h and f is an isomorphism.</p>\n<p>Definition 1.1.9. An isomorphism in a category is a morphism f : X → Y for which there exists a morphism g: Y → X so that gf = 1X and fg = 1Y.</p>\n<ol>\n<li>\n<p>To be an isomorphism, there has to exist a g: Y -&gt; X which composes to form the identity arrow id, both before, and after, the arrow f: X -&gt; Y. Is there an example of an arrow which only produces the identity arrow for one of those directions, like f;g = id_x, but not g;f = id_y ?</p>\n</li>\n<li>\n<p>Evidently, I am supposed to infer that since there is an inverse arrow for both sides, they must be the same arrow. Maybe I can show this through algebraic manipulation, but I wonder if there is some way to know it inherently and immediately, in some way?</p>\n</li>\n</ol>\n<p>f;g = id_x<br>\nh;f = id_y</p>\n<p>f;g;f = f</p>\n<p>h;f;g = id_y;g<br>\nh;id_x=id_y;g<br>\nh = g</p>\n<p>I believe that’s the trick. A simple algebraic manipulation. I’ll just have to think over if there’s an intuitive way to say what it’s saying. I think it’s something to do with the axioms of a category would not permit a concept of left-only or right-only inverse arrow; perhaps due to the associativity of the composition.</p>",
        "id": 382361308,
        "sender_full_name": "Julius",
        "timestamp": 1691328126
    },
    {
        "content": "<p>(ii) Show that a morphism can have at most one inverse isomorphism.</p>\n<p>Take some morphism f: x -&gt; y.<br>\nAssume it has an inverse arrow, g: y -&gt; x, such that f;g = id_x.<br>\nAssume there is a second inverse arrow, g’: y -&gt; x s.t. f;g’ = id_x.</p>\n<p>An isomorphism is necessarily two-sided.</p>\n<p>So <br>\nf;g = f;g’<br>\ng;f;g = g;f;g’<br>\nid_y;g = id_y;g’<br>\ng=g’</p>\n<p>I mainly need to think over why an inverse is necessarily two-sided, or if it isn’t, it’s just that an isomorphism necessarily is.</p>",
        "id": 382363431,
        "sender_full_name": "Julius",
        "timestamp": 1691328673
    },
    {
        "content": "<blockquote>\n<p>Evidently, I am supposed to infer that since there is an inverse arrow for both sides, they must be the same arrow. Maybe I can show this through algebraic manipulation...</p>\n</blockquote>\n<p>Yes, there's a famous little trick for doing this, which people usually learn in group theory, and it looks like you found it.   </p>\n<p>I think of this and similar arguments as \"fastest gun in the west\" arguments.  If two guys say they're the fastest shooter in town, you settle it with a duel.  </p>\n<p>Suppose g says he's the right inverse of f but h says he's the left inverse of f.  Then you let them fight it out!  You look at</p>\n<p>h f g</p>\n<p>(I'll leave out the the semicolons since they're distracting here.)</p>\n<p>First h makes his move:</p>\n<p>h f g = g</p>\n<p>Then g makes his move:</p>\n<p>h f g = h</p>\n<p>So g and h had to be the same!   </p>\n<p>When two guys claim they're the fastest gun in the west and they're both right, they're probably the same guy.</p>",
        "id": 382363474,
        "sender_full_name": "John Baez",
        "timestamp": 1691328685
    },
    {
        "content": "<blockquote>\n<p>I mainly need to think over why an inverse is necessarily two-sided, or if it isn’t, it’s just that an isomorphism necessarily is.</p>\n</blockquote>\n<p>There's no reason an inverse is necessarily two-sided.  Find two functions f and g such that f is a left inverse of g but not a right inverse.  Then g will be a right inverse of f but not a left inverse.</p>\n<p>It's just the <em>definition</em> of isomorphism that says it's a morphism with a two-sided inverse.</p>",
        "id": 382363863,
        "sender_full_name": "John Baez",
        "timestamp": 1691328813
    },
    {
        "content": "<p>All this stuff is very fun to think about.</p>",
        "id": 382363921,
        "sender_full_name": "John Baez",
        "timestamp": 1691328834
    },
    {
        "content": "<p>Thank you very much.</p>\n<p>“””<br>\nExercise 1.1.iii. For any category C and any object c ∈ C, show that:<br>\n(i) There is a category c/C whose objects are morphisms f : c → x with domain c and in which a morphism from f : c → x to g: c → y is a map h: x → y between the codomains so that the triangle commutes, ie g = hf.<br>\n“””</p>\n<p>I am slightly confused about “show that there is a category that”, because we are guaranteed to be able to “select” the objects of the slice category - all arrows in C of the form f: c -&gt; x, for any x such that there is an arrow from c to x.</p>\n<p>So that part doesn’t require us to prove anything. Right?</p>\n<p>As for the arrows between the objects, I got the impression we are not selecting arrows from the original category C, because there’s no guarantee to be an arrow h: x -&gt; y, for f: c -&gt; x, g: c -&gt; y. It just depends on what arrows the category C has.</p>\n<p>So we do not select pre-existing arrows, we actually just declare the existence of them. For any objects f: c -&gt; x and g: c -&gt; y in the slice category C under c, we state there is an arrow h: x -&gt; y, so that g = f;h.</p>\n<p>Is that correct?</p>\n<p>It seems like there’s nothing to “show”. We can always construct a slice category. Or should I prove that all the axioms of a category (identities, composition, associativity) still hold, under this construction?</p>",
        "id": 382376672,
        "sender_full_name": "Julius",
        "timestamp": 1691332541
    },
    {
        "content": "<p>No, the arrows are taken from the original category. Just like a group homomorphism is a function between groups satisfying certain conditions, a morphism in the slice category is a morphism from the original category satisfying a particular condition.</p>\n<p>The exercise is indeed to check the axioms of a category: they have told you what the objects and morphisms should be, but what are the identities? What does composition look like? Is it still associative? After a certain point these checks will become \"obvious\" enough that you won't need to check them by hand, but exercises like this should help you internalise the definition of a category.</p>",
        "id": 382377980,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1691332848
    },
    {
        "content": "<p>Note that this exercise is going beyond the basic sort of proof where the book tells you a proposition and you prove it's true.  Here the work involves guessing the proposition and then proving it.  For example: the book is not telling you how composition of morphisms in the slice category works, and until you say what that is, it makes no sense to prove it's associative.</p>\n<p>In the language of modern math, an elementary sort of textbook problem is asking you to verify a <em>property</em>.  Here you are being asked to choose a <em>structure</em>, state the relevant property of that structure, and then prove it.</p>",
        "id": 382401335,
        "sender_full_name": "John Baez",
        "timestamp": 1691339357
    },
    {
        "content": "<p>Later still you may be asked to choose some 'stuff', then choose some structure on that, and then verify some properties.</p>",
        "id": 382401920,
        "sender_full_name": "John Baez",
        "timestamp": 1691339533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> --  best math explanation in the West <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 382896512,
        "sender_full_name": "Jencel Panic",
        "timestamp": 1691489471
    },
    {
        "content": "<p>Thanks so much!   I figured this might be what was bothering you.</p>",
        "id": 382911675,
        "sender_full_name": "John Baez",
        "timestamp": 1691492242
    }
]