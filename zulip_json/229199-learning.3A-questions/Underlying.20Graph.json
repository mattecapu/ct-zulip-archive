[
    {
        "content": "<p>There is a forgetful functor from categories to its underlying <a href=\"https://ncatlab.org/nlab/show/digraph\">digraph</a> or, perhaps more precisely, <a href=\"https://ncatlab.org/nlab/show/quiver\">Quiver</a>. This shows up most prominently in two ways: 1) when we draw pictures of (small) categories, and 2) in the Free Category on a directed graph construction, giving a <a href=\"https://ncatlab.org/nlab/show/path+category\">path category</a>.</p>\n<p>The problem I have is that this forgetful function seems to do something we don't want: it does not respect the <a href=\"https://ncatlab.org/nlab/show/principle+of+equivalence\">principle of equivalence</a>.  Specifically, if one takes the 1-object 1-morphism category (call it One), and the 2-object <a href=\"https://ncatlab.org/nlab/show/indiscrete+category\">indiscrete category</a> (or codiscrete 2-object groupoid if you prefer; call it ITwo), the graph of One has 1 vertex and 1 edge, while the graph of ITwo has 2 vertices and 4 edges. So they are 'clearly' not the same graph. And yet the two categories are equivalent as ITwo is contractible.</p>\n<p>Two questions:</p>\n<ol>\n<li>Have I erred somewhere in the above?</li>\n<li>If I have not, is there a 2-categorical (and 2-Quiver) version of the above that makes the example I show above satisfy the principle of equivalence again?</li>\n</ol>\n<p>My suspicion is that the resolution of my conundrum indeed involves 2- (and perhaps higher) issues, and that 'truncating' at the 1- level is what produces this phenomenon. This is because the two categories above are equivalent only in a 2-categorical setting, as the natural transformations involved are not trivial (one of them, in one direction, requires a choice).</p>\n<p>I don't want an ELI5 explanation, but perhaps one at the 4th year undergraduate level would be appreciated, if that's possible. It does feel that this is somehow 'basic', and ought to have a 'basic' explanation too.</p>",
        "id": 199408403,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1591037847
    },
    {
        "content": "<p>Jacques, I think the \"higher\" analogue of the underlying digraph that you're looking for is the nerve (<a href=\"https://ncatlab.org/nlab/show/nerve\">https://ncatlab.org/nlab/show/nerve</a>). Since <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>:</mo><mi>C</mi><mi>a</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\"> N : Cat \\to  SSet </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span></span></span></span> is full and faithful, then I think that should give your \"principle of equivalence\".</p>",
        "id": 199409800,
        "sender_full_name": "Gershom",
        "timestamp": 1591038449
    },
    {
        "content": "<ol>\n<li>\n<p>You're correct, equivalent categories can have inequivalent underlying quivers.   (Category theorists call quivers simply \"graphs\" so I'll do so henceforth; of course \"graph\" means other things too and \"quiver\" is less ambiguous.)</p>\n</li>\n<li>\n<p>This is an interesting question but I don't know the answer.  I'll just say this:</p>\n</li>\n</ol>\n<p>There's something a bit like a 2-category of graphs, but it's not a 2-category.  The category Graph of graphs is cartesian closed, so it automatically becomes enriched over itself: i.e., for any two graphs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span> we can define a <em>graph</em> of morphisms from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>.  This graph has as its vertices the usual sort of graph morphisms from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span></span></span></span>.  Its edges are called <strong>graph transformations</strong>, which are very much like natural transformations except that the naturality condition - the commuting square condition - is dropped, since it makes no sense to say a square in a graph commutes.</p>\n<p>Similarly Cat is cartesian closed, so it automatically becomes enriched over itself, i.e. for any two categories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> we can define a <em>category</em> of morphisms from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span>.  This category has functors from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> as objects and natural transformations as morphisms.</p>\n<p>A Cat-enriched category is a 2-category; a Graph-enriched category is not necessarily.</p>\n<p>I believe the forgetful functor U: Cat <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> Graph lifts, via base change, to a funny kind of enriched functor from the 2-category Cat to the Graph-enriched category Graph.    I could say more about this but I'm not sure this is what you want.  Explaining it requires explaining when we can define a functor from a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span>-enriched category to a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">W</span></span></span></span>-enriched category, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">W</span></span></span></span> are not the same!</p>",
        "id": 199409916,
        "sender_full_name": "John Baez",
        "timestamp": 1591038500
    },
    {
        "content": "<p>Thanks. This will need a bit of ponder time.</p>\n<p>For a bit more background: I'm working in a Setoid-enriched setting without Choice (or excluded middle). So defining what it means for 2 edges of a graph to be equivalent is a non-trivial question, and is indeed about <strong>graph transformations</strong>.</p>\n<p>I am interested in knowing whether there is a sensible Bicategorical analogue. I've seen things in the literature, but they all seem like they don't forget enough.  The idea of having Graph enriched over itself is very appealing, so if there's a generalization in that direction/setting, I would be quite interested.</p>\n<p>Even more background: in my setting, getting Agda to believe that what I'm doing is not nonsense is... delicate. There are issues around strictness that bother me. I'm trying to be as weak as possible, as things mostly work just fine, but this (and finite categories) are two places where things don't work so well.</p>",
        "id": 199426711,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1591047124
    },
    {
        "content": "<p>I'll just say that a Graph-enriched category is a lot like a 2-category; what it lacks is the ability to \"vertically\" compose 2-morphisms, because you can't compose edges in a graph.   I don't know any useful 2-category or bicategory of graphs.</p>",
        "id": 199428131,
        "sender_full_name": "John Baez",
        "timestamp": 1591047966
    },
    {
        "content": "<p>Wouldn't it be a 2-category of 2-graphs, i.e. with 2-edges between paths? You can't just erase that 2- structure, it has to go somewhere.</p>",
        "id": 199428405,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1591048185
    },
    {
        "content": "<p>As I said, the \"underlying graph of a category\" is really an enriched functor from the Cat-enriched category (i.e. 2-category) Cat to the Graph-enriched category Graph.  The 2-structure doesn't get erased: natural transformations get mapped to graph transformations.</p>",
        "id": 199428622,
        "sender_full_name": "John Baez",
        "timestamp": 1591048313
    },
    {
        "content": "<p>Again, it takes some work to explain what I mean by an enriched functor from a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span>-enriched category to a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">W</span></span></span></span>-enriched category (while the notion of enriched functor is <a href=\"https://ncatlab.org/nlab/show/enriched+functor\">standard</a> if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>=</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">V = W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">W</span></span></span></span>).</p>",
        "id": 199428738,
        "sender_full_name": "John Baez",
        "timestamp": 1591048405
    },
    {
        "content": "<p>So, I won't explain it unless someone wants to know.</p>",
        "id": 199428758,
        "sender_full_name": "John Baez",
        "timestamp": 1591048428
    },
    {
        "content": "<p>So part of my intuition on the relationship to nerve comes from David Spivak's paper which talks about hypergraph models of networks and their relationship to sset. I don't know if there's anything there, but it might be worth considering: <a href=\"http://math.mit.edu/~dspivak/informatics/HDMSN.pdf\">http://math.mit.edu/~dspivak/informatics/HDMSN.pdf</a></p>",
        "id": 199430072,
        "sender_full_name": "Gershom",
        "timestamp": 1591049339
    },
    {
        "content": "<p>Even including graph transformations, the concept of equivalence of graphs is not well-defined if we enrich over graphs, since even if we have what should be 'invertible' transformations, we have no way of formalising composition to the identity.<br>\nA possible route around your dilemma could be to consider subsuming both categories and graphs into a category of <a href=\"https://ncatlab.org/nlab/show/paracategory#:~:text=A%20paracategory%20is%20a%20category,to%20binary%20and%20nullary%20operations.\">paracategories</a>, which amount to quivers with partially-defined composition. <em>If</em> it's possible to enrich this category over itself (I haven't studied these, so have no idea if the monoidal product one might guess at is well-defined, let alone closed) then there's just enough structure to make equivalences of graphs make sense. It might be some work, but the relationships between categories, paracategories and graphs look to mesh into a satisfying theory.</p>",
        "id": 199476262,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1591096307
    }
]