[
    {
        "content": "<p>A preorder is a binary relation that is reflexive and transitive. Right? </p>\n<p>If so, why is it called a “preorder”? </p>\n<p>I anticipate the obvious answer is because it’s a few steps away from being an order. But does it have to be conceptually viewed as a kind of “order”?</p>\n<p>For example, why not just call it a “reflexive transitive binary relation”?</p>",
        "id": 377842102,
        "sender_full_name": "Julius",
        "timestamp": 1690120872
    },
    {
        "content": "<p>A monoidal preorder has a binary operation which has an identity object and is associative.</p>\n<p>A binary operation is (X, X) -&gt; X. A binary relation is R \\subset X x X.</p>\n<p>But I think there is some discussion in Spivak and Fong, chapter 5, about how XxX -&gt; X is structurally identical to just XxXxX. They say, “it’s just a matter of book-keeping”.</p>",
        "id": 377842771,
        "sender_full_name": "Julius",
        "timestamp": 1690121060
    },
    {
        "content": "<p>Is there a presentation of a monoidal preorder where it’s actually a binary relation and a trinary relation?</p>\n<p>Are there analogous concepts to “associative” and “identity object”, for a trinary relation?</p>",
        "id": 377843028,
        "sender_full_name": "Julius",
        "timestamp": 1690121145
    },
    {
        "content": "<p>Thanks very much <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 377843090,
        "sender_full_name": "Julius",
        "timestamp": 1690121163
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629908\">Julius</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/377842102\">said</a>:</p>\n<blockquote>\n<p>But does it have to be conceptually viewed as a kind of “order”?</p>\n</blockquote>\n<p>It doesn't have to be viewed that way, but it can be, and it's very often useful to view it that way.  Most names in mathematics come from <em>some</em> way of viewing the definiens; often there are others, but the one giving rise to the name is either most useful, historically first, or both.</p>\n<blockquote>\n<p>For example, why not just call it a “reflexive transitive binary relation”?</p>\n</blockquote>\n<p>Well, it's nine syllables longer, for one.</p>",
        "id": 377850736,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690122902
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629908\">Julius</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/377843028\">said</a>:</p>\n<blockquote>\n<p>Is there a presentation of a monoidal preorder where it’s actually a binary relation and a trinary relation?</p>\n</blockquote>\n<p>(Side note: I think \"ternary\" is more common than \"trinary\" for a three-place relation.)</p>\n<p>Just as you can always encode an ordinary function as a binary relation (its graph), you can always encode a binary function as a ternary relation.  So yes, a monoidal preorder can be defined as a set with a binary relation and a ternary relation satisfying some axioms.  For instance, one of the axioms on the ternary relation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⊆</mo><mi>X</mi><mo>×</mo><mi>X</mi><mo>×</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">M \\subseteq X\\times X\\times X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> would be \"for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>∈</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">x,y\\in X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> there exists a unique <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>∈</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">z\\in X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">(x,y,z)\\in M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>\", ensuring that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is the graph of a binary function.  And then you can formulate associativity as something like \"for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo>∈</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">x,y,z,u,v\\in X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">(x,y,u)\\in M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">(u,z,v)\\in M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, then there exists <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>∈</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">w\\in X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>w</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">(y,z,w)\\in M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">(x,w,v)\\in M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>\".</p>",
        "id": 377851864,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690123146
    },
    {
        "content": "<p>Thanks. But does that lead you somewhere interest or insightful, to blur the difference between the preorder relation, and the binary operation, and consider it just a set with two relations (one binary, one ternary)? I can check Chapter 5, but I think Spivak and Fong talk about how “new difficulties emerge” or something when you allow yourself a certain kind of abstraction. Let me check.</p>",
        "id": 377855404,
        "sender_full_name": "Julius",
        "timestamp": 1690123808
    },
    {
        "content": "<p>This is what I’m currently studying, it’s a challenge for me.<a href=\"/user_uploads/21317/ddbbE6-FoIYd4QbWkPOl7Gtj/E45ED9A1-50B5-4EEE-9CBF-CBD41DB82079.png\">E45ED9A1-50B5-4EEE-9CBF-CBD41DB82079.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/ddbbE6-FoIYd4QbWkPOl7Gtj/E45ED9A1-50B5-4EEE-9CBF-CBD41DB82079.png\" title=\"E45ED9A1-50B5-4EEE-9CBF-CBD41DB82079.png\"><img src=\"/user_uploads/21317/ddbbE6-FoIYd4QbWkPOl7Gtj/E45ED9A1-50B5-4EEE-9CBF-CBD41DB82079.png\"></a></div>",
        "id": 377855995,
        "sender_full_name": "Julius",
        "timestamp": 1690123985
    },
    {
        "content": "<p>A v-category or enriched category is a set of objects Ob(X) where the hom-sets (a, b) \\in X x X are associated to some element in some (symmetric) monoidal preorder V (-&gt; question to self: what happens if the preorder is not symmetric? what is the intuitive significance of the monoidal operation on the preorder, a canonical example?) -</p>",
        "id": 377857251,
        "sender_full_name": "Julius",
        "timestamp": 1690124313
    },
    {
        "content": "<p>Well, yes and no.  If you're actually working with monoidal preorders in practice, then there's little to be gained by complicating your notation this way.  But it can be technically useful, e.g. it enables the theory to be described in a framework of logic that has only relations and not functions, which is simpler for some metatheoretic purposes.  More importantly, it can lead to useful <em>generalizations</em> of the notion of monoidal preorder.</p>",
        "id": 377857444,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690124380
    },
    {
        "content": "<p>These generalizations tend to be explored more in the context of a monoidal <em>category</em>, and include structures such as <a href=\"https://ncatlab.org/nlab/show/multicategories\">[[multicategories]]</a> and <a href=\"https://ncatlab.org/nlab/show/promonoidal%20categories\">[[promonoidal categories]]</a>.</p>",
        "id": 377857623,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690124421
    },
    {
        "content": "<p>Yes exactly^, I’d love to hear more about that (and I’m writing further info right now in my above message as well). Thank you 🙏</p>",
        "id": 377857630,
        "sender_full_name": "Julius",
        "timestamp": 1690124422
    },
    {
        "content": "<p>Ah I see, Wow</p>",
        "id": 377857676,
        "sender_full_name": "Julius",
        "timestamp": 1690124435
    },
    {
        "content": "<p>In particular, regarding your message about enrichment, it's possible to enrich a category in any multicategory.</p>",
        "id": 377857772,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690124462
    },
    {
        "content": "<p>Symmetry isn't required for enrichment, either.  But the non-symmetric case requires a bit more care to make sure you write all the products in a consistent order, and lacks some features of the symmetric case, e.g. categories enriched over a non-symmetric monoidal category (or multicategory) don't have opposite categories or (tensor) product categories.</p>",
        "id": 377858111,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690124545
    },
    {
        "content": "<p>My attempt to put everything about enriched categories together:</p>\n<p>What is the “point” of the preorder? Is the point to have the weakest concept of order possible? What about leaving out the reflexivity condition? Or what about enriching a category over any collection plus a relation? Is that what you mean by multi category?</p>",
        "id": 377858146,
        "sender_full_name": "Julius",
        "timestamp": 1690124554
    },
    {
        "content": "<p>(to be continued)</p>",
        "id": 377858169,
        "sender_full_name": "Julius",
        "timestamp": 1690124561
    },
    {
        "content": "<p>The point is to have something with which to replace the word \"set\" in the hom-sets of an ordinary category.</p>",
        "id": 377858249,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690124582
    },
    {
        "content": "<p>A monoidal category, or multicategory, abstracts the structure possessed by the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\rm Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Set</span></span></span></span></span> that enables you to define a category as having a collection of objects and hom <em>sets</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">C(x,y) \\in \\rm Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Set</span></span></span></span></span>.</p>",
        "id": 377858387,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690124618
    },
    {
        "content": "<p>I see. So because hom sets can be composed - for every f:a -&gt; b, g:b -&gt; c, there exists f;g: a-&gt;c - they imply a partial ordering on the arrows/morphisms. Therefore, simply relax the condition of partial ordering - in which a \\leq b and b \\leq a implies a = b - and you have a preorder. Is that it?</p>\n<ol>\n<li>What useful properties open up when you relax that condition?</li>\n<li>If we think of the composition of arrows as implying a kind of binary relation on the collection of all arrows in a category… then the above partial order condition I wrote.. what is it saying? I’m trying to understand if it says something about inverses, equivalence, or isomorphism, perhaps? </li>\n</ol>\n<p>I believe the point was made that a preorder and a graph are I think “adjoint” to each other in that in a preorder you can have multiple parallel “relation” elements between two objects a and b, but in a graph, they would be viewed as one single edge, or something. (Gotta work through &amp; refresh my recollection of this section now.)</p>\n<p>(My questions may be repetitive because I am circling around the same thing from different angles, trying to tie it all together. Thanks for your help, it’s really helpful to me.)</p>",
        "id": 377860260,
        "sender_full_name": "Julius",
        "timestamp": 1690125133
    },
    {
        "content": "<p>No, that's not it.  The hom <em>sets</em> are getting replaced by <em>objects</em> of the monoidal category.  So instead of a <em>set</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> whose elements are morphisms in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, you have an object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">C(x,y) \\in V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, which doesn't in general even <em>have</em> \"elements\".</p>",
        "id": 377860677,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690125260
    },
    {
        "content": "<p>The monoidal and category structure on the enriching category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> (not on the morphisms of the enriched category) is necessary to generalize composition of morphisms, which is expressed in terms of the hom-sets as a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi>C</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>C</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(y,z) \\times C(x,y) \\to C(x,z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>.  If now each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> is an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> instead of a set, then you need some structure on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> to mean by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">×</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span>.  The former is the monoidal structure, the latter is the category (or preorder) structure.</p>",
        "id": 377860803,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690125313
    },
    {
        "content": "<p>I don't know how Spivak and Fong approach it, but the usual intuition for enriched category theory comes from categories whose hom-sets are <em>structured</em> sets.  For instance, in many categories it is possible to \"add\" two parallel arrows, e.g. in the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">V</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\rm Vect</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Vect</span></span></span></span></span> of vector spaces you can add two linear transformations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">,</mo><mi>g</mi><mo>:</mo><mi>U</mi><mo>→</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">f,g:U\\to W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> pointwise to get another linear transformation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>+</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f+g)(u) = f(u) + g(u)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mclose\">)</span></span></span></span>.  Such a category is then enriched over the monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">A</mi><mi mathvariant=\"normal\">b</mi></mrow><annotation encoding=\"application/x-tex\">\\rm Ab</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Ab</span></span></span></span></span> of abelian groups, so that each hom-set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">V</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{\\rm Vect}(U,W)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Vect</span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span> is actually a hom-abelian-group.</p>",
        "id": 377861305,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690125453
    },
    {
        "content": "<p>In such cases, the hom-objects do have \"elements\", but also extra structure.  But then once you write down the definition abstractly, you can let the enriching category be any monoidal category, not just one composed of structured sets.</p>",
        "id": 377861485,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690125499
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629908\">Julius</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/377842102\">said</a>:</p>\n<blockquote>\n<p>A preorder is a binary relation that is reflexive and transitive. Right? </p>\n</blockquote>\n<p>That's one definition, but actually in the book you're reading,  <em>Seven Sketches</em>, a preorder is not a reflexive transitive binary relation but rather an ordered pair consisting of a set together with a reflexive binary relation on that set.  See Definition 1.30, where they first define a 'preorder relation' and then say a preorder is a set equipped with a preorder relation.  That's why they say things like</p>\n<blockquote>\n<p>Given a preorder (P, ≤)</p>\n</blockquote>\n<p>in Example 1.54.</p>\n<blockquote>\n<p>But does it have to be conceptually viewed as a kind of “order”?</p>\n</blockquote>\n<p>I don't think in math you ever <em>have to</em> view anything in some particular way.   In this subject I believe people first invented \"orders\" and then realized that \"partial orders\" were a useful generalization and then realized that \"preorders\" were another important and even more general generalization.    All three concepts are important so we need some name for them all, and it makes sense to have names that indicate that we're successively generalizing the original concept.</p>\n<p>But often in math the names don't mean much.  For example, <a href=\"https://ncatlab.org/nlab/show/rings\">[[rings]]</a> are very important, and they're called that because some of the first examples literally looked like rings, but most people don't even know that anymore, and nobody thinks rings need to look ring-shaped.</p>\n<blockquote>\n<p>For example, why not just call it a “reflexive transitive binary relation”?</p>\n</blockquote>\n<p>When I'm talking about preorders a lot, I'd rather say something short like \"preorder\" rather than \"set equipped with a reflexive transitive binary relation\".  But if you want to say \"set equipped with a reflexive transitive binary relation\" I don't think anyone will complain too much.</p>",
        "id": 377867401,
        "sender_full_name": "John Baez",
        "timestamp": 1690127112
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629908\">Julius</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/377858146\">said</a>:</p>\n<blockquote>\n<p>My attempt to put everything about enriched categories together:</p>\n<p>What is the “point” of the preorder? Is the point to have the weakest concept of order possible? What about leaving out the reflexivity condition? </p>\n</blockquote>\n<p>In general there are lots of \"points\" of the concept of preorder; I guess you're using them in enriched category theory, but it's good to know that a preorder is the same as a category that has at most one morphism from any object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> to any other object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>.   </p>\n<p>Thus, a preorder is a kind of category where any equation between morphisms that could possibly make sense is automatically true!  Since a lot of category theory involves checking equations between morphisms, this makes preorders quite interesting.</p>",
        "id": 377868805,
        "sender_full_name": "John Baez",
        "timestamp": 1690127622
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/377867401\">said</a>:</p>\n<blockquote>\n<p>For example, <a href=\"https://ncatlab.org/nlab/show/rings\">[[rings]]</a> are very important, and they're called that because some of the first examples literally looked like rings, but most people don't even know that anymore...</p>\n</blockquote>\n<p>I didn't know that!  What were those examples?</p>",
        "id": 377871987,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690128464
    },
    {
        "content": "<p>The rings <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}/n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span></span></span></span>.</p>",
        "id": 377873662,
        "sender_full_name": "John Baez",
        "timestamp": 1690128913
    },
    {
        "content": "<p>Hmm, that's what I read somewhere, but now I'm <a href=\"https://math.stackexchange.com/questions/61497/why-are-rings-called-rings\">questioning it</a>.</p>",
        "id": 377874740,
        "sender_full_name": "John Baez",
        "timestamp": 1690129223
    },
    {
        "content": "<p>Wikipedia presents two <a href=\"https://en.wikipedia.org/wiki/Ring_(mathematics)#History\">alternative theories</a>, and it seems that the German word \"Zahlring\" (number ring) appeared before the word \"ring\".</p>",
        "id": 377875178,
        "sender_full_name": "John Baez",
        "timestamp": 1690129356
    },
    {
        "content": "<p>So, I'll have to back off and simply say that lots of mathematical terms have mysterious origins and we use them mainly because we need words for things, not because these terms guide our thinking!</p>",
        "id": 377875517,
        "sender_full_name": "John Baez",
        "timestamp": 1690129464
    },
    {
        "content": "<p>Ok, thanks very much, both of you.</p>\n<p>I’ll come back with some more questions soon.</p>\n<p>Thanks a lot!</p>",
        "id": 377979507,
        "sender_full_name": "Julius",
        "timestamp": 1690170332
    },
    {
        "content": "<p>Here are some basic questions to check if I actually understand what I’m reading.</p>\n<p>Spivak and Fong, Ch. 2, pg. 40, says that wiring diagrams were invented by Joyal and Street in the context of monoidal categories. Why were wiring diagrams invented for monoidal categories and not earlier? I mean, is there a pictorial property of wiring diagrams that is intrinsically linked to monoidal categories, but not categories more generally?</p>",
        "id": 377992306,
        "sender_full_name": "Julius",
        "timestamp": 1690175748
    },
    {
        "content": "<p>Can the difference between a monoidal preorder and a monoidal category be expressed in a succinct sentence, a change in one condition? Is it that the preorder relation is replaced by existence of hom-sets, which act like a partial order because the composition of morphisms is like the transitivity of the preorder relation, and the identity property of the hom sets is like the reflexivity of the preorder?</p>\n<p>Sorry to repeat the question, in case I missed the answer, but what is the corresponding notion in a category of a \\leq b and b \\leq a implying a = b, for an order relation? Equivalence up to isomorphism? Like, if two objects have the same hom set but the arrows are in the opposite direction, we regard them as one object?</p>\n<p>Sorry if I’m completely butchering this!</p>\n<p>But also: a preorder assigns only one element (the ordered pair) to some pair of objects a, b. But the corresponding notion (I think), a hom-set, assigns a whole <em>set</em> of arrows for a pair of objects. Right?</p>\n<p>But a monoidal preorder is fundamentally equivalent to a multi category, in which you can have multiple arrows between the same objects. Right?</p>\n<p>Is the point here that in a category, we do have a whole set of arrows between two objects, but when we draw it, we just draw one arrow, for exactly the reason that in a category our view collapses the distinction between parallel arrows?</p>\n<p>But what if the actual category were working in has multiple valid arrows between two objects? Like the category of sets. There are many functions between two sets S1 and S2. Is part of the benefit of seeing sets as a category that we no longer are thinking about the distinction between individual functions, only seeing higher level patterns, structures, etc?</p>\n<p>Thank you</p>",
        "id": 377993734,
        "sender_full_name": "Julius",
        "timestamp": 1690176380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"629908\">Julius</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/377992306\">said</a>:</p>\n<blockquote>\n<p>Here are some basic questions to check if I actually understand what I’m reading.</p>\n<p>Spivak and Fong, Ch. 2, pg. 40, says that wiring diagrams were invented by Joyal and Street in the context of monoidal categories. Why were wiring diagrams invented for monoidal categories and not earlier? I mean, is there a pictorial property of wiring diagrams that is intrinsically linked to monoidal categories, but not categories more generally?</p>\n</blockquote>\n<p>Yes, these wiring diagrams are intrinsically linked to monoidal categories which are categories where you can compose morphisms sequentially like in any category, ie. from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">f:A \\rightarrow B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">g:B \\rightarrow C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, you can get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">;</mo><mi>g</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">f;g:A \\rightarrow C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> but also can compose in parallel, which is a specific feature of monoidal categories -- to compose two morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">f:A \\rightarrow B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">g:C \\rightarrow D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>  in parallel, you take their tensor product <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>⊗</mo><mi>g</mi><mo>:</mo><mi>A</mi><mo>⊗</mo><mi>C</mi><mo>→</mo><mi>B</mi><mo>⊗</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">f \\otimes g: A \\otimes C \\rightarrow B \\otimes D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>.</p>\n<p>These wiring diagrams are more usually called string diagrams. They were formalized by Joyal and Street in the early 1990s in the context of monoidal categories but date from Penrose notations introduced in the 1970s in a more mathematical physics, and not yet category-theoretic, perspective.</p>",
        "id": 377995632,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1690177029
    },
    {
        "content": "<p>In a category we very much care about the distinction between two parallel arrows (i.e. arrows that belong to the same homset).  This is what makes categories more powerful than preorders.</p>\n<p>A monoidal preorder is not equivalent to a multicategory.  A monoidal <em>category</em> is (basically) equivalent to a multicategory.  A multicategory is not distinguished from a category by having \"multiple arrows between the same objects\"; a category already has that.  A multicategory is distinguished by having multiple (or no) \"tails\" for the same arrow.  An example of a multicategory is the multicategory of sets and multiple-argument functions.  The monoidal category that represents this multicategory is the monoidal category of sets and functions with Cartesian product as monoidal product.</p>",
        "id": 378114176,
        "sender_full_name": "James Deikun",
        "timestamp": 1690200510
    },
    {
        "content": "<p>The notion that most directly corresponds, in category theory, to the notion of \"partial order\" is that of <a href=\"https://ncatlab.org/nlab/show/skeletal%20category\">[[skeletal category]]</a>.  However, as a rule, passing to skeletal categories is only used for size arguments and instead the principle that corresponds to using partial orders is the <a href=\"https://ncatlab.org/nlab/show/principle%20of%20equivalence\">[[principle of equivalence]]</a>.</p>",
        "id": 378115773,
        "sender_full_name": "James Deikun",
        "timestamp": 1690200812
    },
    {
        "content": "<p>There is a way of viewing both categories and preorders as special cases of each other.</p>\n<p>Every category has an underlying preorder, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>≤</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\leq Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> means \"there is an arrow from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>\".  Thus a category is a preorder with extra stuff: for each inequality <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>≤</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\leq Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, a set of \"reasons why\".</p>\n<p>Similarly, every preorder has an underlying category, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}(X,Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> contains a single arrow if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>≤</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\leq Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> and is otherwise empty.  Thus a preorder is a category with an extra property: all parallel arrows are equal.</p>",
        "id": 378118677,
        "sender_full_name": "James Deikun",
        "timestamp": 1690201285
    },
    {
        "content": "<p>By the way, James Deikun's last sentence is a way to say precisely what I said a while ago:</p>\n<blockquote>\n<p>Thus, a preorder is a kind of category where any equation between morphisms that could possibly make sense is automatically true!  </p>\n</blockquote>\n<p>However he's assuming you know what 'parallel arrows' are... or that you can guess from his penultimate sentence.</p>",
        "id": 378164301,
        "sender_full_name": "John Baez",
        "timestamp": 1690208843
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/378114176\">said</a>:</p>\n<blockquote>\n<p>A monoidal <em>category</em> is (basically) equivalent to a multicategory.</p>\n</blockquote>\n<p>Obviously the meaning of this sentence depends on the meaning of \"basically\", but it's not one that I would ordinarily regard as true.</p>",
        "id": 378177430,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1690211234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/378177430\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Preorders.20and.20monoidal.20preorders/near/378114176\">said</a>:</p>\n<blockquote>\n<p>A monoidal <em>category</em> is (basically) equivalent to a multicategory.</p>\n</blockquote>\n<p>Obviously the meaning of this sentence depends on the meaning of \"basically\", but it's not one that I would ordinarily regard as true.</p>\n</blockquote>\n<p>Fair.  It's definitely easier to interpret in a way that makes it true than \"A monoidal preorder is fundamentally equivalent to a multi category\" though.</p>",
        "id": 378238503,
        "sender_full_name": "James Deikun",
        "timestamp": 1690223751
    },
    {
        "content": "<p>Thanks. I’ll come back to this to understand it better.<br>\nI’m now at the first step of trying to understand monotone maps, monoidal monotones, proving Bool-categories are preorders (and lawvere metric spaces are cost-categories), and lastly, “V-variations”.</p>",
        "id": 378518352,
        "sender_full_name": "Julius",
        "timestamp": 1690298832
    },
    {
        "content": "<p>Will return shortly with some definitions and/or questions. Thanks</p>",
        "id": 378518532,
        "sender_full_name": "Julius",
        "timestamp": 1690298868
    }
]