[
    {
        "content": "<p>I'm wondering what is an example of a diagram in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"double-struck\">A</mi><mi mathvariant=\"double-struck\">b</mi></mrow><mo lspace=\"0em\" rspace=\"0em\">→</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Ab}^{\\to}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7041em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">A</span><span class=\"mord mathnormal\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7041em;\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">→</span></span></span></span></span></span></span></span></span></span></span></span>, of a diagram that is non-filtered so that the kernel of the colimit is not the colimit of the kernels. Presumably this is easiest if one of them is 0, and one is not.</p>",
        "id": 367291223,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1687060916
    },
    {
        "content": "<p>This is in the context of the a paper that in a previous version tried working with the colimit over the Čech cochain complexes directly, instead of taking cohomology first, and then taking the colimit. The authors have since stopped using this, but I was really curious to see what actually goes wrong. The cryptic hint was that the (opposite of the) diagram of open covers wasn't filtered, so it's clearly to to do with the interaction of limits and colimits, but the explanation of the resulting problem seemed to me to be a bit spurious. Something about a certain item not being well-defined, but I'm not sure the specific item in question is the problem.</p>",
        "id": 367291771,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1687061281
    },
    {
        "content": "<p>I'm aware that with care, in essence via a kind of rigidification of the cochain complexes, one can in fact take the colimit and get the right thing on taking cohomology. For instance by ordering the topological space, or by considering special kinds of open covers and restricting what the refinement maps could be.</p>\n<p>But there were none of those techniques coming to play, so I'm really just trying to understand the general case, where it breaks.</p>\n<p>I guess is comes down to the ordinary colimit not calculating the homotopy colimit of cochain complexes correctly. But taking the colimit after cohomology means that one has already passed through a homotopy category, and so the colimit is less wrong?</p>",
        "id": 367302947,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1687068697
    },
    {
        "content": "<p>How about the span <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>←</mo><mn>0</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z} \\leftarrow 0 \\rightarrow \\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> mapping to the span <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>←</mo><mi mathvariant=\"double-struck\">Z</mi><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z} \\leftarrow \\mathbb{Z} \\rightarrow \\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span>, where all the maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z} \\rightarrow \\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> are the identity, viewed as a span in the arrow category. All the arrows are injective so their kernels are zero, but the colimit arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>⊕</mo><mi mathvariant=\"double-struck\">Z</mi><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z} \\oplus \\mathbb{Z} \\to \\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> is not injective (it's the sum map).</p>",
        "id": 367315675,
        "sender_full_name": "Reid Barton",
        "timestamp": 1687074664
    },
    {
        "content": "<p>Yeah, I thought something like that might work. But for covers, you have more in the diagram, in the sense that every cospan in the opposite of the category of open covers, there's a cocone, which isn't the case in the example. It needs to use the lack of cocones for parallel pairs, somehow.</p>",
        "id": 367351991,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1687085706
    },
    {
        "content": "<p>Hmm, I had a think, and came up with another example, this time of a coequaliser <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo><mo>⇉</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Z</mi><mo><mover><mo><mo>→</mo></mo><mrow><mi>i</mi><mi>d</mi></mrow></mover></mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0\\to \\mathbb{Z}) \\rightrightarrows (\\mathbb{Z} \\stackrel{id}{\\to} \\mathbb{Z})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⇉</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.403em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.153em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mclose\">)</span></span></span></span> where one arrow is just inclusion and the other is multiplication by 2. These even have the property that they are chain homotopic, if I haven't messed things up, which is what happens in the case of Čech cohomology. The coequaliser can be calculation as the cokernel of the difference, which is then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}\\to 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, but as in your example, the kernels are both trivial.</p>",
        "id": 367479652,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1687136125
    }
]