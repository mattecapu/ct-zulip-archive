[
    {
        "content": "<p>Take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span> as the 2-Category of groupoids. Consider the multiset monad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span>.</p>\n<p>We know from <a href=\"https://mathoverflow.net/questions/336937/is-the-2-%D1%81ategory-of-groupoids-locally-presentable\">this post</a> that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span> is locally presentable.</p>\n<p>A free monad is a free object relative to a forgetful functor whose domain is a category of monads. (<a href=\"https://ncatlab.org/nlab/show/free+monad\">See here</a>).</p>\n<p>There is some talk in the link just above about how locally presentable is related to having free monads on a category but I can't quite decipher it.  I would like to say that, because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span> is locally presentable, the multiset monad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span> is free.  I'm not sure if this is true.</p>\n<p><a href=\"https://scholar.google.ca/scholar?hl=en&amp;as_sdt=0%2C5&amp;q=String+diagrams+for+free+monads&amp;btnG=#d=gs_qabs&amp;u=%23p%3D3gQjqzTwSoIJ\">From this article</a> we see that there is a string diagram calculus over free monads.  I assume, then, that muliset-<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span> can be incorporated into string diagrams and be combined with other free monads.</p>\n<p>Does anyone know any examples of Free Monads?</p>",
        "id": 222343801,
        "sender_full_name": "Ben Sprott",
        "timestamp": 1610392581
    },
    {
        "content": "<p>The \"multiset monad\" (perhaps better known as the commutative monoid monad) is not a free monad, I'm positive. An example of a free monad is the monad whose algebras are magmas, where the theory is given by a single binary operation not subject to any equational axioms. Indeed, you should probably think of a typical free monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(M)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span> on a monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> as describing an algebraic theory that can be given by operations but with no equational axioms imposed. </p>\n<p>It might be wise to consider the case of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span> before <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>p</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Gpd</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span></span></span></span>, just to get a sense of the meanings of these things. Given an endofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span>, you can think of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(X)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> as a set of formal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>-ary operations; for example, of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(2)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> as a set of binary operations. What the free monad does in effect is \"close up\" those formal operations under the process of substituting tuples of operations into an another operation to form a more complex operations. For example, closing up a single formal binary operation in this way, the operations encoded by the free monad are given by binary trees. </p>\n<p>Commutative monoids, on the other hand, are models of a theory where equational axioms of associativity and commutativity are imposed, so you should be innately suspicious of a claim that these could be given by a free monad. </p>\n<p>The business of local presentability and accessible functors is just to give some <em>general</em> criteria sufficient to guarantee that a free monad can be constructed. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is an accessible functor on a locally presentable category, then you can form the free monad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>. If some sorts of control like that are absent, e.g., if someone hands you an endofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> that isn't accessible, all bets are off on whether the free monad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> can be formed: maybe sometimes yes, maybe more times no, but it would depend on the specifics of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>.</p>",
        "id": 222457909,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1610469570
    },
    {
        "content": "<p>Excellent reply.  Thank you <span class=\"user-mention\" data-user-id=\"277611\">@Todd Trimble</span> .  Is it possible that the list monad is free since the algebras are just( I think free) monads? I would take that monad on Set, so List-Set.</p>",
        "id": 222473651,
        "sender_full_name": "Ben Sprott",
        "timestamp": 1610475893
    },
    {
        "content": "<p>No. The algebras are just monoids, not necessarily free. The associativity equation is an imposed equational axiom on monoids.</p>",
        "id": 222474295,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1610476178
    },
    {
        "content": "<p>See also <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2017-January/126026.html\">https://mail.haskell.org/pipermail/haskell-cafe/2017-January/126026.html</a></p>",
        "id": 222475159,
        "sender_full_name": "Reid Barton",
        "timestamp": 1610476591
    },
    {
        "content": "<p>That <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2017-January/126026.html\">https://mail.haskell.org/pipermail/haskell-cafe/2017-January/126026.html</a> comment is nice.   Could someone spare me some trouble and explain in the language of mathematics what the monad \"Unit\" is?</p>",
        "id": 222489881,
        "sender_full_name": "John Baez",
        "timestamp": 1610483434
    },
    {
        "content": "<p>The comment talks about the free monad on Unit and then the free monad on <em>that</em> (or more precisely, on the underlying functor of that).</p>",
        "id": 222489919,
        "sender_full_name": "John Baez",
        "timestamp": 1610483463
    },
    {
        "content": "<p>By general abstract nonsense there should be a morphism FF(Unit) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> Unit, where F means the underlying functor of the free monad on a endofunctor (which however may not always exist).</p>",
        "id": 222490120,
        "sender_full_name": "John Baez",
        "timestamp": 1610483562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Free.20monads.2C.20multisets.2C.20and.20string.20diagrams/near/222489881\">said</a>:</p>\n<blockquote>\n<p>That <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2017-January/126026.html\">https://mail.haskell.org/pipermail/haskell-cafe/2017-January/126026.html</a> comment is nice.   Could someone spare me some trouble and explain in the language of mathematics what the monad \"Unit\" is?</p>\n</blockquote>\n<p>By <code>Unit</code>, they mean the terminal functor, sending everything to the terminal object.</p>",
        "id": 222491122,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1610484020
    },
    {
        "content": "<p>Thanks!  I figured it had to be something simple...</p>",
        "id": 222491446,
        "sender_full_name": "John Baez",
        "timestamp": 1610484167
    },
    {
        "content": "<p>So, people who want to understand free monads should try to compute the free monad on the terminal functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">F: \\mathsf{Set} \\to \\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span> and then compare their answer to what Ingo Blechschmidt said.</p>",
        "id": 222491648,
        "sender_full_name": "John Baez",
        "timestamp": 1610484257
    },
    {
        "content": "<p>The answer is the \"free pointed set monad\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>X</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">TX = 1 + X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> (aka <code>Maybe</code>).</p>",
        "id": 222493598,
        "sender_full_name": "Reid Barton",
        "timestamp": 1610485153
    }
]