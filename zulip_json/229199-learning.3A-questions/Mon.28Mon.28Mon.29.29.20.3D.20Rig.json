[
    {
        "content": "<p>It's a well-known consequence of the <a href=\"https://en.wikipedia.org/wiki/Eckmann%E2%80%93Hilton_argument\">Eckmann-Hilton argument</a> that a monoid in the category of monoids is in fact a commutative monoid, i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mi>M</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">Mon(Mon) = CMon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">CM</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span></span>.</p>\n<p>One could have expected this process to stabilise (can't make a commutative monoid more commutative) but in fact a monoid in the category of commutative monoids is called a <a href=\"https://ncatlab.org/nlab/show/semiring\">rig</a>, i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mi>R</mi><mi>i</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">Mon(Mon(Mon)) = Rig</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>.<br>\nI haven't checked the details but I expect we can apply the same Eckmann-Hilton argument to conclude that a monoid in the category of rigs is a commutative rig, so that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mi>R</mi><mi>i</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">Mon(Mon(Mon(Mon)))) = CRig</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">CR</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>.</p>\n<p>Has anyone else noticed this pattern? Does it keep on going? <br>\n(I'm interested in commutative rigs because that's the minimal algebraic structure required to define a monoidal category of matrices.)</p>",
        "id": 465773571,
        "sender_full_name": "Alexis Toumi",
        "timestamp": 1724852978
    },
    {
        "content": "<p>There's a problem with what you wrote, because you surreptitiously changed the monoidal product midstream. </p>\n<p>For example, when we say that a monoid in the category of ordinary monoids is commutative, the monoidal product throughout is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">×</span></span></span></span>. But when we say a rig is a monoid in the category of commutative monoids, there the monoidal product on commutative monoids is taken to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span>.</p>",
        "id": 465787577,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1724856205
    },
    {
        "content": "<p>To talk about monoids in a category, you have to have more structure than just a category. If you have a monoidal structure associated to your category, then you can talk about monoids. More generally, multicategory structure allows to talk about monoids. </p>\n<p>Often your category has a monoidal structure arising from the categorical product and the monoids with respect this structure correspond to the usual notion of a monoid, at least in the category Set of sets. In your case, you start looking at the situation from the cartesian monoidal perspective to go from sets to monoids and then using the the cartesian monoidal structure of Mon(Set) to define Mon(Mon(Set)) which is the category Ab(Set) of abelian monoids in sets. </p>\n<p>Now you change from the cartesian structures to the symmetric monoidal structure defined by the tensor product of Ab(Set). This gives you Rigs = Mon(Ab(Set)) which indeed is the category of rings without the additive inverses. Since the theory of Rigs is not commutative, it doesn't have a corresponding symmetric monoidal product structure compared to the abelian monoids. You could then take the monoids in Rig with respect to the cartesian structure. This is probably something like an abelian monoid where the operation distributes over itself. If this is correct, then you can again define a tensor product and define new monoids. This procedure might not give much than either a rig with the additive operation distributing over itsef and just an abelian monoid where the operation distributes over itself.</p>\n<p>This reminds me of something similar:<br>\nLet T be a commutative single sorted algebraic linear theory. Let C be a symmetric multicategory. You can define a symmetric multicategory Mod(C,T) of models of T in C. Here the morphisms are the correct multimorphism (think about multi-linear maps) and the multi-composition is well defined, since the theory is commutative. Now we can ask the question, what is Mod(Mod(C,T),T). Here the idea is to work in symmetric multicategories instead of symmetric monoidal categories, since you don't need to argue that some tensor products exist.</p>",
        "id": 465795089,
        "sender_full_name": "David Forsman",
        "timestamp": 1724858007
    },
    {
        "content": "<p>(Ahem?)</p>",
        "id": 465796134,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1724858297
    },
    {
        "content": "<blockquote>\n<p>Since the theory of Rigs is not commutative, it doesn't have a corresponding symmetric monoidal product structure compared to the abelian monoids.</p>\n</blockquote>\n<p>Of course, there is a symmetric monoidal product on (not necessarily commutative) rigs given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span> on the underlying additive monoids. Monoids with respect to that give you commutative rigs. </p>\n<blockquote>\n<p>You could then take the monoids in Rig with respect to the cartesian structure.</p>\n</blockquote>\n<p>But the monoidal unit there is the terminal rig <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>, where we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, and so if there is to be a monoid unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>→</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">t \\to R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> wrt cartesian monoidal product, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> would itself have to be terminal, so this doesn't lead to anything exciting.</p>",
        "id": 465800789,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1724859630
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Mon.28Mon.28Mon.29.29.20.3D.20Rig/near/465787577\">said</a>:</p>\n<blockquote>\n<p>There's a problem with what you wrote, because you surreptitiously changed the monoidal product midstream. </p>\n</blockquote>\n<p>Ha that makes a lot of sense thanks! So to sum up a monoid in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mi>M</mi><mi>o</mi><mi>n</mi><mo separator=\"true\">,</mo><mo>⊗</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(CMon, \\otimes)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">CM</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">⊗</span><span class=\"mclose\">)</span></span></span></span> is a rig but a monoid in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mi>M</mi><mi>o</mi><mi>n</mi><mo separator=\"true\">,</mo><mo>×</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(CMon, \\times)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">CM</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">×</span><span class=\"mclose\">)</span></span></span></span> is just a commutative monoid (apply Eckmann-Hilton one more time).</p>",
        "id": 465804031,
        "sender_full_name": "Alexis Toumi",
        "timestamp": 1724860723
    },
    {
        "content": "<p>With respect to David's last suggestion: it's certainly true that commutative monads are relevant to producing ever newer monoidal products. One trouble however is that the symmetric algebra monad construction on commutative monoids, whose algebras are commutative rigs, is not commutative. Heck, it's not even enriched wrt <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span> (i.e., it's not \"linear\")!  Nor is the monad induced by the forgetful functor from commutative rigs to sets commutative, even as a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span>-enriched monad.</p>",
        "id": 465807668,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1724861788
    },
    {
        "content": "<p>The equation (1) f(x+y,z) = f(x,z)+ f(y,z) is not a linear equation, since 'z' is repeated twice in the right-hand term and so the equation (1) cannot be interpreted in an arbitrary symmetric multicategory C. Hence my previous claim about the multicategory Mod(C,T) being well defined is false, since the multi-morphisms aren't well defined. If C is a symmetric diagonal multicategory (surjections f:[m]-&gt;[n] between finite ordinals act on the multihomsets f*:C(a_f(1),...,a_f(m);b)-&gt;C(a_1,...,a_n;b)), then the equation (1) can be interpreted in C.</p>\n<p>So if C is a symmetric diagonal multicategory, then this construction seems to allow the definition of the symmetric multicategory Mod(C,T), but it no longer is necessarily a diagonal multicategory and the important property is lost.</p>",
        "id": 465822982,
        "sender_full_name": "David Forsman",
        "timestamp": 1724867727
    },
    {
        "content": "<blockquote>\n<p>The equation (1) f(x+y,z) = f(x,z)+ f(y,z) is not a linear equation</p>\n</blockquote>\n<p>(That's not the \"linear\" I meant.)</p>",
        "id": 465827175,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1724869605
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277611\">Todd Trimble</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Mon.28Mon.28Mon.29.29.20.3D.20Rig/near/465827175\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The equation (1) f(x+y,z) = f(x,z)+ f(y,z) is not a linear equation</p>\n</blockquote>\n<p>(That's not the \"linear\" I meant.)</p>\n</blockquote>\n<p>I understand, I was adding some details I overlooked.</p>\n<p>I think it is interesting if Mod(C,T) could be made into a symmetric diagonal multi-category by adding equations for the multi-morphisms to satisfy.</p>",
        "id": 465837313,
        "sender_full_name": "David Forsman",
        "timestamp": 1724873926
    }
]