[
    {
        "content": "<p>Before <strong>Section 6.4</strong> in <a href=\"https://arxiv.org/pdf/2101.09363\">https://arxiv.org/pdf/2101.09363</a>, it is mentioned that there is a <em>necessity</em> to consider decorated cospans for the application in Petri nets with rates. Then, the whole <strong>section 6.4</strong> is built upon-decorated cospans.  Is it because the category of Petri nets with rates (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>e</mi><mi>t</mi><mi>r</mi><msub><mi>i</mi><mi>r</mi></msub></mrow><annotation encoding=\"application/x-tex\">Petri_{r}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>) may not have small colimits or the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>S</mi><mi>e</mi><mi>t</mi><mi>s</mi><mo>→</mo><mi>P</mi><mi>e</mi><mi>t</mi><mi>r</mi><msub><mi>i</mi><mi>r</mi></msub></mrow><annotation encoding=\"application/x-tex\">L \\colon Sets \\rightarrow Petri_{r}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> may not be left adjoint?</p>\n<p>Now, in the <strong>Definition 6.17</strong> of <a href=\"https://arxiv.org/pdf/1911.04630\">https://arxiv.org/pdf/1911.04630</a>, there is a slight change in the definition of the category of open Petri nets with rates than in <a href=\"https://arxiv.org/pdf/2101.09363\">https://arxiv.org/pdf/2101.09363</a>. In particular, there is a difference in the \"compatibility condition of the morphisms with the rate function\". Now, by the <strong>Lemma 6.18</strong> and <strong>Lemma 6.19</strong> of <a href=\"https://arxiv.org/pdf/1911.04630\">https://arxiv.org/pdf/1911.04630</a>,  we have all the necessary ingredients to describe Open Petri nets with rates as structured cospans (horizontal 1-cells) in a unique symmetric monoidal double category due to the <strong>Lemma 14</strong> of <a href=\"https://arxiv.org/pdf/1808.05415\">https://arxiv.org/pdf/1808.05415</a>. However, in <a href=\"https://arxiv.org/pdf/1911.04630\">https://arxiv.org/pdf/1911.04630</a>,  only isomorphism classes of structured cospans are considered, and the construction of the double category is not shown.  </p>\n<p><strong>My questions are the following:</strong></p>\n<ol>\n<li>\n<p>As mentioned in \"before <strong>Section 6.4</strong> in <a href=\"https://arxiv.org/pdf/2101.09363\">https://arxiv.org/pdf/2101.09363</a>\", what is the precise necessity of structured cospans for describing open Petri nets with rates? Is it due to the \"change in the compatibility condition of the morphisms with the rate function\"?</p>\n</li>\n<li>\n<p>Why  inspite of having all the ingredients for the construction of symmetric monoidal double category, in the <strong>Section 6.16</strong> of <a href=\"https://arxiv.org/pdf/1911.04630\">https://arxiv.org/pdf/1911.04630</a>, only isomorphism classes of structured cospans are considered and the the corresponding symmetric monoidal double category is not constructed?</p>\n</li>\n</ol>\n<p>Am I missing something here?</p>",
        "id": 447018021,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719357525
    },
    {
        "content": "<p>The first short answer is that this problem has been bothering me for years.  You're seeing various attempts to deal with it.   Some of those sections you're pointing to have been rewritten several times, in different arXiv versions.   The paper \"Structured versus decorated cospans\" has the best treatment so far, and as far as I'm concerned you can ignore all the previous papers when it comes to this particular problem.   But I'm still not satisfied, and I have some new ideas that I should try to write up.   </p>\n<p>I'm impressed by how much attention you've paid to the details here; this is truly a case where \"the devil is in the details\".</p>",
        "id": 447127687,
        "sender_full_name": "John Baez",
        "timestamp": 1719379779
    },
    {
        "content": "<p>When I'm more awake I can try to start digging into the technical details, but actually you're making me want to get serious and write the paper where I finally solve this problem in a satisfactory way.   It's one of those problems that's hard to precisely state until it's solved.</p>",
        "id": 447128016,
        "sender_full_name": "John Baez",
        "timestamp": 1719379969
    },
    {
        "content": "<p>Why are you interested in this?</p>",
        "id": 447128043,
        "sender_full_name": "John Baez",
        "timestamp": 1719379993
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447128043\">said</a>:</p>\n<blockquote>\n<p>Why are you interested in this?</p>\n</blockquote>\n<p>Thank you so much!! I understand your point.</p>\n<p>We (j/w Olaf Wolkenhauer, University of Rostock and Ralf Köhl, University of Kiel) are building a formal framework to study the functional and structural organisation of multilevel molecular/cellular reaction networks that are visualised with SBGN Process Diagrams (Systems Biology Graphical Notation). We are exploring Applied Category Theory for this purpose.</p>\n<p>For most disease-relevant processes, a large number of molecules and cell types are involved. Experimental studies, however, usually focus on a small number of molecules (pathways). The information derived from experimental studies (relation and direction) is available in databases and repositories. An example is the Atlas of Inflammation Resolution (AIR, <a href=\"https://air.bio.informatik.uni-rostock.de\">https://air.bio.informatik.uni-rostock.de</a> ), which gathers thousands of interactions organised in networks that are visualised using SBGN. A typical task is to use new experimental data mapped onto the AIR to identify subnetworks for further analysis.</p>\n<p>A challenge is that the networks can be organised in different ways, linked to different levels of structural and functional organisation. The structural organisation is here from molecules to cells and tissues, while the functional organisation is here linked to reactions, cellular functions (including cell division, differentiation, apoptosis), and physiological functions, e.g. of a tissue. The notion of a function refers here to the ‘role’ an entity or process has. </p>\n<p>At present, larger networks are not really composed systematically of smaller ones. We hope to find a formal language of the architecture of such molecular/cellular networks, where we have a clearer meaning of composition, respecting the above-referred levels of organisation.</p>\n<p>A major challenge is that the output of one reaction may not be an input to another reaction but a modulator-like stimulus, necessary stimulus, catalysis, inhibitor, etc. To build the said architecture, we are currently exploring an appropriately generalised/modified version of the Open Petri nets theory you and your collaborators developed. Since our framework does not have a precise input-output, we can not represent our Petri nets as commutative monoidal categories like you did for your Petri nets. We are also interested in (but not limited to) the systems of differential equations associated with our Petri nets with an appropriate notion of rates. </p>\n<p>We have constructed a symmetric monoidal double category (based on structured cospans) of syntax, whose horizontal 1-cells are our open Petri nets. Also, we found ways to express the “2-morphisms” and “various types of decomposition” as a way of “zoom-out” and “zoom-in”  and to describe multi-levelness, respectively. </p>\n<p>We are currently building \"our open Petri nets with rates\". However, we are in a dilemma!! Should we use decorated cospans or structured cospans to construct the symmetric monoidal double category of our Petri nets with rates?</p>",
        "id": 447210126,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719406015
    },
    {
        "content": "<p>Thanks for the detailed explanation of your reason for interest.  I strongly support work of the sort you're doing, and I hope that someday the software and mathematics my friends are developing will be useful to you.</p>\n<p>This includes AlgebraicPetri, AlgebraicDynamics and other software systems built in AlgebraicJulia.</p>",
        "id": 447345508,
        "sender_full_name": "John Baez",
        "timestamp": 1719439887
    },
    {
        "content": "<p>Structured cospans are generally easier to handle in software, and AlgebraicJulia tries to use those whenever possible.   However until recently we didn't see how to get structured cospans to work perfectly for dynamical systems, for reasons explained in Section 6.4 of <a href=\"http://math.ucr.edu/home/baez/cospans.pdf\">Decorated vs Structured Cospans</a>.</p>",
        "id": 447346621,
        "sender_full_name": "John Baez",
        "timestamp": 1719440187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447345508\">said</a>:</p>\n<blockquote>\n<p>Thanks for the detailed explanation of your reason for interest.  I strongly support work of the sort you're doing, and I hope that someday the software and mathematics my friends are developing will be useful to you.</p>\n<p>This includes AlgebraicPetri, AlgebraicDynamics and other software systems built in AlgebraicJulia.</p>\n</blockquote>\n<p>Thank you so much!! Definitely!! In fact, we have a plan for such an implementation!! But at the moment, it is too far!!</p>",
        "id": 447347274,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719440424
    },
    {
        "content": "<p>In <a href=\"http://math.ucr.edu/home/baez/cospans.pdf\">Section 6.4</a>, as you probably know well, we explain a symmetric monoidal double functor from a certain </p>\n<ul>\n<li><del>structured</del> decorated cospan double category of open Petri nets with rates</li>\n</ul>\n<p>to a certain</p>\n<ul>\n<li>decorated cospan double category of open dynamical systems.</li>\n</ul>\n<p>We show <em>roughly</em> that the second of these is not equivalent to a structured cospan category. <em>More precisely</em>, we only show that a certain theorem we have for getting structured cospan double categories does not apply to this case.</p>\n<p>I think there is a solution to this \"problem\": namely, a better - inequivalent - symmetric monoidal double category of open dynamical system categories invented by <span class=\"user-mention\" data-user-id=\"275965\">@Evan Patterson</span>, which <em>is</em> a structured cospan category.</p>",
        "id": 447347576,
        "sender_full_name": "John Baez",
        "timestamp": 1719440594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447346621\">said</a>:</p>\n<blockquote>\n<p>Structured cospans are generally easier to handle in software, and AlgebraicJulia tries to use those whenever possible.   However until recently we didn't see how to get structured cospans to work perfectly for dynamical systems, for reasons explained in Section 6.4 of <a href=\"file:///C:/Users/johncarlosbaez/Downloads/cospans.pdf\">Decorated vs Structured Cospans</a>.</p>\n</blockquote>\n<p>Thank you!!</p>",
        "id": 447347756,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719440703
    },
    {
        "content": "<p>I'll add that <span class=\"user-mention\" data-user-id=\"276972\">@Kenny</span>, <span class=\"user-mention\" data-user-id=\"276985\">@Christina Vasilakopoulou</span> and I were just about to publish this paper when <span class=\"user-mention\" data-user-id=\"276589\">@Sophie Libkind</span> caught a mistake in Section 6.4 and proposed the fix described there: namely, the \"correct\" concept of vertical or tight morphism between open Petri nets with rates.   Before I had always been using a more stupid concept.</p>",
        "id": 447348096,
        "sender_full_name": "John Baez",
        "timestamp": 1719440866
    },
    {
        "content": "<p>I'm talking about the place where the paper says:</p>\n<blockquote>\n<p>This definition was suggested by Sophie Libkind; it agrees with the earlier definition [9] in the case of isomorphisms, but not in general, and the difference is important here.</p>\n</blockquote>",
        "id": 447348235,
        "sender_full_name": "John Baez",
        "timestamp": 1719440927
    },
    {
        "content": "<p>However, this improvement to the double category of open Petri nets with rates is not the end of the story, because I believe we still need to improve the double category of open dynamical systems, so that it too can be a structured cospan category, and so that we can define a (modified but just as useful) version of the functor sending open Petri nets with rates to open dynamical systems, using the technology of structured cospans.</p>",
        "id": 447348546,
        "sender_full_name": "John Baez",
        "timestamp": 1719441093
    },
    {
        "content": "<p>This new improvement - if it works!!! - will use ideas from here:</p>\n<ul>\n<li>Rebekah Aduddell, James Fairbanks, Amit Kumar, Pablo S. Ocal, Evan Patterson, and Brandon T. Shapiro, <a href=\"https://arxiv.org/abs/2301.01445\">A compositional account of motifs, mechanisms, and dynamics in biochemical regulatory networks</a>.</li>\n</ul>",
        "id": 447348870,
        "sender_full_name": "John Baez",
        "timestamp": 1719441258
    },
    {
        "content": "<p>So you might like to check out this paper if you haven't yet, and read about \"parametrized dynamical systems\".</p>",
        "id": 447348979,
        "sender_full_name": "John Baez",
        "timestamp": 1719441335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447347576\">said</a>:</p>\n<blockquote>\n<p>In <a href=\"http://math.ucr.edu/home/baez/cospans.pdf\">Section 6.4</a>, as you probably know well, we explain a symmetric monoidal double functor from a certain </p>\n<ul>\n<li>structured cospan double category of open Petri nets with rates</li>\n</ul>\n<p>to a certain</p>\n<ul>\n<li>decorated cospan double category of open dynamical systems.</li>\n</ul>\n<p>We show <em>roughly</em> that the second of these is not equivalent to a structured cospan category. <em>More precisely</em>, we only show that a certain theorem we have for getting structured cospan double categories does not apply to this case.</p>\n<p>I think there is a solution to this \"problem\": namely, a better - inequivalent - symmetric monoidal double category of open dynamical system categories invented by <span class=\"user-mention silent\" data-user-id=\"275965\">Evan Patterson</span>, which <em>is</em> a structured cospan category.</p>\n</blockquote>\n<p>According to the <strong>Theorem 2.2</strong> in <a href=\"https://math.ucr.edu/home/baez/cospans.pdf\">https://math.ucr.edu/home/baez/cospans.pdf</a>, the double category of Open Petri nets with rates is a decorated cospan double category. Am I understanding correctly?</p>",
        "id": 447349150,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719441438
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447348979\">said</a>:</p>\n<blockquote>\n<p>So you might like to check out this paper if you haven't yet, and read about \"parametrized dynamical systems\".</p>\n</blockquote>\n<p>Thanks a lot!! No, I was not aware of this paper!! I will read it!!</p>",
        "id": 447349350,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719441566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"520375\">Adittya Chaudhuri</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447349150\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447347576\">said</a>:</p>\n<blockquote>\n<p>In <a href=\"http://math.ucr.edu/home/baez/cospans.pdf\">Section 6.4</a>, as you probably know well, we explain a symmetric monoidal double functor from a certain </p>\n<ul>\n<li><del>structured</del> decorated cospan double category of open Petri nets with rates</li>\n</ul>\n<p>to a certain</p>\n<ul>\n<li>decorated cospan double category of open dynamical systems.</li>\n</ul>\n<p>We show <em>roughly</em> that the second of these is not equivalent to a structured cospan category. <em>More precisely</em>, we only show that a certain theorem we have for getting structured cospan double categories does not apply to this case.</p>\n<p>I think there is a solution to this \"problem\": namely, a better - inequivalent - symmetric monoidal double category of open dynamical system categories invented by <span class=\"user-mention silent\" data-user-id=\"275965\">Evan Patterson</span>, which <em>is</em> a structured cospan category.</p>\n</blockquote>\n<p>According to the <strong>Theorem 2.2</strong> in <a href=\"https://math.ucr.edu/home/baez/cospans.pdf\">https://math.ucr.edu/home/baez/cospans.pdf</a>, the double category of Open Petri nets with rates is a decorated cospan double category. Am I understanding correctly?</p>\n</blockquote>\n<p>You're right, I made a mistake above.</p>",
        "id": 447351324,
        "sender_full_name": "John Baez",
        "timestamp": 1719442634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447351324\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"520375\">Adittya Chaudhuri</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447349150\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447347576\">said</a>:</p>\n<blockquote>\n<p>In <a href=\"http://math.ucr.edu/home/baez/cospans.pdf\">Section 6.4</a>, as you probably know well, we explain a symmetric monoidal double functor from a certain </p>\n<ul>\n<li>-structured- decorated cospan double category of open Petri nets with rates</li>\n</ul>\n<p>to a certain</p>\n<ul>\n<li>decorated cospan double category of open dynamical systems.</li>\n</ul>\n<p>We show <em>roughly</em> that the second of these is not equivalent to a structured cospan category. <em>More precisely</em>, we only show that a certain theorem we have for getting structured cospan double categories does not apply to this case.</p>\n<p>I think there is a solution to this \"problem\": namely, a better - inequivalent - symmetric monoidal double category of open dynamical system categories invented by <span class=\"user-mention silent\" data-user-id=\"275965\">Evan Patterson</span>, which <em>is</em> a structured cospan category.</p>\n</blockquote>\n<p>According to the <strong>Theorem 2.2</strong> in <a href=\"https://math.ucr.edu/home/baez/cospans.pdf\">https://math.ucr.edu/home/baez/cospans.pdf</a>, the double category of Open Petri nets with rates is a decorated cospan double category. Am I understanding correctly?</p>\n</blockquote>\n<p>You're right, I made a mistake above.</p>\n</blockquote>\n<p>Ok, thanks!</p>",
        "id": 447351360,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719442666
    },
    {
        "content": "<p>So, if you are mainly doing theoretical work, the <em>decorated</em> cospan double categories of </p>\n<ul>\n<li>open Petri nets with rates</li>\n</ul>\n<p>and</p>\n<ul>\n<li>open dynamical systems</li>\n</ul>\n<p>described in Section 6.4 of <a href=\"http://math.ucr.edu/home/baez/cospans.pdf\">Structured vs Decorated Cospans</a> should work just fine!   As far as I'm concerned, it's mainly when one is writing software, especially in AlgebraicJulia, that structured cospans become much easier.</p>",
        "id": 447351762,
        "sender_full_name": "John Baez",
        "timestamp": 1719442897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447351762\">said</a>:</p>\n<blockquote>\n<p>So, if you are mainly doing theoretical work, the <em>decorated</em> cospan double categories of </p>\n<ul>\n<li>open Petri nets with rates</li>\n</ul>\n<p>and</p>\n<ul>\n<li>open dynamical systems</li>\n</ul>\n<p>described in this paper should work just fine!   As far as I'm concerned, it's mainly when one is writing software, especially in AlgebraicJulia, that structured cospans become much easier.</p>\n</blockquote>\n<p>I see!! Thanks!! At the moment it is theoretical. However, later we have a plan for AlgebraicJulia implementation.</p>",
        "id": 447351936,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719443005
    },
    {
        "content": "<p>Okay.   I guess you see that in <em>both</em> the double categories I mentioned above, the vertical morphisms involve <em>adding real numbers</em>.   For open Petri nets with rates, that was an innovation of <a href=\"https://arxiv.org/abs/2101.09363\">Structured versus decorated cospans</a>, suggested by <span class=\"user-mention\" data-user-id=\"276589\">@Sophie Libkind</span>.   And if that's how you want the vertical morphisms to work, the double categories in this paper will be good for you:</p>\n<ul>\n<li>\n<p>In the double category of open Petri nets with rates, we <em>add the rate constants</em> when we map two or more transitions to the same transition.    (This was not true of the earlier double category of open Petri nets with rates in <a href=\"https://arxiv.org/abs/1911.04630v2\">early versions</a> of my paper with Kenny Courser, Structured cospans, which is why we decided not to discuss that double category in the <a href=\"https://arxiv.org/abs/1911.04630\">latest version</a> - you were wondering about that!  Luckily, the new and old double categories give the same category.)</p>\n</li>\n<li>\n<p>In the double category of open dynamical systems, we <em>add vector fields</em> when we map several variables to the same variable.  </p>\n</li>\n</ul>\n<p>This similarity between the two double categories is essential for getting a double functor from the first to the second, which we call \"grayboxing\".</p>",
        "id": 447421369,
        "sender_full_name": "John Baez",
        "timestamp": 1719478304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Necessity.20of.20decorated.20cospans.20in.20open.20Petri.20nets.20with.20rate/near/447421369\">said</a>:</p>\n<blockquote>\n<p>Okay.   I guess you see that in <em>both</em> the double categories I mentioned above, the vertical morphisms involve <em>adding real numbers</em>.   For open Petri nets with rates, that was an innovation of <a href=\"https://arxiv.org/abs/2101.09363\">Structured versus decorated cospans</a>, suggested by <span class=\"user-mention silent\" data-user-id=\"276589\">Sophie Libkind</span>.   And if that's how you want the vertical morphisms to work, the double categories in this paper will be good for you:</p>\n<ul>\n<li>\n<p>In the double category of open Petri nets with rates, we <em>add the rate constants</em> when we map two or more transitions to the same transition.    (This was not true of the earlier double category of open Petri nets with rates in <a href=\"https://arxiv.org/abs/1911.04630v2\">early versions</a> of my paper with Kenny Courser, Structured cospans, which is why we decided not to discuss that double category in the <a href=\"https://arxiv.org/abs/1911.04630\">latest version</a> - you were wondering about that!  Luckily, the new and old double categories give the same category.)</p>\n</li>\n<li>\n<p>In the double category of open dynamical systems, we <em>add vector fields</em> when we map several variables to the same variable.  </p>\n</li>\n</ul>\n<p>This similarity between the two double categories is essential for getting a double functor from the first to the second, which we call \"grayboxing\".</p>\n</blockquote>\n<p>Thanks a lot!! I now got your point of not including the double category, and the reason for considering only the category (by taking isomorphism classes of the open Petri nets with rates) .</p>",
        "id": 447442285,
        "sender_full_name": "Adittya Chaudhuri",
        "timestamp": 1719483941
    }
]