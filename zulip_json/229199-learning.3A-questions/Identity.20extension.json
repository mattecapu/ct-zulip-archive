[
    {
        "content": "<p>Continuing on from the other topics about parametricity, I'd like to propose a framework for talking about identity extension that, I think, makes things more clear for me.  In particular, it gives a precise and more general sense for a specific <em>model</em> to \"be parametric\".</p>\n<p>Now the specific kind of model that can \"be parametric\" is not a model of system F alone, but rather of system F with a \"logic over it\".  There are a lot of ways one might do this, such as the purely binary one in the Abadi-Cardelli-Curien paper, but I find it more familiar and natural to allow arbitrary predicates.  I think I would formalize this as a pair of fibrations.</p>\n<ul>\n<li>At the bottom is a finite-product category of \"kinds\", with two base kinds <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span> (types) and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span> (propositions), and in which all exponentials such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mo>→</mo><mo>∗</mo><mo>→</mo><mo>∗</mo><mo>→</mo><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\ast \\to \\ast\\to \\ast\\to\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span> exist (predicates).</li>\n<li>Fibered over this is a CCC of \"types\", with type variables of kind <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">\\forall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span>-quantifiers over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>.  Note that the propositions and predicates are irrelevant to this layer.</li>\n<li>Fibered over this is another CCC (perhaps posetal) of \"predicates\", with equality predicates satisfying their usual rules, variables of predicate kinds such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mo>→</mo><mo>∗</mo><mo>→</mo><mo>∗</mo><mo>→</mo><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\ast \\to \\ast \\to \\ast \\to\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">\\forall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span>-quantifiers over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span> and over all types.</li>\n</ul>\n<p>Maybe this isn't quite right, but I think something like it should be sensible.  Of course there is a corresponding syntactic theory of such things.</p>\n<p>Now given any such \"logic-enriched model of system F\" we can construct a <em>new</em> model of system F (without logic) whose types are those of our original model equipped with a relation (say binary).  This is the usual logical relations construction.  Since this relational model is a model of system F, there is a map to it from the initial model of system F, and therefore in particular any definable type-in-context is interpreted by a relation-in-context.  We say our original logic-enriched model satisfies <em>identity extension</em> if this relational interpretation of every definable type-in-context is equality.</p>",
        "id": 536360666,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1756279298
    },
    {
        "content": "<p>A framework like this would allow us to say (and presumably prove) things like \"in any logic-enriched model satisfying identity extension, the interpretation of any definable transformation between definable functors is natural\".</p>\n<p>And on the other hand we could interpret particular \"proofs\" of identity extension as constructions of particular models where it holds, such as Neel's mutually recursive PERs-and-relations model, or Reynolds' original mutually recursive sets-and-relations model.</p>\n<p>And finally, we could also make precise negative statements like \"the initial model of system F, equipped with the logic of set-theoretic relations on closed terms, does not satisfy identity extension\".</p>",
        "id": 536361561,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1756279656
    }
]