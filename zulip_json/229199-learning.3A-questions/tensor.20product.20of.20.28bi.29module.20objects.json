[
    {
        "content": "<p>I seem to be confused about module objects (over a monoid object) in a monoidal category, and the monoidal (tensor) product of these. <br>\nWorking in the cartesian category of sets, \"modules\" are monoid actions, and tensoring these involves copying, aka the coproduct. This story seems to carry over to the linear case, which is about modules over a bimonoid (or Hopf algebra). I'm hoping this is all correct so far, and includes some other important examples, such as tensoring of algebras over a monad. (This is part of my (foolish) mission to rewrite all of mathematics using string diagrams, and all this monoid business seems to be the \"killer app\" of string diagrams...) <br>\nMy confusion arises because there is <a href=\"https://ncatlab.org/nlab/show/tensor+product+of+modules#definition\">another definition</a> of tensor product of modules, which uses a coequalizer to force the action of the monoid object on the two tensor factors to be equal. I'm hoping there is some slick explanation of why there are these two definitions: one using the coproduct, and one using a coequalizer, and why/why don't they result in the same tensor product. Is it something to do with enriched categories?</p>",
        "id": 292358147,
        "sender_full_name": "Simon Burton",
        "timestamp": 1659930848
    },
    {
        "content": "<p>I don't know of any definition of tensor product that only involves the coproduct. It is a theorem that in the category of commutative rings (and more generally commutative monoids), the underlying object (i.e. abelian group in the case of rings) of the coproduct is the monoidal product of the underlying objects.</p>",
        "id": 292388721,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1659957715
    },
    {
        "content": "<p>The enriched category theory perspective is that the tensor product of (bi)modules is a special case of a weighted colimit of base-valued functors ... a.k.a. profunctors. The tensor product is profunctor composition.</p>",
        "id": 292389794,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1659958445
    },
    {
        "content": "<p>Sorry, I should have said: 'Working in the cartesian category of sets, \"modules\" are monoid actions, and tensoring these involves copying, aka the <em>comultiplication</em>.'</p>",
        "id": 292522495,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660014837
    },
    {
        "content": "<p>I don't see how. The tensor product of a left monoid action with a right monoid action is entirely analogous to the tensor product over a ring of a left module with a right module. In particular it cannot involve comultiplication because rings do not have comultiplication.</p>",
        "id": 292522823,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1660015295
    },
    {
        "content": "<p>Ok, thanks for your patience while I try to describe this better. The cartesian category of sets has a comultiplication which is the diagonal map. A bimonoid (or bialgebra) in this category is a (compatible) monoid and a comonoid, which turns out to be the same as just a monoid. Modules here are just monoid actions. \"Tensor\" of these \"modules\" is just cartesian product of the sets along with an action that crucially involves the diagonal (comultiplication) map.</p>",
        "id": 292526899,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660021103
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277321\">Simon Burton</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/tensor.20product.20of.20.28bi.29module.20objects/near/292526899\">said</a>:</p>\n<blockquote>\n<p>\"Tensor\" of these \"modules\" is just cartesian product of the sets along with an action that crucially involves the diagonal (comultiplication) map.</p>\n</blockquote>\n<p>Can you make this explicit?</p>",
        "id": 292536646,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1660031242
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>m</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">m(x,y) = (mx,my)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> requires copying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>.</p>",
        "id": 292537975,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1660032164
    },
    {
        "content": "<p>That's not what I understand by tensoring two monoid actions.</p>",
        "id": 292543204,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1660035876
    },
    {
        "content": "<p>Indeed, Simon's confusion is between tensoring of modules for a bimonoid and tensoring of monoid actions or modules. The latter defines a tensor product which is distinct from the tensor product in the base category of sets (the tensor product used to define the monoids). The former is a construction which only requires a single type of product, using the comultiplication map of the bimonoid in order to define the module structure on the tensored modules.</p>",
        "id": 292545801,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1660037257
    },
    {
        "content": "<p>I'm pretty sure that the answer is that these cannot be reconciled, since as you've observed <span class=\"user-mention\" data-user-id=\"277321\">@Simon Burton</span>, the tensoring of modules for a bimonoid produces a (cartesian) <em>product</em> of monoid actions in this special case, which is distinct from what is usually understood as the tensor product of monoid actions (which in general just produces a set, but can be made to produce a new monoid action when the monoid is commutative).</p>",
        "id": 292546061,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1660037361
    },
    {
        "content": "<p>What is the usual tensor product of monoid actions? The one involving a coequalizer?</p>",
        "id": 292549045,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660038776
    },
    {
        "content": "<p>Ok, well thanks everyone for the discussion, I think this is making more sense now. I'm going to try to think about what is the \"coeqalizer tensor\" product of two G-sets.. In general this is going to give something degenerate, but if the orbits (of the two actions) agree somehow they will survive the coequalizer process.</p>",
        "id": 292549643,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660039062
    },
    {
        "content": "<p>The usual tensor product of monoid actions is the one that coequalises the input actions, yes. The result has no monoid action, btw.</p>",
        "id": 292549663,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1660039071
    },
    {
        "content": "<p>Oh, i see.. yes there's no action left after going through a co-equalizer.. hmm.</p>",
        "id": 292549780,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660039124
    },
    {
        "content": "<p>I'm not sure what the usual name for the other product of modules over a bimonoid is... I know it has its uses in representation theory, but I think they are only distinguished by the subscript on the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span> operator.</p>",
        "id": 292550239,
        "sender_full_name": "Zhen Lin Low",
        "timestamp": 1660039332
    },
    {
        "content": "<p>I just found this very helpful discussion in <a href=\"https://www.math.ias.edu/vladimir/node/71\">[KV1994]</a>  which goes over what we have been discussing <a href=\"/user_uploads/21317/Yt8pjFykwKSy_91KL8Hpy7nl/image.png\">image.png</a>.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/Yt8pjFykwKSy_91KL8Hpy7nl/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/Yt8pjFykwKSy_91KL8Hpy7nl/image.png\"></a></div>",
        "id": 292911147,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660217520
    },
    {
        "content": "<p>Given a group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> we can form its group algebra <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo stretchy=\"false\">[</mo><mi>G</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">k[G]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">]</span></span></span></span> and then the tensor product of modules <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo separator=\"true\">,</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M,N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> over this algebra is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><msub><mo>⊗</mo><mrow><mi>k</mi><mo stretchy=\"false\">[</mo><mi>G</mi><mo stretchy=\"false\">]</mo></mrow></msub><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M\\otimes_{k[G]} N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0385em;vertical-align:-0.3552em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mbin\">⊗</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\">G</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> (the co-equalizer version), and I'm guessing this is the tensor product we use to get the tensor-hom adjunction to work!</p>",
        "id": 292911969,
        "sender_full_name": "Simon Burton",
        "timestamp": 1660217814
    }
]