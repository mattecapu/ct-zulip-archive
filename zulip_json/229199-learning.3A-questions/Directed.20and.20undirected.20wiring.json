[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/DOTS.2C.20TQFTs.20and.20n-theories/near/541398408\">said</a>:</p>\n<blockquote>\n<p>Sophie Libkind has already unified the input-output doctrine and variable sharing doctrine (which she called the resource sharing doctrine) in her paper</p>\n<ul>\n<li>Sophie Libkind, <a href=\"https://arxiv.org/abs/2007.14442\">An algebra of resource sharing machines</a>.</li>\n</ul>\n<p>By the way, this paper has a good explanation of the <em>distinction</em> between the two doctrines, starting in the abstract:</p>\n<blockquote>\n<p>To some, open dynamical systems are input-output machines which interact by feeding the input of one system with the output of another. To others, open dynamical systems are input-output agnostic and interact through a shared pool of resources. In this paper, we define an algebra of open dynamical systems which unifies these two perspectives.</p>\n</blockquote>\n</blockquote>\n<p>I'm getting very interested in this issue. Consider Sophie's discussion of the difference. First, the machine/input-out/directed wiring paradigm:</p>\n<blockquote>\n<p>When two machines compose, one machine is the designated sender and the other is the designated receiver. The sender emits information which directs the evolution of the receiver.<br>\nIn the special case where a system is both the sender and the receiver, this interaction describes feedback. When machines compose:</p>\n<ol>\n<li><em>communication is uni-directional.</em> Information travels from the sender to the receiver but not vice versa.</li>\n<li><em>interaction is active</em>. The communication channel from sender to receiver is specifically engineered to enable the passing of information. The receiver does not evolve without input from the sender.</li>\n</ol>\n<p>When people communicate by passing notes, they are composing as machines where the note plays the role of the engineered communication channel.</p>\n</blockquote>\n<p>Now the variable-sharing/undirected wiring paradigm:</p>\n<blockquote>\n<p>Two resource sharers compose by simultaneously affecting and reacting to a shared pool of resources. When resource sharers compose:</p>\n<ol>\n<li><em>communication is undirected.</em> Each system may both affect and be affected by the state of the shared pool of resources. Through this medium, they may both affect and be affected by each other.</li>\n<li><em>interaction is passive.</em> The communication channel is incidental to the fact that the systems refer to the same resource. The rules for how each system affects and reacts to state of the resource is independent of the action of other systems on the pool.</li>\n</ol>\n<p>When people communicate verbally, they are composing as resource sharers where the shared resource is \"vibrations in the air space.\" All participants in a conversation affect and are affected by the changing<br>\nstate of the air between them.</p>\n</blockquote>",
        "id": 543682901,
        "sender_full_name": "David Corfield",
        "timestamp": 1759910695
    },
    {
        "content": "<p>It seems to me a little odd to distinguish sharply between people sending each other written messages and people having an in-person conversation as belonging to different paradigms. </p>\n<p>If I play chess, especially with a computer, it might seem right to view it in directed terms: I make a move and receive an update as to the position once the computer has responded. But I might take the board position as a shared resource between the two players.</p>\n<p>Perhaps she's chosen such an illustration to hint at the somewhat conventional nature of the distinction.</p>",
        "id": 543684080,
        "sender_full_name": "David Corfield",
        "timestamp": 1759911064
    },
    {
        "content": "<p>I see in Sophie and Keri D'Angelo's recent <a href=\"https://arxiv.org/abs/2503.05457\">Dependent Directed Wiring Diagrams for Composing Instantaneous Systems</a> that they're bringing Mealy machines and stock-flow diagrams into contact with each other, especially sec. 5.2. </p>\n<p>They're normally seen as belonging to different paradigms.</p>",
        "id": 543685339,
        "sender_full_name": "David Corfield",
        "timestamp": 1759911431
    },
    {
        "content": "<p>It's not that stock-flow diagrams belong to some paradigm (directed or undirected), it's how you compose them that belongs to some paradigm.</p>\n<p>Our first batch of papers on stock-flow diagrams composed them in an undirected way, by identifying stocks.    I believe all the software we have so far uses only this method.  But Nate Osgood is constantly militating for also composing them in a directed way, where the value in a stock of one determines a flow function in another.  (The 'flow function' says how the value of a flow is a function of the values of various stocks and other variables.)</p>\n<p>Sophie has created software that lets you compose Petri nets in both directed and undirected ways, and the same ideas should work for stock-flow diagrams.</p>\n<p>The only reason we haven't yet introduced directed composition for stock-flow diagrams is simply that software takes time to write and there are not enough people who can write the software.  We need more people who know category theory, can program in AlgebraicJulia, and want to work on this project!</p>",
        "id": 543690840,
        "sender_full_name": "John Baez",
        "timestamp": 1759913015
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543690840\">said</a>:</p>\n<blockquote>\n<p>The only reason we haven't yet introduced directed composition for stock-flow diagrams is simply that software takes time to write and there are not enough people who can write the software.  We need more people who know category theory, can program in AlgebraicJulia, and want to work on this project!</p>\n</blockquote>\n<p>oh, really? I could be interested, depending on the expected time commitment. Is there a page (or github?) for the project?</p>",
        "id": 543692674,
        "sender_full_name": "Peva Blanchard",
        "timestamp": 1759913539
    },
    {
        "content": "<p>Sure, there's a github for StockFlow.jl:</p>\n<p><a href=\"https://github.com/AlgebraicJulia/StockFlow.jl\">https://github.com/AlgebraicJulia/StockFlow.jl</a></p>\n<p>(read the long description near the bottom).   There are also papers describing it.   The first paper is short:</p>\n<ul>\n<li>John Baez, Xiaoyan Li, Sophie Libkind and Evan Patterson, <a href=\"https://arxiv.org/abs/2205.08373\">Compositional Modeling with Stock and Flow Diagrams</a>.</li>\n</ul>\n<p>The second goes into a lot more detail, and discusses newer features, with a lot of code shown at the end, but is aimed at an audience who knows little category theory:</p>\n<ul>\n<li>John C. Baez, Xiaoyan Li, Sophie Libkind, Nathaniel D. Osgood, Eric Redekopp, <a href=\"https://arxiv.org/abs/2211.01290\">A Categorical Framework for Modeling with Stock and Flow Diagrams</a>.</li>\n</ul>\n<p>The time commitment would be up to you, at least if you're doing something that nobody else relies on yet.  You'd probably need to talk to us sometimes.</p>",
        "id": 543695088,
        "sender_full_name": "John Baez",
        "timestamp": 1759914243
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543690840\">said</a>:</p>\n<blockquote>\n<p>It's not that stock-flow diagrams belong to some paradigm (directed or undirected), it's how you compose them that belongs to some paradigm.</p>\n</blockquote>\n<p>Ok, so then one issue is whether there's a good combination:</p>\n<blockquote>\n<p>The main theorem of this paper (Theorem 5.3) unites these two flavors of composition in a single framework for open dynamical systems.</p>\n</blockquote>\n<p>But maybe there's something more I'm after, not just a question of being able to compose in either of two ways, but of how we carve up the world into kinds of interacting subsystems.</p>",
        "id": 543698535,
        "sender_full_name": "David Corfield",
        "timestamp": 1759915279
    },
    {
        "content": "<p>I guess my intuition is that the directed form of communication is the more fundamental, and that undirected sharing is a limit case. The motion of one end of rod needs to be transmitted down its length. </p>\n<p>But maybe there's space for an undirected composition of pure identification.</p>",
        "id": 543704365,
        "sender_full_name": "David Corfield",
        "timestamp": 1759917064
    },
    {
        "content": "<p>In physical systems interaction is always bidirectional and there is no notion of \"input\" and \"output\", as I briefly explain in Section 2 of my paper <a href=\"https://math.ucr.edu/home/baez/double.pdf\">Double categories of open systems: the cospan approach</a>.   Directed wiring diagrams don't capture these features.    That's why I take the cospan approach (which is closely allied to the operad of undirected wiring diagrams).   I consider this fundamental to understanding the physical world - so it's interesting that people are able in some situations to act as if causation is directional.   I examine an example.</p>",
        "id": 543728070,
        "sender_full_name": "John Baez",
        "timestamp": 1759924581
    },
    {
        "content": "<p>It's interesting that the \"arrows of space\" people construct to embed unidirectional communication in the physical world all ultimately devolve to the arrow of time.</p>",
        "id": 543734487,
        "sender_full_name": "James Deikun",
        "timestamp": 1759926392
    },
    {
        "content": "<p>However, I think even in the physical paradigm, there's a distinction (perhaps again ultimately only conventional) between interaction by sharing a resource and direct <em>bidirectional</em> interaction (coupling) between systems.</p>",
        "id": 543734962,
        "sender_full_name": "James Deikun",
        "timestamp": 1759926517
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543734487\">said</a>:</p>\n<blockquote>\n<p>It's interesting that the \"arrows of space\" people construct to embed unidirectional communication in the physical world all ultimately devolve to the arrow of time.</p>\n</blockquote>\n<p>Yes!   I didn't come out and say that in my paper, for some reason, but my example should make that clear.   Maybe I should say \"arrow of time\" out loud, or maybe that would just open another Pandora's can of worms.</p>",
        "id": 543737748,
        "sender_full_name": "John Baez",
        "timestamp": 1759927280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543734962\">said</a>:</p>\n<blockquote>\n<p>However, I think even in the physical paradigm, there's a distinction (perhaps again ultimately only conventional) between interaction by sharing a resource and direct <em>bidirectional</em> interaction (coupling) between systems.</p>\n</blockquote>\n<p>Agreed!  We could take particles in two subsystems and \"couple\" them by letting them interact gravitationally (or admitting that they do, in fact, interact gravitationally).  Or we could take particles in two subsystems and decree that they are the same (or admit that they are the same, since the subsystems overlap) - that's the \"resource sharing\" approach.  </p>\n<p>The second seems mathematically simpler since you don't need to specify a <em>way</em> the two particles are interacting.  That's why we've focused on the second so far.   </p>\n<p>When you start specifying <em>ways</em> that two parts of two subsystems can interact, it seems you need a hand-crafted operad that has operations for all these ways.  I'm not opposed to that.   It would be fun to try it.</p>",
        "id": 543738477,
        "sender_full_name": "John Baez",
        "timestamp": 1759927434
    },
    {
        "content": "<p>I tend to think that directed representations are good for processes (temporal networks). Semantics for these tend to involve <em>states</em> of resources as input/output wires and transformations (interactions) of those states as nodes.</p>\n<p>Undirected directed diagrams are good for representing spatial networks, with the nodes representing <em>persistent</em> resources and edges (or often higher simplices) representing interactions. Semantics for these diagrams tend to be dynamical systems and/or their orbits, tracking change over time (sometimes obscured by a focus on fixed points).</p>\n<p>Ultimately, these should interact, with processes modifying spatial networks, and process transitions triggered by dynamical changes to persistent variable. The Carnot engine is a good example, with process steps corresponding to different network arrangements of the engine and reservoirs.</p>",
        "id": 543858350,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1759975113
    },
    {
        "content": "<p>Another point in the interrelation of doctrines: <a href=\"https://www.youtube.com/watch?v=qpWD16mOwr0\">Lecture 10</a> in <span class=\"user-mention\" data-user-id=\"751249\">@David Jaz Myers</span>'s DOTS lecture series sees him use \"clocks\" to turn the compositional theory of Moore machines via lenses into a behavioral system theorem (Jan Willems style) composing by sharing variables. </p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"qpWD16mOwr0\" href=\"https://www.youtube.com/watch?v=qpWD16mOwr0\"><img src=\"https://uploads.zulipusercontent.net/df9744c1a6bc1a9bd9056db2e94b48348116ba19/68747470733a2f2f692e7974696d672e636f6d2f76692f7170574431366d4f7772302f6d7164656661756c742e6a7067\"></a></div><p>This is part of the Future Work announced in the DOTS paper:</p>\n<blockquote>\n<p>Examine the Yoneda theory of systems theories (extending the work on representable morphisms of systems theories in Chapter 5 of [Mye21]). We will show that the simplest form of Willems’ behavioral approach to systems theory, as categorified in the sheaf approach of Schultz, Spivak, and Vasilakopolous [SSV19], is a discrete opfibration classifier in the 2-category of systems theories. In particular, features of systems theories representable by maps (such as trajectories, steady states, etc. but also control-barrier functions and cocycles) give (sometimes lax) morphisms of systems theories into Willems’ style behavioral systems theories (as demonstrated in the manuscript [Mye21]). This gives a robust class of compositionality theorems. We will explore how time variation in system behaviors arises out of a choice of a category of clock-systems which represent time-varying behavior, and connect this with the sheaf theoretic approach of [SSV19].</p>\n</blockquote>",
        "id": 543883007,
        "sender_full_name": "David Corfield",
        "timestamp": 1759993052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543728070\">said</a>:</p>\n<blockquote>\n<p>That's why I take the cospan approach (which is closely allied to the operad of undirected wiring diagrams).</p>\n</blockquote>\n<p>And allied to <em>properads</em> too:</p>\n<ul>\n<li>Jonathan Beardsley, Philip Hackney, <em>Labelled cospan categories and properads</em>, <a href=\"https://arxiv.org/abs/2206.00698\">arXiv:2206.00698</a></li>\n</ul>",
        "id": 543883899,
        "sender_full_name": "David Corfield",
        "timestamp": 1759993387
    },
    {
        "content": "<p>Hmm, why not  a 'Double <em>Properadic</em> Theory of Systems'? Can't we run these wiring diagrams backwards ?(Unwiring diagrams?)</p>\n<p><a href=\"/user_uploads/21317/kQJsPKqbpVVdNaIKG7NaOEwP/image.png\">image.png</a><br>\n<a href=\"/user_uploads/21317/NUOsSqhNaiGKx0IUvFcxGe3I/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/kQJsPKqbpVVdNaIKG7NaOEwP/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"296x181\" src=\"/user_uploads/thumbnail/21317/kQJsPKqbpVVdNaIKG7NaOEwP/image.png/840x560.webp\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/21317/NUOsSqhNaiGKx0IUvFcxGe3I/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"277x245\" src=\"/user_uploads/thumbnail/21317/NUOsSqhNaiGKx0IUvFcxGe3I/image.png/840x560.webp\"></a></div>",
        "id": 543888736,
        "sender_full_name": "David Corfield",
        "timestamp": 1759995180
    },
    {
        "content": "<p>There's plenty of interest in <em>variable sharing</em>, do people look at de-identifying variables? A couple of financially independent people come together and pool resources, then later separate. A community of people who can each carry out many tasks starts to specialise. </p>\n<p>I guess this is just along the lines of:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"278008\">Spencer Breiner</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543858350\">said</a>:</p>\n<blockquote>\n<p>Ultimately, these should interact, with processes modifying spatial networks, and process transitions triggered by dynamical changes to persistent variable.</p>\n</blockquote>",
        "id": 543911681,
        "sender_full_name": "David Corfield",
        "timestamp": 1760002025
    },
    {
        "content": "<p>I guess just like multiplication is easier than factorization, and marrying fortunes is easier than divorce settlements, that decomposition of systems is generally less tractable.</p>",
        "id": 543989816,
        "sender_full_name": "David Corfield",
        "timestamp": 1760023490
    },
    {
        "content": "<p>Yes, one should probably become an expert on composition first.</p>",
        "id": 544051737,
        "sender_full_name": "John Baez",
        "timestamp": 1760046258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302507\">David Corfield</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/543911681\">said</a>:</p>\n<blockquote>\n<p>There's plenty of interest in <em>variable sharing</em>, do people look at de-identifying variables? A couple of financially independent people come together and pool resources, then later separate. A community of people who can each carry out many tasks starts to specialise. </p>\n</blockquote>\n<p>In environmental impact analysis, there is an interesting example. As a biophysical process, a cow can be seen as producing meat and milk. Say 1 cow produces 200kg of meat, and 1ton of milk. But raising the cow, and maintaining her space, veterinary checks, etc. all that has an environmental impact of, say, 100 kgCO2 equivalent. Now, how do we allocate the responsibilities of this impact on the meat and milk products? Since they both \"share the cow\", and since a cow cannot be physically separated into a \"meat production\" and a \"milk production\" process, this question cannot be settled by \"biophysical\" arguments.</p>\n<p>Here, experts spend a lot of time discussing which allocation method is the best. (they mostly rely on economic principles and models).</p>",
        "id": 544053248,
        "sender_full_name": "Peva Blanchard",
        "timestamp": 1760047097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"619003\">Peva Blanchard</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544053248\">said</a>:</p>\n<blockquote>\n<p>In environmental impact analysis, there is an interesting example.</p>\n</blockquote>\n<p>Yes, interesting. I wonder if we can think of parallel examples in biology, where Nature in effect has to solve the problem of the benefits of dividing or combining functions in an organism. On another thread, we were talking about the mechanism discussed in <a href=\"https://arxiv.org/abs/2502.18713\">Symmetries of Living Systems</a> where there's gene duplication in a gene regulatory network. So long as the input trees to two nodes remain isomorphic, they belong to the same fibre of the symmetry fibration, and their dynamics will be synchronised. But then new connections to one may occur to allow for symmetry breaking, desynchronisation and differentiation of function.</p>",
        "id": 544103187,
        "sender_full_name": "David Corfield",
        "timestamp": 1760081375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544051737\">said</a>:</p>\n<blockquote>\n<p>one should probably become an expert on composition first.</p>\n</blockquote>\n<p>Sound advice, I'm sure.</p>",
        "id": 544105457,
        "sender_full_name": "David Corfield",
        "timestamp": 1760082186
    },
    {
        "content": "<p>Luckily there are experts on composition to hand. I think I'm missing something here.</p>\n<p>So undirected wiring diagrams corresponding to cospans of finite sets represent Petri nets with no transitions, and these act as interface maps. The DOTS paper presents a typical such map arising from this cospan <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>+</mo><mn>2</mn><mo>→</mo><mn>3</mn><mo>←</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">2 + 2 \\to 3 \\leftarrow 3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>:</p>\n<p><a href=\"/user_uploads/21317/W2jCRkSDib1XeXcv1J61CsSi/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/W2jCRkSDib1XeXcv1J61CsSi/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"778x414\" src=\"/user_uploads/thumbnail/21317/W2jCRkSDib1XeXcv1J61CsSi/image.png/840x560.webp\"></a></div><p>So what expressions are we allowed to include as the finite sets here? It seems like we're being led to think of some coproduct on the left and a single finite set on the right, and imagining a composition happening. But  what dictates that I can't also think of <em>unwiring</em> via <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>→</mo><mn>3</mn><mo>←</mo><mn>2</mn><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">3 \\to 3 \\leftarrow 2 + 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>?</p>\n<p>Also, presumably we're allowed monoidal juxtapositions, such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>+</mo><mn>2</mn><mo>→</mo><mn>4</mn><mo>←</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">2 + 2 \\to 4 \\leftarrow 4</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>.</p>",
        "id": 544674297,
        "sender_full_name": "David Corfield",
        "timestamp": 1760425826
    },
    {
        "content": "<blockquote>\n<p>But what dictates that I can't also think of <em>unwiring</em> via <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>→</mo><mn>3</mn><mo>←</mo><mn>2</mn><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">3 \\to 3 \\leftarrow 2 + 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span>?</p>\n</blockquote>\n<p>Any cospan of finite sets is allowed.   There are 81 different maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>+</mo><mn>2</mn><mo>→</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">2 + 2 \\to 4</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span> and 9 different maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>→</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\to 3</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>, which come in different kinds, so your expression <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>→</mo><mn>3</mn><mo>←</mo><mn>2</mn><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">3 \\to 3 \\leftarrow 2 + 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> is ambiguous.  However, undirected wiring diagrams can have \"loose ends\", which is what your phrase \"unwiring\" seems to indicate.</p>\n<p>Fong and Spivak show this in their picture of what you can do in a hypergraph category:</p>\n<p><a href=\"/user_uploads/21317/mvptidK-UkFKGqYXUsUknKiC/hypergraph_category.jpg\">hypergraph_category.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/mvptidK-UkFKGqYXUsUknKiC/hypergraph_category.jpg\" title=\"hypergraph_category.jpg\"><img data-original-content-type=\"image/jpeg\" data-original-dimensions=\"1770x490\" src=\"/user_uploads/thumbnail/21317/mvptidK-UkFKGqYXUsUknKiC/hypergraph_category.jpg/840x560.webp\"></a></div>",
        "id": 544687981,
        "sender_full_name": "John Baez",
        "timestamp": 1760430393
    },
    {
        "content": "<p>I'm talking about that little edge that ends in a dot.</p>\n<p>I don't know if this is what you meant by \"unwiring\".  Wires are allowed to end or split.</p>",
        "id": 544688076,
        "sender_full_name": "John Baez",
        "timestamp": 1760430423
    },
    {
        "content": "<p>Thanks for that! Perhaps 'unwiring' is a bad word, but I can put the issue quite succinctly. </p>\n<p>Consider these diagrams from the DOTS paper:</p>\n<p><a href=\"/user_uploads/21317/HqjXHn7C2sEN0JSLRfYGvhip/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/HqjXHn7C2sEN0JSLRfYGvhip/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"397x266\" src=\"/user_uploads/thumbnail/21317/HqjXHn7C2sEN0JSLRfYGvhip/image.png/840x560.webp\"></a></div><p><a href=\"/user_uploads/21317/46zTa_LYCYbAYH0p0Zy0gzt1/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/46zTa_LYCYbAYH0p0Zy0gzt1/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"241x243\" src=\"/user_uploads/thumbnail/21317/46zTa_LYCYbAYH0p0Zy0gzt1/image.png/840x560.webp\"></a></div><p>The interface interaction in the first diagram acts on the pair of Petri nets to yield the Petri net in the second diagram. Above I was wondering about running the diagram backwards, see how the dual to the cospan in the first diagram, so that's a cospan of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>→</mo><mn>3</mn><mo>←</mo><mn>2</mn><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">3 \\to 3 \\leftarrow 2 + 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> which splits the central wire, acts on the Petri net in the second diagram. Would it produce the two Petri nets from the first diagram?</p>\n<p>Then I seemed to be persuaded that there was a problem, something like if there was some quantitative data associated to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>, we wouldn't know how to split it when we separated out the two sub-nets. But if were merely looking at the Petri nets as given, there's no problem with this decomposition, is there?</p>",
        "id": 544695045,
        "sender_full_name": "David Corfield",
        "timestamp": 1760432505
    },
    {
        "content": "<p>It sounds like you're wondering whether composing  open Petri nets with the dual of the given cospan <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>+</mo><mn>2</mn><mo>→</mo><mn>3</mn><mo>→</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">2 + 2 \\to 3 \\rightarrow 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> acts as the <em>inverse</em> of composing with that cospan.   It doesn't, since the dual of a cospan is not its inverse.   </p>\n<p>You can calculate it out, and I recommend doing that.   But I know in my bones that there's no way you can \"chop a connected Petri net into two pieces\" by composing it with some cospan of finite sets.</p>",
        "id": 544697196,
        "sender_full_name": "John Baez",
        "timestamp": 1760433195
    },
    {
        "content": "<p>(Given how hard it is to communicate in writing, I'm not even sure you were wondering if you could chop a connected Petri net into two parts.)</p>",
        "id": 544699790,
        "sender_full_name": "John Baez",
        "timestamp": 1760434089
    },
    {
        "content": "<p>I guess I'm stuck at the stage of \"It must yield something, but I don't know what\"</p>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544697196\">said</a>:</p>\n<blockquote>\n<p>You can calculate it out, and I recommend doing that.</p>\n</blockquote>\n<p>Right. I'll shut up and calculate.</p>",
        "id": 544700296,
        "sender_full_name": "David Corfield",
        "timestamp": 1760434254
    },
    {
        "content": "<p>You'll see that composing copans by pushout is like gluing things together.</p>",
        "id": 544700561,
        "sender_full_name": "John Baez",
        "timestamp": 1760434331
    },
    {
        "content": "<p>Ok, so in this case we just get the same Petri net but with an extra copy of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> in the interface.</p>",
        "id": 544705242,
        "sender_full_name": "David Corfield",
        "timestamp": 1760435617
    },
    {
        "content": "<p>What can be said in general about interface interactions acting on Petri nets? Something like interface interactions can identify places and can delete and duplicate open variables. I guess they can also glue in some noninteracting places.</p>",
        "id": 544707530,
        "sender_full_name": "David Corfield",
        "timestamp": 1760436284
    },
    {
        "content": "<p>In the theory of open Petri nets, interface interactions (= cospans of finite sets) can't delete places, and they can't add in new places.  They can identify places.   Here I am only talking about what they do to places.  An open Petri net has transitions, places, and also a map from a finite set (or two, or three,...) to the set of places.</p>",
        "id": 544730440,
        "sender_full_name": "John Baez",
        "timestamp": 1760443521
    },
    {
        "content": "<p>If we apply the interface map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>→</mo><mn>1</mn><mo>←</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0 \\to 1 \\leftarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> to a closed Petri net, doesn't that add a place with no transitions?</p>",
        "id": 544734441,
        "sender_full_name": "David Corfield",
        "timestamp": 1760444677
    },
    {
        "content": "<p>John is thinking of using decorated cospans, where we split the interface into input and output and only glue together the entire input of one system to the entire output of another.</p>\n<p>In the operadic approach, we don't separate the interface into input and output and instead compose systems by first disjoint unioning them, and then acting on the right by a(n undecorated) cospan. </p>\n<p>You're right that by acting on it with \"bad\" cospans we can add dummy variables and other such nonsense. This is why I personally like to restrict my cospans to always have their left leg be a surjection and their right leg be an injection; equivalently, this is an equivalence relation on the domain set together with an injection from the codomain set to the blocks of the associated partition. Composing on the right by such a cospan is a two-step process, sharing and hiding: first we take the variables and set them equal according to the equivalence relation (that is, we push out over the left leg) and then we select of these some to re-expose as public (or, dually, hide the others --- this is precomposing by the right leg). These have the nice side effect of never \"double labelling\" a variable. </p>\n<p>As undirected wiring diagrams, these cospans (left leg surjective, right leg injective) have no \"passing\" or \"dead\" wires. No two outer ports are connected (no passing wires) and every outer port is connected to some inner port (they are \"live\"). </p>\n<p>But they don't correspond as directly to hypergraph categories.</p>\n<p>Sophie and I talk a bit about this in our paper:<br>\n<a href=\"/user_uploads/21317/yeuRPAAg442AvvfsbISPW69j/Screenshot_20251014-1313412.png\">Screenshot_20251014-131341~2.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/yeuRPAAg442AvvfsbISPW69j/Screenshot_20251014-1313412.png\" title=\"Screenshot_20251014-131341~2.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1224x1893\" src=\"/user_uploads/thumbnail/21317/yeuRPAAg442AvvfsbISPW69j/Screenshot_20251014-1313412.png/840x560.webp\"></a></div>",
        "id": 544738383,
        "sender_full_name": "David Jaz Myers",
        "timestamp": 1760445774
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302507\">David Corfield</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544695045\">said</a>:</p>\n<blockquote>\n<p>Then I seemed to be persuaded that there was a problem, something like if there was some quantitative data associated to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>, we wouldn't know how to split it when we separated out the two sub-nets. But if were merely looking at the Petri nets as given, there's no problem with this decomposition, is there?</p>\n</blockquote>\n<p>By \"unwiring\" I took you to mean decomposition, rather than composition. For concreteness, let's call the two components <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, and the outer system <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> for the wiring diagram. Then asserting a composition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X=f(A,B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span> is primarily creating a constraint on what kind of system <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> can be. On the other hand, it is <em>not</em> true that we can take any system with interface <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and decompose it along <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>; some systems won't satisfy the relevant constraints.</p>",
        "id": 544738567,
        "sender_full_name": "Spencer Breiner",
        "timestamp": 1760445836
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278008\">Spencer Breiner</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544738567\">said</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>By &quot;unwiring&quot; I took you to mean decomposition, rather than composition. For concreteness, let&#39;s call the two components $$A$$ and $$B$$, and the outer system $$X$$, and $$f$$ for the wiring diagram. Then asserting a composition $$X=f(A,B)$$ is primarily creating a constraint on what kind of system $$X$$ can be. On the other hand, it is *not* true that we can take any system with interface $$X$$ and decompose it along $$f$$; some systems won&#39;t satisfy the relevant constraints.\n</code></pre></div>\n<p>An interesting case of this is if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> represents a parallel product (aka non-interacting product or disjoint union). Then of course <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> will only factor through <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> if it is disconnected. </p>\n<p>I've been wondering for a while about trying to assign a quantity like \"how much is <em>lost</em> by supposing that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> were of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(A, B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span>\", or \"how much energy would it take to cause <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> to take the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(A, B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span>\" (something like a bond-energy). In general, I'm quite interested in the idea of \"approximate homomorphisms\" between systems...</p>",
        "id": 544742048,
        "sender_full_name": "David Jaz Myers",
        "timestamp": 1760446732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302507\">David Corfield</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544734441\">said</a>:</p>\n<blockquote>\n<p>If we apply the interface map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>→</mo><mn>1</mn><mo>←</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0 \\to 1 \\leftarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> to a closed Petri net, doesn't that add a place with no transitions?</p>\n</blockquote>\n<p>You're right.   We can add as many of those as we want.  </p>\n<p>(We never do, which is probably why I got this wrong.)</p>",
        "id": 544746532,
        "sender_full_name": "John Baez",
        "timestamp": 1760447864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"751249\">David Jaz Myers</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/544742048\">said</a>:</p>\n<blockquote>\n<p>In general, I'm quite interested in the idea of \"approximate homomorphisms\" between systems...</p>\n</blockquote>\n<p>I think you said elsewhere that this might be so in the context of a \"best\" approximation. So given an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>, we find an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(A, B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span> best approximates <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.</p>",
        "id": 544900517,
        "sender_full_name": "David Corfield",
        "timestamp": 1760515306
    },
    {
        "content": "<p>Apropos of a technical question I just asked on the other thread, I thought of <em>promonoidal categories</em>, which seem to me to be a pretty rare example of a categorical structure in which \"all reasonable decompositions exist uniquely,\" especially if you think of them as a special kind of multicategory. Mario Román calls these multicategories <em>malleable</em> in his gorgeous <a href=\"https://arxiv.org/pdf/2404.06192\">thesis</a> that I've just now looked into for the first time.</p>",
        "id": 545460553,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1760658856
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"609515\">Kevin Carlson</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Directed.20and.20undirected.20wiring/near/545460553\">said</a>:</p>\n<blockquote>\n<p>Apropos of a technical question I just asked on the other thread, I thought of <em>promonoidal categories</em>, which seem to me to be a pretty rare example of a categorical structure in which \"all reasonable decompositions exist uniquely,\" especially if you think of them as a special kind of multicategory. Mario Román calls these multicategories <em>malleable</em> in his gorgeous <a href=\"https://arxiv.org/pdf/2404.06192\">thesis</a> that I've just now looked into for the first time.</p>\n</blockquote>\n<p>What do you mean that all  reasonable decompostions exist uniquely in promonoidal categories?  </p>\n<p>For multicategories, composites are unique on the nose by definition, just as they are for categories... but promonoidal categories are defined in terms of categories with additional structure encoded in terms of coherence isomorphisms.</p>",
        "id": 545711054,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1760741829
    },
    {
        "content": "<p>When you view a promonoidal category as a malleable multicategory, it is one in which, for instance, every ternary morphism can be decomposed into a composite of two binaries in an essentially unique way, and similarly for all other combinations of arities you can name.</p>",
        "id": 545800239,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1760846397
    }
]