[
    {
        "content": "<p>What does it mean for two pseudo double categories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C,D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> to be equivalent?  Is it that there are pseudo functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">F:C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>:</mo><mi>D</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">G:D\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>F</mi><mo>≅</mo><msub><mn>1</mn><mi>C</mi></msub></mrow><annotation encoding=\"application/x-tex\">GF\\cong 1_C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">GF</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>G</mi><mo>≅</mo><msub><mn>1</mn><mi>D</mi></msub></mrow><annotation encoding=\"application/x-tex\">FG\\cong 1_D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">FG</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>?  Well what is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;\"></span><span class=\"mrel\">≅</span></span></span></span>?  Is it the existence of an invertible natural transformation?  The existence of an invertible pseudo natural transformation?  Or a pair of (pseudo?) natural transformations which compose in both directions to be equivalent to identity by means of an invertible pseudo-modification?  (I am using the definitions in <a href=\"https://arxiv.org/pdf/math/0604549.pdf\">*Pseudo-Categories* by Martins-Ferreira</a>.)</p>\n<p>Moreover, what is the double categorical analogue of the theorem that a functor is an equivalence iff it is fully faithful and essentially surjective?  Maybe the many different choices one could make in the previous paragraph give different answers to this question.</p>\n<p>Finally, suppose two double categories are fibrant i.e. they are equipments.  Does an equivalence in any of the above senses automatically preserve the equipment structure, or must that be stipulated additionally?</p>\n<p>Where can I look to learn about this stuff?</p>",
        "id": 423282503,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708885990
    },
    {
        "content": "<p>Re the first, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;\"></span><span class=\"mrel\">≅</span></span></span></span> ought to be a tight natural isomorphism, i.e. a natural transformation of double functors with invertible components. I suspect tightly essentially surjective on objects and locally essentialy surjective (meaning essentially surjective on loose arrows, where the isomorphisms of loose arrows are squares with identity tight boundaries) should be the same, assuming choice. This is similar to 2-equivalence of categories. The only reason I'm not 100% sure is that I didn't verify it, and it might be the case that one has to weaken 'squares with identity tight boundaries' to 'squares with invertible tight boundaries'. This can be check with some patience.</p>\n<p>Re the second question, no, you need extra an requirement on the functors, namely they need to preserve cartesian squares. This is because the 'fibrant' in 'fibrant double category' means that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>:</mo><msub><mi>C</mi><mn>1</mn></msub><mo>→</mo><msub><mi>C</mi><mn>0</mn></msub><mo>×</mo><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">(s,t):C_1 \\to C_0 \\times C_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is a fibration, and an internal functor need not to necessarily be a morphism of fibrations, i.e. preserve cartesian maps.</p>",
        "id": 423286625,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708889939
    },
    {
        "content": "<p>For a reference, Grandis works with weak double categories in his book 'Higher Dimensional Categories', though the things you ask for do not appear directly there---you have to work them out from the defs he gives. I would also try with Donaldson and Yau's book on 2-dimensional category theory.</p>",
        "id": 423286712,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708890036
    },
    {
        "content": "<p>Why must <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;\"></span><span class=\"mrel\">≅</span></span></span></span> be a tight natural isomorphism rather than the other alternative choices I listed?</p>\n<p>Interesting that you need an additional condition for fibrant double categories -- I see your reasoning but if there are two fibrant double categories which are equivalent as double categories but not as vibrant double categories, wouldn't it be possible to migrate the Cartesian structure from one to the other, resulting in a double category which is fibrant in two different ways? This conclusion can't be right, as \"fibrant\" is a property of a double category rather than a structure.</p>",
        "id": 423287235,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708890578
    },
    {
        "content": "<p>Maybe the double category structure does some magic I'm not factoring in, but it is certainly not the case that you can 'pushforward a fibration structure' along a commutative square of fibrations. This is because the universal property of cartesian maps is universal in the ambient category, so a map which is cartesian in one might not be anymore once mapped with a functor. Surely there must be some sufficient conditions for a functor to preserve cartesian moprhisms.</p>",
        "id": 423287521,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708890857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280784\">Joshua Meyers</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Equivalences.20of.20.28Fibrant.29.20Double.20Categories/near/423287235\">said</a>:</p>\n<blockquote>\n<p>Why must <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;\"></span><span class=\"mrel\">≅</span></span></span></span> be a tight natural isomorphism rather than the other alternative choices I listed?</p>\n</blockquote>\n<p>Sorry I didn't see you listed choices. A tight natural isomorphism should be tight natural transformation with invertible components. You have to interpret this words 'right' however, The <em>components</em> of a tight natural transformation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>→</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f \\to g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> are (1) tight maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>a</mi><mo>→</mo><mi>g</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">fa \\to ga</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">a</span></span></span></span> for every object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> (2) 2-cells <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>p</mi><mo>→</mo><mi>g</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">fp \\to gp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">p</span></span></span></span> for every loose arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>. So when you ask it to be invertible you get strictly invertible tight maps, strictly because the tight world works strictly, and likewise for squares. So no modifications involved.</p>",
        "id": 423287798,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708891186
    },
    {
        "content": "<p>To navigate this potential mess it's good to remember that the tight direction in a double category is the one where structural morphisms go. The loose arrows are extra algebraic structure, which isn't used for structural purposes. That's sort of the whole point of doing category theory with double category, you can keep separate tight (strict) and loose directions and push all the coherence for the latter in the former.</p>",
        "id": 423287949,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708891306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Equivalences.20of.20.28Fibrant.29.20Double.20Categories/near/423287521\">said</a>:</p>\n<blockquote>\n<p>Maybe the double category structure does some magic I'm not factoring in, but it is certainly not the case that you can 'pushforward a fibration structure' along a commutative square of fibrations. This is because the universal property of cartesian maps is universal in the ambient category, so a map which is cartesian in one might not be anymore once mapped with a functor. Surely there must be some sufficient conditions for a functor to preserve cartesian moprhisms.</p>\n</blockquote>\n<p>I have yet to work out the details, but loosely my reasoning is as follows:</p>\n<ol>\n<li>\n<p>Being fibrant is a property (not a structure) of a double category.</p>\n</li>\n<li>\n<p>If equivalence of double categories is properly defined, it should preserve all (non-evil) properties.</p>\n</li>\n<li>\n<p>Therefore equivalence should preserve being fibrant.</p>\n</li>\n</ol>\n<p>The only ways out are 1) if equivalence is not properly defined or 2) if being fibrant is evil.</p>",
        "id": 423288864,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708892262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280784\">Joshua Meyers</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Equivalences.20of.20.28Fibrant.29.20Double.20Categories/near/423282503\">said</a>:</p>\n<blockquote>\n<p>What does it mean for two pseudo double categories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C,D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> to be equivalent?  Is it that there are pseudo functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">F:C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>:</mo><mi>D</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">G:D\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>F</mi><mo>≅</mo><msub><mn>1</mn><mi>C</mi></msub></mrow><annotation encoding=\"application/x-tex\">GF\\cong 1_C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">GF</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>G</mi><mo>≅</mo><msub><mn>1</mn><mi>D</mi></msub></mrow><annotation encoding=\"application/x-tex\">FG\\cong 1_D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">FG</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>?  Well what is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≅</mo></mrow><annotation encoding=\"application/x-tex\">\\cong</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.589em;\"></span><span class=\"mrel\">≅</span></span></span></span>?  Is it the existence of an invertible natural transformation?  The existence of an invertible pseudo natural transformation?  Or a pair of (pseudo?) natural transformations which compose in both directions to be equivalent to identity by means of an invertible pseudo-modification? </p>\n</blockquote>\n<p>The last one seems like the safest option, though of course the least convenient.  I guess you are familiar with the <a href=\"https://ncatlab.org/nlab/show/principle%20of%20equivalence\">[[principle of equivalence]]</a>, the concept of \"evil\", and other aspects of the philosophy of higher structures, but just in case anyone lurking here is not, I'll talk about it a bit anyway.</p>\n<p>To get results that are invariant under the most general notion of equivalence we shouldn't make definitions that impose equations between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>-dimensional cells in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-dimensional structures unless <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">k = n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>; instead we should assert equivalences between them.</p>\n<p>Double categories themselves being 2-dimensional, the collection of them forms a 3-dimensional structure - something like a tricategory, or maybe something else.   To follow the principle of equivalence we should only assert that a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>-cell in this structure has an inverse if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">k = 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>. </p>\n<p>That's what you're doing in your last option.   In your earlier options you are choosing to 'live dangerously' by cutting things off prematurely.  You can  do this as long as you either 1) know you're running the risk of problems later, or  2) prove (or learn) theorems that justify what you're doing.</p>",
        "id": 423289716,
        "sender_full_name": "John Baez",
        "timestamp": 1708893069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280784\">Joshua Meyers</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Equivalences.20of.20.28Fibrant.29.20Double.20Categories/near/423287235\">said</a>:</p>\n<blockquote>\n<p>vibrant double categories</p>\n</blockquote>\n<p>I like that!</p>",
        "id": 423289855,
        "sender_full_name": "John Baez",
        "timestamp": 1708893212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> right! I would also tend to think the weakest option is what we should go with. That's why I'm surprised to see people like <span class=\"user-mention\" data-user-id=\"275932\">@Matteo Capucci (he/him)</span> in this thread, and Grandis in his book 'Higher Dimensional Categories' advocate stronger notions of equivalence.</p>",
        "id": 423291470,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708894905
    },
    {
        "content": "<p>In any case, if we make our equivalences too strong, they should <em>a fortiori</em> preserve all non-evil properties, since the \"correct\" weak equivalences should</p>",
        "id": 423291615,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708895041
    },
    {
        "content": "<p>If pseudo double categories form a pseudo triple category, then double functors should be the tight, i.e. strict direction in the pseudo triple category.  In this sense even asking for isomorphism is not all that \"evil\".  Nonetheless there should be a weaker version of equivalence that can be useful.  These are double functors that right lift against the inclusion in each shape of \"walking cell\" of its \"walking boundary\" and against the obvious map from the \"walking parallel pair of squares\" to the \"walking square\".</p>",
        "id": 423292500,
        "sender_full_name": "James Deikun",
        "timestamp": 1708895859
    },
    {
        "content": "<p>Ugh, I realize I read your first message wrong. Of course fibrancy is preserved under equivalence of double categories, since such a functor exhibits an equivalence of fibrations first. It's not preserved under arbitrary functors though.</p>",
        "id": 423292503,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708895864
    },
    {
        "content": "<p>Re strictness, it's not at all stricter than it can be. For instance for discrete double categories, ie bicategories, it recovers biequivalence, which is the weakest notion of equivalence of bicategories. The point is that the underlying tight category of a double category is strict and stays strict.</p>",
        "id": 423292829,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708896195
    },
    {
        "content": "<p>Again, one must embrace the fact tight and loose directions of a double category are very different, though they both <em>look</em> like a category</p>",
        "id": 423292915,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708896272
    },
    {
        "content": "<p>But maybe this is easier to get now that the confusion about fibrancy being preserved is out of the way</p>",
        "id": 423292945,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1708896315
    },
    {
        "content": "<p>Hm, maybe the version of equivalence I give above is too loose.  I'm not used to thinking of pseudo categories as much.  Probably the functors should have to lift against the obvious map from the \"walking parallel pair of tight arrows\" to the \"walking tight arrow\" as well.</p>",
        "id": 423293060,
        "sender_full_name": "James Deikun",
        "timestamp": 1708896427
    },
    {
        "content": "<p>If you want to translate this to something a bit more conventional, it is a functor that is essentially surjective on objects and loose arrows, and locally bijective on tight arrows and squares.</p>",
        "id": 423293881,
        "sender_full_name": "James Deikun",
        "timestamp": 1708897272
    },
    {
        "content": "<p>So I am looking more at the Martins-Ferreira paper and I realized that natural transformations are vertical: for each object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> they give a vertical (strict) morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>G</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(A)\\to G(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>, for each horizontal morphism, they give a 2-cell, and for each vertical morphism, they give an equation (there are more equations too) -- whereas pseudo natural transformations are horizontal: for each object they give a horizontal (weak) morphism, for each vertical morphism they give a 2-cell, and for each horizontal morphism they give <strong>another</strong> 2-cell, this one with identity frames (satisfying certain equations).  Pseudo natural transformations compose vertically strictly and horizontally up to isomorphism. Now a pseudo-modification as it turns out is a 2-cell going between two natural transformations and two pseudo-natural transformations!</p>\n<p>Grandis seems to focus his discussion of equivalence on what he calls \"horizontal equivalence\" --- this is his strict direction, opposite to the current standard.  I suppose I can see why we would want this. Take the double category Prof, for example. To say that two pseudo double functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> valued in Prof are isomorphic, we would want some sort of functor, not profunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>c</mi><mo>→</mo><mi>G</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">Fc\\to Gc</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">c</span></span></span></span>.  Unfortunately it seems like this functor will have to be an isomorphism rather than an equivalence, unless we venture into triple categorical structures...</p>",
        "id": 423294860,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708898246
    },
    {
        "content": "<p>I don't have time to read this entire thread right now, but I want to point out that there really is more than one notion of equivalence for double categories, and there isn't just one \"right\" one: different notions of equivalence have different applications.</p>",
        "id": 423295236,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708898588
    },
    {
        "content": "<p>On a side note, both Grandis and Martins-Ferreira redundantly stipulate that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo>=</mo><msub><mi>ρ</mi><mn>1</mn></msub><mo>:</mo><mn>1</mn><mo>⊗</mo><mn>1</mn><mo>→</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\lambda_1=\\rho_1:1 \\otimes 1\\to 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, whereas this is derivable from the pentagon and triangle identities</p>",
        "id": 423295334,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708898676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> that's fine, reading the whole thread is not necessary, where can I learn about these different notions of equivalence?</p>",
        "id": 423295387,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708898736
    },
    {
        "content": "<p>And regarding \"fully faithful and essentially surjective\" there is some discussion in section 7 of <a href=\"http://www.tac.mta.ca/tac/volumes/20/18/20-18abs.html\">Framed bicategories and monoidal fibrations</a>.</p>",
        "id": 423295392,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708898740
    },
    {
        "content": "<p>I don’t understand why you say the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>c</mi><mo>→</mo><mi>G</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">Fc\\to Gc</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">c</span></span></span></span> should be an isomorphism. If the domain is a point then these are just categories, and an equivalence in Prof itself is the usual notion of equivalence of categories.</p>",
        "id": 423295405,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1708898755
    },
    {
        "content": "<p>Well, one place where people have to study notions of equivalence is in putting a Quillen model structure on double categories, so some of the notions of equivalence are defined and compared in the various <a href=\"https://ncatlab.org/nlab/show/model+structure+on+DblCat\">papers about that</a>.  That's rather more technical than you probably want here, though.</p>",
        "id": 423295611,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708898907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"609515\">@Kevin Arlin</span> natural transformations between categories are unfortunately not part of the structure of the double category Prof. You just have categories, functors, profunctors, and morphisms of profunctors.</p>",
        "id": 423295646,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708898945
    },
    {
        "content": "<p>I think most of the simple options have already been mentioned here: the natural transformations can be either tight or loose, and either strict or pseudo.</p>",
        "id": 423295652,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708898953
    },
    {
        "content": "<p>Natural transformations are visible in Prof: they are the morphisms of profunctors between identity profunctors with nonidentity functors on the sides.</p>",
        "id": 423295689,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708899000
    },
    {
        "content": "<p>Hm? No, the natural transformations are totally there. The tight 2-category is Cat.</p>",
        "id": 423295698,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1708899003
    },
    {
        "content": "<p>Oh that's true</p>",
        "id": 423295765,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708899046
    },
    {
        "content": "<p>This is one of the big reasons people like Prof, everything is there. Even better, Prof itself is decomposable as the double category of lax functors from a point to Span, Evan’s been advertising how nice it is to recover all of basic category theory in this structure recently.</p>",
        "id": 423295785,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1708899070
    },
    {
        "content": "<p>Okay so you can define modifications between (vertical) natural transformations, Martins-Ferreira and Grandis just don't. Given natural transformations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>:</mo><mi>F</mi><mo>→</mo><mi>G</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">a,b: F\\to G: C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, we send each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>∈</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">c\\in C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> to a 2-cell between identity profunctors with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>c</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_c, b_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> on the sides, and we have an equation of 2-cells for every horizontal 1-cell in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> (maybe more too?)</p>",
        "id": 423296146,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708899458
    },
    {
        "content": "<p>Is there a reference for this construction?</p>",
        "id": 423296215,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708899506
    },
    {
        "content": "<p>Actually I think this is just a pseudo-modification except with identity pseudo-transformations</p>",
        "id": 423296264,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708899569
    },
    {
        "content": "<p>That seems likely. Are you sure modifications aren’t defined in Grandis’ book? I don’t have it at hand but it seems like the kind of thing he’d have in there.</p>",
        "id": 423297075,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1708900285
    },
    {
        "content": "<p>It’s easier to find references for modulations (Evan’s paper with Lambert last month, Paré’s papers on Yoneda theory and on composition of modules) as those are the general cells you want in lax functor double categories.</p>",
        "id": 423297194,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1708900417
    },
    {
        "content": "<p>They are -- as 2-cells between two horizontal and two vertical transformations</p>",
        "id": 423297553,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1708900797
    },
    {
        "content": "<p>Right right, so shouldn’t you just make the loose transformations identities and there’s your reference? I guess that’s what you’ve already done.</p>",
        "id": 423297650,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1708900887
    }
]