[
    {
        "content": "<p>So, I'm reading the book on Polynomial Functors, and the authors wrote the following definition for Yoneda Lemma:</p>\n<p>Given a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">F:\\mathbf{Set} \\to \\mathbf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span>, and a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, there is an isomorphism</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mi>N</mi><mi>a</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msup><mi>y</mi><mi>S</mi></msup><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(S) \\cong Nat(y^S, F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Nat</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span></span></span></span> is the set of natural transformations. Moreover, the equation above is natural in both <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>.</p>\n<p>So, the only thing that is making me confused about such formulation is in regards to \"locally small\". From other books, the Yoneda Lemma is usally written with regards to locally small categories, which is not the case of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span>, right?<br>\nHence, why is this formulation correct?</p>",
        "id": 284287994,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1653833286
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span> is locally small: the set of maps between two (small) sets is a small set (at least as long as you don't consider strongly predicative variants of set theory).</p>",
        "id": 284288268,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1653833755
    },
    {
        "content": "<p>I see. I had read in a book that Set was big, so I guess the book placed \"locally small\" inside of \"big\". Hence why I was thrown away. Thanks for clarifying.</p>",
        "id": 284288585,
        "sender_full_name": "Davi Sales Barreira",
        "timestamp": 1653834177
    },
    {
        "content": "<p>Small and large refer to categories whose collection of objects form, respectively, a set or something possibly larger than a set. The category of sets is large because the collection of all sets is not a set. <em>Locally</em> small and large instead refer to the size of the collection of morphisms between two given objects. So set is locally small since there's only a set worth of functions between any two given sets.</p>",
        "id": 284879644,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1654263510
    },
    {
        "content": "<p>An example of locally large category is Span(Set), there's a class worth of <a href=\"https://ncatlab.org/nlab/show/spans\">[[spans]]</a> between any two given sets</p>",
        "id": 284879726,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1654263567
    },
    {
        "content": "<p>An example of small category is the category of matrices, whose objects are the natural numbers and arrows <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>→</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">n \\to m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> are given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">m \\times n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> real-valued matrices. This is also locally small</p>",
        "id": 284879851,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1654263629
    },
    {
        "content": "<p>Of course, Span(Set) isn't a category but a bicategory...</p>",
        "id": 284888374,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1654267560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/different.20version.20of.20Yoneda.20Lemma.2E.20Why.20does.20it.20work.3F/near/284888374\">said</a>:</p>\n<blockquote>\n<p>Of course, Span(Set) isn't a category but a bicategory...</p>\n</blockquote>\n<p>I thought you could quotient out 1-cells using the invertible 2-cells (= say two spans are equivalent if there is an iso between them) and get a 1-category. Am I mistaken?</p>",
        "id": 285653575,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1654854673
    },
    {
        "content": "<p>No, you can definitely do that.</p>",
        "id": 285653604,
        "sender_full_name": "Chad Nester",
        "timestamp": 1654854695
    },
    {
        "content": "<p>Ok then I was referring to that. But maybe it's non-standard to still call it Span(Set). I sweeped this problem under the carpet for expositional clarity.</p>",
        "id": 285653811,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1654854799
    },
    {
        "content": "<p>In the absence of context, if I hear Span(C) I think of it as a bicategory, and I would write something like Ho(Span(C)) for the homotopy 1-category.  In some particular context, if it's been explained that what's meant is the homotopy 1-category, I think it would be fine to use the notation Span(C) for that 1-category.</p>\n<p>The point isn't totally irrelevant to this question -- locally large bicategories are <em>much</em> more common \"in nature\" than locally large 1-categories.  (-:</p>",
        "id": 285746082,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1654906376
    }
]