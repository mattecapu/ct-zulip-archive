[
    {
        "content": "<p>In the spirit of \"no question is dumb\"</p>\n<p>Is there a way to map from a category C with ob(C) and Mor(C), to a category D where ob(D)=Mor(C) and Mor(D)=ob(C)?</p>",
        "id": 478601456,
        "sender_full_name": "Sean Maley",
        "timestamp": 1729727470
    },
    {
        "content": "<p>I don't think there is a generic way, imagine the category ùüö, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>‚Üí</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\rightarrow B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></p>\n<p>You'd have three objects in the resulting category, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><msub><mi>d</mi><mi>A</mi></msub><mo separator=\"true\">,</mo><mo>‚Üí</mo><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">id_A, \\rightarrow,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3em;vertical-align:-0.1944em;\"></span><span class=\"mpunct\">,</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><msub><mi>d</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">id_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, but only two arrows, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, but you need at least three arrows, because each object needs an identity.</p>\n<p>That said, your question makes me think of string diagrams, where you visually flip the roles of what's a point, a line, and a region, so maybe there's an interesting duality here if you're careful.</p>",
        "id": 478602415,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1729728021
    },
    {
        "content": "<p>Do you want a functor?</p>",
        "id": 478602878,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1729728263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277352\">@Alex Kreitzberg</span> Yes this is my understanding.  Can't get the simplest example to port over, but I wondered if higher categories or other advanced concepts (things I have not played with yet) had anything to offer.</p>",
        "id": 478603212,
        "sender_full_name": "Sean Maley",
        "timestamp": 1729728478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428716\">@Jean-Baptiste Vienney</span> Would be nice, but by definitions not sure it can work out unless something creative is done.</p>",
        "id": 478603298,
        "sender_full_name": "Sean Maley",
        "timestamp": 1729728522
    },
    {
        "content": "<p>Basically the answer to the stated question is \"no\".  But there are sneaky things you can do.  A \"category internal to Vect\" is a category with a vector space of objects and a vector space of morphisms, where everything in sight is linear.</p>\n<p>A nontrivial little fact is that a category internal to Vect is equivalent to a pair of vector spaces and a linear map between them:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mo>:</mo><mi>M</mi><mo>‚Üí</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\"> d: M \\to O</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span></p>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> is the vector space of objects and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is the vector space, not of <em>all</em> morphisms, but of morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mn>0</mn><mo>‚Üí</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">f: 0 \\to x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> for some object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>.</p>\n<p>Then by taking the dual vector spaces we get</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>d</mi><mo>‚àó</mo></msup><mo>:</mo><msup><mi>O</mi><mo>‚àó</mo></msup><mo>‚Üí</mo><msup><mi>M</mi><mo>‚àó</mo></msup></mrow><annotation encoding=\"application/x-tex\"> d^\\ast: O^\\ast \\to M^\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6887em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6887em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>which by that little fact is equivalent to another category internal to Vect!  The space of morphisms in this new category is the <em>dual</em> of the space of objects in the original category.</p>",
        "id": 478603744,
        "sender_full_name": "John Baez",
        "timestamp": 1729728807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22Swapping.22.20Morphisms.20and.20Objects/near/478603744\">said</a>:</p>\n<blockquote>\n<p>Basically the answer to the stated question is \"no\". </p>\n</blockquote>\n<p>But why? You can just map every object to a single chosen object and every morphism to the corresponding identity.</p>",
        "id": 478603974,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1729728950
    },
    {
        "content": "<p>(Taking into acounts that morphisms in the second category are objects of the first and objects of the second are morphisms of the first but it should not change  anything to the existence of these functors.)</p>",
        "id": 478604108,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1729729046
    },
    {
        "content": "<p>But first you have to build such a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>.</p>",
        "id": 478604240,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1729729140
    },
    {
        "content": "<p>But is this category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> given in the data of the problem or are you allowed to build any one?</p>",
        "id": 478604286,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1729729192
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428716\">@Jean-Baptiste Vienney</span>  Trying to \"preserve\" everything from the first category, if at all possible.  Collapsing like this isn't ideal (although tbf that may not have been clear from how it the question was posed).</p>",
        "id": 478604581,
        "sender_full_name": "Sean Maley",
        "timestamp": 1729729429
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> Thank you, this is the kind of insight I was hoping for <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 478604662,
        "sender_full_name": "Sean Maley",
        "timestamp": 1729729485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"428716\">Jean-Baptiste Vienney</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22Swapping.22.20Morphisms.20and.20Objects/near/478603974\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22Swapping.22.20Morphisms.20and.20Objects/near/478603744\">said</a>:</p>\n<blockquote>\n<p>Basically the answer to the stated question is \"no\". </p>\n</blockquote>\n<p>But why? </p>\n</blockquote>\n<p>As far as I can tell, @sean was asking if there's a way to take an arbitrary category C with object set ob(C) and morphism set mor(C) and construct a category D with object set ob(D)=mor(C) and morphism set mor(D)=ob(C).  </p>\n<p>We cannot.   Let C be a category with 1 object and 2 morphisms.  Then D would need to have 2 objects and 1 morphism.  But there is no category with 2 objects and 1 morphism.</p>",
        "id": 478611221,
        "sender_full_name": "John Baez",
        "timestamp": 1729733722
    },
    {
        "content": "<p>One might consider <a href=\"https://ncatlab.org/nlab/show/string+diagram\">Poincar√© dual string diagrams</a> an attempt to reverse dimensions:<br>\n<a href=\"/user_uploads/21317/pbij4DmurSh-a_ze9nkq_phn/image.png\">image.png</a><br>\nBut of course these diagrams aren't categories of any kind. Which raises a question: what kinds of structured entity are these dual string diagrams?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/pbij4DmurSh-a_ze9nkq_phn/image.png\" title=\"image.png\"><img data-original-dimensions=\"577x262\" src=\"/user_uploads/thumbnail/21317/pbij4DmurSh-a_ze9nkq_phn/image.png/840x560.webp\"></a></div>",
        "id": 478685784,
        "sender_full_name": "David Corfield",
        "timestamp": 1729766886
    },
    {
        "content": "<p>It also makes me think of hypergraph.<br>\nIf I remember correctly a hypergraph is given by:</p>\n<ul>\n<li>a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> of vertices</li>\n<li>a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> of (hyper) edges</li>\n<li>and an incidence relation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>‚äÜ</mo><mi>E</mi><mo>√ó</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">I \\subseteq E \\times V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚äÜ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span></li>\n</ul>\n<p>In that case, swapping vertices and edges amount to taking the transpose of the incidence relation.</p>\n<p>I remember that there is a notion of hypergraph category but I don‚Äôt know much about them.</p>",
        "id": 478692438,
        "sender_full_name": "Peva Blanchard",
        "timestamp": 1729769180
    },
    {
        "content": "<p>I know too much about hypergraph categories.   <span aria-label=\"weary\" class=\"emoji emoji-1f629\" role=\"img\" title=\"weary\">:weary:</span>   But I've never tried to imagine the 'dual' of a hypergraph category.  It's an interesting idea, but don't see how it would make sense, since we know how to compose morphisms, but not objects.</p>",
        "id": 478760382,
        "sender_full_name": "John Baez",
        "timestamp": 1729788871
    },
    {
        "content": "<p>Petri nets are very similar to hypergraphs, except that each hyperedge is <em>oriented</em>, going from some finite set of vertices to some other finite set of vertices.     So we have two relations, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>‚äÜ</mo><mi>E</mi><mo>√ó</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">I \\subseteq E \\times V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚äÜ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> saying which edges go <em>in</em> to each vertex and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>‚äÜ</mo><mi>E</mi><mo>√ó</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">O \\subseteq E \\times V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚äÜ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> saying which edges go <em>out</em> of each vertex.</p>\n<p>People have observed that you can dualize any Petri net and get a new Petri net, but nobody has ever done anything with this idea, as far as I know!   I have wondered about it.</p>",
        "id": 478762364,
        "sender_full_name": "John Baez",
        "timestamp": 1729789543
    }
]