[
    {
        "content": "<p>Every pseudo double category is equivalent to a strict double category. Is every pseudo double category with companions and conjoints equivalent to a strict double category with a strictly functorial choice of companions and conjoints?</p>",
        "id": 422916053,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1708641179
    },
    {
        "content": "<p>Yes, I think so, for a suitably weak meaning of \"equivalence\": <a href=\"https://mathoverflow.net/a/422798/49\">https://mathoverflow.net/a/422798/49</a>.</p>",
        "id": 422917149,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708641746
    },
    {
        "content": "<p>Ah, perfect, thank you!</p>",
        "id": 422917366,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1708641865
    },
    {
        "content": "<p>Note that the equivalence I gave there requires modifying the loose bicategory and the tight 2-category both up to biequivalence, even if the tight composition started out strict.  So it's not an equivalence in the usual 2-category of pseudo double categories, since that would require an ordinary 1-equivalence of tight 1-categories.</p>",
        "id": 422917770,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708642122
    },
    {
        "content": "<p>Yes, that does raise an interesting question regarding the appropriate notion of equivalence of double categories...</p>",
        "id": 422918289,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1708642411
    },
    {
        "content": "<p>I wonder whether it would be possible to instead fatten up the loose-cells, e.g. defining a loose-cell from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> to be a triple <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mo>↛</mo><mi>C</mi><mo>←</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">A \\to B \\not\\to C \\leftarrow D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> in the original double category.</p>",
        "id": 422919864,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1708643204
    },
    {
        "content": "<p>I don't know.  In general, I don't think it is possible to strictify a pseudofunctor by modifying only the codomain, but I don't have a concrete counterexample to that, and this is not a generic pseudofunctor either.  So maybe...</p>",
        "id": 422921594,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1708644211
    }
]