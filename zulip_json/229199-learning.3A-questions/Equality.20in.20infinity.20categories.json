[
    {
        "content": "<p>That's a simple one, but: what is the notion of equality in infinity-categories? Do we need to have any? I thought the goal of having infinity-categories was precisely to get rid of (non proof-relevent) equalities, but I guess there is still a notion of equality since in the Riehl-Verity paper, they speak of equality of morphisms and of invertible cells. In that case, what do we endow with a notion of equality, is it just morphisms for $k&gt;1$?</p>",
        "id": 490163867,
        "sender_full_name": "Jonathan Arnoult",
        "timestamp": 1734702382
    },
    {
        "content": "<p>I don't think the goal of infinity-categories is to get rid of equalities. It is more about allowing a spectrum of weaker equalities in your toolbox. I am pretty sure that, in any model for infinity-categories, you would define the majority of your homotopy-based comparisons with equalities. </p>\n<p>For instance, defining an isomorphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>a</mi><mo>↔</mo><mi>b</mi><mo>:</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f:a \\leftrightarrow b: g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> would require equalities when writing the axioms:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>∘</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f \\circ g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> must be <strong>equal</strong> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">d</mi></mrow><mi>b</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathsf{id}_b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">id</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>;</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>∘</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">g \\circ f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> must be <strong>equal</strong> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">d</mi></mrow><mi>a</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathsf{id}_a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">id</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>;</li>\n</ul>",
        "id": 490172091,
        "sender_full_name": "Rémy Tuyéras",
        "timestamp": 1734705049
    },
    {
        "content": "<p>Now, there are theories for infinity-categories that may rely on spheres and discs, so that equalities would be abstracted away, but even for these, you would usually have retractions that would model equalities.</p>\n<p>Edit: Also add to this that you have to define the sources and targets of your homotopies, which are based on equalities that relate discs of different dimensions</p>",
        "id": 490173141,
        "sender_full_name": "Rémy Tuyéras",
        "timestamp": 1734705370
    },
    {
        "content": "<p>the situation is quite similar to that of 1-categories: there are some statements that are evil but can appear with specific choices of presentations of the theories. In 1-category theory, you <em>can</em> talk about equality of objects, but it's evil. This is the same with ∞-categories: in most presentations of the concept, like with quasi-categories, you can talk about equality of morphisms, but it's stricter than what you probably want (and it's also evil).</p>",
        "id": 490173317,
        "sender_full_name": "Josselin Poiret",
        "timestamp": 1734705432
    },
    {
        "content": "<p>you could say it's part of the presentation but not of the language of ∞-categories</p>",
        "id": 490173409,
        "sender_full_name": "Josselin Poiret",
        "timestamp": 1734705465
    },
    {
        "content": "<p>Okay thanks!</p>\n<p><span class=\"user-mention silent\" data-user-id=\"284453\">Josselin Poiret</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Equality.20in.20infinity.20categories/near/490173317\">said</a>:</p>\n<blockquote>\n<p>the situation is quite similar to that of 1-categories: there are some statements that are evil but can appear with specific choices of presentations of the theories. In 1-category theory, you <em>can</em> talk about equality of objects, but it's evil. This is the same with ∞-categories: in most presentations of the concept, like with quasi-categories, you can talk about equality of morphisms, but it's stricter than what you probably want (and it's also evil).</p>\n</blockquote>\n<p>In the case of categories, equality of morphisms is part of the definition, while equality of objects is not necesssarily given, but here I guess that in the actual definition we still require to have a definition of equality (or an equivalence relation) on morphisms, even if we don't use it?</p>",
        "id": 490182809,
        "sender_full_name": "Jonathan Arnoult",
        "timestamp": 1734708424
    },
    {
        "content": "<p>Everything said above really only applies if we work in a set theory as our foundations of mathematics, where everything comes with a propositional-valued equality, including <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories and their hom-sets. </p>\n<p>In dependent type theory, equality in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories (i.e. Rezk types in dependent type theory) and their hom-types is given by the identity type, but identity types are not required to be (-1)-truncated (i.e. proposition-valued) and instead they can be untruncated (i.e. valued in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids). So people working in an ambient dependent type theory don't really run into problem of evil with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories that people working in set theory do.</p>",
        "id": 490185073,
        "sender_full_name": "Madeleine Birchfield",
        "timestamp": 1734709151
    },
    {
        "content": "<p>They do, however, run into problems <em>defining</em> untruncated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories.</p>",
        "id": 490193054,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1734711863
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"636743\">Jonathan Arnoult</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Equality.20in.20infinity.20categories/near/490182809\">said</a>:</p>\n<blockquote>\n<p>In the case of categories, equality of morphisms is part of the definition, while equality of objects is not necesssarily given, but here I guess that in the actual definition we still require to have a definition of equality (or an equivalence relation) on morphisms, even if we don't use it?</p>\n</blockquote>\n<p>If you suppose that you have a given equivalence relation on morphisms that is not just the ambient equality, you are working with E-categories and not the usual 1-categories. This is actually something that comes up a lot when formalizing category theory in proof assistants, especially when one doesn't want to postulate extensionality properties like funext</p>",
        "id": 490195276,
        "sender_full_name": "Josselin Poiret",
        "timestamp": 1734712621
    },
    {
        "content": "<p>in any case, your ambient language lets you still ask whether two morphisms are equal propositionally, without any regard to your chosen equality relation. The same can be said for objects</p>",
        "id": 490195406,
        "sender_full_name": "Josselin Poiret",
        "timestamp": 1734712672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Equality.20in.20infinity.20categories/near/490193054\">said</a>:</p>\n<blockquote>\n<p>They do, however, run into problems <em>defining</em> untruncated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories.</p>\n</blockquote>\n<p>Not really. Daniel Gratzer, Jonathan Weinberger, and Ulrik Buchholtz in section 2.1 of their paper <a href=\"https://arxiv.org/pdf/2407.09146\">Directed univalence in simplicial homotopy type theory</a> defined hom-types, Segal types, and Rezk types in terms of an arbitrary distributive lattice <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> in ordinary dependent type theory. What becomes hard to do is proving various properties of untruncated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories since you have to transport identifications in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> everywhere.</p>",
        "id": 490196312,
        "sender_full_name": "Madeleine Birchfield",
        "timestamp": 1734712969
    },
    {
        "content": "<p>I didn't say the problems have no solutions!  Just that they exist.</p>",
        "id": 490212975,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1734720166
    },
    {
        "content": "<p>And for the record, I wouldn't regard those as \"definitions of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories\" in the ordinary way that people use the word \"definition\", as they are primarily synthetic rather than analytic.</p>",
        "id": 490213076,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1734720219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671813\">Madeleine Birchfield</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Equality.20in.20infinity.20categories/near/490196312\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Equality.20in.20infinity.20categories/near/490193054\">said</a>:</p>\n<blockquote>\n<p>They do, however, run into problems <em>defining</em> untruncated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories.</p>\n</blockquote>\n<p>Not really. Daniel Gratzer, Jonathan Weinberger, and Ulrik Buchholtz in section 2.1 of their paper <a href=\"https://arxiv.org/pdf/2407.09146\">Directed univalence in simplicial homotopy type theory</a> defined hom-types, Segal types, and Rezk types in terms of an arbitrary distributive lattice <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> in ordinary dependent type theory.</p>\n</blockquote>\n<p>Just as a remark, this portion of the paper is summarizing the work by Emily Riehl and Mike Shulman in <a href=\"https://higher-structures.math.cas.cz/api/files/issues/Vol1Iss1/RiehlShulman\">their paper</a> on the matter. There they also included <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">I</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{I}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">I</span></span></span></span> as an additional sort of judgmental structure precisely to avoid needing quite so many transports. In our setting (with modalities and what not), including this judgmental structure was more headache than it was worth.</p>",
        "id": 490245312,
        "sender_full_name": "daniel gratzer",
        "timestamp": 1734737717
    },
    {
        "content": "<p>There are \"definitions\" of untruncated <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-category that can be given in type theories, but not, so far as is known, in \"ordinary\" dependent type theory.  It's possible in <a href=\"https://arxiv.org/abs/1705.03307\">two-level type theory</a>, for instance, and ought to be possible in <a href=\"https://arxiv.org/abs/2311.18781\">displayed type theory</a>.</p>",
        "id": 490271139,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1734761126
    }
]