[
    {
        "content": "<p>I feel this must be well-known, but can't see it explicitly anywhere. Is there a standard way to generate out of a category, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, some kind of category of probability distributions over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mi>b</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Ob(\\mathcal{C})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">)</span></span></span></span>? Or perhaps a category of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>-weighted sums of objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>.</p>",
        "id": 518253332,
        "sender_full_name": "David Corfield",
        "timestamp": 1747301847
    },
    {
        "content": "<p>If you want isomorphic objects to have the same probability, you might instead want probability distributions on the set of isomorphism classes.</p>",
        "id": 518260300,
        "sender_full_name": "John Baez",
        "timestamp": 1747303840
    },
    {
        "content": "<p>One interesting thing is that any groupoid of finite cardinality has a <em>canonical</em> probability distribution on its set of isomorphism classes.   And in many cases you can make this temperature-dependent and get a 1-parameter family.</p>",
        "id": 518260546,
        "sender_full_name": "John Baez",
        "timestamp": 1747303924
    },
    {
        "content": "<p>Thanks. I can see decategorifying a groupoid to a set provides an answer. But I'm wondering about some generalization of the Families as free coproduct completion construction to allow weightings.</p>\n<p>Don't the probabilistic programming people meet this issue where the result of a random sample determines which object appears as the codomain of the computation?</p>",
        "id": 518263324,
        "sender_full_name": "David Corfield",
        "timestamp": 1747304874
    },
    {
        "content": "<p>Or do people look on the latter as a probabilistic map into the coproduct of possible target objects?</p>",
        "id": 518271667,
        "sender_full_name": "David Corfield",
        "timestamp": 1747307415
    },
    {
        "content": "<p>Probably the only probabilistic programming semantics that has dependent types is Bart Jacobs' topos-based one.</p>",
        "id": 518272262,
        "sender_full_name": "James Deikun",
        "timestamp": 1747307620
    },
    {
        "content": "<p>Sorry. maybe it's Jules Jacobs?</p>",
        "id": 518272545,
        "sender_full_name": "James Deikun",
        "timestamp": 1747307724
    },
    {
        "content": "<p>Nope, Bart it was.</p>",
        "id": 518272800,
        "sender_full_name": "James Deikun",
        "timestamp": 1747307800
    },
    {
        "content": "<p>But <a href=\"https://arxiv.org/abs/1511.09230\">that type theory</a> doesn't have dependent types either, it uses coproducts as you speculated.</p>",
        "id": 518274560,
        "sender_full_name": "James Deikun",
        "timestamp": 1747308365
    },
    {
        "content": "<p>And even if you have a notion of sampling from a dependent type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>:</mo><mi>A</mi><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow></mrow><annotation encoding=\"application/x-tex\">B : A \\to \\mathsf{Type}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Type</span></span></span></span></span>, I'd expect that the programmer would have to a specify a distribution on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> first, together with a family of distributions over the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B(a)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span></span>. So I'd say that there doesn't need to be any canonical choice of a distribution on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>.</p>",
        "id": 518276317,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1747308851
    },
    {
        "content": "<p>The ask wasn't a canonical choice of a distribution on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, rather it was a sensible <em>notion</em> of distribution on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Type}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Type</span></span></span></span></span>.</p>",
        "id": 518276931,
        "sender_full_name": "James Deikun",
        "timestamp": 1747309031
    },
    {
        "content": "<p>If that's the question, then why not have a type former <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> that corresponds to the Giry monad? The notion of distribution on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Type}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Type</span></span></span></span></span> is then given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"sans-serif\">T</mi><mi mathvariant=\"sans-serif\">y</mi><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">e</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(\\mathsf{Type})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathsf\">Type</span></span><span class=\"mclose\">)</span></span></span></span>. For the most naive kind of semantics, one could perhaps just consider <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span> with universes, and take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> to be the discrete distribution monad.</p>",
        "id": 518278098,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1747309401
    },
    {
        "content": "<p>Yes, there are ways to do it if you consider the universe as a mere set, but the idea is that a sensible semantics of distributions on the universe considers that the universe is also a category and constructs a category of distributions!  The interesting question here is \"what are the arrows?\"</p>",
        "id": 518278844,
        "sender_full_name": "James Deikun",
        "timestamp": 1747309591
    },
    {
        "content": "<p>Returning to David's original question: I'm not familiar of a standard way to define a category of probability distributions on the set of objects of a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">C</span></span></span></span>.   Of course the concept of a probability distribution on the set of objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">C</span></span></span></span>. is well-defined, as is the (equivalence-invariant <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span>) concept of a probability distribution on the set of isomorphism classes of objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">C</span></span></span></span>.   To get a <em>category</em> of these, we just need to choose a concept of morphism between them.  The question is what information we want these morphisms to convey?</p>\n<p>For example the set of probability distributions on any set has a preorder called the <a href=\"https://en.wikipedia.org/wiki/Majorization\">majorization order</a>, which is very interesting in information theory: for many concepts of entropy, if one probability distribution majorizes another it has less entropy.   So that's one thing we could use, if we're happy with a preorder.</p>",
        "id": 518279713,
        "sender_full_name": "John Baez",
        "timestamp": 1747309825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"438995\">James Deikun</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Distributions.20over.20objects.20of.20a.20category/near/518278844\">said</a>:</p>\n<blockquote>\n<p>Yes, there are ways to do it if you consider the universe as a mere set, but the idea is that a sensible semantics of distributions on the universe considers that the universe is also a category and constructs a category of distributions!  The interesting question here is \"what are the arrows?\"</p>\n</blockquote>\n<p>That sounds like a different question yet again, but one possible answer might be to take the nerve of the category, apply the distribution functor to that, and then consider the resulting new simplicial set as the \"category\" that you're looking for. This won't be technically a category because it will fail the Segal condition, but it can plausibly be used for some of the same purposes. But perhaps it depends on what you want to do with it; I don't yet see the relevance for probabilistic programming with dependent types.</p>",
        "id": 518280606,
        "sender_full_name": "Tobias Fritz",
        "timestamp": 1747310045
    },
    {
        "content": "<p>One might define <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}(X,Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> as a distribution on the arrows out of each object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> so that, if you sample from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and then from the arrows out of the resulting object, the resulting distribution on the codomain is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>.</p>",
        "id": 518283030,
        "sender_full_name": "James Deikun",
        "timestamp": 1747310622
    },
    {
        "content": "<p>(This category won't generally be even locally small, although I think it will become locally small if you limit the distributions on arrows to only come out of the support of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.)</p>",
        "id": 518283731,
        "sender_full_name": "James Deikun",
        "timestamp": 1747310789
    },
    {
        "content": "<p>This construction can become more interesting if you deal in categories internal to measurable spaces so you can have continuous distributions.</p>",
        "id": 518284346,
        "sender_full_name": "James Deikun",
        "timestamp": 1747310975
    },
    {
        "content": "<p>Thanks for all of your thoughts. Useful to see that things here are not straightforwardly known. I probably need to think harder about what it is I'm after. </p>\n<p>Also, I'd forgotten that I meant to take a look at  Toby Smithe's <a href=\"https://arxiv.org/abs/2406.08286\">Copy-composition for probabilistic graphical models</a>, in particular, prompted by the discussion, to check out his claim</p>\n<blockquote>\n<p>we introduce a useful bifibration of measure kernels, to provide semantics for the notion of stochastic term, which allows us to generalize probabilistic modelling from product to dependent types.</p>\n</blockquote>",
        "id": 518288677,
        "sender_full_name": "David Corfield",
        "timestamp": 1747312081
    }
]