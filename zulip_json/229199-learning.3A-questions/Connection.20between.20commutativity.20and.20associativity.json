[
    {
        "content": "<p>I found this in the notes of Edsger W. Dijkstra (a legendary computer scientist):</p>\n<blockquote>\n<p>Let • be a binary infix operator. Depending on how we Curry, we can form two classes of unary operators from <strong>,</strong> the general elements of which are often denoted by (x•) and (•y), defined</p>\n<blockquote>\n<p>(x•) = 〈λy: x•y〉      (•y) = 〈λx: x•y〉</p>\n</blockquote>\n<p>We call them in this note \"the derived unary operators\".</p>\n<p>To begin with we observe —with apologies for the two different usages of parentheses—</p>\n<p>(x•z)•y = x•(z•y)</p>\n<p>=        {definition of derived operators}</p>\n<p>(•y).((x•).z) = (x•).((•y).z)</p>\n<p>=        {definition of functional composition}</p>\n<p>((•y)◦(x•)).z = ((x•)◦(•y)).z  ,</p>\n<p>hence, that a binary operator is \"associative\" means that its derived unary operators commute.<br>\n</p>\n</blockquote>\n<p><a href=\"https://www.cs.utexas.edu/~EWD/transcriptions/EWD11xx/EWD1142.html\">Source</a></p>\n<p>Seems very cool on first glance, but I think that it is not formally correct. If we take right curried operators, they do not commute, even if the binary operator does (i.e.  (•y)◦(•x)).z =/= ((•x)◦(•y)).z).</p>\n<p>Am I missing something? Is there a formal connection between commutativity and associativity? </p>\n<p>I am reminded of the <a href=\"https://math.ucr.edu/home/baez/week74.html#tale\">periodic table of n-categories</a> but don't understand the progression from a monoid to a commutative monoid.</p>",
        "id": 480723300,
        "sender_full_name": "Jencel Panic",
        "timestamp": 1730814037
    },
    {
        "content": "<p>What do you mean? Of course it's correct; Dijkstra didn't say that two right-curried operators commute but that any left-curried operator commutes with any right-curried operator.</p>",
        "id": 480757919,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730823726
    },
    {
        "content": "<p>I'm not sure about a connection to the periodic table. I see the temptation though.</p>",
        "id": 480758432,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730823894
    },
    {
        "content": "<p>Where did he say that? <br>\nIn the note that I quote he says \"the derived unary operators commute\".</p>",
        "id": 480762901,
        "sender_full_name": "Jencel Panic",
        "timestamp": 1730825348
    },
    {
        "content": "<p>In the equation finishing the proof of the result he's paraphrasing in the text you quoted...</p>",
        "id": 480765384,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730826269
    },
    {
        "content": "<p>It's true that if you read that sentence without reading the argument above you could take him to be claiming something that isn't true, but given the context and how obvious it is that right-curried operators don't commute with each other unless the operation is commutative, it's a pretty mild case of imprecision. You have to read carefully.</p>",
        "id": 480765578,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730826346
    },
    {
        "content": "<p>I guess that means hom Functors commute as well? <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub><msup><mi>h</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>h</mi><mo>∗</mo></msup><msub><mi>f</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">f_* h^* = h^* f_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, that's cute! Thanks for sharing.</p>",
        "id": 480770214,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1730827937
    },
    {
        "content": "<p>Yeah! This is part of saying that hom is a bimodule/profunctor.</p>",
        "id": 480770567,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730828097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"609515\">@Kevin Carlson</span>  it is mild if you already know about the connection, if not, it's actually pretty confusing :) I do read carefully, hence this conversation.</p>\n<p>Can you elaborate a bit on the profunctor part?</p>",
        "id": 480842458,
        "sender_full_name": "Jencel Panic",
        "timestamp": 1730866949
    },
    {
        "content": "<p>The connection between…the sentence you asked about and the math right above it? Well, anyway, whatever. Clearly there’s at least one case of it being confusing and it doesn’t do any good for me to just tell you it shouldn’t have been.</p>",
        "id": 480964583,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730912869
    },
    {
        "content": "<p>About the hom profunctor, you can write a profunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo>:</mo><mi>A</mi><mi>t</mi><mi>o</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">H:Ato B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> as a partial binary operation where you can multiply heteromorphisms on the right with matching morphisms from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and vice versa for morphisms from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">,</mo><mi>h</mi><mo>↦</mo><mi>f</mi><mo>∗</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">f,h\\mapsto f*h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>a</mi><mtext>’</mtext><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>h</mi><mo>:</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mtext>’</mtext><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f:A(a,a’),h:H(a’,b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">’</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">’</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo separator=\"true\">,</mo><mi>g</mi><mo>↦</mo><mi>h</mi><mo>∗</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">h,g\\mapsto h*g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mi>B</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>b</mi><mtext>’</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g:B(b,b’)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord\">’</span><span class=\"mclose\">)</span></span></span></span>. So we have (partial) operators of left and right multiplication by morphisms of A and B respectively, putting us almost back in the same setting from Dijkstra.</p>",
        "id": 480966401,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730913482
    },
    {
        "content": "<p>But what if we want to talk about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>∗</mo><mi>h</mi><mo>∗</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f*h*g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>? Is it well defined? Part of the definition of a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>B</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup><mo>×</mo><mi>A</mi><mo>→</mo><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">B^{\\mathrm{op}}\\times A\\to\\mathbf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">op</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span> translates into saying that yes, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>∗</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>g</mi><mo>=</mo><mi>f</mi><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>h</mi><mo>∗</mo><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f*h)*g=f*(h*g)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span></span></span></span>, so we have an associativity condition that can again be expressed as a commutativity of operators.</p>",
        "id": 480966451,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730913488
    },
    {
        "content": "<p>In fact, Dijkstra might not have confused you had he framed his point in this setting because it’s harder to mix up the left and right operators when the actions are one-sided! But he probably didn’t know about profunctors.</p>",
        "id": 480966613,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730913550
    },
    {
        "content": "<p>By the way, in case you’re interested in my reflections on why I was overly prickly above, the point I really wanted to make was not that you shouldn’t have been confused, which indeed would be a stupid thing for me to tell you, but that you shouldn’t have had “Dijkstra is formally incorrect” very central in your hypothesis space. It’s common for students to waste a lot of time on the hypothesis that something they read from some very excellent scientist was wrong. In 97% of cases (although there’s lots of detail in this number; just from the shape of this case I was practically certain it couldn’t be wrong, but everybody is sometimes wrong about certain kinds of things) they’re misunderstanding and it’s more productive to focus on figuring out how than to try to prove the author wrong.</p>",
        "id": 480967120,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730913740
    },
    {
        "content": "<p>I mixed up this possibly valuable points with feelings of defensiveness toward Dijkstra, I think, which is hilarious since he certainly doesn’t need my help. Sorry about that.</p>",
        "id": 480967176,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730913773
    },
    {
        "content": "<blockquote>\n<p>It’s common for students to waste a lot of time on the hypothesis that something they read from some very excellent scientist was wrong. In 97% of cases [...] they’re misunderstanding and it’s more productive to focus on figuring out how than to try to prove the author wrong.</p>\n</blockquote>\n<p>That's an interesting point.  I forget if I ever <em>did</em> tend to think math papers and books I was reading were wrong.  But now - and it seems like always - when I'm trying to learn something and read something that doesn't make sense, I assume it's due to me being confused.  I'm perfectly willing to blame the author for explaining things badly or using too many symbols and not enough plain English.  But usually they wind up being correct - so when I'm puzzled or in a state of downright disbelief, I know that's when I'll soon be learning something.</p>",
        "id": 480970353,
        "sender_full_name": "John Baez",
        "timestamp": 1730914905
    },
    {
        "content": "<p>My priors are completely different for the many unsolicited manuscripts I get in my email.  Many of these are complete junk.  Luckily, complete junk is fairly easy to spot.</p>",
        "id": 480970614,
        "sender_full_name": "John Baez",
        "timestamp": 1730915014
    },
    {
        "content": "<p>Yes, I meant to emphasize that I definitely remember cases of making these kinds of assumptions personally. To be fair, in exactly one case I was right enough to get a paper out of it, but that took a while!</p>",
        "id": 480970620,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730915017
    },
    {
        "content": "<p>When I read Terrance Tao's distinction between \"compilation errors\" vs real conceptual errors, that helped me manage my feelings around what Kevin is concerned with.</p>\n<p>Suddenly what counted as a substantive mistake from experts in my mind went from \"very occasionally\" to \"never.\" (Unless you count famous big problems, Atiyah near the end of his life comes to mind)</p>",
        "id": 480974801,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1730916559
    },
    {
        "content": "<p>Well, it’s not <em>fully</em> never, especially for mistakes in proofs (my paper I mentioned corrected an old substantial mistake of Alex Heller, who was an unimpeachable expert, and there are more famous stories around Daniel Biss, the Italian school, etc...) But it really is remarkably rare, especially to have ineluctable errors in statements as opposed to proofs.</p>",
        "id": 480975188,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730916705
    },
    {
        "content": "<p>Sure, that's fair, Voevodsky worked on HOTT because of a mistake he made that nobody found.</p>\n<p>What I meant by \"never\" was I personally haven't rooted out a real error from a pro.</p>",
        "id": 480975965,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1730916989
    },
    {
        "content": "<p>Yeah it seems like a plausible heuristic is something like you find a median of one per decade of professional math work</p>",
        "id": 480976059,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730917034
    },
    {
        "content": "<p>Or even less? Have you uncovered serious errors in your career John?</p>",
        "id": 480976093,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730917048
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Connection.20between.20commutativity.20and.20associativity/near/480975965\">said</a>:</p>\n<blockquote>\n<p>Sure, that's fair, Voevodsky worked on HOTT because of a mistake he made that nobody found.</p>\n</blockquote>\n<p>That story is a bit exaggerated.   A lot of people knew <a href=\"https://eudml.org/doc/91469\">his 1991 paper with Kapranov</a> was wrong in claiming strict <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids model general homotopy types.  In fact James Dolan and I studied that paper and convinced ourselves this result was wrong.  But other people must have done that too.   Since it was a highly implausible result to begin with, I imagine many experts just disregarded it!   Luckily in 1998 Carlos Simpson <a href=\"http://arxiv.org/abs/math/9810059\">wrote up a proof</a> that this result was wrong.</p>\n<p>What Voevodsky seemed to be complaining about is that nobody pinpointed the error that he and Kapranov made.  But it's not really the responsibility of the math community to find the error in a paper that claims an implausible result.  The math community succeeded just fine in not accepting his claim, and it was really his job to find the mistake.</p>",
        "id": 480983540,
        "sender_full_name": "John Baez",
        "timestamp": 1730920024
    },
    {
        "content": "<p>From the sublime to the ridiculous: a lot of people claiming to prove Fermat's Last Theorem, or now the Riemann Hypothesis or Golbach's Conjecture, write manuscripts and then run around demanding that people either find the mistake or accept their argument.  But no successful scientist has time to find all the mistakes in all the unwanted papers we get in our email.   That's why I put this in the crackpot index:</p>\n<blockquote>\n<ul>\n<li>10 points for offering prize money to anyone who proves and/or finds any flaws in your theory.</li>\n</ul>\n</blockquote>",
        "id": 480984554,
        "sender_full_name": "John Baez",
        "timestamp": 1730920428
    },
    {
        "content": "<p>I wrote some of the same things <a href=\"https://mathoverflow.net/a/338620/49\">here</a>.</p>",
        "id": 480984702,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1730920475
    },
    {
        "content": "<p>I really appreciate the added context Baez and Shulman!</p>",
        "id": 480985203,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1730920687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Connection.20between.20commutativity.20and.20associativity/near/480983540\">said</a>:</p>\n<blockquote>\n<p>What Voevodsky seemed to be complaining about is that nobody pinpointed the error that he and Kapranov made.  But it's not really the responsibility of the math community to find the error in a paper that claims an implausible result.  The math community succeeded just fine in not accepting his claim, and it was really his job to find the mistake.</p>\n</blockquote>\n<p>For what it's worth, Amar Hadzihasanovic later exhibited a specific error in <a href=\"https://arxiv.org/abs/2007.14505\">Diagrammatic sets and rewriting in weak higher categories</a>.</p>",
        "id": 480995656,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1730925019
    },
    {
        "content": "<p>Oh, that’s very interesting lore!</p>",
        "id": 480996111,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1730925202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"609515\">Kevin Carlson</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Connection.20between.20commutativity.20and.20associativity/near/480967120\">said</a>:</p>\n<blockquote>\n<p>...you shouldn’t have had “Dijkstra is formally incorrect” very central in your hypothesis space. </p>\n</blockquote>\n<p>But I did the exact opposite! I assumed he was correct and created this topic to understand  why it seems to me that he is not.</p>",
        "id": 481079870,
        "sender_full_name": "Jencel Panic",
        "timestamp": 1730972649
    },
    {
        "content": "<p>This is probably past the point of significance but for what it's worth, you said \"but I think it is not formally correct\" which didn't read to me as you assuming it was correct. I understand now that that's what you were thinking internally hough.</p>",
        "id": 481177274,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731004092
    },
    {
        "content": "<p>I remember as an undergrad pointing at the blackboard saying \"that's wrong\" and the professor looked at me and said \"no it's right\" and I just said, more nervously, \"no it's wrong?\" And he said louder \"<em>It's right</em>\" and I replied, more nervously, again \"...no it's wrong <span aria-label=\"exhausted\" class=\"emoji emoji-1f625\" role=\"img\" title=\"exhausted\">:exhausted:</span>\", and he started \"NO IT'S...\" looked at the board, cleaned up a borked transcription - it suddenly made sense to me - and he immediately went back to the lecture like nothing happened.</p>\n<p>My rough takeaway from this experience is something like \"asking a question about what I'm confused about, is hard when I'm confused\" but I also left with the question \"if my confusion is of the sort, that I have the impression that what was said is wrong, how do I communicate this without offending the other person?\"</p>\n<p>Because clearly repeating \"that's not right\", obviously wasn't a winning strategy here <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 481181480,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1731005756
    },
    {
        "content": "<p>Oof that sounds like an extremely anxiogenic experience</p>",
        "id": 481181573,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731005793
    },
    {
        "content": "<p>Reminds me of the famous old story where the professor says some result is trivial, and somebody asks him to flesh that out, and he mutters for a minute or two and gets so flustered that he walks out to his office to think privately for ten minutes then comes back and says \"yes, I was right, it's trivial\" and continues</p>",
        "id": 481181674,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731005834
    },
    {
        "content": "<p>I'm reminded of the joke a math professor once told my class: \"Sometimes a mathematician writes one thing, says a second, means a third, and it <em>should</em> have been a fourth!\"</p>",
        "id": 481189744,
        "sender_full_name": "David Egolf",
        "timestamp": 1731009227
    },
    {
        "content": "<p>Fwiw, I'm open to advice from anybody here for \"if my confusion is of the sort, that I have the impression that what was said is wrong, how do I communicate this without offending the other person?\"</p>\n<p>Panic's \"But I think that it is not formally correct\" reads to me like an honest attempt to say \"reasonable, to me, interpretations of this aren't parsing, what's wrong?\" If a student, for whatever reason, can't clarify their point of confusion <em>when it looks wrong</em>, how would you all prefer the student phrase their question about their confusion?</p>",
        "id": 481200603,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1731013762
    },
    {
        "content": "<p>One idea is to make statements about your own perceptions, rather than the truth. “I can’t see how to parse that as true, because [details] would imply [contradiction],” for instance, or just “that looks wrong to me, because [details]”…I don’t know, I think it’s hard to say much useful in terms of plain text, at least for in person interactions it’s more about being sure to interact with a sense of curiosity and openness.</p>",
        "id": 481202208,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731014580
    },
    {
        "content": "<p>Going through undergrad, I asked my professors a lot of somewhat tricky questions during lectures. Many of these questions arose from the sense of \"Wait, isn't that wrong/incomplete?\". In this context, the initial phrasing of a question I think is important, but I also found that how I responded to the professor's response was important too. I found that professors seemed to respond positively even to bluntly stated questions, as long as I thanked them for their response and thought over their response carefully before asking a followup question.</p>",
        "id": 481203654,
        "sender_full_name": "David Egolf",
        "timestamp": 1731015264
    },
    {
        "content": "<p>I think it can also be helpful to phrase questions in terms of \"Why is [the particular point at hand] interesting/correct given XYZ?\" as opposed to \"I think what you said is wrong because of XYZ\". In general, I found it good to phrase a question so that it indicated I was interested and engaged with the presentation.</p>",
        "id": 481204057,
        "sender_full_name": "David Egolf",
        "timestamp": 1731015451
    },
    {
        "content": "<p>All that being said, I still find I have to be careful about this - and in contexts more broad than just math and lectures. It can be easy to criticize and undermine, but it's much more rewarding to try and ask questions or make comments that encourage mutual learning and exploration.</p>",
        "id": 481204561,
        "sender_full_name": "David Egolf",
        "timestamp": 1731015695
    },
    {
        "content": "<p>I second Kevin's suggestion.  I think asking \"I don't understand why...\" is one of the best ways to get a positive response.  The phrasing presumes that the other is actually correct and the fault is with the asker, which may in fact be the case; and if it isn't, then often the responder will realize this themselves in the process of trying to explain.</p>",
        "id": 481208728,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1731017839
    },
    {
        "content": "<p>Maybe this is a good moment to recall a story in my first analysis course, where the professor had put a typo on the board and I asked about it in a somewhat sneaky way that led him to notice an implied contradiction and then have to find his own way back to the typo; I think it wasn't malicious of me but I was just being anxious and indirect, but he responded by telling me I'd end up with no friends if I kept acting like that <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> Could have been crushing in a certain context but it was the right response for me at the time.</p>",
        "id": 481222929,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731026714
    },
    {
        "content": "<p>Kevin, did he say that with a smile on his face?</p>",
        "id": 481319451,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1731074151
    },
    {
        "content": "<p>Yeah, he did, I remember him as rather impish and wry.</p>",
        "id": 481337907,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731079969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Connection.20between.20commutativity.20and.20associativity/near/480770214\">said</a>:</p>\n<blockquote>\n<p>I guess that means hom Functors commute as well? <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub><msup><mi>h</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>h</mi><mo>∗</mo></msup><msub><mi>f</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">f_* h^* = h^* f_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, that's cute! Thanks for sharing.</p>\n</blockquote>\n<p>I want to understand this very well, before I try to delve into what Kevin is saying (as I assume I won't be able to do that at all), so here is an attempt to prove it:</p>\n<p>So, I guess to be able to compose two hom functors, they both would all be  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set \\to Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span>. So you are saying that if you have one covariant hom functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub><mo>:</mo><mi>S</mi><mi>e</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">f_*: Set \\to Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span> and one contravariant one  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup><mo>:</mo><mi>S</mi><mi>e</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">h^*: Set \\to Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span>, then  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub><msup><mi>h</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>h</mi><mo>∗</mo></msup><msub><mi>f</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">f_* h^* = h^* f_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Why? let's attempt to apply one combination, then the other. <br>\nSay you have a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span>. Then, applying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">f_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> would add another morphism to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>, which, if we call the new morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> would become <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f&#x27; g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>. </p>\n<p>Then,  applying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>, to the same morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">f&#x27; g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> would make it into a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>g</mi><msup><mi>h</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f&#x27; g h&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">h&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> being the new part that is added).</p>\n<p>And if we apply <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> first, then it will be the same? Am I on the right track?</p>",
        "id": 481580327,
        "sender_full_name": "Jencel Panic",
        "timestamp": 1731259045
    },
    {
        "content": "<p>Yes! In fact the only way to even notice there’s something to prove is to add parentheses. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">f_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1757em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> should probably just compose <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> to get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">fg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> and then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">h^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> sends they to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mi>g</mi><mo stretchy=\"false\">)</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">(fg)h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span></span></span></span>.</p>",
        "id": 481581622,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1731260102
    }
]