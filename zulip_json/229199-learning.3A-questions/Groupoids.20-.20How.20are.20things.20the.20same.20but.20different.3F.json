[
    {
        "content": "<p>Trying to understand HoTT seems to have deeply clarified Groupoids for me, specifically that they can be thought of as a generalization of an equivalence relation.</p>\n<p>Thinking back on many concepts I've been trying to formalize categorically, it seems like groupoids account for, or at least clarify, most of them. But I'm a bit confused how things are \"the same\" but \"different\". So I'm going to try and give examples of this, but also I'd like to just chat a bit about groupoids.</p>\n<p>Awhile ago I was trying to understand accordions with category theory. The discussion can be summarized by saying it's useful to model musical concepts with G-Torsors, or \"generalized musical intervals\" in David Lewin's terminology. By thinking of G-Torsors as a translation groupoid - I could imagine musical concepts as objects, and the arrows transforming between them as given by group transformations. These symmetries could then be given a physical interpretation for how the musical objects would be played, via an accordion layout.</p>\n<p>One aspect that bugged me about this, was that an actual accordion had a finite number of buttons, but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">Z</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}^2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>-Torsors wanted an infinite number of buttons. Applying a translation to the highest note falls off the edge of the accordion.</p>\n<p>The article \"Groupoids: Unifying Internal and External Symmetry\" illustrated how action groupoids (or transformation groupoids) restricted to a bounded set, allows one to define symmetrical features via automorphisms of the ambient space.</p>\n<p>An infinite grid, its symmetries exist at intersections, and midpoints of lines:<br>\n<a href=\"/user_uploads/21317/pxw1ccSQia74lvKjHraUfQBh/image.png\">Infinite tile grid</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/pxw1ccSQia74lvKjHraUfQBh/image.png\" title=\"Infinite tile grid\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1239x606\" src=\"/user_uploads/thumbnail/21317/pxw1ccSQia74lvKjHraUfQBh/image.png/840x560.webp\"></a></div><p>A finite grid requires groupoids to find more distinct sorts of symmetries:<br>\n<a href=\"/user_uploads/21317/2KzWXN7wwwzqqIcMNUnxk2LH/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/2KzWXN7wwwzqqIcMNUnxk2LH/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"991x456\" src=\"/user_uploads/thumbnail/21317/2KzWXN7wwwzqqIcMNUnxk2LH/image.png/840x560.webp\"></a></div><p>For example, Its possible to detect the corners of a tiled rectangle, by noticing certain reflections preserve the corner edges.</p>\n<p>This gives me ideas for exploring accordions, but maybe I should switch gears to something more familiar. I also wanted to model chess moves, which incidentally also requires the pieces move on a grid. Moving <em>from</em> and <em>to</em> either the corners, edges, or interior squares corresponds to very different familes of moves, which I would say are roughly indicated by the symmetries indicated on the finite rectangle.</p>\n<p>However if I choose my isomorphisms to be knight moves of the would be groupoid, the knight can travel to any square. It's still a puzzle to ask which paths there are between two points on the board.</p>\n<p>Very similar to this, Baez gave the 16 puzzle as an example of a groupoid, where all the positions of the game correspond to different objects, with moves between states given by isomorphisms. If a game can be won from a given position, it's usually thought of as \"equivalent\" to a winning position. Conway invented the Surreal numbers by carefully identifying positions of similar \"winnability\". So I suspect this groupoid perspective is \"correct\" in that a puzzle that hasn't been finished yet, is \"the same\" as a finished puzzle. This is a bit confusing to me.</p>\n<p>Normally, when I think of something as the same, I think of a sort of congruence. If I know how to play a song on the accordion, and I shift my hands, it's still the same song. I'd even go so far as to suggest a path of transitions between various dance positions determines a dance, which different people can perform in different places by simply changing where they start.</p>\n<p><a href=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Houghton_Typ_705.35.842_-_Kellom_Tomlinson%2C_passacaille.jpg\">Dancing over diagram</a></p>\n<div class=\"message_inline_image\"><a href=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Houghton_Typ_705.35.842_-_Kellom_Tomlinson%2C_passacaille.jpg\" title=\"Dancing over diagram\"><img src=\"https://uploads.zulipusercontent.net/6f8c090288154bf5a215919b974cf171a28e69f8/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f342f34362f486f756768746f6e5f5479705f3730352e33352e3834325f2d5f4b656c6c6f6d5f546f6d6c696e736f6e2532435f70617373616361696c6c652e6a7067\"></a></div><p>Regardless, in HoTT, I believe it's still meaningful to provide a solution to a 16 puzzle in an identity type, to show the puzzle is actually solvable. <strong>How should I think about \"equivalance\" in a context where it's important to provide a proof that things are equivalent, like in solutions to the 16 puzzles?</strong></p>\n<p>Context for a second question, I'm used to groups being defined as transformations which preserve certain structures or properties of a set we want to explore. With the classic groups being given by isometries. So interesting stuff doesn't happen until you have a <em>symmetrical</em> figure that maps to itself.</p>\n<p>If we lift our perspective to groupoids, thinking of one specified triangle as having lengths <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1, 2, 3)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>, then every isometry on this triangle will give an entire groupoids worth of triangles across the plane. Geometric operations on this triangle, like circumscribing with a circle, in a sense should circumscribe all the triangles at the same time. That is, we have a groupoids worth of circles under the same transformations, given by the previous geometric construction. All triangles with various possible side lengths, are connected components of their own groupoids, in general the groupoids will be contractible; however, the <em>non</em>-contractible groupoids correspond to the symmetrical triangles, baking in potential ambiguities.</p>\n<p>Somehow it feels like there should be more to the story, than a groupoid of non-symmetrical triangles being contractible to a point. I'm assuming \"the rest of the story\" is clarified by generalizing to categories. Maps from the contractible groupoid of one triangle, should be different than maps from the triangle of a different contractible groupoid. But I'm not sure how to go about this.</p>\n<p>So to restate my questions, what's happening that makes groupoids more natural than groups, even though they're equivalent? Why do the skeletons seem to be worse? How can things be \"equal\" but different?</p>\n<p>Secondly, I have some narrative in my head of how Klein organized geometry around his Erlangen program. I think it's mostly right, but now I'm feeling there could be a real, or false but simpler, history that takes this narrative further. Is there a natural sequence of ideas to motivate classifying geometry <em>by groupoids</em> instead of groups - and then somehow <em>by categories</em> instead of groupoids? Assuming I really understand groupoids well, how do they fit into the story around the \"Erlangen program\"?</p>\n<p>In any case, I have a much deeper feeling for how important groupoids are, and in what way they are \"better than\" sets with equality. So I'd appreciate any further discussions or suggestions to take this understanding further.</p>\n<p>(I have this sense, \"in mathematics\", that there is a very well understood arrow \"groupoids → categories\" and a mostly understood arrow \"groupoids → ∞-groupoids/HoTT\", but that it's still an active research program to work out the \"pushout\" of \"∞-categories\" in a really nice way. But right now I'm still trying to sort out those first two arrows).</p>",
        "id": 543122628,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759619700
    },
    {
        "content": "<p>As you say, you can think of a groupoid as being a bunch of things, some of which are the same and some of which aren't. I think two good examples to think about are </p>\n<ol>\n<li>The category of finite sets, with bijections</li>\n<li>The category of finite dimensional vector spaces, with invertible linear maps.<br>\nEg, the sets {1,2} and {a,b} aren't literally the same, but for many purposes they are, and this groupoid reflects that fact.</li>\n</ol>\n<p>I would push back a little bit on saying that \"groupoids are equivalent to groups\". Every <em>connected</em> groupoid is equivalent to a group, but part of the fun is that groupoids don't have to be connected! For instance, example (1) is the disjoint union of all the symmetric groups <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. This actually matters quite a lot! For instance, there's a new \"parabolic induction\" tensor product that you can only see if you look at representations of all the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> simultaneously. This leads to a very pretty connection with braid diagrams (that gets even prettier if you work with example (2), over a finite field).</p>",
        "id": 543124373,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1759621815
    },
    {
        "content": "<p>Arguably only <em>pointed</em> connected groupoids are equivalent to groups.  Of course every connected groupoid can be made pointed somehow, but in general there's no canonical or unique choice of a point.  An unpointed connected groupoid only determines a group \"up to conjugacy\".</p>",
        "id": 543124532,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1759622008
    },
    {
        "content": "<p>Yeah, that's an important clarification. Especially since \"group up to conjugacy\" is a useful way that groupoids naturally show up</p>",
        "id": 543124587,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1759622082
    },
    {
        "content": "<p>Could you say a little bit more about the \"parabolic induction\" tensor? I see how it's a dramatic demonstration of how useful all the connected components are.</p>\n<p>Isn't saying a groupoid is a group \"up to conjugacy\" the same thing as saying \"No really think about the groupoid!\"? How do you have a group up to conjugacy without just having all the objects of the groupoid?</p>",
        "id": 543135119,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759637466
    },
    {
        "content": "<p>I spent a couple days trying to find compelling groupoid resources about games and just now found Dan Pipioni linked to a blog post (<a href=\"https://cornellmath.wordpress.com/2008/01/27/puzzles-groups-and-groupoids/\">https://cornellmath.wordpress.com/2008/01/27/puzzles-groups-and-groupoids/</a>) as a reply to this math overflow question (<a href=\"https://mathoverflow.net/questions/1114/whats-a-groupoid-whats-a-good-example-of-a-groupoid\">https://mathoverflow.net/questions/1114/whats-a-groupoid-whats-a-good-example-of-a-groupoid</a>) <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>\n<p>I didn't fully understand the significance of the 15  puzzle as a groupoid example. It was way more subtle than I gave it credit for. The blog gave a compelling way to think of different objects in the 15 puzzle groupoid as the same. I'll think about whether I can work this back to my knight move example as well as how this relates to conjugation.</p>",
        "id": 543137657,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759640608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Groupoids.20-.20How.20are.20things.20the.20same.20but.20different.3F/near/543135119\">said</a>:</p>\n<blockquote>\n<p>Could you say a little bit more about the \"parabolic induction\" tensor? I see how it's a dramatic demonstration of how useful all the connected components are.</p>\n</blockquote>\n<p>I haven't heard the name \"parabolic induction tensor\" before (does that come from representation theory <span class=\"user-mention\" data-user-id=\"278546\">@Chris Grossack (she/they)</span> ?), but there are a few tensor products on the groupoid of finite sets and bijections. Notably, the restrictions of products and coproducts of finite sets provide tensor products (note that these no longer have the respective universal properties!) which capture how some symmetries of a set can be constructed by decomposing the set and putting together symmetries of the parts.</p>",
        "id": 543155857,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1759663874
    },
    {
        "content": "<p>Since Chris is talking about tensoring representations of different symmetric groups, I figure they must be talking about how <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">S</span></span></span></span>, the groupoid of all finite sets and bijections, is symmetric monoidal under disjoint union.  Thanks to this <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi mathvariant=\"sans-serif\">S</mi><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">V</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[\\mathsf{S},\\mathsf{Vect}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathsf\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Vect</span></span><span class=\"mclose\">]</span></span></span></span>, the category of representations of the groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">S</span></span></span></span>, gets a <a href=\"https://ncatlab.org/nlab/show/Day%20convolution\">[[Day convolution]]</a> symmetric monoidal structure.  </p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">S</span></span></span></span> is the coproduct of connected components, one for each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">n \\in \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>.   Call the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> th connected component <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">B S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, since it's equivalent to the one-object groupoid where the automorphisms of that object are the symmetric group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mo>≃</mo><msub><mo>∑</mo><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow></msub><mi>B</mi><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\"> \\mathsf{S} \\simeq \\sum_{n \\in \\mathbb{N}} B S_n </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathsf\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0771em;vertical-align:-0.3271em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1825em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathbb mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3271em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>Thus </p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi mathvariant=\"sans-serif\">S</mi><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">V</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo><mo>≃</mo><msub><mo>∏</mo><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow></msub><mo stretchy=\"false\">[</mo><mi>B</mi><msub><mi>S</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">V</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> [\\mathsf{S}, \\mathsf{Vect}] \\simeq \\prod_{n \\in \\mathbb{N}} [B S_n , \\mathsf{Vect} ]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathsf\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Vect</span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0771em;vertical-align:-0.3271em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1825em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathbb mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3271em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Vect</span></span><span class=\"mclose\">]</span></span></span></span></p>\n<p>and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>B</mi><msub><mi>S</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">V</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[B S_n , \\mathsf{Vect} ]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Vect</span></span><span class=\"mclose\">]</span></span></span></span> is usually called the category of representations of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.  </p>\n<p>The Day convolution monoidal structure lets you tensor a representation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and one of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and get one of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">S_{n+m}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span>.  This is usually called 'induction', since you can define it an <a href=\"https://ncatlab.org/nlab/show/induced%20representation\">[[induced representation]]</a>.</p>",
        "id": 543159444,
        "sender_full_name": "John Baez",
        "timestamp": 1759667603
    },
    {
        "content": "<p>I would add that parabolic induction was discovered in the 70s by Andrey Zelevinsky and published in Zelevinsky. Representations of Finite Classical Groups (LNM0869, Springer, 1981), also for the case of the q-analogue <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>L</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"double-struck\">F</mi><mi>q</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">GL(n, \\mathbb F_q)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.<br>\nAlso, I think, Chris,  that another nice example of groupoid to have in mind, besides Path Groupoids, is the Action Groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A(X,G)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span>, associated to any (non necessarily transitive)  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-set  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> , used by Alain Connes among others.  Its sets of objects is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and its  arrows  are the triples <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>g</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,g,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>∈</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">x,y \\in X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g\\in G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> and   <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">g.x=y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>. This groupoid allows you to do \"geometric induction\", without choosing a fixed subgroup <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>,   from a representation (quite often a linear character) of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A(X,G)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>.   This is most useful to construct \"Gelfand Models\" for the linear complex representations of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>. More details in <a href=\"https://arxiv.org/abs/2012.15384\">this arXiv preprint</a>       In the case of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>=</mo><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">G = S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> the relevant <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-set is the set of all involutions in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> on which <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> acts by conjugacy.  The action groupoid has an easy to guess nice linear character...</p>",
        "id": 543172115,
        "sender_full_name": "Jorge Soto-Andrade",
        "timestamp": 1759680665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Groupoids.20-.20How.20are.20things.20the.20same.20but.20different.3F/near/543135119\">said</a>:</p>\n<blockquote>\n<p>How do you have a group up to conjugacy without just having all the objects of the groupoid?</p>\n</blockquote>\n<p>Define the 2-category GrpConj of \"groups up to conjugacy\" as follows:</p>\n<ul>\n<li>Its objects are groups.</li>\n<li>Its morphisms are group homomorphisms.</li>\n<li>Its 2-cells from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi><mo>:</mo><mi>G</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">\\phi:G\\to H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi><mo>:</mo><mi>G</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">\\psi:G\\to H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> are elements <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>∈</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">h\\in H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>⋅</mo><mi>ϕ</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h \\cdot \\phi(g) = \\psi(g)\\cdot h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g\\in G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>.</li>\n</ul>\n<p>Though defined without any reference to groupoids, this 2-category is equivalent to the 2-category of (unpointed!) connected groupoids.  Specifically, there is a 2-functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">G</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">p</mi><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">j</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"normal\">G</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">p</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">d</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{GrpConj} \\to \\mathrm{Groupoid}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">GrpConj</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Groupoid</span></span></span></span></span> taking a group to its corresponding 1-object groupoid.  The 2-cells in GrpConj are chosen exactly so as to make this 2-functor 2-fully-faithful (an isomorphism on hom-categories), so it is an equivalence onto its essential image, which is the 2-category of connected groupoids.</p>",
        "id": 543178861,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1759684892
    },
    {
        "content": "<p>I'm still processing all of this and relating it to my examples, I wanted to give a couple comments to indicate I'm listening.</p>\n<p>In Shulman's explanation, Functors between groups as categories \"are just\" homomorphisms, and natural transformations \"are just\" conjugations (of homomorphisms). That latter part was new to me.</p>\n<p>For any arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">f : x \\rightarrow y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> and two Functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">F, G : C \\rightarrow D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, the naturality condition gives <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>y</mi></msub><mo>∘</mo><mi>F</mi><mi>f</mi><mo>=</mo><mi>G</mi><mi>f</mi><mo>∘</mo><msub><mi>α</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_y \\circ F f = G f \\circ \\alpha_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7306em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. When <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C, D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> become single object groupoids <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo separator=\"true\">,</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">G, H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, the functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">F, G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> become homomorphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi><mo separator=\"true\">,</mo><mi>ψ</mi><mo>:</mo><mi>G</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">\\phi, \\psi : G \\rightarrow H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, the arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> becomes an arbitrary <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mi>G</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g : G \\rightarrow G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>, and the natural transformation is given by just one arrow, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>:</mo><mi>H</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">h: H \\rightarrow H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>. Which gives <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>⋅</mo><mi>ϕ</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h \\cdot \\phi(g) = \\psi(g) \\cdot h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g \\in G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>.</p>\n<p>The point I missed, is instead of viewing groupoids as a member of Cat, I should view them as a member of <del>2-Cat</del> the 2-category Cat.</p>\n<p>So to relate this to a concrete example. If I have two congruent equilateral triangles in a plane, then I have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">D_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> choices of how to lay one on top of the other, which is encoded in a group homomorphism. But, <em>even better</em>, in the 2 Cat we can tell two homomorphisms are \"the same\" when they both express a reflection over some axis.</p>\n<p>Baez's and Soto-Andrade's comments aren't the same but \"rhyme\". There's a lot I'm unpacking, but its clear I need to understand representations better. Here's a bit about how I'm thinking about this.</p>\n<p>To understand the 15 puzzle - I'm imagining a 4 by 4 board, with a rook that can only move one square (Or like a character in an old zelda game). There is a (2) Functor from this board as a groupoid to 15 puzzles. Each position of the board, maps to the 15 puzzles with a gap in the same spot. The numbers get jumbled up based on how the gap moves, which then defines a permutation in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mn>15</mn></msub></mrow><annotation encoding=\"application/x-tex\">S_{15}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">15</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>So I think, we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mn>15</mn><mtext>-puzzle</mtext><mo separator=\"true\">,</mo><mtext>gameboard</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">A(15\\text{-puzzle},\\text{gameboard})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">(</span><span class=\"mord\">15</span><span class=\"mord text\"><span class=\"mord\">-puzzle</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord text\"><span class=\"mord\">gameboard</span></span><span class=\"mclose\">)</span></span></span></span>, or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>15</mn><mtext>-puzzle</mtext><mo>:</mo><mo stretchy=\"false\">[</mo><mtext>gameboard</mtext><mo separator=\"true\">,</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">15\\text{-puzzle} : [\\text{gameboard}, S]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">15</span><span class=\"mord text\"><span class=\"mord\">-puzzle</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord text\"><span class=\"mord\">gameboard</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span> (The former is like the category of elements for the later I think). Maybe it'd be cool to consider permutation linear transformations.</p>\n<p>I can see the point of Andrade's discussion, that the action groupoid allows a definition of a process we call \"induction\" (that Baez also referenced) which doesn't require an arbitrary choice of subgroup. </p>\n<p>The equivalence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mo>∑</mo><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow></msub><mi>B</mi><msub><mi>S</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">V</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo><mo>≃</mo><msub><mo>∏</mo><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow></msub><mo stretchy=\"false\">[</mo><mi>B</mi><msub><mi>S</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">V</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[\\sum_{n \\in \\mathbb{N}} B S_n, \\mathsf{Vect}] \\simeq \\prod_{n \\in \\mathbb{N}} [B S_n , \\mathsf{Vect} ]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0771em;vertical-align:-0.3271em;\"></span><span class=\"mopen\">[</span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1825em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathbb mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3271em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Vect</span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0771em;vertical-align:-0.3271em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1825em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathbb mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3271em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Vect</span></span><span class=\"mclose\">]</span></span></span></span>, is also a nice way to see how infinite products and sums in groupoids are interesting.</p>\n<p>I want to explicitly reference a \"guiding principle\" indicated in Alan Weinstein's paper \"Groupoids: Unifying Internal and External Symmetry\":</p>\n<blockquote>\n<p>Almost every interesting equivalence relation on a space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> arises in a natural way as the orbit equivalence relation of some groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. Instead of dealing directly with the orbit space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi mathvariant=\"normal\">/</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">B/G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">G</span></span></span></span> as an object in the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mtext>map</mtext></msub></mrow><annotation encoding=\"application/x-tex\">S_\\text{map}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">map</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> of sets and mappings, one should consider instead the groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> itself as an object in the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>G</mi><mtext>htp</mtext></msub></mrow><annotation encoding=\"application/x-tex\">G_\\text{htp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">htp</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> of groupoids and homotopy classes of morphisms.</p>\n</blockquote>\n<p>My motivation for this thread is internalizing this perspective. I'm not sure what the best road is for doing this.</p>",
        "id": 543394397,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759779301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Groupoids.20-.20How.20are.20things.20the.20same.20but.20different.3F/near/543394397\">said</a>:</p>\n<blockquote>\n<p>instead of viewing groupoids as a member of Cat, I should view them as a member of 2-Cat.</p>\n</blockquote>\n<p>No, I would say that rather than viewing groupoids as objects of the 1-category Cat, you should view them as objects of the 2-category Cat.  2-Cat is something different, its objects <em>are</em> 2-categories.</p>",
        "id": 543411617,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1759786228
    },
    {
        "content": "<p>Nobody should ever say \"groupoids as a member of Cat\".  </p>\n<ol>\n<li>It's always dangerous to mix singular and plural - like <em>groupoids</em> as <em>a member</em> - because it promotes ambiguity, and the reader, trying to resolve this ambiguity, can reach for different solutions.   Do you mean \"the category of groupoids as a member of Cat\" or \"groupoids as members of Cat\"?</li>\n<li>It's also not usual to say \"members\" for objects of a category or 2-category - for me at least it denotes elements of a set.   So reading \"groupoids as a member of Cat\", I'm also imagining a <em>set</em> called Cat, but I have to discard this as an unlikely interpretation.</li>\n</ol>\n<p>A moment of haste when writing can produce minutes of annoyed head-scratching for dozens of readers.</p>",
        "id": 543483933,
        "sender_full_name": "John Baez",
        "timestamp": 1759829412
    },
    {
        "content": "<p>The singular and plural mix seems to reflect my own confusion actually, good opportunity to fix my semantics by checking my syntax <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>.</p>\n<p>The \"member of\" in my mind was an attempt at \"type of\", but the later phrase feels weird to write informally. I don't think that fixes the sentence though.</p>\n<p>Here's another attempt.</p>\n<p>\"A group is a single object groupoid\" is actually a great definition, because groupoids should be read as having natural transformations.</p>\n<p>So I'm trying to write in my own words \"don't forget the 2-cells!\" Maybe that's enough.</p>\n<p>Using Shulman's writing as an example, keeping the spirit of my original sentence:</p>\n<p>\"A groupoid is not just an object of the 1-category Cat, it's even an object of the 2-category Cat!\"</p>\n<p>I think I wanted to say \"A groupoid is a two category\" or more obviously wrong \"A category is a 2-category\", but I didn't understand the error.</p>\n<p>Something like \"Don't forget the 2-cells!\" Is the right way to say this.</p>",
        "id": 543590555,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759859205
    },
    {
        "content": "<p>I want to assemble a \"plural\" of \"groups\" into a \"singular\" \"category\". In a sentence like</p>\n<p>\"A group is a single object groupoid; when assembling groups into a category, don't forget the 2-cells!\"</p>",
        "id": 543592111,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759859762
    },
    {
        "content": "<p>Is that still ambiguous?</p>",
        "id": 543592140,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759859774
    },
    {
        "content": "<p>It's like \"a murder of crows\", but honestly I can still feel the risk because we don't usually talk about a \"a crime of murders\" or whatever. The towers of sorts in category theory should be written about with care. I'll keep this in mind.</p>\n<p>I guess the real issue is the word \"member\", it made that sentence fall apart.</p>",
        "id": 543597283,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759861603
    },
    {
        "content": "<p>Two things make the phrase \"groupoids as a member of Cat\" feel to me like fingernails rubbing on a blackboard: </p>\n<ol>\n<li>mixing singular and plural</li>\n<li>saying \"member of Cat\".</li>\n</ol>",
        "id": 543700820,
        "sender_full_name": "John Baez",
        "timestamp": 1759915968
    },
    {
        "content": "<p>Each one requires me to choose a way to correct the phrase, so I can get a phrase I can understand.</p>",
        "id": 543700912,
        "sender_full_name": "John Baez",
        "timestamp": 1759915998
    },
    {
        "content": "<blockquote>\n<p>\"A group is a single object groupoid; when assembling groups into a category, don't forget the 2-cells!\"</p>\n</blockquote>\n<blockquote>\n<p>Is that still ambiguous?</p>\n</blockquote>\n<p>No, that's not ambiguous.   It's even true if you stretch the meaning of \"is\" a bit.   To clarify this word \"is\" youcan say something like \"any group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> gives a one-object groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">BG</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">BG</span></span></span></span>, and conversely any one-object groupoid arises in this way up to isomorphism.\"  One can polish this statement further.  </p>\n<p>But experts don't like to talk about the number of objects in a category since it violates the principal of equivalence.  (That's the woke way to say it's evil.)   So instead of talking about one-object groupoids they prefer to talk about pointed connected groupoids.   </p>\n<p><strong>Theorem.</strong>  A groupoid is equivalent to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">B G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">BG</span></span></span></span> for some group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> iff it's a pointed connected groupoid.</p>",
        "id": 543701856,
        "sender_full_name": "John Baez",
        "timestamp": 1759916265
    },
    {
        "content": "<p>There are better things to say....</p>",
        "id": 543701900,
        "sender_full_name": "John Baez",
        "timestamp": 1759916280
    },
    {
        "content": "<p>I don't know if I'm able to express this correctly and tersely. </p>\n<p>The 2-category with groups as objects, homomorphisms as 1-morphisms, and conjugations between homomorphisms as 2-morphisms</p>\n<p><em>is equivalent to</em></p>\n<p>the 2-category of connected groupoids.</p>\n<p>I also want to say:</p>\n<p>The <em>category</em> of groups is equivalent to the <em>category</em> of pointed connected groupoids</p>\n<p>But I've been convinced my handle on the basic definitions is worse than I thought, so I looked up <a href=\"https://ncatlab.org/nlab/show/pointed+connected+groupoid\">[[pointed connected groupoid]]</a>. Happily, I found the book <a href=\"https://unimath.github.io/SymmetryBook/book.pdf\">Symmetry</a> by Marc Bezem, Ulrik Buchholtz, Pierre Cagne, Bjørn Ian Dundas, and Daniel R. Grayson.</p>\n<p>This book seems like an extended answer to this thread topic from the point of view of HoTT - maybe that's what I want. For example it gives some nice context for pointed connected groupoids on the fifth page in the margin:</p>\n<p><a href=\"/user_uploads/21317/XascjRX85HCSxHgY9aq4TdAp/image.png\">pointed connected groupoid motivation</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/XascjRX85HCSxHgY9aq4TdAp/image.png\" title=\"pointed connected groupoid motivation\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"456x1171\" src=\"/user_uploads/thumbnail/21317/XascjRX85HCSxHgY9aq4TdAp/image.png/840x560.webp\"></a></div><p>I'd really like to understand groupoids from a \"mathematical\" lens before I understand them from a \"computer science\" lens, if that's practical.</p>",
        "id": 543833205,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1759956961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Groupoids.20-.20How.20are.20things.20the.20same.20but.20different.3F/near/543833205\">said</a>:</p>\n<blockquote>\n<p>I don't know if I'm able to express this correctly and tersely. </p>\n<p>The 2-category with groups as objects, homomorphisms as 1-morphisms, and conjugations between homomorphisms as 2-morphisms</p>\n<p><em>is equivalent to</em></p>\n<p>the 2-category of connected groupoids.</p>\n</blockquote>\n<p>Umm, either that's true or we need to stick the word \"pointed\" in \"the 2-category of connected groupids\".</p>",
        "id": 543940225,
        "sender_full_name": "John Baez",
        "timestamp": 1760011281
    },
    {
        "content": "<blockquote>\n<p>The <em>category</em> of groups is equivalent to the <em>category</em> of pointed connected groupoids.</p>\n</blockquote>\n<p>Maybe I'll throw this one back at you before I think harder about it: what are you taking the morphisms to be in the category of pointed connected groupoids?</p>\n<p>(I think there's a fairly obvious answer, but let's make sure we agree on it!)</p>",
        "id": 543940779,
        "sender_full_name": "John Baez",
        "timestamp": 1760011435
    },
    {
        "content": "<p>A pointed category is a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> with one of its objects specified <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{C}, c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span>. The objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{C}, c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span> are arrows in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> that start at <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span>. Given two objects <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>:</mo><mi>c</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">x : c \\rightarrow X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>:</mo><mi>c</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">y : c \\rightarrow Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, an arrow between them in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{C}, c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span> is an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f : X \\rightarrow Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>, making the implied triangle commute : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">y = f x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">x</span></span></span></span>.</p>\n<p>When our pointed category is a groupoid, the objects determine the arrow, in the above we'd have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mo>=</mo><mi>y</mi><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">f := yx^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>This limits the natural transformations between our functors heavily. If I have two functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo separator=\"true\">,</mo><mi>G</mi><mo>:</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F,G : (\\mathcal{C}, c) \\rightarrow (\\mathcal{D}, d)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span></span></span></span> a potential natural transformation between them, is determined by their values on objects <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>:</mo><mi>c</mi><mo>→</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mi>x</mi><mo>:</mo><mi>d</mi><mo>→</mo><mi>F</mi><mi>X</mi><mo separator=\"true\">,</mo><mi>G</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>:</mo><mi>c</mi><mo>→</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>G</mi><mi>x</mi><mo>:</mo><mi>d</mi><mo>→</mo><mi>G</mi><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">F (x : c \\rightarrow X) = F x : d \\rightarrow F X, G (x : c \\rightarrow X) = G x : d \\rightarrow G X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">FX</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">GX</span></span></span></span> therefore if we have a natural transformation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>:</mo><mi>F</mi><mo>⇒</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha : F \\Rightarrow G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> it's x component would be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mrow><mi>x</mi><mo>:</mo><mi>c</mi><mo>→</mo><mi>X</mi></mrow></msub><mo>=</mo><mi>G</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>F</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\alpha_{x : c \\rightarrow X} = G x (F x)^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mrel mtight\">→</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>. Also, because these are groupoids, this would have to be a natural isomorphism.</p>\n<p>In particular, there's only an identity natural transformation from any functor to itself, and at most one natural <em>isomorphism</em> to any other functor. So the functors, or symmetries, form a set of contractible groupoids, or just a set.</p>\n<p>So we have just <em>a category</em> of pointed groupoids. Then the category of pointed connected groupoids is equivalent to the category of groups. To define a functor from pointed connected groupoids to groups, just pick out the automorphisms of the specified object of our groupoid. The groupoid laws require these form a group; such a map is fully faithful by construction and essentially surjective, because any given group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> is the image of a groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">BG</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">BG</span></span></span></span>. If I took a bit more time, I bet I could find a proof that doesn't need choice.</p>\n<p>Shulman outlined a proof earlier finding an equivalence between <em>connected groupoids</em> and <em>groups up to conjugation</em>, though I believe his proof requires choice in an essential way. The moral I'm digesting are that groupoids <em>are different</em> than groups, you need to carefully choose what you mean by both, and what you mean by equivalence, to illustrate their equivalence. So \"a group is a one object groupoid\" is a risky definition because it's evil. </p>\n<p>If I got all of that right. I saw some cool stuff trying to find the definition of a pointed category - like <a href=\"https://ncatlab.org/nlab/show/delooping\">[[delooping]]</a>, or the <a href=\"https://ncatlab.org/nlab/show/delooping+hypothesis\">[[delooping hypothesis]]</a>. For a group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> what exactly is the \"delooping\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">BG</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">BG</span></span></span></span>? I've been thinking of it as a dot to hold the group in its set, but it seems like there's a lot more to the story there.</p>",
        "id": 544088928,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760073669
    },
    {
        "content": "<p>Thanks for straightening this out!  I never really had.  </p>\n<p>The delooping <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">B G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">BG</span></span></span></span> of a group is the corresponding one-object groupoid: the groupoid with one object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span>, one morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mo>∗</mo><mo>→</mo><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">g : \\ast \\to \\ast</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span> for each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g \\in G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>, with composition of morphisms being multiplication in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>.</p>",
        "id": 544121302,
        "sender_full_name": "John Baez",
        "timestamp": 1760087498
    },
    {
        "content": "<p>It has that funny name because it's analogous to a construction in topology that turns a <a href=\"http://en.wikipedia.org/wiki/Loop_space\">loop space</a> into a group.   If you try to understand this you may be forced into understanding that groupoids are 'the same' as certain kinds of topological spaces - a baby warmup for the <a href=\"https://ncatlab.org/nlab/show/homotopy%20hypothesis#for_groupoids\">homotopy hypothesis</a>.   You may or may not want to go down this road now!   It's fascinating and leads very far.</p>",
        "id": 544121506,
        "sender_full_name": "John Baez",
        "timestamp": 1760087567
    },
    {
        "content": "<p>Trying to digest a lot of stuff connected to this - at the moment the name \"simplex\", though appropriate, is feeling comically ironic.</p>\n<p>Working through your website here:<br>\n<a href=\"https://math.ucr.edu/home/baez/calgary/homotopy.html\">https://math.ucr.edu/home/baez/calgary/homotopy.html</a></p>",
        "id": 544871205,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760500332
    },
    {
        "content": "<p>Oh, great!   I could improve those pages a lot, making them easier to understand and better organized - but the items with letters like A, B, C, ... are all really important.</p>",
        "id": 544911386,
        "sender_full_name": "John Baez",
        "timestamp": 1760518515
    },
    {
        "content": "<p>Still processing a ton of information, but I wanted to ask how up to date your article \"categorification\" from 1998 is?</p>\n<p>It's describing a lot of cool context, it seems like you can come down from infinity groupoids to reconstruct a lot of the themes we've talked about and some we haven't - like categorification, delooping, stabilization, monoidal categories and associated ideas like simplicies, operads, geometric realization, etc.</p>\n<p>I think what I'm reading is making sense, but it's a lot of work, so if there's \"newer stuff\" I should look at instead I wanted to double check.</p>",
        "id": 545733043,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760768867
    },
    {
        "content": "<p>A vast amount of work on categorification and its relation to homotopy theory came after that 1998 article.   The article is tough because you're trying to learn a huge amount of math at once.   But most of the newer stuff will be more work to read, I think - for example, nowadays everyone feels compelled to read Lurie's 735-page book, or at least some summary of it. </p>\n<p>You say you're asking for \"newer stuff\", but maybe what you want is a simpler introduction?   Maybe someone here can recommend a good easy modern introduction to homotopy theory and higher categories?</p>",
        "id": 545746265,
        "sender_full_name": "John Baez",
        "timestamp": 1760783701
    },
    {
        "content": "<p>I'm reminded of a viral student quote, 'Professor, is it OK to cite sources from the late 20th century or are they too old?'</p>",
        "id": 545773208,
        "sender_full_name": "Ryan Wisnesky",
        "timestamp": 1760811212
    },
    {
        "content": "<p>I generally feel safe thinking of textbooks as \"settled\", but papers generally are often bleeding edge or have a very particular point of view. So I'm much more cautious when building an understanding around them, even when the researcher is very good. (So \"newer\" probably wasn't the best choice of words. Something like \"in a recent, more settled context\" or \"introductory, but on the same material\" would probably be better phrasings)</p>\n<p>I was caught off guard by the observation many folks read Lurie to resolve my question. After thumbing through it, I saw the definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-category as an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\infty, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-category, and that the whole book was about this special case. I didn't realize \"near state of the art\" was only one step above <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids. That's kinda funny, it's sorta like how categories are one step above sets.</p>\n<p>I guess reprising the theme of this thread. Maybe the most direct way to learn about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids is to learn Homotopy Type Theory then?</p>",
        "id": 545775048,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760813058
    },
    {
        "content": "<blockquote>\n<p>Maybe someone here can recommend a good easy modern introduction to homotopy theory and higher categories?</p>\n</blockquote>\n<p>How about Higher Categories, Higher Operads? It doesn't go into homotopy theory but it does put effort into making higher categories intuitive. Maybe Kerodon for more focused homotopy theory?</p>",
        "id": 545776116,
        "sender_full_name": "Elisha Goldman",
        "timestamp": 1760814137
    },
    {
        "content": "<p>What an adorable mascot!</p>\n<p><a href=\"/user_uploads/21317/qNQt-U4U-GE2npuaZpe34LRR/1000021124\">Guinea Pig!</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/qNQt-U4U-GE2npuaZpe34LRR/1000021124\" title=\"Guinea Pig!\"><img data-original-content-type=\"image/jpeg\" data-original-dimensions=\"1080x981\" src=\"/user_uploads/thumbnail/21317/qNQt-U4U-GE2npuaZpe34LRR/1000021124/840x560.webp\"></a></div><p>(from: <a href=\"https://kerodon.net/\">https://kerodon.net/</a>)</p>",
        "id": 545776820,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760814840
    },
    {
        "content": "<p>Wiki-style textbooks about fields of math with cute mascots are the best nanogenre, there's also one with <a href=\"https://www.clowderproject.com/\">space cats</a>!</p>",
        "id": 545777104,
        "sender_full_name": "Elisha Goldman",
        "timestamp": 1760815095
    },
    {
        "content": "<p>Here's a relevant math.stackexchange question:</p>\n<p><a href=\"https://math.stackexchange.com/questions/1275964/textbooks-on-higher-category-theory\">Textbooks on higher category theory</a></p>\n<p>(Though I want to underscore I'm trying to understand <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids first, because I'm assuming they're easier to understand and more settled than arbitrary weak <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-categories)</p>",
        "id": 545785274,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760825046
    },
    {
        "content": "<p>Trying to understand <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids is approximately the same as trying to understand homotopy theory, since while <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids and homotopy types can each be defined in many (equivalent) ways, they are equivalent to each other. </p>\n<p>There are many ways to start trying to understand them, but the most standard are:</p>\n<ul>\n<li>studying homotopy theory using topological spaces  (and CW complexes)</li>\n<li>studying homotopy theory using simplicial sets (and Kan complexes)</li>\n<li>studying homotopy theory \"synthetically\", as in homotopy type theory.</li>\n</ul>",
        "id": 545787015,
        "sender_full_name": "John Baez",
        "timestamp": 1760827806
    },
    {
        "content": "<p>The table of contents of Strom's book <em><a href=\"https://www.ams.org/books/gsm/127/gsm127-endmatter.pdf\">Modern Classical Homotopy Theory</a></em> looks like a good intro to the first approach.  The first 200 pages would be enough for your purposes.</p>",
        "id": 545787173,
        "sender_full_name": "John Baez",
        "timestamp": 1760828087
    },
    {
        "content": "<p>The first 40 pages are just category theory.</p>",
        "id": 545787283,
        "sender_full_name": "John Baez",
        "timestamp": 1760828253
    },
    {
        "content": "<p>Someone like <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> might know a good gentle introduction to the big picture of simplicial homotopy theory, which is the second of the three approaches I listed.   The <a href=\"https://kerodon.net/tag/0000\">Foundations</a> section of Kerodon covers a lot of the right stuff, but not enough on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids (e.g. Kan complexes) for your purposes, since they're in a rush to get to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\infty,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>-categories.</p>\n<p>And for the third, the <a href=\"https://homotopytypetheory.org/book/\">HoTT book</a> is one obvious candidate.</p>",
        "id": 545787927,
        "sender_full_name": "John Baez",
        "timestamp": 1760829208
    },
    {
        "content": "<p>I recently purchased the HoTT book, I'm impressed with Lulu's print quality!</p>",
        "id": 545788337,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1760829826
    },
    {
        "content": "<p>I suppose the canonical introduction to pure simplicial homotopy theory is Goerss and Jardine's book <em>Simplicial homotopy theory</em>, although I don't know that I'd call it \"gentle\".</p>",
        "id": 545838680,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1760888708
    },
    {
        "content": "<p>I think it's the opposite of gentle.  It's like they left out the first few chapters.</p>",
        "id": 545851449,
        "sender_full_name": "John Baez",
        "timestamp": 1760901655
    },
    {
        "content": "<p>This may be a gap in the literature?  Surely it should be possible to write a gentle introduction to simplicial homotopy theory, but I can't think of one.</p>",
        "id": 546773598,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1761255994
    },
    {
        "content": "<p>Your advisor's book <em><a href=\"https://ncatlab.org/nlab/files/May_SimplicialObjectsInAlgebraicTopology.pdf\">Simplicial Objects in Algebraic Topology</a></em> while very far from gentle, is much more introductory than Goerss and Jardine's.  I found it pretty useful. And while we're talking about introductions to homotopy theory, I feel like adding his book <em><a href=\"https://www.math.uchicago.edu/~may/CONCISE/ConciseRevised.pdf\">A Concise Course in Algebraic Topology</a></em>.    But then I should add Hatcher's <em><a href=\"https://pi.math.cornell.edu/~hatcher/AT/ATpage.html\">Algebraic Topology</a></em>, and the list may keep growing and becoming more diffuse.  The latter two books at least have the advantage of being free (and legal) in LaTeX form.</p>",
        "id": 546777587,
        "sender_full_name": "John Baez",
        "timestamp": 1761258365
    },
    {
        "content": "<p>While they're a bit old, Curtis Edward's notes \"Simplicial Homotopy Theory\" (Advances in Mathematics, 1971) are pretty good. However, they're too terse to be an introduction on their own. There are also notes by Joyal and Tierney \"Notes on simplicial homotopy theory\" which are gentler and might be an on-ramp to some of the other resources mentioned?</p>",
        "id": 547038228,
        "sender_full_name": "daniel gratzer",
        "timestamp": 1761379427
    },
    {
        "content": "<p>Thank you for the book references, I'll chip away at those over time.</p>\n<p>I think I was able to focus my question into definite statements. Are the following correct?</p>\n<p>A groupoid with at most one arrow in each homset, is an equivalence relation; and the delooping of a group is a one object groupoid - therefore a groupoid is a generalization of both \"equalities\" and \"symmetries\".</p>\n<p>In many proof assistants/logics, one internalizes definitional equality into an equality type, which in HoTT is then \"widened\" by the univalence axiom.</p>\n<p>I've called isomorphic objects \"samey\" in the past, because I was afraid to use the word \"equals\"; so I like the precision and tension the univalence axiom touches on. I wanted to \"guess\" what this amounts to before getting into HoTT's details.</p>\n<p>Here's my best guess so far.</p>\n<p>In euclidean geometry, a configuration of lines in the euclidean plane are \"congruent\" to another, if there is an isometry that overlaps one configuration over the other. Some theorems let us show there is only one triangle with side lengths <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1, 2, 3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span> \"up to congruence\". I want to say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1, 2, 3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(3, 1, 2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> are simply \"equal\", but the story is complicated by the existence of symmetrical triangles like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1, 1, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> which would then need to be equal in \"more than one way\".</p>\n<p>But lets say that's okay.</p>\n<p>One way I might try to make this more definite, is by letting figures be functions taking values in homogenous spaces, in the style of <a href=\"https://ncatlab.org/nlab/show/Klein+geometry\">[[Klein geometry]]</a>. I haven't fully thought through the details, but I'm assuming lifting a group action on a homogenous space, to figures in that space, forms a groupoid.</p>\n<p>Real numbers having a notion of equality, an equivalence relation, makes the Reals into a groupoid.</p>\n<p>So if I define a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>area</mtext><mo>:</mo><mtext>Figures</mtext><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\text{area} : \\text{Figures} \\rightarrow \\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord text\"><span class=\"mord\">area</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Figures</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>, for finding the area of such triangles, I'm permitted to think of it as a functor between groupoids. That is, it doesn't exist in just a geometric, or numeric category - <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>area</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{area}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord text\"><span class=\"mord\">area</span></span></span></span></span> being a functor means it satisfies Leibniz's law:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mtext>area</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>area</mtext><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = y \\implies \\text{area}(x) = \\text{area}(y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7194em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">area</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">area</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>Isomorphic figures should map to isomorphic (or equal) areas, which we write as equal elements mapping to equal outputs.</p>\n<p>All of these statements can be translated into statements about paths and homotopies, because groupoids are just <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids, which are just homotopy types.</p>\n<p>Awhile ago, I asked what exactly \"the principle of equivalence\" was, assuming I'd be given some answer intrinsic to the details or facts of category theory, but instead I was told \"it's the definition of what we care about\".</p>\n<p>Our chosen notion of \"sameyness\" for a set, determines \"what it is we care about\".</p>\n<p>So in Euclidean geometry, the important details are whatever gets captured by isometries, rotations, translations and reflections. But in projective geometry, we get to keep whatever details are captured by projective transformations. The point is, if I define a function from some set, with a specified underlying notion of \"equality\" it's implicit that the function should give \"the same\" answer for \"equal\" inputs, but these notions are relative to the space and problem under consideration.</p>\n<p>A much more low brow version of this process is related to quotient constructions. For any set you can establish an equivalence relation (or a groupoid) by giving it a function, and sorting the elements of the domain by what they map to. In some cases, like when defining fractions, you require functions be \"well defined\" by ensuring they give the same answer when evaluated on data that is \"supposed to be the same\". So if we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>↦</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>a</mi><mo separator=\"true\">,</mo><mi>c</mi><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a, b) \\mapsto (ca, cb)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>, we want to write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>a</mi><mi>b</mi></mfrac><mo>=</mo><mfrac><mrow><mi>c</mi><mi>a</mi></mrow><mrow><mi>c</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{a}{b} = \\frac{ca}{cb}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0404em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0404em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> and therefore define all our functions from these in such a way that the equality is respected (which means the equality in the mapped to set  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>c</mi><mi>a</mi></mrow><mrow><mi>c</mi><mi>b</mi></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(\\frac{a}{b}) = f(\\frac{ca}{cb})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.095em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.095em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span> \"isn't empty\").</p>\n<p>Am I getting this right, or are there critical details I'm messing up?</p>",
        "id": 547072957,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761414963
    },
    {
        "content": "<blockquote>\n<p>Awhile ago, I asked what exactly \"the principle of equivalence\" was, assuming I'd be given some answer intrinsic to the details or facts of category theory, but instead I was told \"it's the definition of what we care about\".</p>\n</blockquote>\n<p>But I guess you know that it says we count equivalent categories as the same, so we're mainly interested in properties of categories that are preserved by equivalence, and structures on categories that can be transported along equivalences.</p>",
        "id": 547082046,
        "sender_full_name": "John Baez",
        "timestamp": 1761425545
    },
    {
        "content": "<p>Right, so if we establish that two categories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> are equivalent, if we're very careful with what we mean by \"=\", then we can write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C = D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> understanding it implies <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(C) = F(D)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span> for any 2-Functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> between 2-groupoids (I hope I got the levels right).</p>\n<p>So 2-functoriality is a form of Leibniz's law, or \"indiscernibility of identicals\". Which is how we define properties, or structures, common to equivalent categories.</p>\n<p>Just like how <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>area</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{area}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord text\"><span class=\"mord\">area</span></span></span></span></span> gives the same answer for isomorphic geometric configurations.</p>\n<p>(I hope the following usage of core is right)</p>\n<p>So maybe <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Conn</mtext><mo>:</mo><mtext>core</mtext><mo stretchy=\"false\">(</mo><mtext>Cat</mtext><mo stretchy=\"false\">)</mo><mo>→</mo><mtext>core</mtext><mo stretchy=\"false\">(</mo><mtext>Set</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Conn} :\\text{core}(\\text{Cat}) \\rightarrow \\text{core}(\\text{Set})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Conn</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">core</span></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">Cat</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">core</span></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">Set</span></span><span class=\"mclose\">)</span></span></span></span>, could send a category to a set of connected components, with bijections as the default notion of \"equality\" for Set.</p>\n<p>Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C = D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> with \"=\" meaning \"equivalence\" would get mapped to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Conn</mtext><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>Conn</mtext><mo stretchy=\"false\">(</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Conn}(C) = \\text{Conn}(D)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Conn</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Conn</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span> with \"=\" meaning \"bijection\".</p>",
        "id": 547083146,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761427069
    },
    {
        "content": "<p>I guess there's one extra subtlety sneaking through, that presumably the choice of equivalence would be part of the data used to calculate the resulting bijection. Which maybe is the point of your clarification.</p>",
        "id": 547083231,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761427191
    },
    {
        "content": "<p>Everything you said is right.  Certainly the choice of equivalence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>C</mi><mo>≅</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">f: C \\cong D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> affects the choice of bijection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Conn</mtext><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mtext>Conn</mtext><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mtext>Conn</mtext><mo stretchy=\"false\">(</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Conn}(f): \\text{Conn}(C) \\to \\text{Conn}(D)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Conn</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Conn</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Conn</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span>.   </p>\n<p>I think homotopy type theorists started out being rather gung-ho about saying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C = D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> to indicate that there is an equivalence from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, based on the univalence axiom, but then attitudes changed.  I'm not sure - I'm not a homotopy type theorist, so I'm probably getting the details wrong. But personally I don't write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span></span></span></span> for equivalence.</p>",
        "id": 547084392,
        "sender_full_name": "John Baez",
        "timestamp": 1761428652
    },
    {
        "content": "<p>I'm curious what <span class=\"user-mention\" data-user-id=\"278546\">@Chris Grossack (she/they)</span> or others think about my usage of equality in the above couple messages</p>",
        "id": 547093045,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761440978
    },
    {
        "content": "<p>I personally am completely comfortable with uses of equality like that.  I often use different symbols for bijection or categorical equivalence or weak homotopy equivalence, but that is primarily because there are multiple notions of \"equality\" in play (e.g. judgmental equality in a type theory) or to help prevent level slips.</p>",
        "id": 547094601,
        "sender_full_name": "James Deikun",
        "timestamp": 1761443204
    },
    {
        "content": "<p>Btw, I don't care what symbols people use as long as I understand what they mean.   I'm just old-fashioned: I date to the era where distinguishing between equality, isomorphism and equivalence of categories was an important moral message.   Youngsters for whom it's obvious that equivalence is all you'd ever talk about don't need to do this.  They do however need to distinguish the <em>existence</em> of an equivalence from a <em>chosen</em> equivalence.</p>",
        "id": 547118999,
        "sender_full_name": "John Baez",
        "timestamp": 1761473745
    },
    {
        "content": "<p>Existence vs chosen existence is definitely confusing me in more places than just here.</p>\n<p>Regarding using the equality everywhere, I think the issue is somewhat confused by HoTT being a sort of programming language, and the way it \"reuses\" the equality symbol is fancy. On a computer the type system could enforce correct usage and tell the user which type the equality belonged to. In common situations on paper, it's easy to write the various possibilities and they help a reader.</p>\n<p>But there was also a more subtle technical observation. The univalence axiom says something like \"every abstract usage of <em>the internalized</em> equality, can be safely substituted with whatever notion of equivalence you prefer.\" Which is something that can be false. But if it were true, now theorems for logic's take on equality generalize to equivalence.</p>\n<p>So part of my excitement was noticing the intuitive phrase \"the same\" being sharpened into a formal/logical \"equality\" which rigorously subsumed \"equivalence\". The stage was set for \"equality\" to be more than a proposition, and univalence made it happen.</p>\n<p>It sounds like my informal explanation was honest to this technical slight of hand, and that it'd be safe for me to work through more technical proofs.</p>",
        "id": 547137319,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761490974
    },
    {
        "content": "<p>I'm also young enough to be very happy with writing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span></span></span></span> to mean equivalence in any <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-category (this includes isomorphism in a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>-category as a special case), because I've internalized the idea that \"equality on objects doesn't make sense\" for (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-)groupoids. So I'll add to the chorus of people who are happy with what you've written.</p>",
        "id": 547141849,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761495030
    },
    {
        "content": "<p>I also agree that our notion of \"sameness\" affects what we care about for exactly the reason you mentioned, going back to Klein's Erlangenprogram. I would say moreover (and possibly you said this and I missed it) that you can go the other way! Once you've decided on some important invariants, you might look for a notion of \"sameness\" that is compatible with those invariants</p>",
        "id": 547141982,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761495160
    },
    {
        "content": "<p>For example, one family of very important invariants for a topological space are its homotopy groups. These are <em>so</em> central that you might imagine wanting to define \"sameness\" to mean \"has the same homotopy groups\". This turns out to be a bad idea for the same reason we don't say two triangles are congruent if they have the same area! We need some transformation that <em>compares</em> the two triangles. Similarly, we end up wanting two spaces <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> to be \"the same\" if there's a transformation (read: function) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f : X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> (which will become an isomorphism) which moreover gives isomorphisms on all homotopy groups.</p>",
        "id": 547142202,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761495359
    },
    {
        "content": "<p>Now it turns out to be difficult to determine in advance if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> has this nice property, but there's a sufficient condition that happens to be necessary for nice enough spaces! In favorable cases, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">f : X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> gives isomorphisms on all homotopy groups if and only if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> has a homotopy inverse <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">g : Y \\to X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>! This is fantastic, and simplifies the story dramatically. So if we restrict attention to \"nice\" spaces and (in a slightly subtle way) quotient out by the equivalence relation \"homotopic maps should be equal\", then we get exactly the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-category of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids (read: homotopy types, anima, \"spaces\", etc.)</p>",
        "id": 547142668,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761495851
    },
    {
        "content": "<p>This turns out to be a very very useful notion, and the whole of homotopy theory is named after it. Moreover, this is where the story connects back to the question of \"equality\", \"isomorphism\", and \"equivalence\"!</p>",
        "id": 547142785,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761495949
    },
    {
        "content": "<p>In a very precise way (see: <a href=\"https://ncatlab.org/nlab/show/nerve\">[[nerve]]</a>) we can show that</p>\n<ul>\n<li>isomorphism of categories is like homeomorphism of topological spaces</li>\n<li>equivalence of categories is like homotopy equivalence of topological spaces</li>\n</ul>\n<p>and just like many of the most useful invariants of topological spaces can be defined on their homotopy class, we see that many of the most useful invariants of categories can be defined at the level of equivalence.</p>",
        "id": 547143056,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761496181
    },
    {
        "content": "<p>There are still reasons to consider \"strict categories\", which have a notion of equality on objects and whose correct notion of \"sameness\" is isomorphism, but experience shows that working up to equivalence is usually what we want to do. For one, this lets us prove theorems that match our intuition (eg. the categories of matrices and of linear maps between finite dimensional vector spaces are equivalent)</p>",
        "id": 547143243,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761496352
    },
    {
        "content": "<p>One price we pay is that we <em>can't talk about</em> the underlying <em>set</em> of objects of a category, or ask questions about which objects are \"equal\" -- when working up to homotopy this doesn't make sense for the same reason that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> is homotopy equivalent to a point, so their underlying sets are very very different... But this \"price\" turns out to be a benefit in disguise! By only knowing the underlying <em>groupoid</em> (considered up to homotopy) of objects, the \"<a href=\"https://ncatlab.org/nlab/show/generalized%20the\">[[generalized the]]</a>\" is made precise. After all, there might be multiple terminal objects (etc.) but we're only supposed to talk about the <em>groupoid</em> of such things, and if that groupoid is equivalent to the terminal groupoid with one object and only the identity arrow, then we might as well say there's only one terminal object!</p>",
        "id": 547143601,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761496693
    },
    {
        "content": "<p>Hopefully this was helpful! I have some things to say about \"an equivalence existing\" vs \"choosing an equivalence\", but my parents are visiting and I should hang out with them. I'll say more soon if nobody beats me to it!</p>",
        "id": 547143645,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1761496741
    },
    {
        "content": "<p>Thank you! Enjoy the time with your parents.</p>\n<p>I appreciate you clarifying that using the equality notation for equivalence amounts to insisting I won't use said notation for propositional equality when \"it doesn't make sense\".</p>\n<p>Which is an easy mistake to make because we're so used to thinking of categories strictly.</p>\n<p>Your proof sketch about homotopy group preservation being equivalent to homotopy invertibility also reminded me of arguments showing that maps which preserve distance must be invertible. I hadn't internalized that as defining automorphisms by the properties they preserve.</p>\n<p>Thank you for your detailed answer, it seems to make sense to me, and interacts with all the various pieces I was trying to understand above. I'll spend a bit of time thinking about it, again thank you!</p>",
        "id": 547144140,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761497299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/Groupoids.20-.20How.20are.20things.20the.20same.20but.20different.3F/near/547084392\">said</a>:</p>\n<blockquote>\n<p>I think homotopy type theorists started out being rather gung-ho about saying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C = D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> to indicate that there is an equivalence from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, based on the univalence axiom, but then attitudes changed.</p>\n</blockquote>\n<p>This is interesting.  It does seem to me also that even homotopy type theorists rarely write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span></span></span></span> to mean equivalence.  Personally, I think the main reason for that is that up until now, they've been using formal systems that basically force you to distinguish equality of types from equivalence of types, despite the univalence axiom.</p>\n<p>Specifically, in Book HoTT and in Cubical Type Theory, while you can make an equivalence of types <em>into</em> an equality of types, the resulting equality only remembers the equivalence you started from up to homotopy.  This is seriously annoying, so people working in those systems tend to stick with equivalences of types and only make them into equalities when they're forced to apply univalence for some specific purpose.</p>\n<p>Improving this situation is one of the motivations behind Higher Observational Type Theory.  This system has what I call \"definitional univalence\": if you make an equivalence into an equality of types, the equality remembers exactly at least the two functions underlying the equivalence, not just up to homotopy.  I hope and conjecture that when using H.O.T.T. it should be more feasible to actually <em>use</em> equalities of types everywhere instead of equivalences, and as this becomes more common, homotopy type theorists will get more comfortable writing \"=\" for equivalences.</p>",
        "id": 547192693,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1761543719
    },
    {
        "content": "<p>My takeaway is the axiom is deeper than just a notational convenience, because it can be essential. And that my understanding was the intended goal but, like Baez said, there's some technical fuss in the way of that dream.</p>\n<p>So I was backwards. At least for the moment, equality everywhere is easier on paper <span aria-label=\"relieved\" class=\"emoji emoji-1f60c\" role=\"img\" title=\"relieved\">:relieved:</span></p>",
        "id": 547194791,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761545009
    },
    {
        "content": "<p>I didn't say any of this stuff was \"technical fuss\".    I'd say we're talking about important conceptual stuff here: questions about words like \"is\" and \"the same\".   I say something is \"technical fuss\" if it's the equivalent of trying to find the right kind of USB port to stick into something - boring, but you have to do it correctly or you get in trouble.  What we're talking about here is more like philosophy, but incarnated in mathematics.</p>",
        "id": 547331918,
        "sender_full_name": "John Baez",
        "timestamp": 1761584931
    },
    {
        "content": "<p>Sorry! You're right I misrepresented what you said.</p>\n<p>I was just trying to acknowledge you were right to suspect Homotopy Type theorists weren't blanketly using equality for equivalence.</p>\n<p>I internalized Shulman's point to be that it was still the goal to make it possible for Homotopy type theorists to use equality everywhere, but it didn't quite work today for what sounded like (to me) fussy reasons.</p>\n<p>This is an aside, but I'm shocked to what extent programming language issues are analogous to philosophical problems. Equality in normal software is a mess, HoTT's general approach feels <em>much</em> better than what's typical.</p>",
        "id": 547333901,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761585494
    },
    {
        "content": "<p>You know, I might go so far as to suggest your USB example might have some connection to this conversation.</p>\n<p>I've argued to folks we're being too careless, because we're treating different usb devices as if they were \"the same\" by making our ports too permissive.</p>",
        "id": 547339658,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761587228
    },
    {
        "content": "<p>Well, it would hardly work to have different ports for every possible device! A USB port is an interface; the whole idea is that many different kinds of systems can have the same interface. Without that principle, you can't have any modularity in your engineering; every system has to be grown as an organic whole.</p>",
        "id": 547344432,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1761588783
    },
    {
        "content": "<p>I don't want to get too hung up on this in this thread. But I have a drawing tablet with a USB-C port on the tablet that expands into 4 distinct out ports, so you still have to buy a dedicated cable which defeats the point there. Apple's lightning USB-C cables are off standard I believe? I had to navigate whether they borked preamps I was considering buying.</p>\n<p>Somehow there's tension between how much power the cable should support, and how much data. That has to be balanced against the power and data device <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> needs vs how much power and data device <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> can supply, or vice versa.</p>\n<p>Of course you need some standard, I'm not against standards, what I'm saying is I've playfully thought about \"static type disciplines\" for ports. And now that Baez brought it up as a point of comparison, I wonder how much this question amounts to deciding when two ports should be considered isomorphic.</p>",
        "id": 547346001,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761589326
    },
    {
        "content": "<p>It's funny when I tried to explain my intuition about this to a friend they trolled me with this video:</p>\n<p>(Replace everything with USB-C)<br>\n<a href=\"https://youtu.be/At0KjsYMsi0?si=49ZTMJZ6MuvWpKx1\">https://youtu.be/At0KjsYMsi0?si=49ZTMJZ6MuvWpKx1</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"At0KjsYMsi0\" href=\"https://youtu.be/At0KjsYMsi0?si=49ZTMJZ6MuvWpKx1\"><img src=\"https://uploads.zulipusercontent.net/432e4385993c195747f692d019ae554eda84a91a/68747470733a2f2f692e7974696d672e636f6d2f76692f4174304b6a73594d7369302f6d7164656661756c742e6a7067\"></a></div>",
        "id": 547347183,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761589772
    },
    {
        "content": "<p>It'd be like if in the \"cooperative design\" paper that uses Profunctors, if everywhere they used power they replaced it with \"USB-C\" and put \"?\" for the weight.</p>",
        "id": 547347576,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761589905
    },
    {
        "content": "<p>I watched this lecture by Shulman: <a href=\"https://youtu.be/xx9Y3-WJs4Y?si=mPbkGWJrPj4-0lxi\">https://youtu.be/xx9Y3-WJs4Y?si=mPbkGWJrPj4-0lxi</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"xx9Y3-WJs4Y\" href=\"https://youtu.be/xx9Y3-WJs4Y?si=mPbkGWJrPj4-0lxi\"><img src=\"https://uploads.zulipusercontent.net/e3a35dd2a62ad1549028c80853791c591cbdfc46/68747470733a2f2f692e7974696d672e636f6d2f76692f78783959332d574a7334592f6d7164656661756c742e6a7067\"></a></div><p>It clarified to me that \"Book HoTT\" doesn't have canonicity and in particular doesn't have a computational interpretation, and that Cubical HoTT, although it has canonicity it does so at the price of manually adding higher combinatorial structure. Motivating Shulman's work on Higher Observational Type Theory. Which hopefully will keep convenient uses of univalence and still have a computational interpretation.</p>\n<p>So what I referred to as a \"fussy inconvenience\" is a pretty serious issue in this setting.</p>",
        "id": 547388636,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1761608404
    }
]