[
    {
        "content": "<p>There is a game with \"a notion of composition\" that I've been trying to understand with category theory for awhile called \"Black's Path Game\"</p>\n<p>In this game you have three tiles with paths:<a href=\"/user_uploads/21317/m1bySb3K6ZXfs4BhqU27gWKR/Square_02_12-34.svg.png\">Square_(02)_12-34.svg.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/m1bySb3K6ZXfs4BhqU27gWKR/Square_02_12-34.svg.png\" title=\"Square_(02)_12-34.svg.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"240x240\" src=\"/user_uploads/thumbnail/21317/m1bySb3K6ZXfs4BhqU27gWKR/Square_02_12-34.svg.png/840x560.webp\"></a></div><p><a href=\"/user_uploads/21317/tOAaV5ZxUu9daQsQeBDjP1YM/Square_02_14-23.svg.png\">Square_(02)_14-23.svg.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/tOAaV5ZxUu9daQsQeBDjP1YM/Square_02_14-23.svg.png\" title=\"Square_(02)_14-23.svg.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"240x240\" src=\"/user_uploads/thumbnail/21317/tOAaV5ZxUu9daQsQeBDjP1YM/Square_02_14-23.svg.png/840x560.webp\"></a></div><p><a href=\"/user_uploads/21317/D6zarFazjha6uDl7zS2Yh61v/Square_20_13-24.svg.png\">Square_(20)_13-24.svg.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/D6zarFazjha6uDl7zS2Yh61v/Square_20_13-24.svg.png\" title=\"Square_(20)_13-24.svg.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"240x240\" src=\"/user_uploads/thumbnail/21317/D6zarFazjha6uDl7zS2Yh61v/Square_20_13-24.svg.png/840x560.webp\"></a></div><p>Players alternate placing tiles on the board, connecting them to tiles that have already been placed down. The first person to place a tile that connects a path between two edges of the board loses.</p>\n<p>There are a ton of variations on this basic idea, a simple one mentioned by the Wikipedia article, generates art by randomly tiling with two of the tiles:<br>\n<a href=\"/user_uploads/21317/At8r-ENjYBMDmnXF47M_39xx/Screenshot_20250827_113740_Chrome.jpg\">Screenshot_20250827_113740_Chrome.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/At8r-ENjYBMDmnXF47M_39xx/Screenshot_20250827_113740_Chrome.jpg\" title=\"Screenshot_20250827_113740_Chrome.jpg\"><img data-original-content-type=\"image/jpeg\" data-original-dimensions=\"1044x1067\" src=\"/user_uploads/thumbnail/21317/At8r-ENjYBMDmnXF47M_39xx/Screenshot_20250827_113740_Chrome.jpg/840x560.webp\"></a></div><p>I'm part of the way through trying to understand operads for modeling circuit diagrams and open dynamical systems. I once considered trying to use operads for modeling these tiles, but after playing with them for a bit decided they were too flexible. Recently while trying to understand \"compositionality\" I found Baez suggest <a href=\"https://golem.ph.utexas.edu/category/2018/05/compositionality.html\">here</a> this should bring to mind functorial semantics, monoidal functors, and operad algebras. </p>\n<p>So I figured maybe I discounted operads to soon. If they capture \"n-ary\" multiplication maybe they're the right tool for the job. But I'm not sure how to proceed with them if they are the right tool.</p>\n<p>What do folks think? As a first impression do operads seem like a good way to model the board state for \"Black's Path Game\"? Or are there other categorical gadgets that could be more appropriate?</p>",
        "id": 536480538,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756321039
    },
    {
        "content": "<p>The one dimensional version doesn't seem too bad to me, you have the freely generated monoid on two generators (imagine two horizontal paths that either do or don't flip). Then the last person to move, filling the board, loses. So the game is just Nim. So it didn't seem too out of reach to come up with a \"two dimensional\" multiplication, but I'm not sure.</p>",
        "id": 536482906,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756322005
    },
    {
        "content": "<p>Another idea I've been playing with that I see as connected to this, is I'll imagine a \"2D free monoid generated over {x, y, z}\"</p>\n<p>So one element might be:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>      y\nx y y z x\n  z x   z\n</code></pre></div>\n<p>And then a homomorphism would replace the generators with elements that can also be composed in this grid aware way. So if I choose which of the above tiles correspond to each generator, the output of the map would be the tile board state. Or I could map to a different tiling game, like <a href=\"https://en.m.wikipedia.org/wiki/Tsuro\">Tsuro</a></p>",
        "id": 536498592,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756330095
    },
    {
        "content": "<p>It seems like \"compose\" means \"place side by side\" (along some axis) here. If so, how do you decide where exactly to place the 2D monoid elements you described above? As a simple example, if I take xx and y, even if I decide that the grids have to be connected I have 6 ways to compose these (assuming only relative positions in the grid matter).<br>\nAn operad would be more obviously applicable if the composition was instead a kind of \"substitution\", where a tile is replaced with a grid. While it might be possible to argue that such structure is applicable here with some clever grid transformations, it doesn't feel to me like it corresponds to actually playing the games you describe.</p>",
        "id": 536525812,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1756352664
    },
    {
        "content": "<p>That reminds me of a nested tic tac toe game concept I've seen people play occasionally (you have to win tic tac toe in a square to win that square.</p>\n<p>Anyways thank you, that answer actually really helps me understand operads a lot better, which was a motivating goal for sharing this.</p>\n<p>Now that I actually wrote out what I'm trying to play with here maybe it'll help me get more ideas.</p>\n<p>I want gluing tiles to be a sort of push out, if their edges match you simply glue them and the paths together. But you can't always \"multiply\" along one edge - sometimes you need to do two or three, which makes it weirder.</p>\n<p>If I let myself place the tiles in a grid, then it's a lot easier, it's just an array of the tiles and null spots, and each tile added, except the first, has at least one neighbor. But I dunno, it seems to me like \"2D adjoining\" could be a really fun primitive to figure out.</p>",
        "id": 536527330,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756354077
    },
    {
        "content": "<p>Wait, so does my \"free monoid\" example not make sense then, or is suggesting a borked interpretation?</p>\n<p>It being a \"free monoid\" suggests it should be legal to replace an x with some sub expression right? Because if I'm thinking of this as an algebra, shouldn't that be legal?</p>\n<p>Maybe I'm confusing myself by trying to think of it as an algebra, because algebras/languages want to be arbitrarily recursive, but I'm trying to understand tiling paths, which maybe aren't?</p>",
        "id": 536539135,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756362802
    },
    {
        "content": "<p>I don't see how an operad or a 2-category or a double category are fully able to formalize your game - basically, there's too much geometry involved in your game, because you're interested in gluing together squares to form regions in the plane.</p>\n<p>If you were only interested in gluing together squares to form larger <em>rectangles</em>, then double category theory would be perfect for your question!   You'd then be discussing the free strict double category on one object, one vertical arrow, one horizontal arrow, and three 2-morphisms.   (Or maybe more 2-morphisms if we're allowed to rotate your squares.)</p>\n<p>If I were you, you would be willing to adjust your focus slightly to make it fit into the subject of double category theory.   There's already been work on double categories and tilings, by Robert Dawson.</p>",
        "id": 536556318,
        "sender_full_name": "John Baez",
        "timestamp": 1756370085
    },
    {
        "content": "<p>Thank you for mentioning Dawson, his papers look extremely relevant. Especially for the Truchet tilings, the procedurally generated art.</p>\n<p>I guess now I know why most painting's canvases are rectangles! /Joke</p>\n<p>It's satisfying knowing that stuff like the following \"pinwheel\" from Dawson's paper, are a nuisance in this abstract setting:</p>\n<p><a href=\"/user_uploads/21317/xnF7q9KMZb3t5uvUQkbgQOME/Screenshot_20250828_085920_Chrome.jpg\">Screenshot_20250828_085920_Chrome.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/xnF7q9KMZb3t5uvUQkbgQOME/Screenshot_20250828_085920_Chrome.jpg\" title=\"Screenshot_20250828_085920_Chrome.jpg\"><img data-original-content-type=\"image/jpeg\" data-original-dimensions=\"1080x1092\" src=\"/user_uploads/thumbnail/21317/xnF7q9KMZb3t5uvUQkbgQOME/Screenshot_20250828_085920_Chrome.jpg/840x560.webp\"></a></div><p>Another example in the back of my mind are <a href=\"https://en.m.wikipedia.org/wiki/Kolam\">Kolam tiles</a>. I think the rectangle requirement is modest enough, we don't have to rule them out:</p>\n<p><a href=\"/user_uploads/21317/ngp8KUId_J55RokY2dId-PUj/Kolam-tile-example.jpg\">Kolam tile example.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/ngp8KUId_J55RokY2dId-PUj/Kolam-tile-example.jpg\" title=\"Kolam tile example.jpg\"><img data-original-content-type=\"image/jpeg\" data-original-dimensions=\"3000x4000\" src=\"/user_uploads/thumbnail/21317/ngp8KUId_J55RokY2dId-PUj/Kolam-tile-example.jpg/840x560.webp\"></a></div><p><a href=\"/user_uploads/21317/dM-OvxSonX1haX5oZpQoGKXV/Kolam-Tile-Rules.jpg\">Kolam Tile Rules.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/dM-OvxSonX1haX5oZpQoGKXV/Kolam-Tile-Rules.jpg\" title=\"Kolam Tile Rules.jpg\"><img data-original-content-type=\"image/jpeg\" data-original-dimensions=\"3000x4000\" src=\"/user_uploads/thumbnail/21317/dM-OvxSonX1haX5oZpQoGKXV/Kolam-Tile-Rules.jpg/840x560.webp\"></a></div><p>They even allow closed tiles, as circles, in the official rules so I can always fill in gaps. That's funny that works.</p>\n<p>I guess I'll say one last thing about the game as I change focus.</p>\n<p>We imagine starting with one tile, which has four edges for a new tile.</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>  *\n* T *\n  *\n</code></pre></div>\n<p>Adding a new tile lays down an asterisk on each side without a T or an asterisk, so if we added a tile on the right we'd get</p>\n<div class=\"codehilite\" data-code-language=\"tile\"><pre><span></span><code>  * *\n* T T *\n  * *\n</code></pre></div>\n<p>I think this can be made into an efficient algorithm for representing a sparse tile \"composition\". But the algorithms coming to my mind don't seem \"categorical\". Most of the algorithmic work I can come up with involves juggling properties of elements.</p>\n<p>When Bartosz taught me category theory he played up how it was about \"composition\". This seems like an okay slogan, but not a bullet proof intuition. It gets my head <em>close</em> to the right ideas, but I'm not getting anything for free.</p>",
        "id": 536649655,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756400395
    },
    {
        "content": "<p>If you like, you could see a tile configuration as having four composition surfaces (this is a different, less rectangular way to turn them into a double category). The downside is that this only keeps track of the outer edges, so you can't meaningfully keep track of any operation for plugging holes without some higher-dimensional data.</p>",
        "id": 536797039,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1756476540
    },
    {
        "content": "<p>The way you're thinking about that, are you imagining the \"left edge\" of some configuration is a sort of path, and we can glue this to a \"right edge\" of a different tile configuration if one path is a sub-path of the other, or do the paths have to be the same? (Or am I missing what you're trying to do? What's a \"composition surface\"?)</p>",
        "id": 536814774,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756481769
    },
    {
        "content": "<p>If you're going for a double category those paths have to be <em>equal</em>: 2-morphisms compose when the target of one <em>equals</em> the source of the other.   So you can't just have one path be merely sub-path of another, unless you're willing to use an extra trick, which this screen is too narrow to contain.   It's probably best to start by going along with what's mathematically easy, instead of fighting against it.</p>\n<p>By 'composition surface' Morgan surely doesn't mean a 2-dimensional surface.  He's saying you can take a tiled region without holes in it and subdivide its boundary into four paths, which (going counterclockwise) you call the 'top', 'left', 'bottom' and 'right' even though they can snake around in quite complicated ways.</p>\n<p>At least that's my reading of his remark.</p>",
        "id": 536823923,
        "sender_full_name": "John Baez",
        "timestamp": 1756484753
    },
    {
        "content": "<p>Okay, that makes sense. That was my read as well. That is an interesting generalization, but it still doesn't permit adding one tile to a larger configuration, so I was making sure I didn't misunderstand. It's very similar to the rectangle example (though it breaks my rectangular canvas joke!)</p>\n<p>Which is fine, I'm just trying to get a feeling for what is and isn't natural. I had a feeling \"adding one tile\" was a forced fit at the 2-category level, but I wasn't sure. It's cool combining rectangles (and jagged regions) works and is natural, that's news to me.</p>\n<p>Category theory seems to \"want\" to be topological and I'm curious how much I can push back against that. I'll see Lego blocks brought up as a metaphor or analogy occasionally for example, but the metaphor feels forced. The rectangle composition double category makes this analogy seem much less forced.</p>\n<p>I guess another angle on this I've thought about some, is the topos of graphs is often explained as the free cocompletions of edges and verticies. In this tiling vein I considered adding squares to that and wondered if I could restrict how the completion process worked by specifying a more restricted category than Set or something.</p>\n<p>But that felt like working against the subject, like \"degenerate\" graphs actually help you do useful stuff.</p>",
        "id": 536828975,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756486634
    },
    {
        "content": "<blockquote>\n<p>That is an interesting generalization, but it still doesn't permit adding one tile to a larger configuration.</p>\n</blockquote>\n<p>It does if one of the four paths in the larger configuration has just a single edge.</p>",
        "id": 536829456,
        "sender_full_name": "John Baez",
        "timestamp": 1756486811
    },
    {
        "content": "<blockquote>\n<p>I had a feeling \"adding one tile\" was a forced fit at the 2-category level, but I wasn't sure.</p>\n</blockquote>\n<p>We're talking about double categories now, not 2-categories.  At least I didn't notice anyone mentioning 2-categories until you did right now.</p>",
        "id": 536829589,
        "sender_full_name": "John Baez",
        "timestamp": 1756486865
    },
    {
        "content": "<p>Sorry, 2-categories and double categories are both in my head as \"two dimensional\" is this a conflation?  That's why I misspoke in any case.</p>\n<p>Once you decide the boundary types of your four edges for a given configuration you're stuck with that right? So there is one jagged \"visual\" arrangement with multiple ways to equip it with four distinct paths? So if your configuration doesn't have any one edge length path, then you can't add a single tile?</p>",
        "id": 536832660,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756488111
    },
    {
        "content": "<p>(I don't want to get in the weeds in these examples, ya'll have given plenty of examples of double categories to think about now, I'll play with them more so I can be more definite and careful with what I say)</p>",
        "id": 536836745,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756489819
    },
    {
        "content": "<blockquote>\n<p>Sorry, 2-categories and double categories are both in my head as \"two dimensional\" is this a conflation?</p>\n</blockquote>\n<p>They're both 2-dimensional, but they're different.   Double categories are fundamentally about squares, while 2-categories are about bigons.   </p>\n<blockquote>\n<p>Once you decide the boundary types of your four edges for a given configuration you're stuck with that right?</p>\n</blockquote>\n<p>Well, you are unless you decide to introduce some math that lets you change your mind about how much of the boundary of your tiling is included in each of the four edges!    You may want to work with double categories that have features that let you change your mind.  </p>\n<p>For example you might want to work with 'symmetric' strict double categories, meaning those where the category of vertical arrows is fundamentally the same as the category of horizontal arrows.  At that point maybe you want to use a 2-category, or maybe a 2-category where the 1-morphisms are invertible.</p>\n<p>This could become a research project, and as long as you have some good examples and do a good job in formalizing them, you might come up with some nice new math.   </p>\n<p>Or maybe someone has already done all this.   A one-minute search turns up </p>\n<ul>\n<li>Ronnie Brown and Ghafar Mosa, <a href=\"http://www.tac.mta.ca/tac/volumes/1999/n7/n7.pdf\">Double categories, 2-categories, thin structures and connections</a>.</li>\n</ul>\n<p>which probably <em>doesn't</em> solve your problems for you, but <em>does</em> describes some of the extra bells and whistles people have considered for double categories.  Some of these are relevant to what we're talking about.</p>",
        "id": 536839102,
        "sender_full_name": "John Baez",
        "timestamp": 1756490770
    },
    {
        "content": "<p>That is encouraging, thanks for sharing that context</p>",
        "id": 536839635,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756491001
    },
    {
        "content": "<p>Sure!   Brown and Dawson have written a lot of stuff that comes to mind, vaguely, when I think about the issues you're raising.   But I forget most of the details.</p>",
        "id": 536839936,
        "sender_full_name": "John Baez",
        "timestamp": 1756491132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277352\">@Alex Kreitzberg</span> have you thought about monoidal categories before? If I have an arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">f: A\\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and an arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>⊗</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">B \\otimes C \\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, these aren't composable <em>but</em> I can compose the latter with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>⊗</mo><msub><mrow><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">d</mi></mrow><mi>C</mi></msub></mrow><annotation encoding=\"application/x-tex\">f \\otimes \\mathrm{id}_C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">id</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> a similar kind of padding could allow you to add a single tile to a larger configuration in two dimensions, although there are lots of details you would need to figure out.</p>",
        "id": 536903700,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1756547628
    },
    {
        "content": "<p>I have but I clearly need to think about them more! In a very vague sense I interpreted Baez's comment as implying I needed to add the analogs of \"unitors\", \"associators\", etc to a double category.</p>\n<p>I definitely don't have an intuition for what's convenient or possible in this respect. Which in retrospect is why I had the impression one couldn't always add individual tiles.</p>",
        "id": 536904457,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756548598
    },
    {
        "content": "<p>No, that's not what I meant.  I meant adding some features to a double category that would help solve your problem: for example, a feature that could change a square with top equal to fg and right side equal to h to a square with top equal to f and right side equal to gh... in a reversible way.   </p>\n<p>This sort of thing makes the four points where you chop up the boundary of your patch of tiles movable, solving your problem of not being able to add individual tiles.</p>\n<p>You were correct that in the double category framework you can't in general add individual tiles to a large patch of tiles without some extra trick like this.</p>",
        "id": 536915247,
        "sender_full_name": "John Baez",
        "timestamp": 1756560846
    },
    {
        "content": "<p>Oh! Is that something \"connections\", from the paper you linked, would make easier or possible?</p>",
        "id": 536927510,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756573521
    },
    {
        "content": "<p>Mainly connections let you turn vertical arrows into horizontal ones and vice versa, which is just <em>part</em> of what you're demanding.    Connections may help you a bit, but it may be faster for you to just make up the desired structure from scratch.   I mainly recommended connections to you so you can see how people introduce extra structures of this general sort on double categories.</p>\n<p>I believe the structure you want is the ability to change a square with top equal to fg and right side equal to h to a square with top equal to f and right side equal to gh... in a reversible way... and similarly with the words \"bottom\" and \"left\", \"left\" and \"top\", or \"right\" and \"bottom\" replacing \"top\" and \"right\".</p>\n<p>If I were you (or technically: if you were me) I'd start by:</p>\n<p>1) clearly specifying some examples of what I'm trying to axiomatize,<br>\n2) writing down the axioms that capture what's going on in these examples.</p>\n<p>The resulting axioms may look a bit clunky, but in consultation with practicing category theorists, double category theorists, and 2-category theorists you may be able to make them look nicer.</p>\n<p>In fact, come to think of it, I might start by writing down axioms that don't mention double categories at all, because the insistence that your region have a boundary subdivided into four parts (arbitrarily called top, right, botttom and left), fundamental to double category theory, is not so important to you.</p>",
        "id": 536970295,
        "sender_full_name": "John Baez",
        "timestamp": 1756632183
    },
    {
        "content": "<p>Okay thank you, you've provided plenty of stuff to get me started, I'll try and axiomatize some of these examples.</p>\n<p>I think the main motivation for framing everything in category theory, is these tiles have paths on them. So I'm hoping after everything is in its proper place I'll have functors, or some structure preserving map, taking the tile configurations to path configurations.</p>",
        "id": 536985415,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1756649020
    }
]