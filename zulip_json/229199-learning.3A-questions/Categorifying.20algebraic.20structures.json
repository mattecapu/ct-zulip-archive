[
    {
        "content": "<p>Can someone teach me a systematic recipe for starting from an arbitrary algebraic structure and categorifying it so that a single object category with the categorified equipment recovers the original algebraic structure, and a newly specified family of functor with some additional equipment corresponds to homomorphisms of the original algebraic structure?</p>",
        "id": 194596255,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587300756
    },
    {
        "content": "<p>I don't believe a systematic procedure for horizontal categorification has been worked out. However, many kinds of horizontal categorification correspond to some kind of enrichment in a vertical categorification of the corresponding structure.</p>",
        "id": 194596482,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301105
    },
    {
        "content": "<p>Do you think such a procedure can exist, or are there theoretical problems with that?</p>",
        "id": 194596497,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301153
    },
    {
        "content": "<p>That is, if you're horizontally categorifying a structure <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Σ</mi></mrow><annotation encoding=\"application/x-tex\">\\Sigma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Σ</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}(A, A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span></span></span></span> should have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Σ</mi></mrow><annotation encoding=\"application/x-tex\">\\Sigma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Σ</span></span></span></span>-structure, which is what you would expect in a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Σ</mi></mrow><annotation encoding=\"application/x-tex\">\\Sigma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Σ</span></span></span></span>-enriched category.</p>",
        "id": 194596504,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301164
    },
    {
        "content": "<p>I think it is possible; I just don't think it's been done. If you want to consider things like multicategories as the horizontal categorification of operads, simple enrichment isn't quite enough, for instance.</p>",
        "id": 194596569,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301224
    },
    {
        "content": "<p>My conclusion when thinking about this was that it was not going to be possible to get unique/best notions of horizontal categorification for all structures: there might be multiple suitable candidate structures.</p>",
        "id": 194596584,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301271
    },
    {
        "content": "<p>But perhaps the reason this hasn't been rigorously explored is that no-one has a use for such constructions at the moment. Do you have any ideas, or are you simply curious?</p>",
        "id": 194596597,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301321
    },
    {
        "content": "<p>Is there some special case of \"simple\" algebraic structures for which a recipe does exist? The kinds of things I'm interested in are fairly simple, like monoids, rings, vector spaces. I've read about the relevant categorical analogs piecemeal, but i really want to find a common thread that shows the pattern by which the categorical equipment was derived</p>",
        "id": 194596644,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301352
    },
    {
        "content": "<p>What's the horizontal categorification of a ring supposed to be? A category enriched in abelian groups?</p>",
        "id": 194596743,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587301512
    },
    {
        "content": "<p>I'm not aware of one, though my gut feeling is that you could use the results of Gould's <em>Coherence for Categorified Operadic Theories</em> (<a href=\"https://arxiv.org/abs/1002.0879\" title=\"https://arxiv.org/abs/1002.0879\">https://arxiv.org/abs/1002.0879</a>) to perform <em>vertical</em> categorification for certain algebraic structures (that have at least monoidal structure), and enrich in these categories. I think this would coincide with horizontal categorification for the structures you mention.</p>",
        "id": 194596745,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301523
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596743\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596743\">said</a>:</p>\n<blockquote>\n<p>What's the horizontal categorification of a ring supposed to be? A category enriched in abelian groups?</p>\n</blockquote>\n<p>Yes.</p>",
        "id": 194596751,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> Sorry, I'm not super familiar with vertical categorification either. Is that the one where you \"partialize\" the operations?</p>",
        "id": 194596813,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301604
    },
    {
        "content": "<p>If you can express your original structure as monoid objects in a monoidal category C, then you can take categories enriched in C for the horizontal categorification.</p>",
        "id": 194596821,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587301637
    },
    {
        "content": "<p>I'm not sure what you expect to get for vector spaces though.</p>",
        "id": 194596823,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587301648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276050\">Asad Saeeduddin</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596813\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596813\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> Sorry, I'm not super familiar with vertical categorification either. Is that the one where you \"partialize\" the operations?</p>\n</blockquote>\n<p>Going from monoids to monoidal categories, for instance.</p>",
        "id": 194596832,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span> That's the main problem, you need to do some creative work to figure out the right structure. E.g. I have no idea by what process the data for rig categories or duoidal categories was derived, in which I believe objects that are compatibly bimonoids and monoids correspond to near-rings</p>",
        "id": 194596886,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301722
    },
    {
        "content": "<p>Yes, of course.</p>",
        "id": 194596890,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587301731
    },
    {
        "content": "<p>Is there no way to <em>not</em> be creative when deriving the relevant equipment for the category?</p>",
        "id": 194596916,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301766
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span></p>\n<blockquote>\n<p>Going from monoids to monoidal categories, for instance.</p>\n</blockquote>\n<p>Is there a version of vertical categorification where the word \"monoid\" doesn't occur in this definition?</p>",
        "id": 194596976,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301832
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276050\">Asad Saeeduddin</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596886\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596886\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276480\">Reid Barton</span> That's the main problem, you need to do some creative work to figure out the right structure. E.g. I have no idea by what process the data for rig categories or duoidal categories was derived, in which I believe objects that are compatibly bimonoids and monoids correspond to near-rings</p>\n</blockquote>\n<p>I believe these are examples of vertical categorification, not horizontal categorificaitons.</p>",
        "id": 194596977,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301833
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276050\">Asad Saeeduddin</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596976\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596976\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span></p>\n<blockquote>\n<p>Going from monoids to monoidal categories, for instance.</p>\n</blockquote>\n<p>Is there a version of vertical categorification where the word \"monoid\" doesn't occur in this definition?</p>\n</blockquote>\n<p>Rigs to rig categories is another example.</p>",
        "id": 194596999,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301897
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> I see. What I mean is the first step <span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span> mentioned:</p>\n<blockquote>\n<p>If you can express your original structure as monoid objects in a monoidal category C</p>\n</blockquote>\n<p>Is what I don't know how to do in most cases</p>",
        "id": 194597004,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587301907
    },
    {
        "content": "<p>If your algebraic structure isn't \"monoid + extra stuff\", it can be hard to see how to horizontally categorify it. If you want to vertically categorify it instead, the process is conceptually simpler, but you need to figure out the suitable coherence conditions.</p>",
        "id": 194597075,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587301986
    },
    {
        "content": "<p>e.g. what is the series of steps that were followed to start from the definition of a rig and end up with the definition of a rig category? the distributivity and annihilation isomorphisms for a rig category definitely look similar to the rig laws, but what (if anything) is the systematic machine that you can run on the definition of a rig as an algebraic structure to get those isomorphisms?</p>",
        "id": 194597101,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587302017
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> Right. How do you figure out what the suitable coherence conditions are? Like, what objective should we work towards when trying to come up with coherence conditions?</p>",
        "id": 194597164,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587302133
    },
    {
        "content": "<p>There's a general conceptual procedure, but it's not entirely precise except for very specific examples like those in <em>Coherence for Categorified Operadic Theories</em>. You replace operators with functors, equations with either natural isomorphisms or natural transformations, and you figure out the appropriate coherence rules to make sure that the natural transformations form a convergent rewriting system.</p>",
        "id": 194597170,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587302149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276050\">Asad Saeeduddin</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194597164\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194597164\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> Right. How do you figure out what the suitable coherence conditions are? Like, what objective should we work towards when trying to come up with coherence conditions?</p>\n</blockquote>\n<p>Beke's <em>Categorification, term rewriting and the Knuth–Bendix procedure</em> is a nice introduction to this topic.</p>",
        "id": 194597215,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587302196
    },
    {
        "content": "<p>Thanks, I'll take a look at that</p>",
        "id": 194597234,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587302246
    },
    {
        "content": "<p>Heuristically, though, you are trying to invert an operation (horizontal or vertical decategorification) that loses information, so you should expect some additional input to be required in general.</p>",
        "id": 194597609,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587302780
    },
    {
        "content": "<p>In practice you would already have something that is supposed to be an example of the new concept, and that can also guide you.</p>",
        "id": 194597734,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587302974
    },
    {
        "content": "<p>hmmm. so you're saying the categorified concept necessarily has more information than the original algebraic structure? i.e. merely requiring a one object category to be equivalent to the original algebraic structure doesn't uniquely determine the relevant functors and isomorphisms</p>",
        "id": 194598235,
        "sender_full_name": "Asad Saeeduddin",
        "timestamp": 1587303669
    },
    {
        "content": "<p>Yes, because you're essentially reducing a multisorted structure to a single-sorted structure, and trying to ask how we might reconstruct the multisorted one.</p>",
        "id": 194598659,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587304239
    },
    {
        "content": "<p>I think the easier way to describe vertical categorification is \"replace sets with categories\".</p>",
        "id": 194606654,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587314332
    },
    {
        "content": "<p>What you're calling \"horizontal categorification\", I've also seen called \"oidification\", eg group |-&gt; groupoid.</p>",
        "id": 194606677,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587314374
    },
    {
        "content": "<p>I think the horizontal categorification is actually where you \"partialize\" an operation, specifically the monoid one that turns into composition.</p>",
        "id": 194606770,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587314468
    },
    {
        "content": "<p>For coherence conditions in vertical categorification, what happens is that you turn your sets into categories, functions into functors, and equations into natural isomorphisms, then you can ask what you want the components of these natural transformations to satisfy. Of course, this doesn't really solve the problem <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 194607214,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587314931
    },
    {
        "content": "<p>nlab: vertical categorification can often be decomposed into</p>\n<ul>\n<li>homotopification (allowing objects to come with automorphisms), replacing sets with ∞-groupoids in the limit</li>\n<li>laxification (relaxing invertibility of previously-invertible morphisms)</li>\n</ul>\n<p>only uses horizontal categorification as meaning oidification. what do you mean by partialization?</p>",
        "id": 194608890,
        "sender_full_name": "Pastel Raschke",
        "timestamp": 1587317172
    },
    {
        "content": "<p>If what you care about are <em>algebras</em> in the sense of universal algebra, then packaging the signature data into a polynomial endofunctor on a category with the relevant structure is a nicely behaved \"categorification\" method, isn't it? This is precisely what's going on with group/ring/monoid-objects in a category.</p>",
        "id": 194609423,
        "sender_full_name": "Todd Schmid (he/they)",
        "timestamp": 1587318030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"283877\">@Todd Schmid</span>: this gives you notions like \"monoid in a cartesian category\", rather than \"monoids in a monoidal category\" or \"monoidal categories\" (the latter being what one would expect from vertical categorification).</p>",
        "id": 194609857,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587318651
    },
    {
        "content": "<p>The problem with approaches that attempt to ignore issues of coherence is that you usually end up with overly strict notions (e.g. <em>strict</em> monoidal categories).</p>",
        "id": 194609880,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587318705
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"285584\">Pastel Raschke</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194608890\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194608890\">said</a>:</p>\n<blockquote>\n<p>nlab: vertical categorification can often be decomposed into</p>\n<ul>\n<li>homotopification (allowing objects to come with automorphisms), replacing sets with ∞-groupoids in the limit</li>\n<li>laxification (relaxing invertibility of previously-invertible morphisms)</li>\n</ul>\n<p>only uses horizontal categorification as meaning oidification. what do you mean by partialization?</p>\n</blockquote>\n<p>I was replying to someone else using that word, but basically monoids have a totally defined operation, whereas categories have a partially defined operation: composition.</p>",
        "id": 194613579,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1587323892
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> True, true. I suppose motivation is important here.</p>",
        "id": 194614805,
        "sender_full_name": "Todd Schmid (he/they)",
        "timestamp": 1587325613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276050\">Asad Saeeduddin</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596916\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596916\">said</a>:</p>\n<blockquote>\n<p>Is there no way to <em>not</em> be creative when deriving the relevant equipment for the category?</p>\n</blockquote>\n<p>I'll just mention that this is the key conceptual problem in the subject of categorification: trying to figure out the patterns involved so one doesn't need to be creative anymore.  There are many different kinds of structures to categorify, and many different ways to categorify them, so this key conceptual problem needs to be made specific, and then it becomes lots of different problems, and there's a whole lot to say about these problems.   There are lots of papers on this stuff!</p>",
        "id": 194615149,
        "sender_full_name": "John Baez",
        "timestamp": 1587326108
    },
    {
        "content": "<p>I find discussions like this about categorification somewhat reductive. It's like asking what the equivalent of a line in the plane would be in a 3D space. Both a line (dimension 1 subspace) and a plane (codimension 1 subspace) are completely valid answers, and we aren't surprised that there is more than one possible answer: throughout maths, we should expect that when we move to \"higher dimensions\" there will be multiple ways to lift concepts. For there to be a \"right\" categorification of a concept, you have to know in advance what you want the categorified thing to describe, either by having a putative example that you want to formalise, or at least by having strong preferences about how you want the thing to behave. You can't have clear answers without clear questions.</p>",
        "id": 194913429,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587552103
    },
    {
        "content": "<p>In the case of \"categorifying algebraic structures\", which is the subject of this topic, there often <em>is</em> a canonical categorification, though.</p>",
        "id": 194914576,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587553103
    },
    {
        "content": "<p>So it's entirely reasonable to ask if there is a procedure to categorify such structures, because both the question and the answer can be made precise.</p>",
        "id": 194914635,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587553166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194914576\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194914576\">said</a>:</p>\n<blockquote>\n<p>In the case of \"categorifying algebraic structures\", which is the subject of this topic, there often <em>is</em> a canonical categorification, though.</p>\n</blockquote>\n<p>Oh? For example?</p>",
        "id": 194914747,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587553260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596745\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194596745\">said</a>:</p>\n<blockquote>\n<p>I'm not aware of one, though my gut feeling is that you could use the results of Gould's <em>Coherence for Categorified Operadic Theories</em> (<a href=\"https://arxiv.org/abs/1002.0879\" title=\"https://arxiv.org/abs/1002.0879\">https://arxiv.org/abs/1002.0879</a>) to perform <em>vertical</em> categorification for certain algebraic structures (that have at least monoidal structure), and enrich in these categories. I think this would coincide with horizontal categorification for the structures you mention.</p>\n</blockquote>\n<p>Gould's results are the strongest I know of on this subject.</p>",
        "id": 194915027,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587553463
    },
    {
        "content": "<p>You can categorify any algebraic theory with linear equations canonically.</p>",
        "id": 194915110,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587553547
    },
    {
        "content": "<p>This gives you monoidal categories, but not rig categories, for instance.</p>",
        "id": 194915160,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587553565
    },
    {
        "content": "<p>But what's canonical about this choice? Monoidal categories are not the \"canonical\" categorification of monoids, they're a particular case chosen to have particular desirable properties. Just being the most well-studied or popular does not make something canonical.</p>",
        "id": 194915340,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587553739
    },
    {
        "content": "<p>Can you give a different categorification of monoids that satisfies: a monoid considered as a discrete category is an example, and every equation that holds for monoids holds up to isomorphism in the categorification?</p>",
        "id": 194915522,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587553863
    },
    {
        "content": "<p>If your specification contains a \"that satisfies...\" then you're in the \"having strong preferences about how you want the thing to behave\" camp, aren't you?</p>",
        "id": 194915659,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587553982
    },
    {
        "content": "<p>…if you don't have specifications, then calling something a categorification is entirely meaningless.</p>",
        "id": 194915746,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587554044
    },
    {
        "content": "<p>These requirements are not very strong.</p>",
        "id": 194915757,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587554056
    },
    {
        "content": "<p>Feel free to suggest a different notion of categorification of algebraic structure and a justification for calling it a \"categorification\".</p>",
        "id": 194915800,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587554115
    },
    {
        "content": "<p>A monoid is a category with one object; so another direction to categorify is to consider any of the kinds of 2-category with one object.<br>\nI can consider categories naively enriched over monoids.<br>\nI could weaken your demands that things hold up to isomorphism to the existence of a natural transformation; there is no a priori reason, without your explicit requirement, to assume otherwise.</p>",
        "id": 194916785,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587554936
    },
    {
        "content": "<blockquote>\n<p>A monoid is a category with one object; so another direction to categorify is to consider any of the kinds of 2-category with one object.</p>\n</blockquote>\n<p>Right, this is horizontal categorification, which was discussed earlier. This is separate to the notion of vertical categorification. One obviously can't ask something to be a canonical categorification if one person means vertical and the other means horizontal.</p>",
        "id": 194916967,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587555082
    },
    {
        "content": "<blockquote>\n<p>I could weaken your demands that things hold up to isomorphism to the existence of a natural transformation; there is no a priori reason, without your explicit requirement, to assume otherwise.</p>\n</blockquote>\n<p>Yes there is: the right notion of \"equality\" in a category is an isomorphism. Considering lax coherences gives you something that is more similar to relational structure than algebraic.</p>",
        "id": 194917105,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587555166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194916967\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194916967\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>A monoid is a category with one object; so another direction to categorify is to consider any of the kinds of 2-category with one object.</p>\n</blockquote>\n<p>Right, this is horizontal categorification, which was discussed earlier. This is separate to the notion of vertical categorification. One obviously can't ask something to be a canonical categorification if one person means vertical and the other means horizontal.</p>\n</blockquote>\n<p>But even these aren't well-defined processes. If I take an algebraic theory with more than one type, there are more options for horizontal categorification, for example.</p>",
        "id": 194917717,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587555713
    },
    {
        "content": "<p>I'm talking about the process of vertical categorification. I already said earlier in this thread that horizontal categorification is less well-defined.</p>",
        "id": 194917873,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587555803
    },
    {
        "content": "<p>But so is <a href=\"https://ncatlab.org/nlab/show/vertical+categorification\" title=\"https://ncatlab.org/nlab/show/vertical+categorification\">vertical categorification</a>!</p>\n<blockquote>\n<p>What precisely that means may depend on circumstances and authors, to some extent. The following lists some common procedures that are known as categorification. They are in general different but may in cases lead to the same categorified notions, as discussed in the examples.</p>\n</blockquote>",
        "id": 194917978,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587555883
    },
    {
        "content": "<p>Yes, in the general setting of \"what is the vertical categorification of an arbitrary mathematical concept X\". I'm saying that for the <em>special case</em> X = linear algebraic theories, the concept of vertical categorification is not only well-defined, it's also solved.</p>",
        "id": 194918167,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1587556008
    },
    {
        "content": "<p>I really don't think there's any need for us to be arguing here: you have a clear picture of what you want categorification to do for algebraic theories, and the answer is the one contained in Gould's paper. My original comment was targeted at the tangential discussion about the general process of categorification and the need for creativity in it, my argument being that clarity about what you want is needed for there to be any clear choice of categorification of a concept (and therefore that creativity can take a back seat once you've attained that clarity).</p>",
        "id": 194918355,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587556144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194915340\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194915340\">said</a>:</p>\n<blockquote>\n<p>But what's canonical about this choice? Monoidal categories are not the \"canonical\" categorification of monoids.</p>\n</blockquote>\n<p>I think they are.  Take a monoid in Cat, say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span>.  This is a strict monoidal category.  Then take an equivalence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mi>M</mi><mo>→</mo><msup><mi>M</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">F \\colon M \\to M'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>, and ask what structure <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>M</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">M'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> gets.   It's not a strict monoidal category, usually.  But it's a monoidal category.</p>\n<p>So, \"monoidal category\" is precisely the generalization of \"monoid\" that's invariant under equivalence.  This is what makes it canonical and this is also why it's important.</p>\n<p>More generally, given a monoid object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> in some monoidal bicategory, and an equivalence <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mi>M</mi><mo>→</mo><msup><mi>M</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">F \\colon M \\to M'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>, you can ask what structure <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>M</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">M'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> gets.  The answer is that it becomes a pseudomonoid. </p>\n<blockquote>\n<p>Just being the most well-studied or popular does not make something canonical.</p>\n</blockquote>\n<p>Right, but invariance under equivalence can.</p>",
        "id": 194958968,
        "sender_full_name": "John Baez",
        "timestamp": 1587574029
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194958968\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Categorifying.20algebraic.20structures/near/194958968\">said</a>:</p>\n<blockquote>\n<p>So, \"monoidal category\" is precisely the generalization of \"monoid\" that's invariant under equivalence. This is what makes it canonical and this is also why it's important.</p>\n</blockquote>\n<p>This gives me the opportunity to refine what I originally said. To have a \"canonical\" categorification, the following ingredients are sufficient:<br>\n1) A categorical setting, which determines the \"direction\" of categorification and how far along in that direction one is going. In this example, we're in a 2-category of categories.<br>\n1) An example of the thing to be categorified in a more restricted setting, in this case the subcategory of categories with one object.<br>\n1) A <strong>choice</strong> of the type of equivalence (or weaker transformation!) under which the categorified notions will be invariant.</p>\n<p>For the third point, equivalence is a nice choice, and we have agreed as a community that we prefer it to isomorphism in this setting, but (even if there are lots of justifications for this) it doesn't make it an inherently canonical choice. There are other, weaker notions of equivalence too, such as the homotopy equivalence that you and I have been discussing elsewhere, the equivalence-up-to-idempotent-completion that arises from constructing presheaves on a small category, and so forth. Maybe the reason someone else wants to categorify monoids is because they have an example of an object which looks like a monoid but where the hold only up to not-necessarily-invertible morphisms; their generalisation to a larger categorical setting still deserves to be called categorification, even if it's a (co/op)lax version, because it contains monoids as a motivating special case.</p>\n<p>Anyway, the reason any of this is important is that when doing any mathematics it's vital to acknowledge and keep track of the choices that we're making, and not to take them for granted. When going from 1 to 2 dimensions there aren't a huge number of choices that make sense, especially if we have also made a choice about the notion of equivalence in the original setting; if we want to categorify \"monoids up to isomorphism\" then it's hard to come up with anything other than isomorphism or equivalence (constructively, weak equivalences provide a third option). But these are still choices, which multiply if one is inclined to go higher.</p>",
        "id": 195041901,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1587637502
    },
    {
        "content": "<p>Can someone explain how I know whether the \"canonical vertical categorification\" of a commutative monoid is a symmetric monoidal category or a braided monoidal category?</p>",
        "id": 195047498,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587641635
    },
    {
        "content": "<p>I am trying to categorify a certain algebra.  It appears necessary to have an additive identity for each object, such that<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi><mo>⇒</mo><mi>x</mi><mo>+</mo><msub><mn>0</mn><mi>y</mi></msub><mo>=</mo><mi>z</mi><mo>−</mo><mi>y</mi><mo>⇒</mo><mi>x</mi><mo>+</mo><mn>2</mn><msub><mn>0</mn><mi>y</mi></msub><mo>=</mo><mi>z</mi><mo>−</mo><mi>y</mi><mo>+</mo><msub><mn>0</mn><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">x + y = z \\Rightarrow x + 0_y = z - y \\Rightarrow x + 20_y = z - y + 0_y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9305479999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9305479999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9305479999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span><br>\nThis teeters on the edge of madness, but when it is time to finish a calculation many (but not all) of these disappear under an equivalence class, and you are left with what appears to be a useful lower bound on error propagation in calculations performed with the resulting formula.</p>\n<p>I feel like this must have been done before.  If not in abstract algebra, then the design of floating point arithmetic, etc.  Unfortunately I failed my Literature Search roll twice now, and can't attempt again until I've had a long rest.  Any pointers on where I should look to educate myself would be very much appreciated!  Thanks!</p>",
        "id": 196693279,
        "sender_full_name": "Eric M Downes",
        "timestamp": 1588797244
    }
]