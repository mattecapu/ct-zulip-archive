[
    {
        "content": "<p>A <em>Simplicial group</em> is defined as a simplicial object in the category of groups.  From the definition of group object in a category, I think it readily follows(<em>though I have not explicitly verified all the conditions</em>) that every group object in <strong>sSets</strong>, the category of simplicial sets is actually a simplicial group. So , every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-group(group object in the category of Kan complexes) is indeed a simplicial group. <br>\n<strong>My question is about  the existence of a (full or partial) converse of the above fact  that is</strong><br>\n<em>Is every simplicial group a group object in <strong>sSets</strong>?</em>  <br>\nMy intuition is saying that the answer is to my question is \"<strong>No</strong>\".  <br>\n<strong>What can be a good counter example to my question?</strong></p>",
        "id": 220981243,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1609020669
    },
    {
        "content": "<p>Actually group objects in simplicial sets are the same as simplicial groups. This happens quite generally.</p>",
        "id": 220984941,
        "sender_full_name": "Reid Barton",
        "timestamp": 1609027590
    },
    {
        "content": "<p>Why do you have that intuition? In the language I am accustomed to, the answer is an obvious \"yes\". It really comes down to the observation that limits in presheaf categories, finite products in particular, are computed objectwise.</p>",
        "id": 220984942,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1609027597
    },
    {
        "content": "<p>General abstract nonsense shows that for any category X with finite products, \"group objects in the category of simplicial objects in X\" is are equivalent to \"simplicial objects in the category of group objects in X\".</p>",
        "id": 220987496,
        "sender_full_name": "John Baez",
        "timestamp": 1609032690
    },
    {
        "content": "<p>The proof relies on absolutely nothing about the concepts \"simplicial object\" and \"group object\" except that these concepts can be described using Lawvere theories.   (For simplicial objects it's overkill to use a Lawvere theory, but for group objects it's just right.)</p>",
        "id": 220987568,
        "sender_full_name": "John Baez",
        "timestamp": 1609032809
    },
    {
        "content": "<p>I'd be happy to explain if someone wants.</p>",
        "id": 220987571,
        "sender_full_name": "John Baez",
        "timestamp": 1609032826
    },
    {
        "content": "<p>Pedantic mod hat on <span class=\"user-mention\" data-user-id=\"318500\">@ADITTYA CHAUDHURI</span>: please open new topics for new discussions, don't recycle (very) old ones</p>",
        "id": 221000322,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1609058867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277611\">@Todd Trimble</span>  I apologise for my wrong intuition. At that time , I was actually not getting  why all the structure  maps in a simplicial group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>G</mi><mi>n</mi></msub><msub><mo stretchy=\"false\">)</mo><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">(G_n)_n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> for each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>  should always come from morphisms of simplicial sets. Now I think I can understand my mistake. Thank you Sir.</p>",
        "id": 221002346,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1609063072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>  Thank you Sir.</p>",
        "id": 221002385,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1609063107
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/simplicial.20groups/near/220987571\">said</a>:</p>\n<blockquote>\n<p>I'd be happy to explain if someone wants.</p>\n</blockquote>\n<p>Sir, it would be really  great if you explain! Thanks in advance.</p>",
        "id": 221002391,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1609063170
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276480\">@Reid Barton</span> Thank you Sir.</p>",
        "id": 221002393,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1609063198
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/simplicial.20groups/near/221000322\">said</a>:</p>\n<blockquote>\n<p>Pedantic mod hat on <span class=\"user-mention silent\" data-user-id=\"318500\">ADITTYA CHAUDHURI</span>: please open new topics for new discussions, don't recycle (very) old ones</p>\n</blockquote>\n<p>I got it. I apologise for the inconvenience caused.</p>",
        "id": 221002443,
        "sender_full_name": "ADITTYA CHAUDHURI",
        "timestamp": 1609063254
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"318500\">ADITTYA CHAUDHURI</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/simplicial.20groups/near/221002443\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/simplicial.20groups/near/221000322\">said</a>:</p>\n<blockquote>\n<p>Pedantic mod hat on <span class=\"user-mention silent\" data-user-id=\"318500\">ADITTYA CHAUDHURI</span>: please open new topics for new discussions, don't recycle (very) old ones</p>\n</blockquote>\n<p>I got it. I apologise for the inconvenience caused.</p>\n</blockquote>\n<p>No worries :) just a reminder for the future</p>",
        "id": 221004663,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1609067461
    },
    {
        "content": "<p>Of course it's no problem, Adittya.</p>",
        "id": 221005561,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1609069266
    }
]