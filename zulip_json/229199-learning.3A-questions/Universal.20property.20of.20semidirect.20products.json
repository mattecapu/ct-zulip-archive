[
    {
        "content": "<p>Fact 1: Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>:</mo><mi>G</mi><mo>×</mo><mi>H</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">a : G\\times H \\to H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> be a group action of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> via group automorphisms; then the semidirect product of groups is the lower right corner of a pushout square<br>\n<a href=\"/user_uploads/21317/0VwqoXtErdVm26itsAV2nJho/image.png\">image.png</a><br>\nwhere <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>:</mo><mi>G</mi><mo>⋅</mo><mi>H</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">a : G\\cdot H\\to H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> is just a different way to write the action of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, using the tensor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>⋅</mo><mi>H</mi><mo>=</mo><msub><mo>∑</mo><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow></msub><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">G\\cdot H = \\sum_{g\\in G} H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1786em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\">G</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> is the map sending <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mo separator=\"true\">,</mo><mi>h</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(g,h)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>g</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>h</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g^{-1}hg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>, which makes sense as a word in the coproduct <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>∗</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">G * H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> of groups.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/0VwqoXtErdVm26itsAV2nJho/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/0VwqoXtErdVm26itsAV2nJho/image.png\"></a></div><p>Similarly,</p>\n<p>Fact 2. Let a monoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> act on a monoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> via monoid homomorphisms. Then the semidirect product of monoids <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⋉</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M\\ltimes N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.765em;vertical-align:-0.0817em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin amsrm\">⋉</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> is the coequalizer of the two maps<br>\n<a href=\"/user_uploads/21317/hAsGG50i5X_FLJzc5oihbuJD/image.png\">image.png</a><br>\nwhere a similar notation has been adopted ((<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⋅</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M\\cdot N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M\\times N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> are essentially the same set, but this redundancy kept the idea clear while I was proving the fact)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/hAsGG50i5X_FLJzc5oihbuJD/image.png\" title=\"image.png\"><img src=\"/user_uploads/21317/hAsGG50i5X_FLJzc5oihbuJD/image.png\"></a></div><p>These facts are hardly unknown to the categorical algebra people, but I don't know who to reference exactly... Help?</p>",
        "id": 400321461,
        "sender_full_name": "fosco",
        "timestamp": 1699125539
    },
    {
        "content": "<p>First, let me say there are many equivalent and non-equivalent ways to define/describe semidirect products of algebraic structures. For semi-abelian categories, as in the case of groups, semidirect products are usually constructed as coequalizers, since they arise from a comparison functor w.r.t. the algebras of a monad. Of course you can turn such coequalizers into pushouts or other pretty colimit if you like. <br>\nConcerning your proposed construction, I didn't check the details, but I think the group case is dealt with similarly in section 4.3 of Borceux, Janelidze, Kelly, \"Internal object actions\", Commentationes Mathematicae Universitatis Carolinae, Vol. 46 (2005), No. 2, 235--255. <br>\nTurning to monoids, semidirect products behave somehow less smoothly than in the case of group, unless you consider some special classes of morphisms of monoids. I am not an expert of this, but there are people that have devoted their life to monoids... However, one issue with monoids is that the equivalence between points (=split epis) and \"actions\"  may fail to hold. For instance, consider the split epi p:NxN-&gt;N, where N =  natural numbers, p(n,m)=n+m, with section s(n)=(0,n). <br>\nCiao,</p>\n<p>Beppe.</p>",
        "id": 401417150,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1699637833
    },
    {
        "content": "<p>Addenda. Once I asked Bill about the categorical notion of semidirect product. He answered that it was just the notion of fibration. In fact, split fibration, I would add.</p>",
        "id": 401434766,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1699648449
    },
    {
        "content": "<p>Yes, I believe a split fibration of one-object groupoids is the same as a semidirect product of groups.  <span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> pointed this out to me (if I have it right).</p>",
        "id": 401437745,
        "sender_full_name": "John Baez",
        "timestamp": 1699650318
    },
    {
        "content": "<p>I thought a fibration of one-object groupoids was an <em>extension</em> of groups.</p>",
        "id": 401439413,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1699651638
    },
    {
        "content": "<p>And any fibration is equivalent to a split one.  So is the point that making a fibration split makes its domain no longer have one-object in general?</p>",
        "id": 401439714,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1699651864
    },
    {
        "content": "<p>Extensions are fibrations. Split extensions are semidirect products are split fibrations.</p>",
        "id": 401445534,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1699656424
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276915\">Beppe Metere</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/401434766\">said</a>:</p>\n<blockquote>\n<p>Addenda. Once I asked Bill about the categorical notion of semidirect product. He answered that it was just the notion of fibration. In fact, split fibration, I would add.</p>\n</blockquote>\n<p>This is definitely relevant to my situation. Beppe, you know what I've been working on, but for the other people here, I am writing a pretty long story that is based on this idea primarily. </p>\n<p>I entirely agree with this remark and if all goes well, you will soon find sixty-and-something pages full of motivations to adopt it in full. At this point, the question remains open of how to quote Bill's comment. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 401448040,
        "sender_full_name": "fosco",
        "timestamp": 1699658509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282822\">@fosco</span> I am aware of an elementary (hence meaningful) reference that's not by Lawvere. It is Barr-Wells' book \"Category Theory for Computing Science\". You can check the chapter on the Grothendieck construction. Specifically, I can quote the following:</p>\n<p>\"12.2.4 <strong>Semidirect products</strong>. We now describe a more general version of the Grothendieck construction that has the semidirect product of monoids as a special case.\"</p>\n<p>The construction follows in the text.</p>",
        "id": 401494652,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1699693623
    },
    {
        "content": "<p>Yes, I know that construction is taken from Wells' <a href=\"https://www.sciencedirect.com/science/article/pii/0021869380901301\">https://www.sciencedirect.com/science/article/pii/0021869380901301</a> (which I read some time ago looking for a link with my thing, but couldnt find any strong one). Thank you, I'll see if after some time it rings a bell!</p>",
        "id": 401495643,
        "sender_full_name": "fosco",
        "timestamp": 1699694600
    },
    {
        "content": "<p>Hm, no, probably I misunderstood: Wells' construction in that paper, for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><msup><mo>≀</mo><mi>G</mi></msup><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">B\\wr^G C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0358em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mbin\">≀</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> (that he calls the \"wreath product of categories\") is the category of elements of the presheaf <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>G</mi><msub><mi mathvariant=\"normal\">_</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>O</mi><mi>b</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>:</mo><msup><mi>C</mi><mi>o</mi></msup><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Set(G\\__1, Ob(B)) : C^o \\to Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">G</span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span>. </p>\n<p>I know that the semidirect product arises as a Grothendieck construction; I would say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⋉</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M\\ltimes N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.765em;vertical-align:-0.0817em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin amsrm\">⋉</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> is just the Grothendieck construction of the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>→</mo><mi>S</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">M \\to Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span>, which in fact factors through the category of monoids and picks $N$ on objects.</p>",
        "id": 401497530,
        "sender_full_name": "fosco",
        "timestamp": 1699696383
    },
    {
        "content": "<p>If I remember well, there is also a message by Bill on the old list Categories, but browsing those old posts is not easy... I could not find it!</p>",
        "id": 401497593,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1699696442
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/401439413\">said</a>:</p>\n<blockquote>\n<p>I thought a fibration of one-object groupoids was an <em>extension</em> of groups.</p>\n<p>And any fibration is equivalent to a split one.  So is the point that making a fibration split makes its domain no longer have one-object in general?</p>\n</blockquote>\n<p>I think all this is correct.    It would be fun to take a little extension of groups that does not split, e.g.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>→</mo><mn>0</mn><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\"> 0 \\to \\mathbb{Z}/2 \\to \\mathbb{Z}/4 \\to \\mathbb{Z}/2 \\to 0,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span></span></span></span></p>\n<p>treat it as a giving a fibration of groupoids, and find an equivalent fibration of groupoids that splits.</p>",
        "id": 401497811,
        "sender_full_name": "John Baez",
        "timestamp": 1699696634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/401439714\">said</a>:</p>\n<blockquote>\n<p>And any fibration is equivalent to a split one.  So is the point that making a fibration split makes its domain no longer have one-object in general?</p>\n</blockquote>\n<p>Yes. I think rather than working in terms of split fibrations, it is better to explicitly take pointed objects. I briefly mention this in Remark 4.5 of my paper \"Monoid extensions and the Grothendieck construction\" (<a href=\"https://arxiv.org/abs/2112.10288\">arXiv link</a>).</p>",
        "id": 401513209,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1699711161
    },
    {
        "content": "<p>IMO the appearance of split fibrations is a bit of an accident.</p>",
        "id": 401513298,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1699711232
    },
    {
        "content": "<p>This is analogous to how the category of monoids can be obtained by just throwing away the 2-morphisms from the 2-category of 1-object categories, which kinda 'accidental' compared to the 'more categorical' way of considering categories with distinguished objects.</p>",
        "id": 401513760,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1699711570
    },
    {
        "content": "<p>A version of a universal property of semidirect products (semi-abelian case) can be found in Theorem 1.3 of </p>\n<ul>\n<li>G. Janelidze, \"Internal crossed modules\", Georgian Mathematical Journal, Volume 10, No. 1 (2003)</li>\n</ul>\n<p>However, it is not a coincidence that such kind of semidirect products are introduced in connection with descent theory:</p>\n<ul>\n<li>D. Bourn, G. Janelidze, \"Protomodularity, descent and semidirect products\", Theory and Applications of Categories, Vol. 4, No. 2, (1998).</li>\n</ul>\n<p>Turning back to semidirect products as fibrations, IMO a relevant reference is:</p>\n<ul>\n<li>V. Blanco, M. Bullejos,  E. Faro, \"Categorical non-abelian cohomology and the Schreier theory of groupoids\", Mathematische Zeitschrift 251, (2005).</li>\n</ul>\n<p>where they deal with just the groupoid case, but the point of view is really close to the one we are discussing here. Btw, as you know, Emilio Faro-Rivas was a student of Bill Lawvere.</p>",
        "id": 401523994,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1699718700
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"386922\">Graham Manuell</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/401513209\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/401439714\">said</a>:</p>\n<blockquote>\n<p>And any fibration is equivalent to a split one.  So is the point that making a fibration split makes its domain no longer have one-object in general?</p>\n</blockquote>\n<p>Yes. I think rather than working in terms of split fibrations, it is better to explicitly take pointed objects. I briefly mention this in Remark 4.5 of my paper \"Monoid extensions and the Grothendieck construction\" (<a href=\"https://arxiv.org/abs/2112.10288\">arXiv link</a>).</p>\n</blockquote>\n<p>Dear Graham, thank you for pointing us to your paper, which I was not aware of. I am reading it with pleasure.<br>\nHowever, here is something in your comment above that is not clear to me. </p>\n<p>You say, that \"rather than working in terms of split fibrations, it is better to explicitly take pointed objects\". Let me make it explicit. You can take the equivalence between functors with fixed codomain, say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, and and lax normal 2-functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>→</mo><mrow><mi mathvariant=\"bold\">P</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">f</mi></mrow></mrow><annotation encoding=\"application/x-tex\">D\\to \\mathbf{Prof}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.10903em;\">Prof</span></span></span></span></span>, and restrict to functors between one-object categories. Then you consider the induced equivalence on pointed objects, so that you obtain split epimorphisms of monoids. Eventually, you fix the kernel <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>, so that you get the \"action\" in the form of a normal lax monoidal functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>→</mo><mi>E</mi><mi>n</mi><msub><mi>d</mi><mrow><mi mathvariant=\"bold\">B</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">s</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">D\\to End_{\\mathbf{Biset}}(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Biset</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>.<br>\nFinally, if instead of monoids you take groups, then the split epi is a split opfibration, so that you land in a pseudofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>→</mo><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">D\\to \\mathbf{Cat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span></span></span></span>, and fixing the kernel, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>→</mo><mi>A</mi><mi>u</mi><msub><mi>t</mi><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">D\\to Aut_{\\mathbf{Cat}}(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">u</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3303em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">Cat</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>.</p>\n<p>So, as I understand the whole story, opfibrations generalize group extensions, and the Grothendieck construction reduces to semidirect product when such extensions are split. Otherwise you have the usual cocycle-like construction for group extensions. As a consequence, the use of split opfibrations seems accidental, while the use of pointed objects can be consider somehow canonical. </p>\n<p>What I cannot explain this way is the more general fact that general split opfibrations, I mean between categories with not-necessarily a unique object, behave on arrows as a semidirect product, when seen from the viewpoint of the Grothendieck construction. In this case, it is not even necessary to take groups or groupoids to make the analogy evident. Rather, I would say, considering groups (groupoids) makes more easily a functor be an (op) fibration, since you do not have to ask for the liftings be (co)cartesian.</p>\n<p>Summarizing, it is the fact that the opfibration is split that makes it all work. </p>\n<p>How do you recover the \"pointed objects\" argument here? </p>\n<p>Please forgive me if I missed something. As I said at the beginning, I am reading your paper right now, and I am still missing many details.</p>",
        "id": 401805037,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1699893262
    },
    {
        "content": "<p>I'm glad you are enjoying the paper <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>. Your explication of my comment seems good to me!</p>\n<p>If we restrict to opfibrations and pseudonatural transformations (see (*) below) but work in the multi-object case, then 'taking points' will give a (pseudo)section S such that S(f) is opcartesian over f for each f. This is like a splitting for a split fibration except that it is only given for certain distinguished objects in each fibre.</p>\n<p>I haven't thought much about the case of groupoids and how split opfibrations might be like semidirect products there, but perhaps this restricted splitting is enough for things to work? I'm not certain about this, but naively it seems plausible. On the other hand, every map from the empty groupoid would be a split opfibration and this doesn't seem like very much like a semidirect product to me? The 'taking points' approach rules out this case. I guess my view is that the above 'restricted splitting' is (probably) more important here than the notion of split fibration itself.</p>\n<p>(*) It is the restriction to pseudonatural transformations on the lax functor side that makes the liftings (pre-)opcartesian. This is automatic for groupoids. For the case of monoids, this I don't think this restriction is appropriate for general extensions, but is important for certain classes of extension. In particular, for Schreier extensions we must work only with pseudonatural transformations to get the correct notion of Schreier split extension. Otherwise we get Schreier (non-split) extensions equipped with arbitrary splittings. (This subtlety is only alluded to parenthetically in the paper because I was trying to avoid an extended discussion of the case of split extensions.)</p>\n<p>Since Schreier extensions are the monoid extensions that correspond best to a kind of semidirect product, I could believe that this restriction pseudonatural transformations should always be taken for semidirect-product-type behaviour to result. Also, when restricting to pseudofunctors into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}^\\mathrm{co}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7404em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7404em;\"><span style=\"top:-3.139em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">co</span></span></span></span></span></span></span></span></span></span></span></span> (the case corresponding to fibrations) it seems reasonable to also restrict to pseudonatural transformations.</p>\n<p>Does this answer your questions?</p>",
        "id": 401865318,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1699919682
    },
    {
        "content": "<p>I forgot to tag <span class=\"user-mention\" data-user-id=\"276915\">@Beppe Metere</span> in my response above so I'm doing it now.</p>",
        "id": 401865700,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1699919881
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"386922\">@Graham Manuell</span> thanks for your answer, and sorry for my late reply. </p>\n<p>In fact there is something which is not clear to me in your answer. </p>\n<p>You said:</p>\n<blockquote>\n<p>If we restrict to opfibrations and pseudonatural transformations (see (*) below) but work in the multi-object case, then 'taking points' will give a (pseudo)section S such that S(f) is opcartesian over f for each f. This is like a splitting for a split fibration except that it is only given for certain distinguished objects in each fibre.</p>\n</blockquote>\n<p>However:</p>\n<ul>\n<li>If you take a pseudosection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> of a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">F:C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, even if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span> might be opcartesian, why should it be over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>? (What I mean for pseudosection is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">FS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">FS</span></span></span></span> is naturally isomorphic to the identity functor, and not necessarily equal.) </li>\n<li>On the lax functor side, you say you take pseudonatural transformations. In fact, if we restrict to opfibrations on one side, we can corestrict to pseudofuctors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span></span></span></span> on the other side. Now, a section determines a choice of a distinguished object in each fibre. If the transformation is natural, it seems to me that opcartesian liftings at these objects can compose strictly, otherwise, if the transformation is only pseudonatural, this does not seem to happen to me... does it?</li>\n</ul>\n<p>Summarizing, for a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>, being a (pseudo)split epimorphism (i.e., admitting a (pseudo)section) or being a split opfibration seem to be quite independent facts, and I do not see how to recover split opfibrations as points in the slice category. Of course, maybe I misunderstood your answer. </p>\n<p>On the other hand, I do see a connection between the Grothendieck construction and semi-direct products, for functors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span></span></span></span>. Ok, let's say it is somehow naive, but when you look at composition of arrows  for  (the Grothendieck construction of ) a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi><mo>:</mo><mi>D</mi><mo>→</mo><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\Phi:D\\to\\mathbf{Cat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Φ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span></span></span></span>, you have something like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mo separator=\"true\">,</mo><mi>γ</mi><mo stretchy=\"false\">)</mo><mo>∘</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>ϕ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>∘</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>γ</mi><mo>∘</mo><mi mathvariant=\"normal\">Φ</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>ϕ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(g,\\gamma)\\circ(f,\\phi)=(g\\circ f,\\gamma\\circ\\Phi(g)(\\phi))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Φ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">ϕ</span><span class=\"mclose\">))</span></span></span></span> and the like.<br>\nHere, the left components multiply plainly, while the right components multiply via the <em>action</em> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> <em>via</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Φ</span></span></span></span>. In the case of groupoids, this action can be described as a sort of conjugation by the liftings of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>.</p>\n<p>Finally, let me comment on the example of the empty groupoid. Yes, it is a weird one, but, look... if the empty groupoid is a domain of an opfibration, then such opfibration has empty fibres. Following the analogy with semidirect products in groups, it is as if we could define an extension of groups with empty kernel! It is not surprising that a semidirect product of an empty something with whatever else results to be empty! For instance, what about semidirect products of heaps? Or semidirect products in other varieties of algebras where there is the empty algebra?</p>",
        "id": 403835558,
        "sender_full_name": "Beppe Metere",
        "timestamp": 1700763227
    },
    {
        "content": "<p>Let me first say what I was saying above in a different way:<br>\nLax functors into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}^\\mathrm{co}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7404em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7404em;\"><span style=\"top:-3.139em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">co</span></span></span></span></span></span></span></span></span></span></span></span> and oplax transformations between them correspond via the Grothendieck construction to preopfibations and general maps between them. Taking points in this (2-)category does just give a section with no other properties. On the other hand, lax functors into Cat and <em>pseudonatural</em> transformations correspond to preopfibations and functors between them that preserve opcartesian morphisms. Points in <em>this</em> category correspond to the sections I mentioned above that are similar to split opfibrations, but not the same.<br>\nIn the single object case they are essentially split opfibrations, but they are different in general. I think they might be the 'better' generalisation for forming semidirect products, though.</p>",
        "id": 404027819,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1700866372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276915\">Beppe Metere</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/403835558\">said</a>:</p>\n<blockquote>\n<p>However:</p>\n<ul>\n<li>If you take a pseudosection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> of a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">F:C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, even if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span> might be opcartesian, why should it be over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>? (What I mean for pseudosection is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">FS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">FS</span></span></span></span> is naturally isomorphic to the identity functor, and not necessarily equal.) </li>\n<li>On the lax functor side, you say you take pseudonatural transformations. In fact, if we restrict to opfibrations on one side, we can corestrict to pseudofuctors to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Cat</span></span></span></span></span> on the other side. Now, a section determines a choice of a distinguished object in each fibre. If the transformation is natural, it seems to me that opcartesian liftings at these objects can compose strictly, otherwise, if the transformation is only pseudonatural, this does not seem to happen to me... does it?</li>\n</ul>\n<p>Summarizing, for a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>, being a (pseudo)split epimorphism (i.e., admitting a (pseudo)section) or being a split opfibration seem to be quite independent facts, and I do not see how to recover split opfibrations as points in the slice category. Of course, maybe I misunderstood your answer. </p>\n</blockquote>\n<p>Yes, you are right that things only hold up to isomorphism in this case, as in <a href=\"https://ncatlab.org/nlab/show/Street+fibration\">Street fibrations</a>. I guess I think this is an advantage rather than a disadvantage. It still reduces to the same semidirect product construction for monoids (up to isomorphism/equivalence), I think.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"276915\">Beppe Metere</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Universal.20property.20of.20semidirect.20products/near/403835558\">said</a>:</p>\n<blockquote>\n<p>Finally, let me comment on the example of the empty groupoid. Yes, it is a weird one, but, look... if the empty groupoid is a domain of an opfibration, then such opfibration has empty fibres. Following the analogy with semidirect products in groups, it is as if we could define an extension of groups with empty kernel! It is not surprising that a semidirect product of an empty something with whatever else results to be empty! For instance, what about semidirect products of heaps? Or semidirect products in other varieties of algebras where there is the empty algebra?</p>\n</blockquote>\n<p>Fair enough. I guess it depends what properties one thinks are necessary when deciding whether to call something a semidirect product.</p>",
        "id": 404027851,
        "sender_full_name": "Graham Manuell",
        "timestamp": 1700866394
    }
]