[
    {
        "content": "<p>So this might be a very basic question, but I could not find any answer either on the nlab, stackexchange or this Zulip after searching for \"internal language\":</p>\n<p><em>Why do we speak of <strong>\"the\"</strong> internal language of a category?</em></p>\n<p>This use of the word \"the\" implies the following in my mind:</p>\n<ol>\n<li>If a category has an internal language, it must necessarily be <em>unique</em></li>\n<li>There is a systematic way to derive the definition of the internal language given an axiomatic definition of the category (the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>:</mo><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">g</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">s</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"bold\">T</mi><mi mathvariant=\"bold\">h</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">s</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang} : \\mathbf{Categories} \\to \\mathbf{Theories}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Categories</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Theories</span></span></span></span></span> mentioned on the <a href=\"https://ncatlab.org/nlab/show/internal+logic#the_internal_logic_as_a_functor\">nlab</a>)</li>\n</ol>\n<p>As a proof theorist, I am quite skeptical of (1), because it seems to imply that there is only one canonical way to capture syntactically the morphisms of the category, i.e. only one proof system that satisfies a soundness and a completeness theorem by giving it semantics in that category (not withstanding the fact that this would only work with the syntactic category). But if one considers e.g. Heyting categories, there are <em>a lot</em> of different proof systems that have been built for intuitionistic first-order logic: many variants of Hilbert systems, natural deduction calculi, sequent calculi, deep inference calculi, proof nets, and of course (dependent) type theories.</p>\n<p>One way to resolve the confusion might be by speaking of internal <em>logic</em> rather than internal language (assuming we resrict ourselves to the usual syntax of logical formulas/types with connectives and/or quantifiers). But the two terminologies seem to be used interchangeably in some contexts, typically when speaking of the so-called Curry-Howard-Lambek correspondence between (say) CCCs and simply-typed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus.<br>\nAnother way would be to consider internal languages \"up-to-isomorphism\", but then this would be a very liberal notion of isomorphism that ignores basically every interesting property of a proof system. This also begs the question of how one could axiomatize such an enormous category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">L</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">g</mi><mi mathvariant=\"bold\">u</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">g</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">s</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Languages}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Languages</span></span></span></span></span> (or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">T</mi><mi mathvariant=\"bold\">h</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">r</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">s</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Theories}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Theories</span></span></span></span></span> according to nlab).</p>\n<p>Lastly as a computer scientist (and given the above), I am of course very skeptical of (2), as I have yet to see the construction of the magical <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> functor. But maybe no one claims to be able to do this, and the concept of internal language is just a loose framework to think about the relationship between logic and category theory.</p>",
        "id": 501614073,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740420248
    },
    {
        "content": "<p>Imo, the answer is that internal languages are indeed considered/defined up to isomorphism (or rather, equivalence, a slightly weaker notion), throwing away all the proof theoretic stuff on purpose.  For example, the internal logic of a cartesian category is a Horn theory; from a \"semantics\" point of view that's all there is to say but from a proof theory point of view, Horn theories vary wildly: some are decidable, others not; some presentations of them have properties other presentations do not, and so on.  This isn't so different than what is done in denotational semantics, which ignores e.g. the time/space complexity of programs and only focuses on their 'meaning', throwing away the \"operational\" and \"axiomatic\" aspects of semantics on purpose.</p>",
        "id": 501617517,
        "sender_full_name": "Ryan Wisnesky",
        "timestamp": 1740421207
    },
    {
        "content": "<p>I would say that we only speak of \"the\" internal language of a category once we have fixed a doctrine and its semantics, by which I mean a formal system together with an adjunction relating its theories to a class of structured categories, and then \"the\" internal language of one of those structured categories is its image under the right adjoint part of that adjunction.</p>",
        "id": 501620399,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740422094
    },
    {
        "content": "<p>It's just that people are sloppy because there are certain doctrines that are so standard, like STLC/CCC, or HOL/Topoi, that once you know a category is, say, a topos, when you speak of its internal language everyone assumes you mean with respect to that doctrine.</p>",
        "id": 501620538,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740422140
    },
    {
        "content": "<p>But it's certainly true, for instance, that a topos has both a HOL internal language and an MLTT internal language.</p>",
        "id": 501620680,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740422179
    },
    {
        "content": "<p>Concerning (2), the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> functor may certainly be defined <em>very</em> explicitly.  Volume 2 of the Elephant is one place where you can find a very precise description for lots of kinds of doctrines, from algebraic theories/cartesian categories all the way to higher-order theories/elementary toposes.</p>",
        "id": 501621774,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1740422514
    },
    {
        "content": "<p>A general, rough description is that you can define a logical language by taking the objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> as sorts and the morphisms/subobjects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> as function symbols/relation symbols.   Thanks to the structure of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> (which we are assuming to be a certain kind of category that fits with the theories we are using), every formula of this language (over the logic we are considering) will have an interpretation in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}(\\mathcal C)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">)</span></span></span></span> will be the theory whose axioms are all the formulas which are \"true\" when interpreted in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>.</p>",
        "id": 501622978,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1740422856
    },
    {
        "content": "<p>But note that (as Mike also already noted) you have to already know the \"certain kind of category\", i.e. doctrine, that you're in--the question may have arisen mostly from imagining you can construct the language in this way from a bare category, which isn't enough info.</p>",
        "id": 501629191,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1740424804
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501620680\">said</a>:</p>\n<blockquote>\n<p>But it's certainly true, for instance, that a topos has both a HOL internal language and an MLTT internal language.</p>\n</blockquote>\n<p>This point may appear at a glance to support <span class=\"user-mention\" data-user-id=\"874654\">@Pablo Donato</span> 's point about there being different fragments of logic interpretable in the same class of categories which have different proof-theoretic properties. However, it's worth highlighting that when Mike talks about doctrines, this includes the choice of structure-preserving-functors between the categories involved. In this instance, the difference is between (topoi with logical functors) and (topoi with atomic geometric morphisms)^op, if I'm not mistaken about the content of MLTT?</p>\n<p>Still, I expect there can be differences in the proof theory that aren't accounted for.</p>",
        "id": 501636385,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1740427187
    },
    {
        "content": "<p>Well, it depends on what you mean by \"MLTT\".  Probably for 1-toposes I should mean extensional MLTT, without universes if I don't want to assume those in my toposes, in which case the morphisms would be locally cartesian closed functors.  Plain MLTT doesn't say anything about the subobject classifier, nor, as far as I know, about there being right adjoints.  But one can enhance MLTT to talk about the whole topos structure, such as with a type of propositions for the subobject classifier, and in that case the morphisms would again be logical functors, even though the syntax is different from HOL.</p>",
        "id": 501648636,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740431291
    },
    {
        "content": "<p>Thanks for your answers! This gives me a clearer picture of what is meant by \"internal language\", given that I never took a look at the Elephant for instance.</p>\n<p>As mentioned by <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> and <span class=\"user-mention\" data-user-id=\"609515\">@Kevin Carlson</span>, my misunderstanding was mostly based on the idea that the formal system and extra-structure on categories are not specified in advance. I suspect however that this misconception might be quite common among category theorists, for instance taking this quote from <a href=\"https://arxiv.org/pdf/2310.05384\">this article</a> from <span class=\"user-mention\" data-user-id=\"275965\">@Evan Patterson</span>  and Michael Lambert :</p>\n<blockquote>\n<p>In some cases, the logic defined by a 2-category can be <strong>identified</strong> with a<br>\npreexisting system given in the traditional syntactic style. Lawvere theories correspond<br>\nto single-sorted algebraic theories, categories with finite products to multi-sorted alge-<br>\nbraic theories, categories with finite limits to essentially algebraic theories, and cartesian<br>\nclosed categories to simply typed lambda calculus with product types.</p>\n</blockquote>\n<p>To me the use of the word \"identified\" suggests that there is an exact correspondence with the preexisting proof system that comes <em>a posteriori</em>, which implicitly discards the possibility of other proof systems that could fit the correspondence in different and interesting way. This is a feeling I get when reading most material on categorical logic, but maybe this is because category theorists and proof theorists don't have the same objectives in mind when studying logic.</p>\n<p><span class=\"user-mention\" data-user-id=\"277473\">@Morgan Rogers (he/him)</span> I think the choice of structure-preserving functors is also something that was not in my picture of the story. But Mike's comment (and your last remark) makes me doubt the possibility for doctrines to capture the full story occurring in the proof theory, especially given that there does not seem to be an agreed upon definition of doctrines according to the article I quoted.</p>\n<p><span class=\"user-mention\" data-user-id=\"276839\">@Damiano Mazza</span> I have seen the general construction of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> in the nlab article, but I don't see how it fits with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus and more generally type theory. This seems to be specific to the syntax of multi-sorted FOL with function symbols, but I guess it also works somehow with HOL in simple type theory, since it is the original example of internal language for elementary topoi?</p>",
        "id": 501653450,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740433151
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"874654\">Pablo Donato</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501653450\">said</a>:</p>\n<blockquote>\n<p>To me the use of the word \"identified\" suggests that there is an exact correspondence with the preexisting proof system that comes <em>a posteriori</em>, which implicitly discards the possibility of other proof systems that could fit the correspondence in different and interesting way.</p>\n</blockquote>\n<p>I suspect that many category theorists, at least, know what's going on and are just being sloppy in the way I mentioned.  But some might indeed have a misconception.  And, as you suggest, some category theorists might consider two formal systems \"equivalent\" as soon as they have the same categorical models, even though to a logician they might be quite different.</p>",
        "id": 501654338,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740433497
    },
    {
        "content": "<p>My unfinished <a href=\"http://mikeshulman.github.io/catlog/catlog.pdf\">categorical logic notes</a> try to emphasize the general picture of how logics in varying doctrines correspond to structured categories.</p>",
        "id": 501654462,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740433542
    },
    {
        "content": "<p>I see nothing sloppy in the Lambert-Patterson quote, to be sure. They clearly specify a doctrine and then the syntax-up-to-equivalence side of the duality associated to that doctrine.</p>",
        "id": 501662141,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1740436297
    },
    {
        "content": "<p>I think in particular you're just not reading \"identified\" in the standard mathematicla usage.</p>",
        "id": 501662389,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1740436386
    },
    {
        "content": "<p>I dunno, I could see an argument that that quote is misleadingly phrased, that it suggests the syntactic side is uniquely determined by the 2-category.  Here's some more context from the article:</p>\n<blockquote>\n<p>In categorical logic, a logical system is defined by a 2-category of categories with extra<br>\nstructure. Theories within the logic are objects of the 2-category; models of a theory are<br>\nstructure-preserving functors out of the theory; and model homomorphisms are natural<br>\ntransformations. In some cases, the logic defined by a 2-category can be identified with a<br>\npreexisting system given in the traditional syntactic style.</p>\n</blockquote>",
        "id": 501669871,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740438692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>  What I am not sure about is how one can define rigorously the notion of \"having a categorical model\", given that we don't know how to model syntax categorically in a systematic way. Taking the case of STLC, the usual interpretation maps judgments <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>:</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo>:</mo><msub><mi>A</mi><mi>n</mi></msub><mo>⊢</mo><mi>t</mi><mo>:</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">x_1 : A_1, \\ldots, x_n : A_n \\vdash t : A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to morphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟦</mo><mi mathvariant=\"normal\">Γ</mi><mo>⊢</mo><mi>t</mi><mo>:</mo><mi>A</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟧</mo><mo>:</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟦</mo><msub><mi>A</mi><mn>1</mn></msub><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟧</mo><mo>×</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>×</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟦</mo><msub><mi>A</mi><mi>n</mi></msub><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟧</mo><mo>→</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟦</mo><mi>A</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">⟧</mo></mrow><annotation encoding=\"application/x-tex\">\\llbracket \\Gamma \\vdash t : A \\rrbracket : \\llbracket A_1\\rrbracket \\times ... \\times \\llbracket A_n \\rrbracket \\to \\llbracket A \\rrbracket</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord\">Γ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊢</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mclose\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mclose\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mclose\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\"><span class=\"mopen\">[</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mopen\">[</span></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:-0.1778em;\"></span><span class=\"mclose\">]</span></span></span></span></span> in a CCC. But if you don't have product types, morphisms of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A \\to B \\times C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> cannot be reflected in the syntax, so you don't get a honest completeness theorem. And even if you have product types, the interpretation collapses the distinction between products <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\times B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> in types and \"products\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>:</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>:</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">x : A, y : B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> in contexts, thus we are missing some important structure. This can be recovered by giving a categorical model with more structure (e.g. with CwF as done <a href=\"https://arxiv.org/abs/1904.00827\">here</a>, or maybe with multicategories), but the point is that there is no canonical way to give meaning to the sentence \"two formal systems have the same categorical models\" : it might always be possible to find (classes of) categories which have exactly the structure we want for the models to coincide with well-chosen interpretations, but then it kinda feels like mirroring syntax in the semantics. I guess this is one way to relate two formal systems by identifying what they have in common, without resorting to a direct translation between them or into a third system.</p>\n<p><span class=\"user-mention\" data-user-id=\"609515\">@Kevin Carlson</span> So for instance in the case of CCCs and STLC, the doctrine is the 2-category of CCCs, and the \"syntax-up-to-equivalence side of the duality\" is STLC? Thus instead of considering the specific category of STLC-theories, I should consider any category equivalent to it? I am not sure the term \"identified\" has the same unambiguous reading in every mathematical context. Here you use it as \"there exists an (syntax-semantics duality) adjunction up-to-equivalence\", which is a very specific (and non-obvious to me) meaning.</p>",
        "id": 501671110,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740439065
    },
    {
        "content": "<p>When I say that some syntactic doctrine has categorical models in some class of structured categories, I mean that there is an adjunction between the category of syntactic theories in that doctrine and the category of such structured categories.  I think this is pretty precise.</p>\n<p>With this definition, you're right that a given syntax can have more than one kind of categorical model, as well as that a given class of categories can be semantics for more than one kind of syntax.  So when I said that category theorists may be tacitly considering formal systems \"the same\" when they have the same categorical models, I meant \"have\" in the sense of structure rather than mere property, in the same way that we might say that a set \"has a group structure\".</p>",
        "id": 501677656,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740441432
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"874654\">Pablo Donato</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501671110\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"609515\">Kevin Carlson</span> So for instance in the case of CCCs and STLC, the doctrine is the 2-category of CCCs, and the \"syntax-up-to-equivalence side of the duality\" is STLC? Thus instead of considering the specific category of STLC-theories, I should consider any category equivalent to it? I am not sure the term \"identified\" has the same unambiguous reading in every mathematical context. (...)</p>\n</blockquote>\n<p>Perhaps not, but I meant something much more general. Anyway, it's clear enough that phrasings like \"the syntax\", \"the logic\" can suggested single-valuedness where it doesn't exist.</p>",
        "id": 501680145,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1740442515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501677656\">said</a>:</p>\n<blockquote>\n<p>So when I said that category theorists may be tacitly considering formal systems \"the same\" when they have the same categorical models, I meant \"have\" in the sense of structure rather than mere property, in the same way that we might say that a set \"has a group structure\".</p>\n</blockquote>\n<p>Okay so basically you were saying \"they have the same models <em>in the given class of structured categories</em>\", rather than in the abstract. This makes a lot more sense. But then I am not sure about what you mean by \"syntactic doctrine\": is this related to Dolan's definition on the <a href=\"https://ncatlab.org/johnbaez/show/Doctrines\">nlab</a>?</p>",
        "id": 501686444,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740445422
    },
    {
        "content": "<p>No, by a syntactic doctrine I mean a class of syntactic logics or type theories with the same judgmental structure.  For instance, STLC is a doctrine, and we obtain particular theories in that doctrine by adding basic/axiomatic types, terms, and equalities.</p>",
        "id": 501699168,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740451349
    },
    {
        "content": "<p>Syntactic doctrines are indeed \"related\" to doctrines in Dolan's sense, but it's better not to get into this now, since figuring out the precise relation is even harder than the original question!</p>",
        "id": 501701898,
        "sender_full_name": "John Baez",
        "timestamp": 1740452696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"874654\">Pablo Donato</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501653450\">said</a>:</p>\n<blockquote>\n<p>I have seen the general construction of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> in the nlab article, but I don't see how it fits with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus and more generally type theory. This seems to be specific to the syntax of multi-sorted FOL with function symbols, but I guess it also works somehow with HOL in simple type theory, since it is the original example of internal language for elementary topoi?</p>\n</blockquote>\n<p>For the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus, we are talking about the following kinds of theories (I don't know what they're called usually, let's call them <em>simply-typed higher-order theories</em>):</p>\n<ul>\n<li>a set of sorts <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>C</mi><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">A,B,C\\ldots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span></span></span></span>, from which you can form types with the constructors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">×</span></span></span></span>, and the unit type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>;</li>\n<li>a set of function symbols <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo separator=\"true\">,</mo><mi>g</mi><mo separator=\"true\">,</mo><mi>h</mi><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">f,g,h\\ldots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span></span></span></span>, each coming with a type of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>→</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">T\\rightarrow U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo separator=\"true\">,</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">T,U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> are types as defined above; from these, you can form terms using simply-typed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus syntax (with pairs), with the function symbols as basic building blocks (and variables, as usual);</li>\n<li>a set of equations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>=</mo><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">t=u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> between terms with the same type.</li>\n</ul>\n<p>Given a cartesian closed category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, you define <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}(\\mathcal C)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">)</span></span></span></span> as follows:</p>\n<ul>\n<li>there is one sort <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span></span></span></span> for each object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>;</li>\n<li>there is one function symbol <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>:</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>→</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>B</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner:\\ulcorner A\\urcorner\\to \\ulcorner B\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose amsrm\">┐</span></span></span></span> for each morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>∈</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f\\in\\mathcal C(A,B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span>;</li>\n<li>there is one equation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>=</mo><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">t=u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> for each pair of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-terms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo separator=\"true\">,</mo><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">t,u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> of the same type, built from the above language, such that their interpretation in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> gives the same morphism.</li>\n</ul>\n<p>Of course, we need to say what \"interpretation\" means.  This is as expected:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span></span></span></span> is interpreted by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, and the type constructors by products, internal homs and the terminal object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>;</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span></span></span></span> is interpreted by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>, and the remaining constructs of the simply-typed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus may be interpreted as usual, because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> is a CCC.</li>\n</ul>\n<p>A morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">S</mi><mo>→</mo><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb S\\to\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span> of simply-typed higher-order theories is defined as follows.  First, it is a pair of functions from sorts of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">S</span></span></span></span> to sorts <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span> and from function symbols of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">S</span></span></span></span> to function symbols of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span>.  This induces a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> from terms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">S</span></span></span></span> to terms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span> (acting homomorphically on types and constructors of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus).  We require that, for every equation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>=</mo><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">s=s&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">S</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>G</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(s)=G(s&#x27;)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> is an equation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span>.</p>\n<p>One then checks that every cartesian-closed functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi mathvariant=\"script\">C</mi><mo>→</mo><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">F:\\mathcal C\\to\\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> induces a morphism of simply-typed higher-order theories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">D</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}(\\mathcal C)\\to\\mathrm{Lang}(\\mathcal D)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span>, just by mapping <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>F</mi><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner FA\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span></span></span></span> to  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>F</mi><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner Ff\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span></span></span></span>.</p>\n<p>This defines a functor from CCCs to simply-typed higher-order theories, which is right adjoint to the \"syntactic category\" functor, taking a simply-typed higher-order theory <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span> and mapping it to the CCC <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Syn}(\\mathbb T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Syn</span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">T</span><span class=\"mclose\">)</span></span></span></span> whose objects are types of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span> and morphisms are terms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">T</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">T</span></span></span></span> modulo <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi><mi>η</mi></mrow><annotation encoding=\"application/x-tex\">\\beta\\eta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span></span></span></span>-equivalence.</p>",
        "id": 501755512,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1740477298
    },
    {
        "content": "<p>Of course, the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> above might be more than a CCC.  For example, it might be a Grothendieck topos.  In that case, there are at least three \"internal languages\" of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> that I can think of: the one I described above, the internal language as an elementary topos (a sort of higher-order set theory); and its geometric language (a sort of positive first-order theory with infinitary disjunctions).  And there's probably also some kind of Martin-Löf type theory too, because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> is also locally CCC...</p>\n<p>So, as it has abundantly been made clear in the above posts, \"the\" internal language is ambiguous if we do not specify which kind of categories (doctrine) we are regarding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> to be a member of.  However, in general practice this is usually <em>very</em> clear from the context.</p>",
        "id": 501758514,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1740478199
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501620680\">said</a>:</p>\n<blockquote>\n<p>But it's certainly true, for instance, that a topos has both a HOL internal language and an MLTT internal language.</p>\n</blockquote>\n<p>Both MLTT and HOL let you quantify across types, which I think is a really important example of the kind of ambiguity that is being discussed here. I have always thought of the \"internal language\" as one which, in Lawvere's words, \"free it of reliance on an external notion of infinite\" - although he was concerned with infinite diagrams and their limits which arguably requires a stronger and more explicit dependence on external indexing constructs than uniform quantification over all types.</p>",
        "id": 501811475,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1740491618
    },
    {
        "content": "<p>But as for myself I do not think of \"the internal language\" of topos theory as permitting quantification over all types. <br>\nOne can introduce type constants <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A,B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and give constructions and theorems like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo>:</mo><mi>O</mi><mi>b</mi><mi mathvariant=\"normal\">∣</mi><mo>−</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>:</mo><msup><mi>A</mi><mi>B</mi></msup><mo>×</mo><msup><mi>B</mi><mi>A</mi></msup><mo>∣</mo><mi>g</mi><mi>f</mi><mo>=</mo><mn>1</mn><mo>∧</mo><mi>g</mi><mi>f</mi><mo>=</mo><mn>1</mn><mo stretchy=\"false\">}</mo><mo>:</mo><mi>O</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">A, B : Ob |- \\{  (f, g) : A^B \\times B^A \\mid gf = 1 \\land gf = 1 \\}: Ob</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\">b</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9247em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\">b</span></span></span></span> but one cannot then apply these theorems to new objects <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C,D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>.</p>\n<p>I should go back and look at some of the internal language of topos theory papers and see if they are explicit about this distinction</p>",
        "id": 501812701,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1740491947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276839\">@Damiano Mazza</span> thanks for giving me the precise definition, now I have an exact picture of what <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> meant by syntactic doctrine (at least in the case of STLC, I guess there is no consensual general definition according to <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>'s comment). It still appears to me as a very \"extensional\"/non-computable definition, which was my concern (2). For it to be computable, you would need a way to enumerate all the objects and morphisms of your category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>. But to be fair I have never seen that claimed anywhere in the literature, it is just something I wish were true.</p>\n<p>Also there seems to be some huge redundancy in your mapping <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mo>⋅</mo><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner \\cdot \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord\">⋅</span><span class=\"mclose amsrm\">┐</span></span></span></span>, because one has a type/function symbol for <em>every</em> object/morphism, including those that are freely generated with products/internal homs; but those could just be expressed syntactically with the associated type and term constructors in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-calculus (i.e. product/arrow types and pairs/<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-abstractions). Am I missing something?</p>\n<p><span class=\"user-mention silent\" data-user-id=\"276839\">Damiano Mazza</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501758514\">said</a>:</p>\n<blockquote>\n<p>So, as it has abundantly been made clear in the above posts, \"the\" internal language is ambiguous if we do not specify which kind of categories (doctrine) we are regarding <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> to be a member of.  However, in general practice this is usually <em>very</em> clear from the context.</p>\n</blockquote>\n<p>Am I right to interpret this as saying that for any \"semantic\" doctrine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">D</span></span></span></span> (i.e. a 2-category of categories with structures such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{CCC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">CCC</span></span></span></span></span>), there should be a unique (up to equivalence of categories) syntactic doctrine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi mathvariant=\"fraktur\">D</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner \\mathfrak{D} \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathfrak\">D</span><span class=\"mclose amsrm\">┐</span></span></span></span> such that there exists an adjunction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">n</mi></mrow><mo>⊣</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Syn} \\dashv \\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Syn</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>:</mo><mi mathvariant=\"fraktur\">D</mi><mo>→</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi mathvariant=\"fraktur\">D</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang} : \\mathfrak{D} \\to \\ulcorner \\mathfrak{D} \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathfrak\">D</span><span class=\"mclose amsrm\">┐</span></span></span></span>? It does not seem to agree with what I understood from previous comments, that it is only <em>once you have fixed the (right) syntactic doctrine</em> that the adjunction holds, and then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> is unique simply by the uniqueness of right adjoints.</p>",
        "id": 501818984,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740493520
    },
    {
        "content": "<p>Yes, the internal language of any category in any doctrine is always huge, redundant, and noncomputable.  But in practice that's not an issue, because we don't ever actually work with it: when actually reasoning using this correspondence, we specify a small finite theory that is computable, and use the adjunction between theories and categories to conclude that once we can interpret the generating objects, morphisms, and equations of our theory in some category, we can automatically interpret any other constructions derived from them.</p>",
        "id": 501829948,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740496333
    },
    {
        "content": "<p>I have one correction to Damiano's  carefuldescription of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}(\\mathcal{C})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">)</span></span></span></span>: there should be one function symbol <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>:</mo><mi>T</mi><mo>→</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner : T \\to U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> for any types <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> (not just \"generating types\" of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span></span></span></span>) and any morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> from the interpretation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> to the interpretation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>.</p>",
        "id": 501830334,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740496444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"424412\">Patrick Nicodemus</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501811475\">said</a>:</p>\n<blockquote>\n<p>Both MLTT and HOL let you quantify across types</p>\n</blockquote>\n<p>What do you mean by that?  It sounds like a statement such as \"for all types X...\" which is not part of MLTT or HOL as I understand them.  (If \"MLTT\" has universes, then you can quantify over all types in some universe, but that's not exactly the same.)</p>",
        "id": 501830561,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740496507
    },
    {
        "content": "<p>I meant MLTT with one universe type, but I'll accept your distinction between small types and arbitrary types.<br>\nBy the acronym \"HOL\" I understand that variant of higher-order logic which is the foundation of the family of theorem provers called HOL, which is based on ML-style parametric polymorphism. Every theorem is implicitly quantified over all types in it, and you can apply this theorem with different instantiations of those type variables rather than re-proving the same theorem every time.</p>",
        "id": 501847805,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1740500168
    },
    {
        "content": "<p>Ah, I see.  That's not what topos theorists usually mean by \"HOL\".</p>",
        "id": 501859108,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740502733
    },
    {
        "content": "<p>I also wouldn't really call that \"quantification\", since there is no statement of the form \"for all types\" <em>inside</em> the language.  That sort of polymorphism can be obtained implicitly in the usual syntax/semantics framework by just observing that when we prove a theorem about \"arbitrary types\" what we are officially doing is working in a theory containing some \"axiomatic\" generating types, and according to the initiality/freeness of syntax we can then interpret that theory into any category, or any other theory, by sending those generating types anywhere we want.</p>",
        "id": 501859537,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740502844
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501830334\">said</a>:</p>\n<blockquote>\n<p>I have one correction to Damiano's  carefuldescription of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}(\\mathcal{C})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">)</span></span></span></span>: there should be one function symbol <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>:</mo><mi>T</mi><mo>→</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner : T \\to U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> for any types <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> (not just \"generating types\" of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span></span></span></span>) and any morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> from the interpretation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> to the interpretation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>.</p>\n</blockquote>\n<p>Ah, yes, sorry, I wrote too quickly.  In fact, the notation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose amsrm\">┐</span></span></span></span> is ambiguous, because one arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> may induce <em>several</em> function symbols, one for each possible decomposition of its domain/codomain.</p>\n<p>For example, an arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>×</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">f:A\\times B\\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> induces at least two function symbols,  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><msub><mo><mi mathvariant=\"normal\">⌝</mi></mo><mn>1</mn></msub><mo>:</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo>×</mo><mi>B</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>→</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>C</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner_1:\\ulcorner A\\times B\\urcorner\\to\\ulcorner C\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\"><span class=\"mclose amsrm\">┐</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7756em;vertical-align:-0.0833em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose amsrm\">┐</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>f</mi><msub><mo><mi mathvariant=\"normal\">⌝</mi></mo><mn>2</mn></msub><mo>:</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>×</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>B</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>→</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>C</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner f\\urcorner_2:\\ulcorner A\\urcorner\\times\\ulcorner B\\urcorner\\to\\ulcorner C\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\"><span class=\"mclose amsrm\">┐</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7756em;vertical-align:-0.0833em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose amsrm\">┐</span></span></span></span>.</p>",
        "id": 501862538,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1740503677
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"874654\">@Pablo Donato</span>, concerning the redundancy, what happens usually (as in this case) is that the redundancy is harmless because it only induces isomorphic objects when you take the syntactic category: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">C</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Syn}(\\mathrm{Lang}(\\mathcal C))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Syn</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"mclose\">))</span></span></span></span> is equivalent to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, so, for instance, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo><mo>×</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>B</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A\\urcorner\\times\\ulcorner B\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7756em;vertical-align:-0.0833em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mclose amsrm\">┐</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose amsrm\">┐</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi>A</mi><mo>×</mo><mi>B</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner A\\times B\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7756em;vertical-align:-0.0833em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose amsrm\">┐</span></span></span></span> become isomorphic.</p>",
        "id": 501862550,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1740503682
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"874654\">Pablo Donato</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501818984\">said</a>:</p>\n<blockquote>\n<p>Am I right to interpret this as saying that for any \"semantic\" doctrine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">D</span></span></span></span> (i.e. a 2-category of categories with structures such as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{CCC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">CCC</span></span></span></span></span>), there should be a unique (up to equivalence of categories) syntactic doctrine <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi mathvariant=\"fraktur\">D</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner \\mathfrak{D} \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathfrak\">D</span><span class=\"mclose amsrm\">┐</span></span></span></span> such that there exists an adjunction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">n</mi></mrow><mo>⊣</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Syn} \\dashv \\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Syn</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo>:</mo><mi mathvariant=\"fraktur\">D</mi><mo>→</mo><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi mathvariant=\"fraktur\">D</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang} : \\mathfrak{D} \\to \\ulcorner \\mathfrak{D} \\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathfrak\">D</span><span class=\"mclose amsrm\">┐</span></span></span></span>? It does not seem to agree with what I understood from previous comments, that it is only <em>once you have fixed the (right) syntactic doctrine</em> that the adjunction holds, and then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span> is unique simply by the uniqueness of right adjoints.</p>\n</blockquote>\n<p>No; fixing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo><mi mathvariant=\"normal\">⌜</mi></mo><mi mathvariant=\"fraktur\">D</mi><mo><mi mathvariant=\"normal\">⌝</mi></mo></mrow><annotation encoding=\"application/x-tex\">\\ulcorner \\mathfrak D\\urcorner</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mopen amsrm\">┌</span><span class=\"mord mathfrak\">D</span><span class=\"mclose amsrm\">┐</span></span></span></span> and composing with an adjunction out of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">D</span></span></span></span> gives counterexamples such as “the free Cartesian category generated by a type theory with only unary contexts”, by composing the standard syntax-semantics adjunction for bare categories with that for the free Cartesian category over a category. I think you ought to want something like monadicity for the syntax-semantics adjunction to get closer to uniqueness, but I’m not sure what to say here.</p>",
        "id": 501883435,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1740508281
    },
    {
        "content": "<p>Something that should be said is that some categorical logicians prefer to formulate the syntax/semantics relationship as an <em>equivalence</em> of categories.  This requires defining \"morphisms of theories\" to be essentially functors between their corresponding syntactic categories, which I regard as doing a sort of violence to the notion of \"syntax\".  But if you do take that perspective, then of course \"the category of theories\" corresponding to a given category of structured categories <em>is</em> unique, since it must be equivalent to the latter.</p>",
        "id": 501884191,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740508561
    },
    {
        "content": "<p>You can define morphisms of theories syntactically, i.e. specifying a term in the target theory for each operator in the source theory. This leads to an equivalence without being tautological. But, for whatever reason, this seems to be uncommon in the literature.</p>",
        "id": 501887541,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1740509752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span> hmm yes I guess at this point, one might as well work directly with the syntactic categories.</p>\n<p><span class=\"user-mention\" data-user-id=\"609515\">@Kevin Carlson</span> I am not sure I follow your counter-example. Are you saying that even when both the syntactic and semantic doctrines are fixed, one can find multiple syntax-semantics adjunctions between those?</p>",
        "id": 501887942,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740509883
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> well, at least a little <em>less</em> tautological...</p>",
        "id": 501888073,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740509939
    },
    {
        "content": "<p>Well, I would argue no more tautological than the correspondence between theories and categories.</p>",
        "id": 501891668,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1740511166
    },
    {
        "content": "<p>I also have a methodological question which is a bit orthogonal. Currently I am trying to devise a new syntax for proofs in the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">⊤</mi><mo separator=\"true\">,</mo><mo>∧</mo><mo separator=\"true\">,</mo><mo>⇒</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{\\top, \\wedge, \\Rightarrow\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">⊤</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∧</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span>-fragment of intuitionistic logic inspired by Peirce's existential graphs. The structure of terms is quite different from (I think richer than) STLC, but it should still be sound by interpretation in any CCC.</p>\n<p>Since I have a hard time devising a bidirectional translation between my system and STLC (which if I understood correctly should give an equivalence between the corresponding syntactic doctrines), I was considering finding instead a syntax-semantics adjunction of type <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">n</mi></mrow><mo>⊣</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Syn} \\dashv \\mathrm{Lang}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Syn</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span></span></span></span>. Do you think this is a reasonable way to proceed, e.g. has it been done before for another formal proof system? My hope is that this could help me formulate the right syntax for my system with the right equational theory (something akin to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi><mi>η</mi></mrow><annotation encoding=\"application/x-tex\">\\beta\\eta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span></span></span></span>-equivalence). Somehow I have the feeling that this is not the intended usage of this kind of syntax-semantics adjunction, that they always come <em>a posteriori</em> when the syntax is already well-understood.</p>",
        "id": 501892065,
        "sender_full_name": "Pablo Donato",
        "timestamp": 1740511299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501884191\">said</a>:</p>\n<blockquote>\n<p>Something that should be said is that some categorical logicians prefer to formulate the syntax/semantics relationship as an <em>equivalence</em> of categories.  This requires defining \"morphisms of theories\" to be essentially functors between their corresponding syntactic categories, which I regard as doing a sort of violence to the notion of \"syntax\".</p>\n</blockquote>\n<p>I agree, and this sort of violence is typical when people seek an equivalence when nature is really giving them an adjunction.   Any sort of adjunction can be \"improved\" to get an equivalence .   For example, in Galois theory, given an inclusion of fields <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>⊆</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">k \\subseteq K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> we get an adjunction between the poset of intermediate fields <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>⊆</mo><mi>F</mi><mo>⊆</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">k \\subseteq F \\subseteq K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> and the (opposite of) the poset of subgroups of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Gal</mtext><mo stretchy=\"false\">(</mo><mi>K</mi><mi mathvariant=\"normal\">∣</mi><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Gal}(K|k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Gal</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>.   This is pretty easy to define.  But people prefer working with an equivalence, so they put on extra conditions to make that so.  Then things inevitably become more technical.  </p>\n<p>Which is okay, but I think it's always good to start by stating when you have an <em>adjunction</em>, which is often simple and conceptually clear, before mucking around to get an <em>equivalence</em>.</p>",
        "id": 501901209,
        "sender_full_name": "John Baez",
        "timestamp": 1740514229
    },
    {
        "content": "<p>Although there are different ways of making an adjunction into an equivalence.  One way, which I think the Galois theory people do, is to just restrict to the subcategories of fixed points.  Another, which is what's happening with syntax, is if the left adjoint (say) is essentially surjective, you can replace its domain by the full image of the left adjoint, or equivalently by the Kleisli category of the induced monad.</p>",
        "id": 501907842,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740516823
    },
    {
        "content": "<p>Yes, the Galois people seem to more or less restrict to the subcategories of fixed points - though looking it over, they also often require that the extension <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> be finite-dimensional over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>, and I'm not sure what that's for.</p>",
        "id": 501909855,
        "sender_full_name": "John Baez",
        "timestamp": 1740517566
    },
    {
        "content": "<p>Is there anything on the nLab about taking the subcategories of fixed points of an adjunction to get an equivalence?   I was wanting to refer to something like that, but I couldn't instantly find it.    They have it for posets <a href=\"https://ncatlab.org/nlab/show/Galois+connection#Definition\">here</a>.</p>",
        "id": 501909990,
        "sender_full_name": "John Baez",
        "timestamp": 1740517626
    },
    {
        "content": "<p>What happens if you apply <em>that</em> trick to some familiar syntax-semantics adjunction?</p>",
        "id": 501910308,
        "sender_full_name": "John Baez",
        "timestamp": 1740517771
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/fixed%20point%20of%20an%20adjunction\">[[fixed point of an adjunction]]</a>?</p>",
        "id": 501916301,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740520302
    },
    {
        "content": "<p>Another weird thing happens with syntax/semantics that the category of theories is naturally a 1-category, while the category of structured categories is naturally a 2-category.  If you stick to strict morphisms of theories that send generators to generators, there seems no way to boost the category of theories up to a 2-category, and no way to make Lang into a 2-functor.  So to get an adjunction you kind of have to consider instead a 1-category of structured categories (and strictly-structure-preserving functors).</p>",
        "id": 501919574,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740521601
    },
    {
        "content": "<p>In that picture, there are generally no nontrivial fixed points of the adjunction, since Syn(Lang(C)) will have a lot of extra copies of the objects of C, and Lang(Syn(T)) will have a lot of extra generating types arising from terms of T.</p>",
        "id": 501919753,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740521668
    },
    {
        "content": "<p>But you kind of want to say that every C is fixed, since the counit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">g</mi></mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Syn}(\\mathrm{Lang}(C)) \\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Syn</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">Lang</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> is always an <em>equivalence</em>, even though that's not visible to the 1-adjunction.</p>",
        "id": 501919828,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740521704
    },
    {
        "content": "<p>I guess if the doctrine allows equations between <em>types</em>, then Lang will remember those and you can get a counit that's always an isomorphism so every category is fixed.  In that case the fixed points on the other side should be the theories that are \"complete\", i.e. in which every type is equal to a generating type and every term is equal to a function symbol.</p>",
        "id": 501920119,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1740521845
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"874654\">Pablo Donato</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/.22The.22.20internal.20language/near/501887942\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"609515\">Kevin Carlson</span> I am not sure I follow your counter-example. Are you saying that even when both the syntactic and semantic doctrines are fixed, one can find multiple syntax-semantics adjunctions between those?</p>\n</blockquote>\n<p>My example was to give two such adjunctions but with two different syntactic doctrines (unary type theory and simple type theory, both without function types, both mapping to Cartesian categories.) But you should be able to cook up an example with both endpoints fixed, for instance whenever the semantic doctrine admits a nontrivial left adjoint endomorphism.</p>",
        "id": 501921970,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1740522612
    }
]