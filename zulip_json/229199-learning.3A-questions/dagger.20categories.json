[
    {
        "content": "<p>Are there cases where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>†</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^\\dagger</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">†</span></span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> are both defined but mean different things? If not, can the two notations be unified? If yes, what are interesting examples?</p>",
        "id": 193821475,
        "sender_full_name": "Faré",
        "timestamp": 1586811997
    },
    {
        "content": "<p>The dagger is an operation on morphisms in a special kind of category (a dagger category), whereas the opposite is an operation on categories. So they are not directly comparable.</p>\n<p>There are dagger categories that are not equivalent to their opposites, which is possibly what you are getting at. This is true of the prototypical example of the category of Hilbert spaces and linear maps, where the dagger is the adjoint.</p>",
        "id": 193826509,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1586814975
    },
    {
        "content": "<p>A dagger is a contravariant endofunctor that squares to the identity, so every dagger category is not only equivalent, but <em>isomorphic</em> to its opposite. </p>\n<p>Maybe you are thinking of something else, eg the \"dual\" functor on Banach spaces?</p>",
        "id": 193827099,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586815372
    },
    {
        "content": "<p>They are isomorphic only in a contravariant sense. I guess I always understood isomorphism to be covariant unless explicitly stated.</p>",
        "id": 193827273,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1586815482
    },
    {
        "content": "<p>What is \"a covariant isomorphism between a category and its opposite\"?</p>",
        "id": 193827455,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586815587
    },
    {
        "content": "<p>It is a (covariant) invertible functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C^{op} \\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, which is (by definition) a contravariant functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C \\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span>. Maybe I am missing your point.</p>",
        "id": 193827809,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1586815807
    },
    {
        "content": "<p>In my answer, I was trying to explain how the category Hilb is not like the category Rel.</p>",
        "id": 193827922,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1586815876
    },
    {
        "content": "<p>I am saying that a dagger is exactly that, and that in that respect Hilb is exactly like Rel.</p>",
        "id": 193828277,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586816073
    },
    {
        "content": "<p>The example of dagger in Hilbert spaces being adjoint is helpful. But I'm still confused as to how confused I may or may not be. Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">t</span></span></span></span> a dagger category with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">_</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">{\\_}^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9743919999999999em;vertical-align:-0.31em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> as its dagger? If not, why not?</p>",
        "id": 193828279,
        "sender_full_name": "Faré",
        "timestamp": 1586816075
    },
    {
        "content": "<p>I think co/contravariant are distracting terms to get caught up in here. The only way you would want to talk about functors from a category to opposite is to think of them as covariant because a contravariant functor from a category to its opposite amounts to a covariant functor from a category to itself.</p>",
        "id": 193828387,
        "sender_full_name": "Matt Feller",
        "timestamp": 1586816141
    },
    {
        "content": "<p>† applies to morphisms, whereas ᵒᵖ applies to objects of Cat.</p>",
        "id": 193828546,
        "sender_full_name": "James Wood",
        "timestamp": 1586816242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276178\">@Faré</span> A dagger is the identity on objects, inverts the direction of morphisms, and squares to the identity.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mo>−</mo><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">-^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.747722em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mbin\">−</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> is not a dagger on Cat because it is not the identity on categories and it does not invert the direction of functors.</p>",
        "id": 193828555,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586816247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276178\">Faré</span> <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Dagger.20categories/near/193828279\" title=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Dagger.20categories/near/193828279\">said</a>:</p>\n<blockquote>\n<p>The example of dagger in Hilbert spaces being adjoint is helpful. But I'm still confused as to how confused I may or may not be. Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">t</span></span></span></span> a dagger category with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">_</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">{\\_}^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9743919999999999em;vertical-align:-0.31em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> as its dagger? If not, why not?</p>\n</blockquote>\n<p>When you apply op to a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">C\\to D</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, it gives you a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup><mo>→</mo><msup><mi>D</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{op}\\to D^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> instead of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">D\\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>",
        "id": 193828669,
        "sender_full_name": "Matt Feller",
        "timestamp": 1586816314
    },
    {
        "content": "<p>It does however invert the direction of natural transformations: it's \"contravariant on 2-morphisms\" in the 2-category Cat.</p>",
        "id": 193828698,
        "sender_full_name": "Amar Hadzihasanovic",
        "timestamp": 1586816335
    },
    {
        "content": "<p>Also, where does it matter to make it <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup><mo>⟶</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C^{op} \\longrightarrow C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟶</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> versus <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>⟶</mo><msup><mi>C</mi><mrow><mi>o</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C \\longrightarrow C^{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟶</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> ? When I see say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><msubsup><mi>d</mi><mi>A</mi><mo lspace=\"0em\" rspace=\"0em\">†</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">Id_A^{\\dagger}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2605469999999999em;vertical-align:-0.293531em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9670159999999999em;\"><span style=\"top:-2.4064690000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">A</span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">†</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.293531em;\"><span></span></span></span></span></span></span></span></span></span> my brain has trouble parsing the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> as being an opposite being righted rather than a normal thing being opposed.</p>\n<p>I guess that as a computer scientist, I'm utterly baffled at the seemingly very complex type inference that mathematicians (and even worse, physicists) take as granted and free, yet that I trouble running in my head.</p>",
        "id": 193828789,
        "sender_full_name": "Faré",
        "timestamp": 1586816391
    },
    {
        "content": "<p>Thanks, makes much more sense now.</p>",
        "id": 193829166,
        "sender_full_name": "Faré",
        "timestamp": 1586816568
    },
    {
        "content": "<p>It's a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mi>C</mi><mo>→</mo><msup><mi>C</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">F: C \\to C^{\\mathrm{op}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span></span> that has an inverse.</p>",
        "id": 193829358,
        "sender_full_name": "John Baez",
        "timestamp": 1586816717
    },
    {
        "content": "<p>An isomorphism between categories is a functor that has an inverse.</p>",
        "id": 193829396,
        "sender_full_name": "John Baez",
        "timestamp": 1586816754
    },
    {
        "content": "<p>A functor F : Cᵒᵖ → D contains a function ∀BA. Cᵒᵖ(B, A) → D(F B, F A), whereas a functor F : C → Dᵒᵖ contains a function ∀AB. C(A, B) → Dᵒᵖ(F A, F B). When you expand the definition of _ᵒᵖ, these are the same. The laws work out to be equivalent too.</p>",
        "id": 193829566,
        "sender_full_name": "James Wood",
        "timestamp": 1586816866
    },
    {
        "content": "<p>i dont like defining dagger categories as a functor</p>",
        "id": 193832129,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586818800
    },
    {
        "content": "<p>it makes them sound evil when they arent</p>",
        "id": 193832214,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586818804
    },
    {
        "content": "<p>or at least i don't <em>think</em> they are? i guess it depends on exactly what you mean</p>",
        "id": 193832319,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586818885
    },
    {
        "content": "<p>but you can rephrase the definition as</p>\n<p>for each object A and object B, a function †_A,B : Hom(A, B) → Hom(B, A), such that:</p>\n<ul>\n<li>for all A, we have †_A,A(id_A) = id_A</li>\n<li>for all A -f-&gt; B -g-&gt; C, we have †_A,C(g ∘ f) = †_A,B(f) ∘ †_B,C(g)</li>\n<li>†_A,B and †_B,A are inverse</li>\n</ul>",
        "id": 193832874,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586819195
    },
    {
        "content": "<p>there is no reference here to equality of objects!</p>",
        "id": 193833104,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586819336
    },
    {
        "content": "<p>...huh. <a href=\"https://mathoverflow.net/a/220108\" title=\"https://mathoverflow.net/a/220108\">https://mathoverflow.net/a/220108</a></p>",
        "id": 193833442,
        "sender_full_name": "sarahzrf",
        "timestamp": 1586819544
    },
    {
        "content": "<p>Thank you all for bearing with me. This mathoverflow question was great, especially the \"undirected category\" isomorphism.</p>",
        "id": 193835482,
        "sender_full_name": "Faré",
        "timestamp": 1586821188
    },
    {
        "content": "<p>Are dagger categories known to be some kind of enriched, internal, or generalized multi- or poly-category? The description on that mathoverflow question definitely has that flavor</p>",
        "id": 276680382,
        "sender_full_name": "Max New",
        "timestamp": 1648243338
    },
    {
        "content": "<p>The closest I've ever come to something like this is identifying a bicategory of \"dagger-matrices\" in which dagger-categories should be the monads.  A dagger-matrix is a matrix (of sets) equipped with an isomorphism to its transpose.  Unfortunately any dagger-matrix must be square, so the bicategory of dagger-matrices is just a disjoint union of monoidal categories.  It gets a little more interesting when you beef it up to a double category, but the lack of non-endo profunctors makes it hard to do any of the formal category theory that you can usually do with monads in a bicategory or double category.</p>",
        "id": 276681072,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1648243844
    },
    {
        "content": "<p>The double category should be enough to get the right definition of dagger functor and dagger transformation though? You just don't get very many dagger profunctors I guess</p>",
        "id": 276682564,
        "sender_full_name": "Max New",
        "timestamp": 1648244663
    },
    {
        "content": "<p>dagger functor, certainly.  Maybe dagger transformation -- I'm not sure I know what a dagger transformation is.</p>",
        "id": 276688069,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1648247947
    },
    {
        "content": "<p>On page 5 after definition 2.6 (<a href=\"https://arxiv.org/pdf/1803.06651.pdf\">https://arxiv.org/pdf/1803.06651.pdf</a>) the authors remark,</p>\n<blockquote>\n<p>There is no need to go further and define ‘dagger natural transformations, if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi><mo>:</mo><mi>F</mi><mo>⇒</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\"> \\sigma:F\\Rightarrow G </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> is a natural transformation between dagger functors, then taking daggers componentwise defines a natural transformation  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mi mathvariant=\"normal\">†</mi></msup><mo>:</mo><mi>G</mi><mo>⇒</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\"> \\sigma^\\dag :G\\Rightarrow F </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">†</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span></p>\n</blockquote>",
        "id": 276740096,
        "sender_full_name": "Cole Comfort",
        "timestamp": 1648320740
    },
    {
        "content": "<p>Hmm.  That makes me think that maybe there isn't even a double category.</p>",
        "id": 276740135,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1648320836
    },
    {
        "content": "<p>A morphism of dagger-matrices should preserve the involutions, but if there are different vertical arrows on the right and left, it's not clear what that should mean.</p>",
        "id": 276740202,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1648320905
    }
]