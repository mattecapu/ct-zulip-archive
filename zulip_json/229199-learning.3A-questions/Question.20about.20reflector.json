[
    {
        "content": "<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">I:C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> be a fully faithful functor. Is it true that a reflector (= left adjoint left inverse) for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> is the same thing as a terminal retraction (= left inverse) for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>?<br>\n(In general, there seems to be a lot of results in the literature for when a left adjoint is a left inverse, but I can't seem to find much for when a left inverse is a left adjoint. Does anyone know where to look for results of this sort?)</p>",
        "id": 468815433,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1725891909
    },
    {
        "content": "<p><del>I believe this is actually the first lemma proven in the elephant (1.1.1)</del></p>",
        "id": 468821276,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1725892978
    },
    {
        "content": "<p>I just had a look and the answer is not quite—that lemma has the additional assumption that we have an adjunction already</p>",
        "id": 468825148,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1725893685
    },
    {
        "content": "<p>However it does relax the notion of reflector to any left adjoint which is separately a left inverse—i.e., the isomorphism witnessing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>’s left inverse isn’t required to be the counit</p>",
        "id": 468825569,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1725893776
    },
    {
        "content": "<p>Is this a counterexample? Take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mn mathvariant=\"bold\">1</mn></mrow><annotation encoding=\"application/x-tex\">C = \\mathbf{1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathbf\">1</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>=</mo><mn mathvariant=\"bold\">2</mn></mrow><annotation encoding=\"application/x-tex\">D = \\mathbf{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathbf\">2</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> the inclusion as an initial segment. This is full and faithful and has a left inverse (the unique map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn mathvariant=\"bold\">2</mn><mo>→</mo><mn mathvariant=\"bold\">1</mn></mrow><annotation encoding=\"application/x-tex\">\\mathbf{2} \\to \\mathbf{1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathbf\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathbf\">1</span></span></span></span>), but the (unique) left inverse is not a left adjoint: a unit for the adjunction would have to give a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>→</mo><mn>0</mn><mo>∈</mo><mn mathvariant=\"bold\">2</mn></mrow><annotation encoding=\"application/x-tex\">1 \\to 0 \\in \\mathbf{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathbf\">2</span></span></span></span>.</p>",
        "id": 468831204,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1725894959
    },
    {
        "content": "<p>Very good, that <em>is</em> a counterexample. Thanks.</p>",
        "id": 468834169,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1725895544
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275989\">Paolo Perrone</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/468815433\">said</a>:</p>\n<blockquote>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>:</mo><mi>C</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">I:C\\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> be a fully faithful functor. Is it true that a reflector (= left adjoint left inverse) for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> is the same thing as a terminal retraction (= left inverse) for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>?</p>\n</blockquote>\n<p>I am here to whine slightly about the use of 'reflector' to mean 'left adjoint left inverse'.  I use 'reflector', in the sense approved by the nLab, to mean the left adjoint to the inclusion of a <a href=\"https://ncatlab.org/nlab/show/reflective+subcategory#definition\">reflective subcategory</a>; such a thing is a left inverse of the inclusion <em>up to natural isomorphism</em>.   Of course it's possible you are using 'inverse' to mean 'inverse up to natural isomorphism' in the modern HoTT-approved sense, in which case your sin is forgiven.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>    </p>\n<p>John Gray used <strong>lali</strong> as short for 'left adjoint left inverse', where the left inverse was 'on the nose' rather than up to natural isomorphism, and that seems like a fine name for this more technical, evil concept.</p>\n<p>There's also a can of worms about the precise definition of 'reflective subcategory', but see the nLab link for more about that.</p>",
        "id": 468901488,
        "sender_full_name": "John Baez",
        "timestamp": 1725910877
    },
    {
        "content": "<p>Can we please use terminology like \"strict\" rather than \"evil\"? The latter is non-descriptive and misleading.</p>",
        "id": 468921111,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725917642
    },
    {
        "content": "<p>I am not going to change; I use 'strict' in all sorts of technical senses (e.g 'strict monoidal category') and 'evil' in an informal way to mean 'dangerously strict'.</p>",
        "id": 468929201,
        "sender_full_name": "John Baez",
        "timestamp": 1725920833
    },
    {
        "content": "<p>Not sure if this is useful, but since I saw the word \"terminal\" in a previous post, I thought it might be helpful to mention that a reflection for a full subcategory <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ι</mi><mo>:</mo><mi>B</mi><mo>↪</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\iota: B \\hookrightarrow A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ι</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6943em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is the same as saying that the fibers of the domain functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">d</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">m</mi></mrow><mo>:</mo><mi>A</mi><mo>↓</mo><mi>ι</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{dom}: A \\downarrow \\iota \\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">dom</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↓</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ι</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> (i.e., the pullbacks along the functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn mathvariant=\"bold\">1</mn><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{1} \\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathbf\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>) all have an initial object.</p>\n<p>We can interpret this as suggesting that the functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">d</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">m</mi></mrow><mo>:</mo><mi>A</mi><mo>↓</mo><mi>ι</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{dom}: A \\downarrow \\iota \\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">dom</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↓</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ι</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> displays a kind of weak initial surjectivity. This intuition can be extended to what might be thought of as constructing a section for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">d</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">m</mi></mrow><mo>:</mo><mi>A</mi><mo>↓</mo><mi>ι</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{dom}: A \\downarrow \\iota \\to A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">dom</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↓</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ι</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> (which is the reflector). This perspective is where the notion of an \"initial retraction\" might come from.</p>",
        "id": 468940227,
        "sender_full_name": "Rémy Tuyéras",
        "timestamp": 1725925783
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/468929201\">said</a>:</p>\n<blockquote>\n<p>I am not going to change; I use 'strict' in all sorts of technical senses (e.g 'strict monoidal category') and 'evil' in an informal way to mean 'dangerously strict'.</p>\n</blockquote>\n<p>Could you explain how a lali is \"dangerously\" strict?</p>",
        "id": 469002931,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725951833
    },
    {
        "content": "<p>Consider the reflector for the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">A</mi><mi mathvariant=\"sans-serif\">b</mi><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathsf{AbGp} \\to \\mathsf{Gp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">AbGp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Gp</span></span></span></span></span>.  Is it a left adjoint left inverse?    According to the John Gray's definition, this requires that the inclusion followed by the reflector be <em>equal</em> to the identity functor on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">A</mi><mi mathvariant=\"sans-serif\">b</mi><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">r</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{AbGrp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">AbGrp</span></span></span></span></span>.</p>\n<p>Let's see.   Say I have an abelian group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, think of it as a group, and then abelianize it by forming the quotient <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">A/[A,A]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span></span></span></span>.   Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">A/[A,A]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span></span></span></span> <em>equal</em> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>?  It's obviously <em>isomorphic</em> via the quotient map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">A \\to A/[A,A]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span></span></span></span>.  But are the elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">A/[A,A]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span></span></span></span> <em>exactly the same</em> as elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>?   It seems they might instead be equivalence classes of elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, each class containing a single element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>.   Then the quotient map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">A \\to A/[A,A]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span></span></span></span> sends <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>a</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{a\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">}</span></span></span></span>, so it's <em>not</em> the identity.</p>\n<p>But of course we shouldn't really have to worry about such things: we are sinking into nitpicky details that are not mathematically interesting.    A less strict definition would avoid this problem by requiring merely that the inclusion followed by the reflector be naturally isomorphic to the identity.</p>",
        "id": 469116722,
        "sender_full_name": "John Baez",
        "timestamp": 1725979628
    },
    {
        "content": "<p>This doesn't show that lalis are dangerously strict, though. It simply shows there are examples of reflections that are not lalis.</p>",
        "id": 469126089,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725981189
    },
    {
        "content": "<p>I am also interested in the choice of this particular adverb</p>",
        "id": 469126738,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1725981372
    },
    {
        "content": "<p>Well, by </p>\n<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469126089\">said</a>:</p>\n<blockquote>\n<p>This doesn't show that lalis are dangerously strict, though. It simply shows there are examples of reflections that are not lalis.</p>\n</blockquote>\n<p>The 'danger' is that when you want to apply the concept of lali to examples, you must peer very carefully at nuances of definitions.  By replacing the reflector for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">A</mi><mi mathvariant=\"sans-serif\">b</mi><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">G</mi><mi mathvariant=\"sans-serif\">p</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathsf{AbGp} \\to \\mathsf{Gp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">AbGp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Gp</span></span></span></span></span> with a naturally isomorphic functor, I believe I can get a lali.  But the construction, or even thinking about this issue at all, is waste of time.   Category theory was designed to avoid this sort of fiddling about.   If we'd defined a lali to be a left adjoint functor that was left inverse up to natural isomorphism, we could avoid all this bureaucratic baloney.</p>",
        "id": 469130656,
        "sender_full_name": "John Baez",
        "timestamp": 1725982392
    },
    {
        "content": "<p>(By the way, for all I know, people now <em>do</em> define a lali to be a left adjoint functor that's a left inverse up to natural isomorphism.  I just had the misfortune, when writing a paper about structured cospans with some wonderful coauthors, to need to cite results about lalis and ralis which we could only find in papers that defined these concepts in the original overly strict way.)</p>",
        "id": 469131619,
        "sender_full_name": "John Baez",
        "timestamp": 1725982642
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469130656\">said</a>:</p>\n<blockquote>\n<p>The 'danger' is that when you want to apply the concept of lali to examples, you must peer very carefully at nuances of definitions.</p>\n</blockquote>\n<p>But is this not the same as the situation with strict monoidal categories? Isn't this exactly the role the adjective \"strict\" is playing?</p>",
        "id": 469132125,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725982763
    },
    {
        "content": "<p>If someone had stated a \"strictification theorem for lalis\" stating that every \"weak lali\" is equivalent to a \"strict lali\", I would tolerate them going ahead and proving lots of theorems about \"strict lalis\", since I could apply these to weak lalis via this strictification theorem.   But instead it seems that people - the sources I was reading, anyway - proved a bunch of theorems about \"strict lalis\" (which they just called \"lalis\") without ever proving a strictification theorem (or giving a counterexample to show such a theorem was impossible).   This leads to the feeling of disgust that prompts the term \"evil\": I am being forced to deal with a messy situation.</p>",
        "id": 469134167,
        "sender_full_name": "John Baez",
        "timestamp": 1725983217
    },
    {
        "content": "<p>Maybe it is easier to see <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> 's viewpoint if we try to quantify the amount of new information that the reflector provides to us.</p>\n<p>For example, if we have a strict left inverse, then we gain no new information, but a left inverse  holding up to isomorphism would usually give us rewritting formulas for the \"points\" of the objects being reflected onto themselves. This new information can be valuable for computation.</p>\n<p>Maybe instead of \"evil\" one could say \"worthless\" and \"ineffective\", as in we gain nothing, and we are just stuck in a loop of non-information</p>",
        "id": 469141909,
        "sender_full_name": "Rémy Tuyéras",
        "timestamp": 1725984542
    },
    {
        "content": "<p>Given an adjunction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊣</mo><mi>R</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi mathvariant=\"script\">D</mi><mo>→</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">L \\dashv R \\colon \\mathcal D \\to \\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> in which the counit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> is invertible, we have a family of isomorphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ε</mi><mi>D</mi></msub><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>L</mi><mi>R</mi><mi>D</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon_D \\colon LRD \\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>. We may form a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\mathcal C&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> by adjoining a new isomorphic object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>D</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>≅</mo><mi>R</mi><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D&#x27; \\cong RD</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> for each object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>∈</mo><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">D \\in \\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, and define a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi mathvariant=\"script\">D</mi><mo>→</mo><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">R&#x27; \\colon \\mathcal D \\to \\mathcal C&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>D</mi><mo>:</mo><mo>=</mo><msup><mi>D</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">R&#x27;D := D&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>. Finally, define a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>→</mo><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">L&#x27; \\colon \\mathcal C&#x27; \\to \\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> which acts as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> on objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, sends each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>D</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">D&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, and sends each freely added isomorphism to the isomorphism defined by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ε</mi><mi>D</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\varepsilon_D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>≃</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C&#x27; \\simeq \\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊣</mo><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">L&#x27; \\dashv R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>, which is equivalent as an adjunction to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊣</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L \\dashv R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊣</mo><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">L&#x27; \\dashv R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is lali.</p>",
        "id": 469142643,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725984678
    },
    {
        "content": "<p>There's surely a more abstract way to prove reflections can be strictified by exhibiting them as the pseudoalgebras for a 2-monad, but hopefully this at least indicates that it is possible to strictify reflections.</p>",
        "id": 469143306,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725984825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276730\">@Rémy Tuyéras</span>: exactly the same argument you give could be applied to strict monoidal categories.</p>",
        "id": 469143528,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725984873
    },
    {
        "content": "<p>Which is why I think the adjective \"strict\" suffices.</p>",
        "id": 469143660,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725984912
    },
    {
        "content": "<p>“Strict reflections” (I usually call them split reflections) are the coalgebras for a comonad on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><msup><mi mathvariant=\"bold\">t</mi><mn mathvariant=\"bold\">2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Ca</span><span class=\"mord\"><span class=\"mord mathbf\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>. The action on objects involves taking comma categories. I suppose it would not be hard to check that this underlies a 2-comonad.</p>",
        "id": 469146478,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1725985521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276730\">Rémy Tuyéras</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469141909\">said</a>:</p>\n<blockquote>\n<p>Maybe instead of \"evil\" one could say \"worthless\" and \"ineffective\", as in we gain nothing, and we are just stuck in a loop of non-information</p>\n</blockquote>\n<p>I’m always a little perplexed by the implied ethics of the term “evil” and I think “worthless” / “ineffective” take it a step further. Imagine pointing at someone else’s work and saying “that’s evil”—now image pointing at it and saying “that’s worthless”. I don’t think this is conducive to good science.</p>\n<p>The point is not that it’s not important to work up to invariance under equivalence (you’ll note I interpreted left inverse as implicitly up to isomorphism). The point is that this terminology feels unneeded (we already have the word “strict”), uninformative (evil has a very particular flavour as a word which is entirely unrelated to equivalence or invariance thereunder), and unscientific (it introduces a moral dimension to mathematics which, as we know from history, has only ever served to hinder progress—think “you can’t take the root of -1, that’s evil”). Defining evil as “dangerously strict” forces one to ask: in danger of what? If the answer is someone else being unable to use the result, I agree that this is a problem, but not a danger in the moral sense.</p>",
        "id": 469152050,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1725986772
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469142643\">said</a>:</p>\n<blockquote>\n<p>Given an adjunction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊣</mo><mi>R</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi mathvariant=\"script\">D</mi><mo>→</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">L \\dashv R \\colon \\mathcal D \\to \\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span> in which the counit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> is invertible, we have a family of isomorphisms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ε</mi><mi>D</mi></msub><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>L</mi><mi>R</mi><mi>D</mi><mo>→</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon_D \\colon LRD \\to D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>. We may form a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\mathcal C&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> by adjoining a new isomorphic object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>D</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>≅</mo><mi>R</mi><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D&#x27; \\cong RD</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> for each object <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>∈</mo><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">D \\in \\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, and define a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi mathvariant=\"script\">D</mi><mo>→</mo><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">R&#x27; \\colon \\mathcal D \\to \\mathcal C&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>D</mi><mo>:</mo><mo>=</mo><msup><mi>D</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">R&#x27;D := D&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>. Finally, define a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>→</mo><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">L&#x27; \\colon \\mathcal C&#x27; \\to \\mathcal D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span> which acts as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> on objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, sends each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>D</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">D&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, and sends each freely added isomorphism to the isomorphism defined by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ε</mi><mi>D</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\varepsilon_D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"script\">C</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>≃</mo><mi mathvariant=\"script\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal C&#x27; \\simeq \\mathcal C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.05834em;\">C</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊣</mo><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">L&#x27; \\dashv R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>, which is equivalent as an adjunction to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊣</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">L \\dashv R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊣</mo><msup><mi>R</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">L&#x27; \\dashv R&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is lali.</p>\n</blockquote>\n<p>It’s not possible to do this strictification without changing the categories up to equivalence, though, which is an important detail; I imagine all this was the water in which John Gray was swimming but the ongoing shortage of good books on 2-category theory means these questions still slow a lot of people down. It’s inconvenient.</p>",
        "id": 469155264,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1725987483
    },
    {
        "content": "<p>Yes, this is an important thing to note, but the same is also true in general for strictification of monoidal categories.</p>",
        "id": 469160394,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725988758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460737\">Nathan Corbyn</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469152050\">said</a>:</p>\n<blockquote>\n<p>I’m always a little perplexed by the implied ethics of the term “evil” and I think “worthless” / “ineffective” take it a step further. Imagine pointing at someone else’s work and saying “that’s evil”—now image pointing at it and saying “that’s worthless”. I don’t think this is conducive to good science.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"460737\">@Nathan Corbyn</span>, I agree with you. I usually try to remain neutral about what should be deemed useful or not, as there are as many reasons to pursue something as there are questions to answer.</p>\n<p>I was trying to see if we could make sense of <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>'s intuition in terms of information (perhaps entropy?). I agree that \"worthless\" is an inappropriate term to use (mostly if directed toward a colleague's work), but I had hoped other terms could be proposed.</p>\n<p>I'm hesitant about \"strict\" though, not that it is not a perfectly acceptable term, but mainly because John specifically mentioned the encoding of elements. For these kinds of questions, there’s always more than just an isomorphism at play; usually, there is a direction/strategy in how one wants to rewrite the elements, but this is very specific to the rewritting story. Anyway, I personally don't mind using \"strict\" if the purpose is to talk about the collection of possible reflectors</p>",
        "id": 469165263,
        "sender_full_name": "Rémy Tuyéras",
        "timestamp": 1725989836
    },
    {
        "content": "<p>By the way, I don't know anyone who ever used the term \"evil\" without smiling: as far as I know it was a joke started by my friend James Dolan, to dramatize the difficulties caused by strict concepts.     So all discussions of the \"implied ethics\", or imagined scenarios of someone pointing at someone's work and saying \"that's evil\", leaving me scratching my head.   I am, however, convinced by now that it's a risky joke to make in a public forum (like many jokes I am tempted to make).</p>",
        "id": 469172216,
        "sender_full_name": "John Baez",
        "timestamp": 1725991280
    },
    {
        "content": "<p>I recognise the people who used it first did so in a tongue-in-cheek manner, but most of the people who have come later and have picked up on this terminology do not do so, and don't realise it's tongue-in-cheek, and I do think this causes misunderstanding that would be avoided by using words like \"strict\" instead.</p>",
        "id": 469173173,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725991465
    },
    {
        "content": "<p>Really?  Wow!   Who uses it at a serious piece of \"terminology\"?  Even calling it \"terminology\" is funny.   As if someone said \"What an annoying functor!\" and someone else looked up <a href=\"https://ncatlab.org/nlab/show/annoying%20functor\">[[annoying functor]]</a> on the nLab to figure out what that meant.</p>",
        "id": 469179663,
        "sender_full_name": "John Baez",
        "timestamp": 1725993389
    },
    {
        "content": "<p>I'm not saying I doubt you, by the way.  I'm just amazed.</p>",
        "id": 469182339,
        "sender_full_name": "John Baez",
        "timestamp": 1725993985
    },
    {
        "content": "<p>As a beginner I looked up \"Evil\" on nlab and found a discussion on invariance under equivalence. Google still redirects to the same article even though the name was changed<a href=\"/user_uploads/21317/_MWWxc4S0uSLfDLN7CE-uSLL/3a9cf198-ffa3-4ee4-9457-02095a99fe2f.jpg\">3a9cf198-ffa3-4ee4-9457-02095a99fe2f.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/_MWWxc4S0uSLfDLN7CE-uSLL/3a9cf198-ffa3-4ee4-9457-02095a99fe2f.jpg\" title=\"3a9cf198-ffa3-4ee4-9457-02095a99fe2f.jpg\"><img data-original-dimensions=\"1080x1818\" src=\"/user_uploads/thumbnail/21317/_MWWxc4S0uSLfDLN7CE-uSLL/3a9cf198-ffa3-4ee4-9457-02095a99fe2f.jpg/840x560.webp\"></a></div><p>Fwiw when mathematicians use informal language to describe things I often take it almost as seriously as terminology, understanding that it's not.</p>\n<p>( Hello! I joined four years ago, and have decided to come back. I was going to lurk a bit, but felt my view might be helpful here XD )</p>",
        "id": 469185078,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1725994550
    },
    {
        "content": "<p>Hi!  Yes, the nLab page <a href=\"https://ncatlab.org/nlab/show/principle+of+equivalence#terminology\">principle of equivalence</a> currently says</p>\n<blockquote>\n<p>Floating around the web (and maybe the nLab) is the idea of half-jokingly referring to a breaking of equivalence invariance as “evil”. This is probably meant as a pedagogical way of amplifying that it is to be avoided.</p>\n</blockquote>\n<p>I find the cautious word \"probably\" here quite amusing, as if an anthropologist were studying mathematicians trying to guess what they were up to.</p>",
        "id": 469186632,
        "sender_full_name": "John Baez",
        "timestamp": 1725994910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469179663\">said</a>:</p>\n<blockquote>\n<p>Really?  Wow!   Who uses it at a serious piece of \"terminology\"?</p>\n</blockquote>\n<p>A lot of the category theory-adjacent type theorists, for instance.</p>",
        "id": 469186946,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1725995002
    },
    {
        "content": "<p>Riehl also uses \"evil\" in a very formal way in \"Category Theory in context\":</p>\n<p>Some category theorists go so far as to call a definition \"evil\" if it is not invariant under equivalence of categories. The only evil definitions we have used so far...</p>\n<hr>\n<p>I think what's striking about \"evil\" as an adjective here is it's reserved for a very specific \"sin\". </p>\n<p>When I'm working with very strict categories I'm worried I'm going to do something very wrong, or that I'm missing the point.</p>\n<p>I like that the n-lab calls out the connotation \"half-jokingly\" though</p>",
        "id": 469188429,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1725995337
    },
    {
        "content": "<p>That is not what I'd call using it in \"very formal way\": saying that some other people \"go so far\" as to say it.    She's holding the term at arm's length, blaming it on some extreme people she's seen somewhere....</p>",
        "id": 469198272,
        "sender_full_name": "John Baez",
        "timestamp": 1725998274
    },
    {
        "content": "<p>Imagine:</p>\n<p><strong>Definition.</strong>  A monoid where every element has an inverse is called a <strong>monoid with inverses</strong>, though some go so far as to call it a <strong>group.</strong></p>\n<p><span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 469198580,
        "sender_full_name": "John Baez",
        "timestamp": 1725998371
    },
    {
        "content": "<p>Well, if \"Evil\" is loose or metaphorical, then certain folks must be especially annoyed with noninvariant definitions. <span aria-label=\"face with hand over mouth\" class=\"emoji emoji-1f92d\" role=\"img\" title=\"face with hand over mouth\">:face_with_hand_over_mouth:</span></p>",
        "id": 469211596,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1726001766
    },
    {
        "content": "<p>Sure, like me - they cause endless hassles unless they are carefully justified as technical tools, like the theorem saying every monoidal category is equivalent to a strict one.  Then you can prove theorems about strict ones, and as long as you take care that the <em>theorem statements</em> are invariant under equivalence, they'll be true for <em>all</em> monoidal categories.</p>\n<p>Homotopy type theory does its best to make noninvariant definitions and theorems <em>impossible</em>.</p>",
        "id": 469216675,
        "sender_full_name": "John Baez",
        "timestamp": 1726003243
    },
    {
        "content": "<p>I don't think 'evil' is to be canceled, though it is easy, as a beginner, to read it as a prescriptivist dogma and not realize the role strictiness has in good CT. Most importantly, it's easy to miss the fact that the principle of equivalence is really <em>parametric on the ambient 2-category</em>! So what's evil in Cat might not be in {cats with a fixed set of objects}. In other words, morality is relative :P</p>",
        "id": 469670934,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1726146821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275932\">@Matteo Capucci (he/him)</span>: can you give an example of a situation in which you felt \"evil\" was helpful terminology, where \"strict\" would not have been appropriate?</p>",
        "id": 469697663,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1726152597
    },
    {
        "content": "<blockquote>\n<p>though it is easy, as a beginner, to read it as a prescriptivist dogma</p>\n</blockquote>\n<p>Yes, that is exactly my experience, which is one of the reasons I think it is harmful.</p>",
        "id": 469698146,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1726152707
    },
    {
        "content": "<p>Anyone who uses \"evil\" as a piece of <em>terminology</em> has completely missed the point, in my opinion.</p>",
        "id": 469699546,
        "sender_full_name": "John Baez",
        "timestamp": 1726153001
    },
    {
        "content": "<p>The most similar thing I can think of is this: sometimes a forgetful functor, which is a right adjoint, has its own right adjoint.  For example the forgetful functor from Top to Set has a left adjoint sending each set to the discrete space on that set, but also a right adjoint sending each set to the codiscrete space on that set.   Lawvere sometimes called right adjoints of forgetful functors 'fascist functors', since they are 'far right' - they're to the right of the right.  I think this is a fun joke, but it would be silly to enshrine it as an official piece of <em>terminology</em>.</p>",
        "id": 469701983,
        "sender_full_name": "John Baez",
        "timestamp": 1726153467
    },
    {
        "content": "<p>I agree with John. I wouldn't use 'evil' in a definition. I would use it in commentary though.</p>",
        "id": 469704402,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1726154052
    },
    {
        "content": "<p>I don't think the world would be worse off without 'evil' either</p>",
        "id": 469704593,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1726154110
    },
    {
        "content": "<p>My own thought is this: if anyone here sees anyone running around using the word 'evil' for constructions that thoughtlessly break the principle of equivalence <em>without realizing it's a wry, over-the-top joke</em>, please tell them.</p>",
        "id": 469708912,
        "sender_full_name": "John Baez",
        "timestamp": 1726155117
    },
    {
        "content": "<p>I think it's a bit late for that.</p>",
        "id": 469710004,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1726155307
    },
    {
        "content": "<p>It's not too late.   I've never seen such people.   If I did, I would tell them.   If you see such people, you can tell them.</p>",
        "id": 469710861,
        "sender_full_name": "John Baez",
        "timestamp": 1726155475
    },
    {
        "content": "<p>The only way things get cleared up is by people talking to people.</p>",
        "id": 469711090,
        "sender_full_name": "John Baez",
        "timestamp": 1726155522
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469710861\">said</a>:</p>\n<blockquote>\n<p>It's not too late. I've never seen such people.</p>\n</blockquote>\n<p>This is precisely my point.</p>",
        "id": 469719818,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1726157458
    },
    {
        "content": "<p>The people who use the terminology jokingly won't see all (or even most) of the people using it seriously.</p>",
        "id": 469720015,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1726157493
    },
    {
        "content": "<p>My experience of the Internet is that for anything you care to name, there's always someone out there who will take it too seriously.</p>\n<p>Does that mean we should never joke around?  Or, at least, be more careful about how we joke around?  I don't know.</p>",
        "id": 469723718,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1726158394
    },
    {
        "content": "<p>Y'all got me curious, so I googled \"Fascist Functor\" and found this exact conversation <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>\n<p><a href=\"https://nforum.ncatlab.org/discussion/1768/freedom-vs-fascism/?Focus=15404\">https://nforum.ncatlab.org/discussion/1768/freedom-vs-fascism/?Focus=15404</a></p>\n<p>Calling out Urs' comment:</p>\n<p>...I don’t think that jokes in technical terminology work well. it may be fun in pesonal discussion (depending on the participant’s tastes, which may differ), but when it gets ensshrined in terminology it becomes a major nuisance.</p>",
        "id": 469724644,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1726158710
    },
    {
        "content": "<p>It'd be a bit sad if Mathematicians couldn't joke with each other because folks took them too seriously though. </p>\n<p>Some of my favorite mathematical discussions are littered with jokes. I think it helps them be more memorable.</p>",
        "id": 469725611,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1726159079
    },
    {
        "content": "<p>I think part of the problem is that when you say something on the Internet it doesn't go away.  In face-to-face conversation you can make a joke and only the people who were present hear it, usually realize it was a joke (whether or not they approve of its taste), and that's the end of it.  But on the Internet, even in a fairly informal venue like Zulip or blog comments, all our jokes are recorded forever for future readers to stumble across and take too seriously.</p>",
        "id": 469725781,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1726159127
    },
    {
        "content": "<p>This is why the smiley face was the most important invention since the internet.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> </p>\n<p>(By the way: since Mike and Todd have complained about the ambiguity of <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>, I'll hereby explain how I use this piece of terminology: it means <em>don't take this too seriously, I'm kidding around - and I sure hope what I said isn't taken as some sort of attack.</em>)</p>",
        "id": 469727046,
        "sender_full_name": "John Baez",
        "timestamp": 1726159468
    },
    {
        "content": "<p>Terminology in mathematics either looks like medical terms or words of poets. Now, I am realizing that, indeed, it is rarely funny (at least, from my own limited experience). However, there are names that I find funny:</p>\n<ul>\n<li>flabby sheaf</li>\n<li>petit topos vs gros topos : which would translate to \"little (cute) topos\" vs \"chubby topos\"</li>\n<li>evil, which I understand more as \"cheating/tricking/deceiving\" than \"sinning\" (I'm french , so it may be idiosyncratic)</li>\n<li>dessin d'enfant</li>\n<li>yoga of motives</li>\n<li>cosmic Galois group</li>\n</ul>\n<p>there are probably other that I don't know about, or don't remember.</p>",
        "id": 469727571,
        "sender_full_name": "Peva Blanchard",
        "timestamp": 1726159611
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/Question.20about.20reflector/near/469727046\">said</a>:</p>\n<blockquote>\n<p>This is why the smiley face was the most important invention since the internet.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> </p>\n<p>(By the way: since Mike and Todd have complained about the ambiguity of <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>, I'll hereby explain how I use this piece of terminology: it means <em>don't take this too seriously, I'm kidding around - and I sure hope what I said isn't taken as some sort of attack.</em>)</p>\n</blockquote>\n<p>Up to symmetry the upside down smiley face is the only different image under reflections, so by right it ought to indicate an adjunction. Instead of finding something funny, this is for funnying something found.</p>",
        "id": 469791822,
        "sender_full_name": "JR",
        "timestamp": 1726179983
    },
    {
        "content": "<p>I was just in a lecture on infinity categories where someone stated that \"evil\" was a technical term... which was so distracting for me that I came straight here to complain <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 478252337,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1729592750
    },
    {
        "content": "<p>Don't blame me.  <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span></p>",
        "id": 478329186,
        "sender_full_name": "John Baez",
        "timestamp": 1729616120
    }
]