[
    {
        "content": "<p>Lets say for example we're talking about the Category where 2x2 Matrices are the objects and a morphism is a matrix multiplication by a certain 2x2 Matrices. The identity  arrow is then multiplication by an identity matrix. There's then a direct correspondence between arrows and objects. What's happening here? What kind of category is this and how can this correspondence be specified in the language of Category theory?</p>",
        "id": 230295922,
        "sender_full_name": "Bassel El Mabsout",
        "timestamp": 1615784790
    },
    {
        "content": "<p>You didn't specify the source and target of your morphisms.</p>\n<p>If an object is a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> matrix and you think a morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">f: x \\to y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> is a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2\\times 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> matrix such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> times <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>, then a morphism is not <em>really</em> just a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> matrix: it's a pair consisting of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>.  Otherwise the same morphism would have more than one source and target, since you're trying to make <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> be a morphism from every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> to every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> times <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>.</p>",
        "id": 230298086,
        "sender_full_name": "John Baez",
        "timestamp": 1615787388
    },
    {
        "content": "<p>If you did mean the category that John just described, then you can say that it's the <a href=\"https://ncatlab.org/nlab/show/arrow+category\">arrow category</a> of the monoid of 2x2 matrices. In other words, take the following category:</p>\n<ul>\n<li>there is only one object, called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span>.</li>\n<li>morphisms from  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span> to  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span> are 2x2 matrices.</li>\n<li>composition is matrix multiplication.</li>\n</ul>\n<p>then form the arrow category for that category, and you get the category John described. This gives you a general pattern for forming \"categories where the arrows and the objects are the same kind of thing.\"</p>",
        "id": 230298306,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1615787632
    },
    {
        "content": "<p>Doesn't the arrow category have morphisms which are pairs of morphisms forming commutative squares? Are you thinking of the over/slice category?</p>",
        "id": 230304144,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1615793385
    },
    {
        "content": "<p>You're right, sorry, that's what I meant.</p>",
        "id": 230304628,
        "sender_full_name": "Nathaniel Virgo",
        "timestamp": 1615793791
    },
    {
        "content": "<p>Another possible interpretation of the OP is to consider a category of matrices <a href=\"https://twitter.com/emilyriehl/status/1369063456507273216\">enriched over itself</a> - that's how I parsed it initially anyway</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/emilyriehl/status/1369063456507273216\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/900650727730683904/575kskBt_normal.jpg\"></a><p>It just occurred to me that the category of matrices is enriched over itself, which feels very weird. A priori it seems like the enriched category of matrices is forgetting a ton of information, but somehow it's not.</p><span>- Emily Riehl (@emilyriehl)</span></div></div>",
        "id": 230327338,
        "sender_full_name": "Javier Prieto",
        "timestamp": 1615806688
    },
    {
        "content": "<p>This sounds at least closely related to the fact that the category of matrices is monoidal closed? (Actually I'm not sure how to think about the difference between a category being monoidal closed and a category being enriched in itself)</p>",
        "id": 230327749,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1615806890
    },
    {
        "content": "<p>... which was my first thought when I read the OP, before deciding that the question was actually about something different</p>",
        "id": 230327875,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1615806956
    },
    {
        "content": "<p>Isn't monoidal closed the definition of self-enriched?</p>",
        "id": 230328039,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1615807033
    },
    {
        "content": "<p>I think what Emily is talking about is the fact that you can reconstruct the usual category of matrices from the enriched one</p>",
        "id": 230328407,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1615807226
    },
    {
        "content": "<p>And vice versa</p>",
        "id": 230328435,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1615807234
    },
    {
        "content": "<p>In this case though, the arrows and the objects aren't the same; rather, the hom-objects and the objects are the same (as in any enriched category).</p>",
        "id": 230328555,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1615807299
    },
    {
        "content": "<blockquote>\n<p>Isn't monoidal closed the definition of self-enriched?</p>\n</blockquote>\n<p>Only if you start with a monoidal category, no?</p>\n<blockquote>\n<p>In this case though, the arrows and the objects aren't the same; rather, the hom-objects and the objects are the same (as in any enriched category).</p>\n</blockquote>\n<p>You're right, so this is not exactly the OP's question</p>",
        "id": 230329299,
        "sender_full_name": "Javier Prieto",
        "timestamp": 1615807700
    },
    {
        "content": "<p>In principle there's no problem in defining a (small) category where arrows and objects are given by the same set, as long as you can define source, target and all the rest such as the categorical axioms hold. Still, I guess one of the main points of category theory is type hygiene, that is, categorical language allows to have everything neatly compartmentalized so that keeping track of things becomes easier. The idea of defining a category where objects and morphisms are the same seems to go, at least for me, against this basic principle. So it's not that you cannot do it, but more like \"do you really want to do it?\"</p>",
        "id": 230332317,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1615809408
    },
    {
        "content": "<p>As others already mentioned, there are concepts such as \"categories enriched over themselves\" which offer a neater way to express similar ideas. The point here is that \"you can consider arrows between two objects as an object in your category\", which sounds similar to what you want to some extend, but in addition to this you have a whole infrastructure in place that disambiguates stuff for you!</p>",
        "id": 230332567,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1615809564
    },
    {
        "content": "<p>In a monoidal closed category there's a distinction between a thing and its name, the presence of names being what makes it closed. </p>\n<p><span class=\"user-mention\" data-user-id=\"276681\">@Bassel El Mabsout</span> you might like the \"single-sorted\" presentation of a category: <a href=\"https://ncatlab.org/nlab/show/single-sorted+definition+of+a+category#:~:text=A%20monoid%20is%20a%20single,monoids%20than%20the%20usual%20categories.\">nlab</a></p>",
        "id": 230342015,
        "sender_full_name": "Chad Nester",
        "timestamp": 1615814303
    },
    {
        "content": "<p>(I guess this is also what Fabrizio is referencing above)</p>",
        "id": 230342753,
        "sender_full_name": "Chad Nester",
        "timestamp": 1615814568
    },
    {
        "content": "<p>Just to point out, in a category enriched over itself, the object-set is not identical to the arrow-set.  A single arrow is not an object.  Rather, the entire collection of arrows from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>, called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Hom</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Hom}(x,y)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>, is an object.</p>",
        "id": 230346053,
        "sender_full_name": "Joshua Meyers",
        "timestamp": 1615815937
    },
    {
        "content": "<p>But it's important to be careful and not assume that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Hom</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Hom}(x, y)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> forms anything like a collection a priori. Strictly speaking, in an enriched category, there are no arrows separate from the hom-objects. We can talk about a map from the monoidal unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Hom</mtext><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Hom}(x, y)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Hom</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> as 'an arrow from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>' but this often results in a loss of information.</p>",
        "id": 230346566,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1615816105
    },
    {
        "content": "<p>Just to be sure, I'm not claiming that in a category enriched over itself objects and arrows are the same thing. I'm claiming that, probably, what <span class=\"user-mention\" data-user-id=\"276681\">@Bassel El Mabsout</span> really wants is a category enriched over itself, or some other similar concept that seems to be more hygienic than \"a category where objects and arrows are the same thing\"</p>",
        "id": 230353179,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1615818525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276681\">Bassel El Mabsout</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/category.20where.20objects.20and.20arrows.20are.20the.20same.20thing.3F/near/230295922\">said</a>:</p>\n<blockquote>\n<p>Lets say for example we're talking about the Category where 2x2 Matrices are the objects and a morphism is a matrix multiplication by a certain 2x2 Matrices. The identity  arrow is then multiplication by an identity matrix. There's then a direct correspondence between arrows and objects. What's happening here? What kind of category is this and how can this correspondence be specified in the language of Category theory?</p>\n</blockquote>\n<p>You can also formulate the definition of a category just using the arrows*, and then the identity arrows correspond to \"objects\" in the usual definition of a category. To me it seems like this is what you are getting at here.</p>\n<p>(* and a couple of unary predicates: source and target)</p>",
        "id": 230361838,
        "sender_full_name": "Simon Burton",
        "timestamp": 1615821420
    },
    {
        "content": "<p>Ok so let me try to simplify things a bit to get to the heart of the issue. Let's say we're talking about Natural numbers with the sum operation. You can treat this as a monoid where the arrows name the numbers and their composition is their sums. But the other view I'm trying to talk about is having each number be an object and there's an arrow between every object and objects that are greater than it. The arrow between 2 and 5 is the (2, +3) arrow for example. Like John said, here the arrow has to be indexed by the initial number we're mapping and the +3 function. Here the +x function \"uses\" objects that are in this category. Meaning there's a mapping from collections of arrows to objects (if we focus on the second element of the arrow) and objects to collections of arrows which I am finding weird and I'm trying to understand how to utter this.</p>",
        "id": 230362708,
        "sender_full_name": "Bassel El Mabsout",
        "timestamp": 1615821613
    },
    {
        "content": "<p>Here's how you utter it, <span class=\"user-mention\" data-user-id=\"276681\">@Bassel El Mabsout</span>: <span class=\"user-mention\" data-user-id=\"276071\">@Nathaniel Virgo</span> and <span class=\"user-mention\" data-user-id=\"277473\">@Morgan Rogers (he/him)</span> explained it right after I guessed what you were talking about, but their explanation was so quick you might not have noticed, and then a bunch of other people talked about a bunch of other things.</p>\n<p>As you noticed, your construction that works for any monoid.   It involves two steps that are important and well-known in themselves!   Nathaniel Virgo described the first step.   For any monoid M there's a category BM where</p>\n<ul>\n<li>there is only one object, called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span>.</li>\n<li>morphisms from  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span> to  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span> are element of M</li>\n<li>composition is multiplication M.</li>\n</ul>\n<p>People often summarize this by saying \"a monoid is a one-object category\", but what they mean is that you can turn a monoid into a one-object category and vice versa (and more).</p>\n<p>Morgan Rogers described the second step.   For any category C and any object x of C there's a <a href=\"https://ncatlab.org/nlab/show/over+category#definition\">slice category</a> C/x where</p>\n<ul>\n<li>objects are morphisms f : x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> c in C</li>\n<li>a morphism from f : x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> c to f': x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> c is a morphism g: x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> x' in C such that</li>\n</ul>\n<p>f' g = f</p>\n<ul>\n<li>composition is done in C.</li>\n</ul>\n<p>(The explanation on the nLab is nice because you should be imagining triangles when you think about this.)</p>\n<p>Starting from a monoid M you can thus form BM and then BM/ <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span>, and this is the category you want!</p>",
        "id": 230364888,
        "sender_full_name": "John Baez",
        "timestamp": 1615822402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/category.20where.20objects.20and.20arrows.20are.20the.20same.20thing.3F/near/230364888\">said</a>:</p>\n<blockquote>\n<p>Here's how you utter it, <span class=\"user-mention silent\" data-user-id=\"276681\">Bassel El Mabsout</span>: <span class=\"user-mention silent\" data-user-id=\"276071\">Nathaniel Virgo</span> and <span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> explained it right after I guessed what you were talking about, but their explanation was so quick you might not have noticed, and then a bunch of other people talked about a bunch of other things.</p>\n<p>This is an example of a general construction that works for any monoid.   It involves two well-known steps.   Nathaniel Virgo described the first step.   For any monoid M there's a category BM where</p>\n<ul>\n<li>there is only one object, called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span>.</li>\n<li>morphisms from  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span> to  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span> are element of M</li>\n<li>composition is multiplication M.</li>\n</ul>\n<p>People often summarize this by saying \"a monoid is a one-object category\", but what they mean is that you can turn a monoid into a one-object category and vice versa (and more).</p>\n<p>Morgan Rogers described the second step.   For any category C and any object x of C there's a <a href=\"https://ncatlab.org/nlab/show/over+category#definition\">slice category</a> C/x where</p>\n<ul>\n<li>objects are morphisms f : x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> c in C</li>\n<li>a morphism from f : x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> c to f': x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> c is a morphism g: x <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> x' in C such that</li>\n</ul>\n<p>f' g = f</p>\n<ul>\n<li>composition is done in C.</li>\n</ul>\n<p>(The explanation on the nLab is nice because you should be imagining triangles when you think about this.)</p>\n<p>Starting from a monoid M you can thus form BM and then BM/ <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∙</mo></mrow><annotation encoding=\"application/x-tex\">\\bullet</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∙</span></span></span></span>, and this is the category you want!</p>\n</blockquote>\n<p>Thank you! I believe this is what I was looking for</p>",
        "id": 230365618,
        "sender_full_name": "Bassel El Mabsout",
        "timestamp": 1615822652
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276681\">Bassel El Mabsout</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic\">said</a></p>\n<blockquote>\n<p>Thank you! I believe this is what I was looking for.</p>\n</blockquote>\n<p>Great!  I think so.  </p>\n<p>This is a fairly well-known construction when your monoid is a group: then the category you get is actually a groupoid, and it's called the <strong>translation groupoid</strong> or <strong><a href=\"https://ncatlab.org/nlab/show/action+groupoid#in_category_theory\">action groupoid</a></strong> of your group.    </p>\n<p>I haven't seen this construction used as often when the monoid isn't a group, but I've sometimes used it for the monoid of nonnegative real numbers, with addition as the monoid operation.</p>\n<p>By the way, people asking questions here should note a general phenomenon that happened here: your question may be answered quite quickly, and then people will move on to talk about related things.   It may be necessary to look carefully at the initial answers and ask for more detail.</p>",
        "id": 230370432,
        "sender_full_name": "John Baez",
        "timestamp": 1615824096
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229199-learning.3A-questions/topic/category.20where.20objects.20and.20arrows.20are.20the.20same.20thing.3F/near/230370432\">said</a>:<br>\nBy the way, people asking questions here should note a general phenomenon that happened here: your question may be answered quite quickly, and then people will move on to talk about related things.   It may be necessary to look carefully at the initial answers and ask for more detail.</p>\n</blockquote>\n<p>I didn't expect to get this many responses this quickly! The other answers are also very interesting so I'll be going through them as well</p>",
        "id": 230402892,
        "sender_full_name": "Bassel El Mabsout",
        "timestamp": 1615836010
    }
]