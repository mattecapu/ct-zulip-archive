[
    {
        "content": "<p>Is there any reasonable way to recognize and recover an <a href=\"https://ncatlab.org/nlab/show/idempotent%20monad\">[[idempotent monad]]</a> from the comonad of its monadic adjunction?</p>",
        "id": 321631770,
        "sender_full_name": "James Deikun",
        "timestamp": 1673873015
    },
    {
        "content": "<p>I believe idempotent monads give rise to adjunctions where the functors are one-sided inverses of each other. So the comonad is just the identity.</p>",
        "id": 321641393,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1673875920
    },
    {
        "content": "<p>That makes complete sense and I can't believe I didn't think of it, but ... ugh.  That's no good at all!  Is there any reasonable way, if not from the comonad, to reconstruct the bigger category from the reflective subcategory without already having it?  I know there are special ways to construct one when the bigger category is a presheaf topos and the reflective subcategory is special in some way (a topos, from a small generating set, a LFP category, from something or other) but what about when it's not necessarily a presheaf category?  Or when it is, but you want a particular one?</p>",
        "id": 321694223,
        "sender_full_name": "James Deikun",
        "timestamp": 1673892213
    },
    {
        "content": "<p>How would one hope to reconstruct the category of groups from the category of abelian groups and some extra data?  If you can do this example, maybe you can generalize.  But it sounds hard.</p>",
        "id": 321713082,
        "sender_full_name": "John Baez",
        "timestamp": 1673900570
    },
    {
        "content": "<p>It does sound hard, in that Abelianness is uncommonly difficult to get rid of.  There's probably some way to do it by backing out through Set, but that sounds kind of unsatisfying.  Maybe there isn't a fully general solution and I'll have to make do with examples that can be obtained, for instance, as comma categories...</p>",
        "id": 321729897,
        "sender_full_name": "James Deikun",
        "timestamp": 1673910139
    }
]