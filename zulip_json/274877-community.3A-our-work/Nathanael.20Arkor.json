[
    {
        "content": "<p>I'm going to be giving a talk online at the <a href=\"https://topos.institute/events/topos-colloquium/\">Topos Colloqium</a> this week at <time datetime=\"2025-04-03T17:00:00Z\">2025-04-03T20:00:00+03:00</time> – everyone is very welcome to come along! I won't be assuming any prior familiarity with double categories or polynomials/polynomial functors.</p>\n<p><em>Title:</em> A (virtual) double category theorist's perspective on polynomials<br>\n<em>Abstract:</em><br>\nI shall tell the tale of how I came to understand polynomials. In doing so, I will exhibit a novel universal property of the double category of polynomials in a locally cartesian closed category. In fact, we shall see how polynomials may be liberated from the assumption of exponentiability entirely. This talk is based on joint work with Bryce Clarke.</p>\n<p>Link: <a href=\"https://youtu.be/tCbRfjv6JQ4\">https://youtu.be/tCbRfjv6JQ4</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"tCbRfjv6JQ4\" href=\"https://youtu.be/tCbRfjv6JQ4\"><img src=\"https://uploads.zulipusercontent.net/7581c267b9479456a2f8f87679520a84cc879e21/68747470733a2f2f692e7974696d672e636f6d2f76692f74436252666a76364a51342f6d7164656661756c742e6a7067\"></a></div>",
        "id": 509488136,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743522353
    },
    {
        "content": "<p>(The talk will be starting in an hour.)</p>",
        "id": 509980567,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743696091
    },
    {
        "content": "<p>I really enjoyed this talk, I'd be interesting in knowing what your non-LCC Poly construction does for (infinitary) pretoposes (say with param. NNO), if anything. You need a Pi-pretopos for the traditional setting of polynomials, but this is sometimes just not possible. The internal logic is rather strong, and you can even get limited instances of decidability.</p>\n<p>There are some polynomials functors in the traditional sense that <em>do</em> exist, for instance where the middle, right-pointing morphism in the polynomial is a something like a family of numerals. You can write down the  polynomial <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>←</mo><mi>A</mi><mo>→</mo><mi>B</mi><mo>→</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\"> 1 \\leftarrow A \\to B \\to 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> for the case of a 'naive polynomial endofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>↦</mo><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">∞</mi></msubsup><msub><mi>A</mi><mi>n</mi></msub><mo>×</mo><msup><mi>X</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">X \\mapsto \\sum_{n=0}^\\infty A_n \\times X^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6943em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> for a family of objects <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (at least, last I checked, a couple of years ago!). Here the morphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is such that pullback along it does admit  a right adjoint, because it only needs finite limits to construct. So you hopefully can embed the \"polynomials that give polynomial functors\" into your more general polynomials, in a reasonable way.</p>",
        "id": 510074886,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1743735488
    },
    {
        "content": "<p>Interesting! That sense that a good way to view polynomials is by seeing what needs to be added to spans:<br>\n<a href=\"/user_uploads/21317/kp0V6RILCKP_3jbY0waDxyfS/image.png\">image.png</a><br>\nalso occurs in Strickland's <a href=\"https://arxiv.org/abs/1205.2516\">Tambara functors</a>. </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/kp0V6RILCKP_3jbY0waDxyfS/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1054x636\" src=\"/user_uploads/thumbnail/21317/kp0V6RILCKP_3jbY0waDxyfS/image.png/840x560.webp\"></a></div><p>Mackey functors are to spans are to semigroups as Tambara functors are to polynomials are to semirings.</p>\n<p>He calls polynomials '<em>bispans</em>':<br>\n<a href=\"/user_uploads/21317/mho6OKm8uJjn8ibcc-8gJXXp/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/mho6OKm8uJjn8ibcc-8gJXXp/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"834x452\" src=\"/user_uploads/thumbnail/21317/mho6OKm8uJjn8ibcc-8gJXXp/image.png/840x560.webp\"></a></div><p>I wonder if anyone's looking at double categories of Mackey/Tambara functors.</p>",
        "id": 510114516,
        "sender_full_name": "David Corfield",
        "timestamp": 1743753294
    },
    {
        "content": "<p>Ross Street in <em>Objective Mackey and Tambara functors via parametrized categories</em> &lbrack;<a href=\"https://arxiv.org/abs/2503.02260\">arXiv:2503.02260</a>&rbrack; looks to take polynomials as iterated spans:</p>\n<blockquote>\n<p>we can replace the original parametrizing base for objective Mackey functors by a bicategory of spans while the replacement for objective Tambara functors is a bicategory obtained by iterating the span construction; these iterated spans are polynomials.</p>\n</blockquote>",
        "id": 510118307,
        "sender_full_name": "David Corfield",
        "timestamp": 1743754444
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276422\">@David Michael Roberts</span>: I didn't have time to mention it during the talk, but there is a slight refinement of the covirtual double category of polynomials mentioned at the end of the talk, where we specify a class of \"powerful\" morphisms in our category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span>, and require that the loose morphisms in the covirtual double category are the polynomials whose middle morphism is powerful.</p>\n<p>If we take \"powerful = exponentiable\", then we obtain a double category of polynomials in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> is not required to be locally cartesian closed. (This extends the bicategory of polynomials in Weber's paper <a href=\"http://www.tac.mta.ca/tac/volumes/30/16/30-16abs.html\">Polynomials in categories with pullbacks</a>.)</p>\n<p>This modified covirtual double category admits a similar universal property to the one mentioned, and in particular gives an interpretation of polynomials (with middle morphism exponentiable) as polynomial functors in categories that are not required to be locally cartesian closed. So this should capture the examples you're interested in.</p>",
        "id": 510129394,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743757626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302507\">@David Corfield</span>: thanks for the references! I was aware there was a connection between polynomials and Tambara functors, but had not yet looked into it closely; I shall have to do so. Street's recent paper is indeed relevant to our work, though I haven't yet digested it entirely. Street's perspective of polynomials as iterated spans seems closed related to our perspective of polynomials as iterated bridges (though by working in the setting of double categories, bridges allow us to give a more fine-grained iterative construction). We will certainly clarify the precise connection in the final paper.</p>",
        "id": 510130324,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743757905
    },
    {
        "content": "<p>One more related reference, according to Joachim Kock <a href=\"http://mat.uab.cat/~kock/cat/polynomial.pdf\">Notes on polynomial functors</a>, p. 192, Tambara first looked at a category which is the Lawvere theory for commutative semirings, agreeing with Strickland:</p>\n<blockquote>\n<p>One way to think about the definition of Mackey functors (for a finite group G) is as follows. Take the Lawvere theory A for (commutative) semigroups, categorify it, make it G-equivariant, decategorify, and then take the category of models for the resulting (multisorted) theory. This category is just the category of semigroup-valued Mackey functors, so it contains the more usual category of group-valued Mackey functors.</p>\n</blockquote>\n<blockquote>\n<p>...</p>\n</blockquote>\n<blockquote>\n<p>The category of Tambara functors can be defined along the same lines as suggested above for Mackey functors. One simply starts with the Lawvere theory U for semirings instead of the theory A for semigroups.</p>\n</blockquote>",
        "id": 510151740,
        "sender_full_name": "David Corfield",
        "timestamp": 1743764206
    },
    {
        "content": "<p>That passage by Kock doesn't seem to be there now.</p>",
        "id": 510212999,
        "sender_full_name": "David Corfield",
        "timestamp": 1743775798
    },
    {
        "content": "<p>The term 'bispan' seems to be current in the higher-algebraic world, as with </p>\n<ul>\n<li>Elden Elmanto, Rune Haugseng, <a href=\"https://arxiv.org/abs/2010.15722\">On distributivity in higher algebra I: The universal property of bispans</a></li>\n</ul>",
        "id": 510215464,
        "sender_full_name": "David Corfield",
        "timestamp": 1743776362
    },
    {
        "content": "<p>Could anyone please explain what \"Mackey functors\" are, in a way that a non-category theorist interested in finite groups and their representations and actions would understand?   I am not wholly lacking category theory, but Street's explanation of Mackey functors, even in the presumably original example of finite groups, eluded me.  I also don't understand Joachim Kock's explanation:</p>\n<blockquote>\n<p>One way to think about the definition of Mackey functors (for a finite group G) is as follows. Take the Lawvere theory A for (commutative) semigroups, categorify it, make it G-equivariant, decategorify, and then take the category of models for the resulting (multisorted) theory.</p>\n</blockquote>\n<p>I can follow each word, but I don't understand why Mackey would have wanted to do something like this.  I've met Mackey and read some of his books, and he always struck me as a very down-to-earth representation theorist.  So Kock's explanation must be a distillation of something a representation theorist might want to look at.</p>",
        "id": 510234691,
        "sender_full_name": "John Baez",
        "timestamp": 1743781496
    },
    {
        "content": "<p>How about from the article I just mentioned?:</p>\n<p><a href=\"/user_uploads/21317/2QpKSs3OJaYhU20pV98mSIE_/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/2QpKSs3OJaYhU20pV98mSIE_/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"428x214\" src=\"/user_uploads/thumbnail/21317/2QpKSs3OJaYhU20pV98mSIE_/image.png/840x560.webp\"></a></div>",
        "id": 510235293,
        "sender_full_name": "David Corfield",
        "timestamp": 1743781672
    },
    {
        "content": "<p>Thanks, that's quite helpful.  I guess I need to read some traditional writing on Mackey functors to see how they're used, and why they boil down to finite-product-preserving functors from the bicategory of spans of G-sets to Set (or, as the footnote in that quote says, more traditionally AbGp).</p>\n<p>This paper gives a pile of examples of Mackey functors, which makes it clear to me what they're like and why they are interesting:</p>\n<ul>\n<li>Peter Webb, <a href=\"https://people.math.rochester.edu/faculty/doug/otherpapers/WebbMF.pdf\">A guide to Mackey functors</a>.</li>\n</ul>\n<p>The axiomatics here are clunky (though intuitive if one is familiar with the examples they encapsulate), so it makes a lot of sense that \"finite-product-preserving functors from the bicategory of spans of G-sets to AbGp\" is a better way of saying all of this stuff.</p>",
        "id": 510240498,
        "sender_full_name": "John Baez",
        "timestamp": 1743782953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302507\">David Corfield</span> <a href=\"#narrow/channel/274877-community.3A-our-work/topic/Nathanael.20Arkor/near/510215464\">said</a>:</p>\n<blockquote>\n<p>The term 'bispan' seems to be current in the higher-algebraic world, as with </p>\n<ul>\n<li>Elden Elmanto, Rune Haugseng, <a href=\"https://arxiv.org/abs/2010.15722\">On distributivity in higher algebra I: The universal property of bispans</a></li>\n</ul>\n</blockquote>\n<p>Thanks, I wasn't aware of this work!</p>",
        "id": 510245059,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743784174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span> I was more wondering what is the precise relation when you do the construction you mentioned in your talk to a non-LCC category, to get all polynomials (not just the ones involving powerful middle maps), because then you still have some polynomial functors already, as well as the ones coming from the freely-generated thing. There should be a relation between the existing polynomials and the freely adjoined ones, no?</p>",
        "id": 510337721,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1743832638
    },
    {
        "content": "<ul>\n<li>Given a LCC category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span>, one can form a double category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> whose loose morphisms are polynomials (whose middle map is necessarily exponentiable) and we have a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"double-struck\">S</mi><mrow><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">c</mi><mi mathvariant=\"bold\">e</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E) \\to \\mathbb S\\mathbf{lice}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mord\"><span class=\"mord mathbf\">lice</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> sending each polynomial to its associated polynomial functor.</li>\n<li>When <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> has pullbacks, but is not necessarily LCC, one can form a double category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><msub><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mtext>exp</mtext></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}_{\\text{exp}}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">exp</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3802em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> whose loose morphisms are polynomials with middle map exponentiable and we have a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><msub><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mtext>exp</mtext></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"double-struck\">S</mi><mrow><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">c</mi><mi mathvariant=\"bold\">e</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}_{\\text{exp}}(\\mathcal E) \\to \\mathbb S\\mathbf{lice}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">exp</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3802em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mord\"><span class=\"mord mathbf\">lice</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> sending each polynomial to its associated polynomial functor.</li>\n<li>When <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> has pullbacks, but is not necessarily LCC, one can also form a covirtual double category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> whose loose morphisms are polynomials (whose middle map is not necessarily exponentiable). In this case, there is only a partial functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo><mo>⇀</mo><mi mathvariant=\"double-struck\">S</mi><mrow><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">c</mi><mi mathvariant=\"bold\">e</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E) \\rightharpoonup \\mathbb S\\mathbf{lice}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇀</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mord\"><span class=\"mord mathbf\">lice</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span>, defined on those loose morphisms in which the middle map is exponentiable. When <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> is LCC, this covirtual double category is actually a double category (the one in the first bullet point). Furthermore, it contains <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><msub><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mtext>exp</mtext></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}_{\\text{exp}}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">exp</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3802em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> as a full sub-double category.</li>\n</ul>",
        "id": 510487229,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743949397
    },
    {
        "content": "<p>It's important to distinguish between the polynomials and the polynomial functors: the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span></span></span></span> construction is not adjoining new polynomial functors. In fact, the structure that it freely adjoins to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> is \"absolute\" in an appropriate sense. If you freely added that structure (companions, conjoints, and correlates) again, it would not change the double category (up to equivalence).</p>",
        "id": 510487469,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743949572
    },
    {
        "content": "<p>If you just care about polynomial functors in a non-LCC <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span>, then there is not a significant advantage to working with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><msub><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mtext>exp</mtext></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}_{\\text{exp}}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0573em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">exp</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3802em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span>. However, there may be other constructions one cares about doing with polynomials for which exponentiability is unnecessary, in which case <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> is more convenient.</p>",
        "id": 510487634,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743949701
    },
    {
        "content": "<p>Perhaps the point of confusion is that it sounded like we get a total functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mrow><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">y</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"double-struck\">S</mi><mrow><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">c</mi><mi mathvariant=\"bold\">e</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb P\\mathbf{oly}(\\mathcal E) \\to \\mathbb S\\mathbf{lice}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">P</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">oly</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mord\"><span class=\"mord mathbf\">lice</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> for non-LCC <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span>, and so there are some polynomial functors in the image of the functor for those polynomials whose middle map is not exponentiable? This isn't the case, because when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span> is not LCC, the double category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">S</mi><mrow><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi><mi mathvariant=\"bold\">c</mi><mi mathvariant=\"bold\">e</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"script\">E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb S\\mathbf{lice}(\\mathcal E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">S</span><span class=\"mord\"><span class=\"mord mathbf\">lice</span></span><span class=\"mopen\">(</span><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span><span class=\"mclose\">)</span></span></span></span> does not have all correlates, and so we cannot invoke the universal property.</p>",
        "id": 510487859,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743949867
    },
    {
        "content": "<p>Let me know if I didn't answer your question, though. I may have misunderstood what you were asking.</p>",
        "id": 510487882,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1743949890
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/channel/274877-community.3A-our-work/topic/Nathanael.20Arkor/near/510245059\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>The term 'bispan' seems to be current in the higher-algebraic world, as with</p>\n<ul>\n<li>Elden Elmanto, Rune Haugseng, <a href=\"https://arxiv.org/abs/2010.15722\">On distributivity in higher algebra I: The universal property of bispans</a></li>\n</ul>\n</blockquote>\n<p>Thanks, I wasn't aware of this work!</p>\n</blockquote>\n<p>If double categories prove to be a good way to treat polynomials, Rune Haugseng should find your ideas very interesting since he's also the one who introduced <a href=\"https://ncatlab.org/nlab/show/double+infinity-category\">[[double infinity-categories]]</a>.</p>",
        "id": 510502112,
        "sender_full_name": "David Corfield",
        "timestamp": 1743959781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span>  I think the point you make about the <strong>partial</strong> functor Poly(E) -&gt; Slice(E), for Poly(E) the covirtual double category is what I was after. I was thinking that this was in fact an everywhere-defined functor, and was curious to know what difference there is in the resulting polynomial functors if you go via Poly_exp(E) vs via Poly(E).</p>",
        "id": 510572325,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1744007791
    },
    {
        "content": "<p>I'm going to be giving a talk online at <a href=\"https://progetto-itaca.github.io/fests/fest25.html#oct\">ItaCa Fest</a> tomorrow at <time datetime=\"2025-10-21T13:40:00Z\">2025-10-21T16:40:00+03:00</time>  – if you're interested in <a href=\"https://ncatlab.org/nlab/show/Day+convolution\">convolution</a> (even/especially if you find it a little perplexing), multicategories, or double categories, there should be something for you! I won't be assuming prior familiarity with these topics.</p>\n<p><em>Title:</em> Convolution via exponentiation<br>\n<em>Abstract:</em><br>\nThe category of presheaves on a monoidal category inherits the monoidal structure through a form of convolution. While this convolution monoidal structure has traditionally been constructed using the calculus of coends, a substantially simpler argument proceeds from the theory of multicategories. I will build on this observation by demonstrating that convolution may be extended from monoidal categories to double categories, thereby recovering several constructions that have previously arisen in the literature. As a motivating application, I will explain how convolution simplifies the theory of presheaves and discrete fibrations for double categories, and conclude by mentioning a connection to enriched category theory.</p>",
        "id": 545947690,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1760959252
    }
]