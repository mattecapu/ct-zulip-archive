[
    {
        "content": "<p>Having just uploaded my paper on topological monoid actions to the arXiv (which I will post about on <a class=\"stream\" data-stream-id=\"258900\" href=\"/#narrow/stream/258900-practice.3A-our-papers\">#practice: our papers</a> once it's online tomorrow), now seems like a good time to take stock on what I'm up to.</p>\n<ul>\n<li>First, my ongoing collaborations, which are at varying levels of activity:<ul>\n<li>With <span class=\"user-mention silent\" data-user-id=\"282722\">Jens Hemelaer</span>, work on toposes of discrete monoid actions and geometric morphisms between them. Our current project is an exploration of what factorization systems for geometric morphisms look like in this special case. We have most of a paper on the \"Root\" of a monoid tucked away too, which we should eventually get around to finishing.</li>\n<li>With <span class=\"user-mention silent\" data-user-id=\"284376\">Riccardo Zanfa</span>, work on (Street) fibrations, especially between categories with pullbacks and toposes. That work may depend on...</li>\n<li>With <span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span>, a small project on free cocompletions of (internal) categories with respect to manageable classes of colimit.</li>\n<li>With <span class=\"user-mention silent\" data-user-id=\"276037\">Jade Master</span>, a (currently dormant) investigation of whether or not the category of symmetric monoidal categories is monadic over the category of Petri nets, and more generally whether the category of Q-categories is monadic over the category of Q-nets for a Lawvere theory Q.</li>\n</ul>\n</li>\n<li>The third entry above will help me understand the right construction of syntactic categories for <strong>supercompactly generated theories</strong>, which is what I'm calling theories classified by supercompactly generated toposes. While it's of course possible to express these as geometric theories, the canonical sites for supercompactly generated toposes are <em>reductive sites</em>, which are characterized by the existence of particular colimits, and I would like to develop a standalone syntax for such categories.</li>\n<li>Whatever the outcome of the preceding point, I want to extract a characterization of theories classified by toposes of topological monoid actions. This will be the key step in making <strong>Topological Semi-Galois Theory</strong>, the analogue of Galois Theory with monoids in place of groups, a viable tool.</li>\n<li>The final thing I'm hoping to get done before my PhD ends (in October <span aria-label=\"dizzy\" class=\"emoji emoji-1f635\" role=\"img\" title=\"dizzy\">:dizzy:</span> ) is to establish what the semi-Galois analogue of the classical Galois theory of field extensions should be. I already have some idea of what this will look like, but I need to do a lot more work to clarify the picture.</li>\n</ul>\n<p>Beyond the end of my PhD... It's clear that some of the work above is going to have to take place after my PhD ends. If you happen to be or know someone who can offer me a post-doc position where any of the above would be relevant, then please get in touch <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span> .</p>",
        "id": 237162200,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1620049350
    },
    {
        "content": "<p>This stream has a lot of big names posting in it, so I figure it would be nice thesis-writing procrastination to update my own thread, since I'm just a student. Here's what I've got on in the near future:</p>\n<ul>\n<li><strong>Finish writing my thesis.</strong></li>\n<li>Find a CT postdoc or alternatively some funding to pursue research into AI ethics/philosophy, both preferably in Europe.</li>\n</ul>\n<p>It's a bit shorter than other folks' entries; I hope that's relatable.</p>",
        "id": 252418969,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1631086768
    },
    {
        "content": "<p>Looks very similar to my to do for most of last year :)</p>",
        "id": 252494970,
        "sender_full_name": "Jade Master",
        "timestamp": 1631120006
    },
    {
        "content": "<p>Update: thesis done! I had a breakthrough in the last month that I couldn't resist squeezing in. It's a relief to have submitted it.</p>",
        "id": 255759138,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1633101047
    },
    {
        "content": "<p>I defended my thesis last Tuesday. Should be up on the arXiv today.<br>\nI'm a doctor now yay!</p>",
        "id": 265534007,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1639989310
    },
    {
        "content": "<p>Congratulations! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 265576756,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1640013737
    },
    {
        "content": "<p>Congratulations!</p>",
        "id": 265649048,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1640064554
    },
    {
        "content": "<p>One small note <span class=\"user-mention\" data-user-id=\"277473\">@Morgan Rogers (he/him)</span>  : when I tried to get the pdf of your thesis from the arXiv, it failed! I got the postscript ok, though.</p>",
        "id": 265649072,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1640064581
    },
    {
        "content": "<p>Hmm thanks for letting me know <span class=\"user-mention\" data-user-id=\"276422\">@David Michael Roberts</span>, I'll check it later.</p>",
        "id": 265661135,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1640076871
    },
    {
        "content": "<p>I have the same issue, but also the ps fails for me.</p>",
        "id": 265661227,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1640076953
    },
    {
        "content": "<p>The pdf from the arXiv worked for me now. Congratulations! (BTW, you could certainly also cross-list to math.LO.)</p>",
        "id": 265703218,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1640103224
    },
    {
        "content": "<p>Congratulations <span class=\"user-mention\" data-user-id=\"277473\">@Morgan Rogers (he/him)</span> ! The PDF is now working for me as well, after it initially hadn't this morning</p>",
        "id": 265707766,
        "sender_full_name": "Jonathan Weinberger",
        "timestamp": 1640105416
    },
    {
        "content": "<p>Those of you that have spoken to me in the past 6 months or more probably know that I am doing a research project on AI Safety. I figure I might as well share what I've done so far here, in case there is some interest. The aim of the project is to provide some formal grounding for the intuitive concept of <strong>goal-directedness</strong>, a notion which appears in many stories about how sufficiently capable AI could go bad.</p>\n<p>In my <a href=\"https://www.lesswrong.com/posts/7X9KKqgZa7edknKPm/goal-directedness-my-baseline-beliefs\">preliminary post</a> I discuss the ideas I had about this before the project began.<br>\nIn my <a href=\"https://www.lesswrong.com/posts/KJPRC3cgtxSXpZEQZ/goal-directedness-exploring-explanations\">first real post</a> I talked about criteria for judging explanations, since this is a tool I want to apply to assessing goal-directedness.<br>\nIn my <a href=\"https://www.lesswrong.com/posts/oZCeun2v3Xd3ncrHt/goal-directedness-imperfect-reasoning-limited-knowledge-and\">second post</a> I break down the structure of explanations with the intent of giving more flexibility to what counts as goal-directed behaviour.</p>\n<p>Category theory gets a mention in the last post, although only incidentally (because I happen to include the category of world models that one could use as a parameter).</p>",
        "id": 276441625,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1648108688
    },
    {
        "content": "<p>The <a href=\"https://www.lesswrong.com/posts/jgYGZD2zRK6nncJd5/goal-directedness-tackling-complexity\">third post in my AI project</a> is finally up.</p>\n<p>It's all about <strong>complexity</strong>. The aim of the post was to build an inclusive, flexible, semi-formal notion of complexity, which includes the ideas that you would find in any branch of complexity theory.</p>\n<p>I did try to make it accessible to a wide audience, but I couldn't resist putting some pretty abstract maths in there. I'm curious to know what people reading from here get out of it. Enjoy <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 288271638,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1656770298
    },
    {
        "content": "<blockquote>\n<p>Even though \"computation\" is in the name, the mathematically interesting details of computational complexity are considered to be those which are independent of specific implementation. For this reason, it is typical to consider an implementation-independent version</p>\n</blockquote>\n<p>Indeed, I always found very peculiar that the notion of computational complexity one traditionally uses to study algorithms is given in the context of Turing machines. We have widly different models of computations (Turing, partial functions, lambda calculus) that have been proved to be able to compute the same stuff. Yet, in defining complexity theory we settled on one choice, in a way that's not invariant</p>",
        "id": 288277669,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1656778194
    },
    {
        "content": "<p>I believe a computation takes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> steps to do in one of these models iff it does in any other, with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> independent of the model.</p>",
        "id": 288309524,
        "sender_full_name": "John Baez",
        "timestamp": 1656826668
    },
    {
        "content": "<p>I could be wrong, but that's the sort of invariance I'd expect, and that's enough to justify why people say it takes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> time to do some sort of computation, or things like that.</p>",
        "id": 288309577,
        "sender_full_name": "John Baez",
        "timestamp": 1656826745
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Morgan.20Rogers/near/288309524\">said</a>:</p>\n<blockquote>\n<p>I believe a computation takes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> steps to do in one of these models iff it does in any other, with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> independent of the model.</p>\n</blockquote>\n<p>The translation is sometimes quadratic rather than linear, so if it's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> in one then it will be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mrow><mn>2</mn><mi>k</mi></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^{2k})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> in the others. To get a model-invariant complexity class we therefore have to pass from specific index to \"polynomial time\". I also give other problems which the coarser complexity classes avoid.</p>\n<p>There is some intuition for this: if I have a specific computational task in mind, I might be able to design a machine that is particularly efficient at it while still being able to perform other computations. My advisor gave me an example of a machine that can perform computations on graphs efficiently; more generally, the speed at which a computer can perform certain computations on some data structure depends on how that structure is loaded into the machine, and encoding a graph on the tape of a Turing machine is hard to do efficiently. The claim is that the improvement in efficiency will only be polynomial.</p>\n<p>Of course, for this to be true one also needs to control which operations count as basic. Beta-reductions in lambda calculus are <a href=\"https://www.win.tue.nl/~hzantema/israccattoli.pdf\">a bit too powerful</a>, for instance.</p>",
        "id": 288314932,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1656835775
    },
    {
        "content": "<p>Thanks.  This is interesting because many algorithms on Wikipedia come with explicit statements that they have complexity of the form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> with a specific exponent <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>.   For example:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm\">https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm</a></p>\n<p>So, it looks like they have an accepted way of modeling the computations, to say more than just \"polynomial time\".</p>\n<p>(In my example <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is the number of vertices of a graph; we sometimes have a more complicated version of complexity that depends on several parameters like the number of edges and the number of vertices, but my point is about something else.)</p>",
        "id": 288593363,
        "sender_full_name": "John Baez",
        "timestamp": 1657055923
    },
    {
        "content": "<p>There has been a lot of work recently on mechanizing synthetic computability theory, mostly centered around the <a href=\"https://github.com/uds-psl/coq-library-undecidability\">https://github.com/uds-psl/coq-library-undecidability</a> repo, so maybe we'll eventually get a nicer form of complexity theory too.</p>",
        "id": 288602610,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1657062568
    },
    {
        "content": "<p>They already seem to have some complexity stuff built on top of it, e.g. <a href=\"https://drops.dagstuhl.de/opus/volltexte/2021/13915/\">https://drops.dagstuhl.de/opus/volltexte/2021/13915/</a></p>",
        "id": 288602869,
        "sender_full_name": "Alex Gryzlov",
        "timestamp": 1657062791
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Morgan.20Rogers/near/288593363\">said</a>:</p>\n<blockquote>\n<p>So, it looks like they have an accepted way of modeling the computations, to say more than just \"polynomial time\".</p>\n</blockquote>\n<p>I would say that these complexity statements are based on a \"model-free\" set-up rather than a \"model-invariant\" one: the complexity of an algorithm is measured in terms of the number of basic operations involved, without actually making reference to any particular implementation (where said operations might not be basic at all!) and the complexity of the problem is the complexity of the least complex algorithm. I hope that idea also comes across in what I wrote..!</p>",
        "id": 288629662,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1657089852
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276047\">Alex Gryzlov</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Morgan.20Rogers/near/288602610\">said</a>:</p>\n<blockquote>\n<p>There has been a lot of work recently on mechanizing synthetic computability theory, mostly centered around the <a href=\"https://github.com/uds-psl/coq-library-undecidability\">https://github.com/uds-psl/coq-library-undecidability</a> repo, so maybe we'll eventually get a nicer form of complexity theory too.</p>\n</blockquote>\n<p>What do you mean by \"a nicer form of complexity theory\"? I did see a talk recently (at the last Chocola meeting in Lyon) about synthetic computability theory, where the focus was around axiomatizing Church-Turing in order to be able to formalize proofs involving it; it was possibly the most convincing use-case for formalization that I've seen.</p>",
        "id": 288629893,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1657090088
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Morgan.20Rogers/near/288629662\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/Morgan.20Rogers/near/288593363\">said</a>:</p>\n<blockquote>\n<p>So, it looks like they have an accepted way of modeling the computations, to say more than just \"polynomial time\".</p>\n</blockquote>\n<p>I would say that these complexity statements are based on a \"model-free\" set-up rather than a \"model-invariant\" one: the complexity of an algorithm is measured in terms of the number of basic operations involved</p>\n</blockquote>\n<p>It is \"model-free\" in that we are abstracting from the cost of basic operations (which are all counted as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>), but it does depend on an important, model-specific assumption: that memory is <em>random-access</em>.  In other words, in the practice of algorithms, people have taken as default the RAM (<a href=\"https://www.wikiwand.com/en/Random-access_machine\">Random Access Machine</a>) model of computation.  When people say, without any further comment, that \"this algorithm has complexity <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(f(n))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))</span></span></span></span>\", they are thinking of an implementation on a RAM-like model.  This is justified by the fact that, from the very early days, actual computers are RAM-like (much more than they are Turing-machine-like).</p>\n<p>For example, the Floyd-Warshall algorithm does not have complexity <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> on a (multitape) Turing machine, but that's <em>not</em> because the basic semiring operations in question cannot be implemented in constant time on a Turing machine (in some important cases, they can: for instance, for the Boolean semiring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo><mo separator=\"true\">,</mo><mo>∨</mo><mo separator=\"true\">,</mo><mo>∧</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\{0,1\\},\\lor,\\land)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">({</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∨</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∧</span><span class=\"mclose\">)</span></span></span></span>, which is all we need if we want to compute transitive closure rather than shortest paths).  Rather, it is because Turing machines are not random-access, and reading an entry in the adjacency matrix of the input graph spread out on the input tape is not a constant-time operation.  And even if you considered random-access Turing machines, you would <em>still</em> have logarithmic factors showing up because manipulating the pointers to the input tape does not have constant cost (the pointers are themselves tapes).</p>\n<p>So, in reality, a better interpretation of the unadorned sentence \"this algorithm runs in time <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(f(n))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))</span></span></span></span>\" is \"this algorithm runs in time <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(f(n))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))</span></span></span></span> on a RAM\".  Or, in more practical terms, \"when all basic data (typically, integers) fit in less than <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> bits (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> is some technology-related constant; e.g., these days, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>64</mn></mrow><annotation encoding=\"application/x-tex\">k=64</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">64</span></span></span></span>), this algorithm runs in time <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(f(n))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">))</span></span></span></span> on an actual computer\".</p>\n<p>Moral of the story: the complexity analysis of algorithms is much less abstract and model-free than what we would like it to be!  But that does not affect the meaningfulness of \"robust\" complexity classes (like logspace, polytime, deterministic or not, etc.), which are model-invariant.</p>",
        "id": 288634984,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1657094166
    },
    {
        "content": "<p>Not an expert either, but my feeling is that there are two distinct communities talking about complexity:</p>\n<ul>\n<li>\n<p>in complexity theory, people are interested in complexity classes (polynomial, linear, etc),</p>\n</li>\n<li>\n<p>in algorithms, they are interested in precise bounds (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, etc).</p>\n</li>\n</ul>\n<p>(I'd be very interested in any categorical, model-independent, invariant, ... approach to both! Ping <span class=\"user-mention\" data-user-id=\"276839\">@Damiano Mazza</span>...)</p>",
        "id": 288635468,
        "sender_full_name": "Tom Hirschowitz",
        "timestamp": 1657094452
    },
    {
        "content": "<p>Yes, that's absolutely true.  And in the first community, the model of choice is Turing machines, whereas in the second community, it is RAMs.</p>\n<p>However, as I said, most complexity classes of interest in complexity theory are model-invariant, or, even better, have equivalent definitions which do not mention any model at all (see for example <a href=\"https://www.wikiwand.com/en/Descriptive_complexity_theory\">descriptive complexity theory</a>).  Turing machines are just a convenient choice motivated by the fact that their time and space cost models are self-evident and essentially unquestionable, but they are not inevitable for formulating complexity theory.  Here, categorical approaches are definitely possible and, hopefully, relevant (I hope to be able to say something more precise soon!).</p>\n<p>In the case of algorithms, there is no hope: precise running times (e.g., up to the exponent in a polynomial bound) depend on the model.  We are especially interested in how algorithms behave on the computational devices we use every day, and so we tend to pick models that are close to them.  In any case, it is possible to develop categorical approaches to both the languages describing algorithms and the relationship that these have with the cost models of interest.  The first aspect is, basically, modern programming languages theory <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> (and you know more than me about it!).  The second aspect is less developed, and certainly more of a present-day challenge, but there is already interesting work on the topic.  A couple of examples that come to my mind now are Blelloch and Harper's approach to time and space cost models in functional programming languages (although it does not explicitly use any category theory) and Danner and Licata's papers on denotational cost semantics (which uses monads!).  But there's certainly more out there.</p>",
        "id": 288639416,
        "sender_full_name": "Damiano Mazza",
        "timestamp": 1657096606
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"276839\">@Damiano Mazza</span> ,  this clarifies a lot. So there is some sanity in the basic definitions of complexity theory, I'm very happy to hear that lol</p>",
        "id": 288659248,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1657108964
    },
    {
        "content": "<p>There is also \"fine-grained complexity theory\" which tries to prove lower bounds on the k in O(n^k), with many interesting results (conditional on conjectures such as the exponential time hypothesis for SAT). Also, there's an old theorem that says that for any k, l &gt;= 2, k-tape and l-tape Turing machines can simulate each other with a logarithmic overhead in time. So I'd say that even from a complexity-theoretic POV, \"time O(n^k * polylog(n))\" is a reasonably mathematically robust notion.</p>",
        "id": 288670782,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1657114559
    },
    {
        "content": "<p>(That said, I've never really understood what is being really achieved when one shows that a log factor can be brought down to inverse-ackermann in some algorithm…)</p>",
        "id": 288670991,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1657114649
    },
    {
        "content": "<p>Relatedly, I'd be interested in what other computer scientists think of this series of blog posts geared towards programmers: <a href=\"https://www.ilikebigbits.com/2014_04_21_myth_of_ram_1.html\">https://www.ilikebigbits.com/2014_04_21_myth_of_ram_1.html</a> (personally, I'm not really convinced)</p>",
        "id": 288671457,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1657114860
    },
    {
        "content": "<p>The black hole analysis is bogus and the empirical results don't correspond to the theory he presents (where the speed limit of information transfer is what creates the bound), but a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mroot><mi>N</mi><mn>3</mn></mroot><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\sqrt[3]{N})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1767em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8102em;\"><span style=\"top:-2.988em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9267em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-2.8867em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1133em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> bound in general and a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msqrt><mi>N</mi></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\sqrt{N})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1767em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9267em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-2.8867em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1133em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> bound for a planar architecture seems reasonable.</p>\n<p>Ultimately there are yet further operations one could penalize in the complexity calculation by examining finer and finer grains of logistical detail in the operation of a particular model of computation. This is the kind of assumption it is helpful to be conscious of when doing complexity theory, I think: any amount of abstraction amounts to taking some operations for granted, treating them as cost-free. Acknowledging this maintains the focus on what a given notion of complexity is \"actually\" measuring.</p>",
        "id": 288676169,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1657116623
    },
    {
        "content": "<p>It turned out that my post on complexity wasn't quite sufficient for the complexity measures I needed to build for goal-directedness, so I wrote an extension of it in a <a href=\"https://www.lesswrong.com/posts/e936w9JzDP4WqQjcc/goal-directedness-relativising-complexity\">fourth post</a>. This one is about <strong>relative complexity</strong>. It's not especially comprehensive; it's more of a record of me working out what relativisation can mean and do.</p>",
        "id": 294044877,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1660816902
    },
    {
        "content": "<p>Thanks for sharing these posts! I would like to try and find time and energy to read them properly, as mathematical notions of complexity are something new and exciting to me. However, in an medical imaging context, I have worked a little bit with something called \"sparsity\", which is something I've thought of as measuring the simplicity of something.</p>\n<p>In a vector space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, if we choose a basis <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> so that we can write a vector <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> as a sum of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> non-zero basis vectors, we say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>-sparse with respect to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. (Hopefully I am remembering this right). How sparse a vector is depends on the basis that we choose, which reminds me of your section entitled \"fragility of complexity measures\".</p>\n<p>We can use sparsity to help solve optimization problems, where the intuition is that the real solution is \"simple\", which we approximate by saying it should be pretty sparse with respect to a chosen basis. A challenge here is choosing a basis that makes the unknown solution actually sparse. It's my guess that people are using machine learning these days to find sparsifying basis vectors. Anyways, this approach can help reject \"artifacts\" in images, and reduce the impact of noise - intuitively because these additions to an image make them less simple.</p>\n<p>Do you happen to know if the sparsity of a vector with respect to a basis is somehow related to the kind of complexity you are talking about?</p>\n<p>Edit: Upon reading a little more carefully, I see you talk about the squared length of vectors in a given basis as an example of how we can vary complexity by changing the building blocks involved. The example of sparsity is a little different, but very similar, so I think I understand that sparsity probably does fit under the umbrella of the things you're talking about here. Cool!</p>",
        "id": 294122561,
        "sender_full_name": "David Egolf",
        "timestamp": 1660840285
    },
    {
        "content": "<p>Yes indeed! It's really interesting to hear someone studying the dual problem of choosing a complexity measure out of a particular family which makes the chosen instance simple. For a single vector, the problem is less interesting, but for simultaneously making a whole family of vectors as sparse as possible I imagine it gets difficult fast. <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 294410669,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1660985589
    },
    {
        "content": "<p>In the little work I've done in this direction - testing experimentally to see if this approach can produce images with finer resolution - we've rigged things in our favour, by imaging toy systems that we know are sparse (simple) with respect to a chosen basis. It seems like we can make great images in that setting, which is kind of exciting. But once one wants to apply this work to real biological systems, then yes, I think it probably gets much harder.</p>\n<p>Incidentally, I happened to run across this article  \"Kolmogorov Complexity of Categories\" (<a href=\"https://arxiv.org/pdf/1306.2675.pdf\">https://arxiv.org/pdf/1306.2675.pdf</a>). It reminded me of your linked posts, and so I thought I might as well share a link here, in case it might be relevant.</p>",
        "id": 294446625,
        "sender_full_name": "David Egolf",
        "timestamp": 1661004721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/stream/274877-practice.3A-our-work/topic/John.20Baez/near/306633030\">said</a>:</p>\n<blockquote>\n<p>Is there a particular reason for the move? Just curious, in case it's for a reason that you're willing to share. (I'm not on Twitter, but this is a considerable motivator for me to consider joining mathstodon)</p>\n</blockquote>\n<p>I did this; my handle is <a href=\"mailto:rogers@lipn.info\">rogers@lipn.info</a></p>",
        "id": 308544209,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1667898796
    },
    {
        "content": "<p>Great, I'll follow you.</p>",
        "id": 308616834,
        "sender_full_name": "John Baez",
        "timestamp": 1667922777
    },
    {
        "content": "<p>I <a href=\"https://youtu.be/m9c7erfocTE\">gave a seminar</a> at metauni last week, on how logic may be used to understand monoid actions. I ended up covering a fair amount of foundational material relating to my work, and if you know a little logic and algebra you may find it interesting. Here's a fun screenshot:<br>\n<a href=\"/user_uploads/21317/rYhPkVe6rC_qKxBF-UUNOOoI/Screen_Shot_2022-11-03_at_9.22.57_pm_copy1.png\">Screen_Shot_2022-11-03_at_9.22.57_pm_copy1.png</a> <br>\nMetauni is hosted on Roblox, which is a platform designed for building video games, which makes it an amusingly surreal setting for a talk.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/rYhPkVe6rC_qKxBF-UUNOOoI/Screen_Shot_2022-11-03_at_9.22.57_pm_copy1.png\" title=\"Screen_Shot_2022-11-03_at_9.22.57_pm_copy1.png\"><img src=\"/user_uploads/21317/rYhPkVe6rC_qKxBF-UUNOOoI/Screen_Shot_2022-11-03_at_9.22.57_pm_copy1.png\"></a></div><div class=\"youtube-video message_inline_image\"><a data-id=\"m9c7erfocTE\" href=\"https://youtu.be/m9c7erfocTE\"><img src=\"https://uploads.zulipusercontent.net/70709d4ffc7803fe1e5f1dfd7507b27826db6c7a/68747470733a2f2f692e7974696d672e636f6d2f76692f6d3963376572666f6354452f64656661756c742e6a7067\"></a></div>",
        "id": 308663588,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1667937422
    },
    {
        "content": "<p>When not preparing applications for jobs, I've been working on a paper based on the discussion of (multiplicatively) idempotent rigs which started here on Zulip and progressed on Mastodon. It's led to some interesting combinatorics which I have enjoyed playing with. Otherwise, I've been continuing collaborations at LIPN whose details I'll share some other time.</p>\n<p>Last Sunday <span class=\"user-mention\" data-user-id=\"520261\">@William Troiani</span> and I set up a Twitch stream where we have maths research discussions live; <a href=\"https://www.twitch.tv/binary_operation\">here is our channel</a>. We're keeping our discussion to \"side projects\" which enable us to learn stuff and for which we don't mind taking the \"risks\" of open discussion; our first project is about machine learning and cryptography.<br>\nWe're planning another one this Saturday morning; I expect we'll start at around 10am (Paris time) although we're still ironing out the technical set-up so it might be later. Drop by if you like!</p>",
        "id": 339062217,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1677753923
    },
    {
        "content": "<p>Just want to mention that I am the person who started the discussion about idempotent rig by asking if there exists a non commutative idempotent rig. If ever someone care about little picky historical details. I've already seen a preprint where they mention my phd project without telling my name in a cunning way and I thought it lacks of such a precision that is surprising given that math is supposed to be the field of human knowledge with the highest standard of rigour. Surprisingly, the same exact kind of oversight appeared a second time on Mastodon last time! I'm interested to see if it happens a third time <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span>. (sorry for this message, I just think it could be fair to mention that I started this discussion and at the end I just want to get a job one day). I think you said one time that you are interested by ethics so think to what is the best to do here. I think that there is some value in asking the questions in math even if you don't answer them or even if it's just to point out something interesting with a simple question. It was a simple question but it started your further discussions and all the process and then your idea of making a paper. I don't know what is the best to do in such case to explain the story. Maybe simply say how things happened in the simplest way: \"A discussion started when ... asked about noncommutative idempotent rigs and then we became interested by the free idempotent rig to answer this question and understand more about these objects... \". That's an editorial suggestion. If you think it's ethically better not to mention my name, then it would then be the best thing to do of course. I'm not so much knowledgeable in ethics so I can't say and I'm seeking for your help on this point.</p>",
        "id": 339151706,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1677775609
    },
    {
        "content": "<p>Yep, don't worry, I say you're the one that kicked things off!</p>",
        "id": 339174961,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1677781375
    },
    {
        "content": "<p>Thanks, I appreciate!</p>",
        "id": 339175315,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1677781439
    },
    {
        "content": "<p>I also mention everyone who participated in the discussion both on Zulip and Mastodon too, at least as far as I could keep track (the Mastodon threads are dispersed enough that I could have missed someone who replied to a comment in the middle of the discussion without me noticing, but I did my best..! Zulip is definitely easier to use for this kind of record keeping <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> )</p>",
        "id": 339176245,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1677781618
    },
    {
        "content": "<p>That's nice :)</p>",
        "id": 339177924,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1677782082
    },
    {
        "content": "<p>It's certainly better to give people credit for things like this.  It may seem like an insignificant thing until <em>you yourself</em> raise a question and then people go ahead and write a paper about it and don't mention you.</p>",
        "id": 339233034,
        "sender_full_name": "John Baez",
        "timestamp": 1677804321
    },
    {
        "content": "<p>I have never had anyone email me and complain that I cited them in a paper of mine.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 339233171,
        "sender_full_name": "John Baez",
        "timestamp": 1677804377
    },
    {
        "content": "<p>Morgan is mentioned <a href=\"https://mathstodon.xyz/@LipnLab@lipn.info/111085456101368179\">here</a>.</p>",
        "id": 391743882,
        "sender_full_name": "John Baez",
        "timestamp": 1695057332
    },
    {
        "content": "<p>Heh thanks for the publicity <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span> I also got married last month so it's an exciting period in my life.</p>",
        "id": 391889484,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1695122174
    },
    {
        "content": "<p>Double congrats Morgan!!</p>",
        "id": 392318112,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1695301709
    },
    {
        "content": "<p>With the remains of a very teaching-heavy first semester almost swept up, I think I can post an update on what I'm working on!</p>\n<ol>\n<li>I'm reviewing a couple of papers, which is a nice opportunity to take a deep dive into their respective subjects that I wouldn't normally make time for. (No further details on that for obvious reasons.)</li>\n<li>Two theoretical computer science papers with collaborators here at LIPN that got rejected from FoSSaCS last month are back on the table. Neither was a fully finished product, so this was going to happen anyhow, but the rejections were more motivating than disappointing, so we're keen to knock out the remaining work!</li>\n<li>Before the holidays I met up with <span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span> and we pretty much got to the bottom of a paper that we've been hacking away at for what must be over 2.5 years by now. It's about Deligne's completeness theorem in topos theory. We just need to write it now...</li>\n<li>I worked a little over the holidays on the paper I'm writing that's motivated by discussions on (multiplicatively) idempotent rigs that happened between here and Mastodon (especially involving <span class=\"user-mention\" data-user-id=\"428716\">@Jean-Baptiste Vienney</span> and <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> ) a year ago. I discovered a bunch of cool combinatorics along the way, so it's been a long polishing process; we'll see if that reaches a conclusion soon, depending on how much time I have between the stuff above.</li>\n<li>I've been saying for a few years now that I would return to some old work on the commutation of limits and colimits (based on a research project that I did before my PhD and translation of a paper on that topic). Now there are people other than me on board, those promises might actually be realised!</li>\n</ol>\n<p>If you wondered about Binary Operation, unfortunately <span class=\"user-mention\" data-user-id=\"520261\">@William Troiani</span> went back to Australia at the end of November. However, he is still enthusiastic about the streaming research concept, so maybe we'll find a time slot in the week that can make it work? I won't make any promises about this, though.</p>",
        "id": 412298738,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1704964651
    },
    {
        "content": "<p>And by \"just write it\", he means \"just write it for the forth time\".</p>",
        "id": 412304640,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1704966651
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/stream/274877-community.3A-our-work/topic/Morgan.20Rogers/near/412298738\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>Two theoretical computer science papers with collaborators here at LIPN that got rejected from FoSSaCS last month are back on the table. Neither was a fully finished product, so this was going to happen anyhow, but the rejections were more motivating than disappointing, so we're keen to knock out the remaining work!</li>\n<li>Before the holidays I met up with <span class=\"user-mention silent\" data-user-id=\"277318\">Ivan Di Liberti</span> and we pretty much got to the bottom of a paper that we've been hacking away at for what must be over 2.5 years by now. It's about Deligne's completeness theorem in topos theory. We just need to write it now...</li>\n</ol>\n</blockquote>\n<p>Just ( <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> ) 10 weeks later, those computer science papers have been resubmitted to a conference (after a great deal of improvement!) and my paper with <span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span> is now up on <a href=\"https://arxiv.org/abs/2403.15338\">arXiv</a>! Go have a look at that if you've ever wondered why some toposes have enough points...</p>",
        "id": 429345191,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1711362223
    },
    {
        "content": "<p>Hi folks. I've had a mostly relaxed summer, but some work trickled out nonetheless. Here's what I'm up to:</p>\n<ol>\n<li>Teaching prep. Besides the (not especially mathematical) courses I taught last year, I have acquired a cryptography course, which from previous years' teaching materials I have discovered amounts to an introduction to some concepts from elementary number theory <span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span> </li>\n<li>I just put a paper about <strong>multiplicatively idempotent rigs</strong> up on the <a href=\"https://arxiv.org/abs/2408.17440\">arXiv</a>. Those that have been around for a few years might remember <a href=\"#narrow/stream/266967-deprecated.3A-mathematics/topic/Are.20boolean.20rigs.20commutative.3F/near/316746498\">this discussion</a> which was the origin of this work. It's not very category-theoretic; it's mostly elementary algebra verging on combinatorics, and I really enjoyed the breakthroughs that led to this final form. As is typical with an arXiv submission, I've realised that one of the links in it is already broken and that I forgot some crucial administrative details (my affiliation), so don't hesitate to tell me if you spot any typos for when I upload a corrected version at the end of this week.</li>\n<li>I've been continuing some collaborations and foolishly starting new ones. I don't want to announce anything else for the time being, but needless to say topos theory and/or monoids are involved in most of what I'm working on <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></li>\n</ol>",
        "id": 466887074,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725269090
    },
    {
        "content": "<p>I appreciate a lot that you mentioned that I started the discussion on Zulip and nForum, asked an interesting question etc... in the preprint on multiplicatively idempotent rigs. For sure, this can only help me (I mean, you know you want people to know your name in order to get a job one day). Now, I should say that I didn't choose the name \"Boolean rig\" as you wrote. This name must come from Toby Bartels who created <a href=\"https://ncatlab.org/nlab/revision/Boolean+rig/1\">https://ncatlab.org/nlab/revision/Boolean+rig/1</a> in 2009 and completed it alone until <a href=\"https://ncatlab.org/nlab/revision/Boolean+rig/5\">revision 5 in 2020</a>.</p>\n<p>You can read in the entry:   <br>\n\"References: There seem to be none. The ‘Boolean semirings’ in the literature (by which I mean, what Google found for me that wasn't cloaked) are something much more complicated than what we're looking at here.\" which should mean that he chose this name himself.</p>",
        "id": 467260459,
        "sender_full_name": "Jean-Baptiste Vienney",
        "timestamp": 1725371121
    },
    {
        "content": "<p>A sensible correction, I'll say \"used the term\" rather than \"chose to call them\".</p>",
        "id": 467264689,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725372114
    },
    {
        "content": "<blockquote>\n<p>don't hesitate to tell me if you spot any typos for when I upload a corrected version at the end of this week.</p>\n</blockquote>\n<p>You can get LaTeX to work in arXiv abstracts, so the abstract can say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>=</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r^2 = r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> instead of what it now says, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mn>2</mn><mo>=</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r2 = r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>.    Maybe you should use </p>\n<p><code>\\(r^2 = r\\)</code></p>\n<p>instead of </p>\n<p><code>$r^2 = r$</code></p>\n<p>I forget, but you can test out your abstract while reposting your paper and see what works.  This is pretty important since this is what most people first see when they meet your paper.</p>",
        "id": 467267207,
        "sender_full_name": "John Baez",
        "timestamp": 1725372728
    },
    {
        "content": "<p>Typo:</p>\n<blockquote>\n<p>Accordinly, the main problem</p>\n</blockquote>",
        "id": 467267455,
        "sender_full_name": "John Baez",
        "timestamp": 1725372790
    },
    {
        "content": "<p>I don't think you want to end this sentence with an ellipsis; I think a period is better:</p>\n<blockquote>\n<p>a definition inconsistent with the usual definition of Boolean rings given above...</p>\n</blockquote>",
        "id": 467268196,
        "sender_full_name": "John Baez",
        "timestamp": 1725372970
    },
    {
        "content": "<p>The parentheses here are confusing to me:</p>\n<blockquote>\n<p>Correspondingly, we can construct the free mirig on A as (a quotient of) the free commutative monoid on the free idempotent monoid on A.</p>\n</blockquote>\n<p>Either taking a quotient is essential, in which case I wouldn't parenthesize \"a quotient of\", or it's not, in which case I'd delete the parenthetical remark entirely.    As it stands, the reader is left wondering why you parenthesized the remark.</p>",
        "id": 467269565,
        "sender_full_name": "John Baez",
        "timestamp": 1725373283
    },
    {
        "content": "<blockquote>\n<p>With all this machinery in place, we can at last change gears and move onto mirigs.</p>\n</blockquote>\n<p>You mean \"move on to mirigs\": we are proceeding to the topic of mirigs.   \"Moving onto mirigs\" suggests that we're about to hop on top of a mirig.</p>\n<p>(This is related to pet peeve of mine: in a clear indication that the apocalypse is nigh, people have started writing things like \"To logoff, press this.\"  Also see <a href=\"https://grammarist.com/spelling/checkout-check-out/\">check out vs checkout</a>.)</p>",
        "id": 467273936,
        "sender_full_name": "John Baez",
        "timestamp": 1725374295
    },
    {
        "content": "<p>I like this paper a lot: I'll admit I was not motivated to work through the more technical sections, but everything up to (and not including) Section 2.1 was extremely easy and fun to read, thanks in part to your explicit use of a narrative - <em>how a bunch of people got together and worked on this problem</em> - but also thanks to lucid, patient explanations of all the fundamentals.</p>",
        "id": 467277202,
        "sender_full_name": "John Baez",
        "timestamp": 1725374912
    },
    {
        "content": "<p>Thanks for catching those errors and reading as far as you did <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> !</p>",
        "id": 467343665,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725391507
    },
    {
        "content": "<p>Sure.  By the way, I realized that somewhere around Section 2 it would be nice to see an outline of the argument to come, perhaps highlighting conceptually interesting aspects.  Before that section everything is very easy for me to read.  Starting in Section 2.1 it becomes very technical, with lemmas like</p>\n<blockquote>\n<p>For any <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> has exactly <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>18</mn><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mn>16</mn><mi>n</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\"> 18n^2 − 16n + 2 </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\">18</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">16</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> subsemigroups of height at most 2, all of which are replete.</p>\n</blockquote>\n<p>You probably can't avoid this, but you could help the readers (or me at least) by sketching out the plan ahead of time, so we can more easily tell why you are proving all these lemmas.</p>",
        "id": 467352373,
        "sender_full_name": "John Baez",
        "timestamp": 1725394547
    },
    {
        "content": "<p>Agreed, I think I need to make it clearer that:</p>\n<ol>\n<li>counting things is the overall point, but</li>\n<li>the things I chose to count in Section 2 are counted with the purpose of making it possible to count things in the next section.</li>\n</ol>",
        "id": 467478627,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725443444
    },
    {
        "content": "<p>I was thinking of a paragraph-long outline of the whole plan of attack, introducing the main relevant entities (thickets? etc.) without precise definitions, just saying roughly how you use them to get the job done.  I don't know where this 'plan of attack' should be... maybe at the start of section 3, maybe it's there somewhere and I missed it... but before joining you in brutal hand-to-hand combat readers may want to know what the plan is.  My impression of the paper was that everything was nice and easy until all of a sudden the battle had begun.</p>",
        "id": 467569087,
        "sender_full_name": "John Baez",
        "timestamp": 1725462440
    },
    {
        "content": "<p>There is an outline in the introduction, on page 2, but perhaps it needs more detail?</p>",
        "id": 467570117,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725462617
    },
    {
        "content": "<p>No, I'll put the explanation at the start of Section 2.4 rather than disrupting the outline. I think I might even separate Section 2.4 and 2.5 into a separate section.</p>",
        "id": 467571993,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725462981
    },
    {
        "content": "<p>Ah, I had quickly skimmed over that not knowing how important it would be, quickly moving on to the easy fun stuff that came next.  I often find that a more detailed intro to what will happen in each section is useful <em>at the beginning of that very section</em>.  E.g. \"In this section we prove that every bramble can be contructed by iterated central extensions of irreducible brambles called 'twigs'.  By counting twigs (Lemma 3.8) this gives a formula for the number of brambles with n twigs (Thm. 3.12).\"</p>",
        "id": 467573224,
        "sender_full_name": "John Baez",
        "timestamp": 1725463229
    },
    {
        "content": "<p>Although it's nonsense, that terminology is amusingly consistent with what's in my paper haha <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 467573555,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725463286
    },
    {
        "content": "<p>I almost started looking for twigs and brambles on the nlab :D</p>",
        "id": 467575286,
        "sender_full_name": "Peva Blanchard",
        "timestamp": 1725463604
    },
    {
        "content": "<p>You are free to use them in your next paper.</p>",
        "id": 467583563,
        "sender_full_name": "John Baez",
        "timestamp": 1725465159
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Bramble_(graph_theory)\">Brambles</a> are important and established in graph theory, though (or maybe that's the joke?)</p>",
        "id": 467587121,
        "sender_full_name": "Zoltan A. Kocsis (Z.A.K.)",
        "timestamp": 1725465666
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/stream/274877-community.3A-our-work/topic/Morgan.20Rogers/near/467571993\">said</a>:</p>\n<blockquote>\n<p>No, I'll put the explanation at the start of Section 2.4 rather than disrupting the outline. I think I might even separate Section 2.4 and 2.5 into a separate section.</p>\n</blockquote>\n<p>Here's what I added.<br>\n<a href=\"/user_uploads/21317/595hDncobkm-sBkKzScswG-3/image.png\">image.png</a><br>\nThanks again for the input.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/595hDncobkm-sBkKzScswG-3/image.png\" title=\"image.png\"><img data-original-dimensions=\"959x967\" src=\"/user_uploads/thumbnail/21317/595hDncobkm-sBkKzScswG-3/image.png/840x560.webp\"></a></div>",
        "id": 467587569,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1725465731
    },
    {
        "content": "<p>That's an excellent road map and a nice place to put it!  One wants these things to be prominent.</p>",
        "id": 467592099,
        "sender_full_name": "John Baez",
        "timestamp": 1725466351
    },
    {
        "content": "<p>Hi folks, it's been a while. Here's an update:</p>\n<ul>\n<li>A preprint with the provocative title <a href=\"https://arxiv.org/abs/2504.12158\">What is a monoid?</a> that I wrote with <span class=\"user-mention\" data-user-id=\"276699\">@Paul Blain Levy</span> (or rather that he wrote with me, since it was based on his work <span aria-label=\"yum\" class=\"emoji emoji-1f60b\" role=\"img\" title=\"yum\">:yum:</span> ) just hit the arXiv. We're hoping to submit it to computer science conferences in the near future once we've had some further discussion with authors of some of the work we cite/contrast our work with. Rather than challenging the established categorical definition of monoid, we provide a conservative extension of that definition which applies in a more flexible categorical context of \"bi-skew multicategories\" and give examples of things that should have been monoids all along but formally didn't satisfy the previous definition (for lack of a suitable categorical context).</li>\n<li>I have made some progress on at least one categorical approach to complexity theory with <span class=\"user-mention\" data-user-id=\"276839\">@Damiano Mazza</span> and his PhD student Baptiste Chanus. More on that once we know whether it will be accepted to FSCD.</li>\n<li>I have had some work online for some time about categorical models of Differential Linear Logic with <span class=\"user-mention\" data-user-id=\"401949\">@Marie Kerjean</span> and her former Master's student <span class=\"user-mention\" data-user-id=\"534371\">@Valentin Maestracci</span>. It seems there's a good chance of that getting published soon, but even more excitingly Marie's PhD student Jad Koleilat has found a variant of the formulation that appears to fix the one point of dissatisfaction we had with the work. Again, more on that after the FSCD announcement.</li>\n<li>My combinatorial work above got desk rejected with little explanation (although they provided some useful computational tools that led to an even smaller counterexample to <span class=\"user-mention\" data-user-id=\"428716\">@Jean-Baptiste Vienney</span> 's original question!) I am adapting it to send to the Journal of Integer Sequences instead.</li>\n<li>With <span class=\"user-mention\" data-user-id=\"629912\">@Ryuya Hora</span> I have been thinking about subtoposes of toposes of monoid actions. Classifying these concretely turns out to be hard in interesting ways (possibly even dependent on the continuum hypothesis and hence independent of ZFC).</li>\n<li>I'm still waiting to receive a review of my paper with <span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span> from last year... </li>\n<li>The cryptography course was fun to write exercises for, but unfortunately many of the students decided to let ChatGPT do the work for them. Based on the exam results, they didn't learn much of the material as a result :( I'll have to come up with a different strategy if I teach it again next year.</li>\n</ul>",
        "id": 512836097,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1744898989
    },
    {
        "content": "<p>Just read \"What is a monoid\" and enjoyed it greatly. It manages to weave precision, intuition and illustrative examples rather deftly.</p>",
        "id": 512850372,
        "sender_full_name": "Jacques Carette",
        "timestamp": 1744902476
    },
    {
        "content": "<p>What's next ? \"What is a category?\"?</p>",
        "id": 513152351,
        "sender_full_name": "David Corfield",
        "timestamp": 1745054236
    },
    {
        "content": "<p>“Wha’s next?” could be a great title about the monoid of natural numbers.</p>",
        "id": 513348133,
        "sender_full_name": "Peva Blanchard",
        "timestamp": 1745215807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302507\">David Corfield</span> <a href=\"#narrow/channel/274877-community.3A-our-work/topic/Morgan.20Rogers/near/513152351\">said</a>:</p>\n<blockquote>\n<p>What's next ? \"What is a category?\"?</p>\n</blockquote>\n<p>I was wondering about this! Yes, please write this! <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 524633968,
        "sender_full_name": "JR Learnstomath",
        "timestamp": 1750226162
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277473\">Morgan Rogers (he/him)</span> <a href=\"#narrow/channel/274877-community.3A-our-work/topic/Morgan.20Rogers/near/512836097\">said</a>:</p>\n<blockquote>\n<p>more on that after the FSCD announcement.</p>\n</blockquote>\n<p>What is \"FSCD\"?</p>",
        "id": 524634009,
        "sender_full_name": "JR Learnstomath",
        "timestamp": 1750226201
    },
    {
        "content": "<p>FSCD is an annual <a href=\"https://fscd2025.github.io/\">computer science conference</a>. Both papers mentioned above got accepted! Which is great news even though it means I have to leave the CT conference (whose dates clash) before the end of the week to present one of those papers and pay registration fees at both <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 524636150,
        "sender_full_name": "Morgan Rogers (he/him)",
        "timestamp": 1750227650
    }
]