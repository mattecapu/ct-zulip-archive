[
    {
        "content": "<p>Hello everyone,</p>\n<p>I've got a few new papers to advertise.</p>\n<p>First, <a href=\"https://www.ioc.ee/~cneste/files/nester-voorneveld-2024-protocol-choice-and-iteration-for-the-free-cornering.pdf\">Protocol Choice and Iteration for the Free Cornering</a>, together with <span class=\"user-mention\" data-user-id=\"277848\">@Niels Voorneveld</span>.  This extends the free cornering of a monoidal category to support additional protocol types, in particular <em>branching protocols</em>, in which one of the participants chooses which of two continuations will happen and the other must respond, and <em>iterated protocols</em>, in which the participants repeat all or part of a protocol some number of times, based on choices made during the process. If you have access to JLAMP you can get the \"official\" version, but frankly I think the preprint is more legible.</p>",
        "id": 420901364,
        "sender_full_name": "Chad Nester",
        "timestamp": 1707667748
    },
    {
        "content": "<p>Second, my PhD thesis, <a href=\"https://digikogu.taltech.ee/et/Item/696327ea-955a-45ad-bf93-bca34084131f\">Partial and Relational Algebraic Theories</a> has been successfully defended and is available from the university library. The thesis is a more careful development of the partial algebraic theories and relational algebraic theories from my published work. </p>\n<p>I'll mention that only the first ~150 pages of the document on that website are the thesis monograph, with the rest being copies of my papers. It isn't that scary!</p>",
        "id": 420901608,
        "sender_full_name": "Chad Nester",
        "timestamp": 1707667929
    },
    {
        "content": "<p>Congrats on the nice looking thesis! You should post it to arXiv (minus the copied papers). That will help people find it.</p>",
        "id": 420917973,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1707681898
    },
    {
        "content": "<p>Congrats!</p>",
        "id": 420969722,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1707724705
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275965\">Evan Patterson</span> <a href=\"#narrow/stream/274877-community.3A-our-work/topic/Chad.20Nester/near/420917973\">said</a>:</p>\n<blockquote>\n<p>Congrats on the nice looking thesis! You should post it to arXiv (minus the copied papers). That will help people find it.</p>\n</blockquote>\n<p>I don't know whether or not I should do this. I'm planning to publish journal version of the two associated conference papers at some point using material from the thesis, so it might be better to wait. I don't really know.</p>",
        "id": 420993655,
        "sender_full_name": "Chad Nester",
        "timestamp": 1707732783
    },
    {
        "content": "<p>What downside are you envisioning?</p>",
        "id": 421131320,
        "sender_full_name": "Kevin Arlin",
        "timestamp": 1707772852
    },
    {
        "content": "<p>I don't know what Chad is thinking, but my own thesis is put together from several papers, and I never put my thesis itself on the arXiv because I would rather that people read the papers instead, as they are more polished.  However, this only works if the individual papers actually do get written.</p>",
        "id": 421133279,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1707773569
    },
    {
        "content": "<p>Tomorrow at 14:00 EEST (UTC+3) I'm giving a talk in Tallinn titled <em>Elgot Categories and Abacus Programs</em>. The talk will be broadcast via Zoom, and if you're interested in listening in send me a message here and I'll send you the details. </p>\n<p><strong>Abstract:</strong> <br>\nThis talk concerns the categorical representation of the partial<br>\nrecursive functions. Specifically, I will introduce Elgot<br>\ncategories, which are a sort of structured rig category in which<br>\nall partial recursive functions are representable. Specifically, an<br>\nElgot category is a (uniform) traced cocartesian rig category<br>\nwith a distinguished isomorphism I+N→N for some object N.</p>\n<p>I will construct an initial Elgot category, the morphisms of<br>\nwhich will coincide with the abacus programs of Lambek. Finally,<br>\nI will show that in this initial Elgot category, the class of<br>\nstrongly representable partial functions is precisely the class<br>\nof partial recursive functions.</p>",
        "id": 433817376,
        "sender_full_name": "Chad Nester",
        "timestamp": 1713367880
    },
    {
        "content": "<p>I guess the main references are:</p>\n<ul>\n<li><em>Partial Recursive Functions and Finality</em> by Plotkin.</li>\n<li><em>Deconstructing the Calculus of Relations with Tape Diagrams</em> by Bonchi, Di Giorgio, and Santamaria.</li>\n</ul>",
        "id": 433818225,
        "sender_full_name": "Chad Nester",
        "timestamp": 1713368076
    },
    {
        "content": "<p>Today is my first day at my new job as a Research Fellow at the University of Tartu. It's a permanent position, which is exciting.</p>",
        "id": 438360456,
        "sender_full_name": "Chad Nester",
        "timestamp": 1715606325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/274877-community.3A-our-work/topic/Chad.20Nester/near/421133279\">said</a>:</p>\n<blockquote>\n<p>I don't know what Chad is thinking, but my own thesis is put together from several papers, and I never put my thesis itself on the arXiv because I would rather that people read the papers instead, as they are more polished.  However, this only works if the individual papers actually do get written.</p>\n</blockquote>\n<p>I do eventually hope to publish the results from my MSc thesis <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 440474368,
        "sender_full_name": "Chad Nester",
        "timestamp": 1716543344
    },
    {
        "content": "<p>In other news, I'll be attending a few conferences this summer:</p>\n<ul>\n<li>ACT/MFPS in Oxford, June 17-21. Here I'll give a talk about my thesis work on \"Partial and Relational Algebraic Theories\".</li>\n<li>CT in Santiago de Compostela, June 23-39. </li>\n<li>FSCD in Tallinn, July 10-13.</li>\n</ul>\n<p>If you'll be at one or more of these and would like to talk about something specific, let me know and I can prepare a bit in advance :)</p>",
        "id": 440475294,
        "sender_full_name": "Chad Nester",
        "timestamp": 1716543717
    },
    {
        "content": "<p>On Monday, July 8th at 14:30 in Tallinn I'll be speaking at <a href=\"https://msfp-workshop.github.io/msfp2024/\">MSFP 2024</a> about my <a href=\"https://kodu.ut.ee/~nester/files/nester-voorneveld-2024-protocol-choice-and-iteration-for-the-free-cornering.pdf\">paper</a> \"Protocol Choice and Iteration for the Free Cornering\" with Niels Voorneveld.</p>",
        "id": 448580131,
        "sender_full_name": "Chad Nester",
        "timestamp": 1719918969
    },
    {
        "content": "<p>I've put up a new thing on the arXiv: <a href=\"https://arxiv.org/pdf/2503.21434\">https://arxiv.org/pdf/2503.21434</a></p>\n<p>It's about representing the partial recursive functions in distributive monoidal categories. The short version is that you need to be traced on the coproduct, and to have an isomorphism <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>+</mo><mi>N</mi><mo>→</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">I+N \\to N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> hanging around somewhere. I think it's fun.</p>",
        "id": 508744022,
        "sender_full_name": "Chad Nester",
        "timestamp": 1743165278
    },
    {
        "content": "<p>I'd like to ponder something out loud here:</p>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{List}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">List</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>  be the set of lists with elements in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, defined as usual to be the initial algebra of the endofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>↦</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>×</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X \\mapsto 1 + (A \\times X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6943em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span>. In particular let's write the initial algebra as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mrow><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo>∣</mo><mrow><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">s</mi></mrow><mo stretchy=\"false\">⟩</mo><mo>:</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>×</mo><mrow><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\langle \\mathsf{nil} \\mid \\mathsf{cons}  \\rangle : 1 + (A \\times \\mathsf{List}(A)) \\to \\mathsf{List}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathsf\">nil</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">cons</span></span><span class=\"mclose\">⟩</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">List</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">List</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>, so that out lists look like the ones from functional programming.</p>\n<p>Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> be a set, and suppose that we have <em>partial</em> functions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">u</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">h</mi></mrow><mo>:</mo><mi>A</mi><mo>×</mo><mi>W</mi><mo>→</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{push} : A \\times W \\to W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">push</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>=</mo><mo stretchy=\"false\">⟨</mo><mrow><mi mathvariant=\"sans-serif\">h</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">a</mi><mi mathvariant=\"sans-serif\">d</mi></mrow><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">a</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">⟩</mo><mo>:</mo><mi>W</mi><mo>→</mo><mi>A</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{pop} = \\langle  \\mathsf{head},\\mathsf{tail} \\rangle : W \\to A \\times W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathsf\">head</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">tail</span></span><span class=\"mclose\">⟩</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">u</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">h</mi></mrow><mo separator=\"true\">;</mo><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>=</mo><msub><mn>1</mn><mrow><mi>A</mi><mo>×</mo><mi>W</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\mathsf{push};\\mathsf{pop} = 1_{A \\times W}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">push</span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8528em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">W</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span>. Note as an aside that an immediate consequence of this equation is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">u</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">h</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{push}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">push</span></span></span></span></span> is total.</p>\n<p>There is a total function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>:</mo><mi>W</mi><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h : W  \\to \\mathsf{List}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">List</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> defined by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">l</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext> if </mtext><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>↑</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mrow><mi mathvariant=\"sans-serif\">c</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">s</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"sans-serif\">h</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">a</mi><mi mathvariant=\"sans-serif\">d</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"sans-serif\">t</mi><mi mathvariant=\"sans-serif\">a</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext> otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">h(x) = \\begin{cases} \\mathsf{nil} &amp; \\text{ if } \\mathsf{pop}(x)\\uparrow \\\\   \\mathsf{cons}(\\mathsf{head}(x),h(\\mathsf{tail}(x))) &amp; \\text{ otherwise}\\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">nil</span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">cons</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathsf\">head</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathsf\">tail</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)))</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> if </span></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↑</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> otherwise</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>So for each <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">x \\in W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> we have a list, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>. We do not, however, seem to be able to construct an element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> for each element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{List}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">List</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>. In particular, it is unclear what we would map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{nil}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">nil</span></span></span></span></span> to.</p>\n<p>Nonetheless, I can do quite a few list-like things with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span>. So long as I'm happy to have my function become undefined the moment it attempts to inspect an \"empty\" element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> (on which <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{pop}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span></span></span></span> is undefined), there would seem to be nothing I cannot do.</p>",
        "id": 540034167,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758120130
    },
    {
        "content": "<p>Ah: a problem with this is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{pop}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span></span></span></span> may in fact be total, in which case <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> is a stream and my <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> isn't well-defined, since I never reach a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">n</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{nil}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">nil</span></span></span></span></span>.</p>",
        "id": 540035147,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758120357
    },
    {
        "content": "<p>I guess I have the same thing happening, but with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{CoList}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">CoList</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> instead of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{List}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">List</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>. Here by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{CoList}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">CoList</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> I mean the terminal coalgebra of the endofunctor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>↦</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>×</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X \\mapsto 1 + (A \\times X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6943em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>. So a colist is a \"possibly finite stream\" or equivalently a \"possibly infinite list\".</p>",
        "id": 540038368,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758121103
    },
    {
        "content": "<p>I would imagine that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>:</mo><mi>W</mi><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">C</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">L</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h : W \\to \\mathsf{CoList}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">CoList</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> is injective, but not surjective. I think I probably need to work out some examples if I want to understand this...</p>",
        "id": 540041162,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758121817
    },
    {
        "content": "<p>I presume you meant your <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> to be recursive on tail in the otherwise case.</p>",
        "id": 540041646,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758121941
    },
    {
        "content": "<p>Yes, thank you. I've fixed it.</p>",
        "id": 540041769,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758121974
    },
    {
        "content": "<p>Of course, a partial function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><mo>:</mo><mi>W</mi><mo>→</mo><mi>A</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{pop} : W \\to A\\times W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> is the same as a total function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>→</mo><mn>1</mn><mo>+</mo><mo stretchy=\"false\">(</mo><mi>A</mi><mo>×</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">W \\to 1 + (A \\times W)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span>, so then your <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> is exactly the unique map from a coalgebra to a terminal coalgebra.</p>",
        "id": 540042020,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758122039
    },
    {
        "content": "<p>In general that won't be injective or surjection, and I don't see see why the additional presence of push would make it injective.</p>",
        "id": 540042341,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758122114
    },
    {
        "content": "<p>Hmm, we do know that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">u</mi><mi mathvariant=\"sans-serif\">s</mi><mi mathvariant=\"sans-serif\">h</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{push}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">push</span></span></span></span></span> is injective because it is a section... which doesn't really seem to help here.</p>",
        "id": 540042953,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758122253
    },
    {
        "content": "<p>Right: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">p</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{pop}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">pop</span></span></span></span></span> is undefined on two distinct elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> is not an injection.</p>",
        "id": 540044051,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758122530
    },
    {
        "content": "<p>I think this might be a good way to talk about what's going on in Lisp with car/cdr and \"improper lists\"</p>",
        "id": 540049989,
        "sender_full_name": "Chad Nester",
        "timestamp": 1758124086
    }
]