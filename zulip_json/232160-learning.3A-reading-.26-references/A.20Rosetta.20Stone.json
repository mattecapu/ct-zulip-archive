[
    {
        "content": "<p>A couple of friends (of mostly programming and some maths background) are planning to read \"Physics, Topology, Logic and Computation:A Rosetta Stone\" and do some poking in Idris to guide our understanding. We plan to look over these overview slides / notes (<a href=\"http://math.ucr.edu/~mike/rosettaslides.pdf\" title=\"http://math.ucr.edu/~mike/rosettaslides.pdf\">http://math.ucr.edu/~mike/rosettaslides.pdf</a>), (<a href=\"http://math.ucr.edu/~mike/rosetta%20slides.txt\" title=\"http://math.ucr.edu/~mike/rosetta%20slides.txt\">http://math.ucr.edu/~mike/rosetta%20slides.txt</a>), read through section 2.4 of the paper, and meet next Saturday at 1:00 (GMT -4) to discuss</p>",
        "id": 194561322,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587240177
    },
    {
        "content": "<p>please chime in if you are interested in joining!</p>",
        "id": 194561390,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587240288
    },
    {
        "content": "<p>Looks interesting! Count me in! :)</p>",
        "id": 194561512,
        "sender_full_name": "T Murrills",
        "timestamp": 1587240512
    },
    {
        "content": "<p>Great!  I'd be happy to answer any questions here.</p>",
        "id": 194566081,
        "sender_full_name": "John Baez",
        "timestamp": 1587247784
    },
    {
        "content": "<p>I'm also keen. Is that 1:00 AM or PM GMT-4? I'm GMT+10.</p>",
        "id": 194670866,
        "sender_full_name": "Naso",
        "timestamp": 1587387591
    },
    {
        "content": "<p>Sounds interesting, I'd gladly join ! As Nasos I am a bit confused about the meeting time, could you give the UTC meeting time ? Thanks !</p>",
        "id": 194702155,
        "sender_full_name": "Luc Chabassier",
        "timestamp": 1587401030
    },
    {
        "content": "<p>Great! I'm sure <span class=\"user-mention\" data-user-id=\"276048\">@Mike Stay</span> would be happy to talk about it here as well.</p>",
        "id": 194708551,
        "sender_full_name": "Christian Williams",
        "timestamp": 1587404209
    },
    {
        "content": "<p>I would assume that someone giving a time in GMT -4 lives in that time zone and is not scheduling an event for 1 AM local time.</p>",
        "id": 194708821,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587404374
    },
    {
        "content": "<p>Great! Yes, I meant 1PM (GMT -4) or 17 UTC. We can try to shuffle the time around to make it better for all who want to attend. Here is a survey to see when folks may be available: <a href=\"https://xoyondo.com/dp/9goetOGA6VSwF7q\" title=\"https://xoyondo.com/dp/9goetOGA6VSwF7q\">https://xoyondo.com/dp/9goetOGA6VSwF7q</a> . In the upper left corner, you can change the times to your timezone.</p>",
        "id": 194717323,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587408554
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/194708551\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/194708551\">said</a>:</p>\n<blockquote>\n<p>Great! I'm sure <span class=\"user-mention silent\" data-user-id=\"276048\">Mike Stay</span> would be happy to talk about it here as well.</p>\n</blockquote>\n<p>Yep!</p>",
        "id": 194736587,
        "sender_full_name": "Mike Stay",
        "timestamp": 1587418492
    },
    {
        "content": "<p>Looks like the original time of 17UTC this Saturday remains the crowd favorite. Hope to see you all there!</p>\n<p>Reminder that the goal is to look over these <a href=\"http://math.ucr.edu/~mike/rosettaslides.pdf\" title=\"http://math.ucr.edu/~mike/rosettaslides.pdf\">slides</a> &amp; <a href=\"http://math.ucr.edu/~mike/rosetta%20slides.txt\" title=\"http://math.ucr.edu/~mike/rosetta%20slides.txt\">corresponding notes</a>, and read up to section 2.5: Symmetric Monoidal Categories in the <a href=\"https://arxiv.org/pdf/0903.0340.pdf\" title=\"https://arxiv.org/pdf/0903.0340.pdf\">paper</a> prior to our meeting.</p>",
        "id": 195131903,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587684753
    },
    {
        "content": "<p>(Today’s my SO’s birthday, so I’m afraid I won’t be there today, but I’ll definitely be there next time! :) )</p>",
        "id": 195288478,
        "sender_full_name": "T Murrills",
        "timestamp": 1587827089
    },
    {
        "content": "<p>seems kinda weird to celebrate your stackoverflow account's birthday but programmers will be programmers i guess</p>",
        "id": 195288959,
        "sender_full_name": "sarahzrf",
        "timestamp": 1587827744
    },
    {
        "content": "<p>Bringing that twitter energy to Zulip I see :)</p>",
        "id": 195290245,
        "sender_full_name": "Cody Roux",
        "timestamp": 1587829594
    },
    {
        "content": "<p>GMT -4 is this, right?<br>\n<a href=\"https://www.timeanddate.com/worldclock/uk/greenwich-city\" title=\"https://www.timeanddate.com/worldclock/uk/greenwich-city\">https://www.timeanddate.com/worldclock/uk/greenwich-city</a><br>\nI missed it, but I'll try to be present the next time...</p>",
        "id": 195290448,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1587829938
    },
    {
        "content": "<p>No, that's just GMT, except when it isn't, such as now.<br>\nThe start time is ~1 hour from now.</p>",
        "id": 195290583,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587830154
    },
    {
        "content": "<p>I solemnly swear to solely use UTC time in the future. The start time is indeed ~1hr from now</p>",
        "id": 195290692,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587830284
    },
    {
        "content": "<p>Great! I'll be there!</p>",
        "id": 195291149,
        "sender_full_name": "Eduardo Ochs",
        "timestamp": 1587830972
    },
    {
        "content": "<p><a href=\"https://us02web.zoom.us/j/6853551826\" title=\"https://us02web.zoom.us/j/6853551826\">https://us02web.zoom.us/j/6853551826</a></p>",
        "id": 195293114,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587833768
    },
    {
        "content": "<p>Thanks everyone. Can you post the links for the idris library here ?</p>",
        "id": 195304464,
        "sender_full_name": "Luc Chabassier",
        "timestamp": 1587851428
    },
    {
        "content": "<p>Library that we are working with: <a href=\"https://github.com/statebox/idris-ct/\" title=\"https://github.com/statebox/idris-ct/\">https://github.com/statebox/idris-ct/</a></p>",
        "id": 195307367,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587856936
    },
    {
        "content": "<p>My messy hackings towards Idris as a Cartesian category: <a href=\"https://gitlab.com/jake.gillberg/programmingcats/-/blob/master/src/ProgrammingCats/MonoidalCategory/CartesianCategory.idr\" title=\"https://gitlab.com/jake.gillberg/programmingcats/-/blob/master/src/ProgrammingCats/MonoidalCategory/CartesianCategory.idr\">https://gitlab.com/jake.gillberg/programmingcats/-/blob/master/src/ProgrammingCats/MonoidalCategory/CartesianCategory.idr</a></p>",
        "id": 195307402,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1587857011
    },
    {
        "content": "<p>A WIP pull request implementing Cartesian Monoidal Categories: <a href=\"https://github.com/statebox/idris-ct/pull/81\" title=\"https://github.com/statebox/idris-ct/pull/81\">https://github.com/statebox/idris-ct/pull/81</a></p>",
        "id": 195490904,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588033751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195490904\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195490904\">said</a>:</p>\n<blockquote>\n<p>A WIP pull request implementing Cartesian Monoidal Categories: <a href=\"https://github.com/statebox/idris-ct/pull/81\" title=\"https://github.com/statebox/idris-ct/pull/81\">https://github.com/statebox/idris-ct/pull/81</a></p>\n</blockquote>\n<p>Cheers! We'll take a look asap!</p>",
        "id": 195491121,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588033956
    },
    {
        "content": "<p>Still in progress! and <span class=\"user-mention\" data-user-id=\"276055\">@marcosh</span> has been awesome at prompt replies / merging of completed work. I'm currently butting my head against the long / ?infinite? compile times of Monoidal Categories.</p>",
        "id": 195491221,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588034088
    },
    {
        "content": "<p>Yes, so we know for sure that <em>symmetric</em> monoidal categories do not compile</p>",
        "id": 195491242,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588034112
    },
    {
        "content": "<p>There's an open issue about that. Non symmetric ones work but compiling takes ages</p>",
        "id": 195491257,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588034129
    },
    {
        "content": "<p>Do you know if the issue with symmetric monoidal categories would also be an issue with cartesian ones?</p>",
        "id": 195491335,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588034196
    },
    {
        "content": "<p>Anyway we worked hard in the past to prove this, also together with <span class=\"user-mention\" data-user-id=\"281119\">@Andre Knispel</span> . This is the main reason why we formalized products, terminal objects etc. We figured that proving that idris types and functions had products and terminal objects and use this to get a monoidal structure was better/nicer than doing it directly, but then we stopped</p>",
        "id": 195491343,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588034209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195491335\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195491335\">said</a>:</p>\n<blockquote>\n<p>Do you know if the issue with symmetric monoidal categories would also be an issue with cartesian ones?</p>\n</blockquote>\n<p>I really don't know. This bug is rather mysterious and if I recall correctly we weren't able to spot what made compiling fail when introducing symmetries. We are very much sure it's an Idris bug but it was very difficult to produce a minimal example</p>",
        "id": 195491370,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588034270
    },
    {
        "content": "<p>Cool, yeah, I saw a bit of discussion on that and tried to pick up the work</p>",
        "id": 195491371,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588034274
    },
    {
        "content": "<p>There are related open issues also on the idris repo</p>",
        "id": 195491389,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588034282
    },
    {
        "content": "<p>Any attempts to get symmetric monoidal categories to compile in idris2?</p>",
        "id": 195491523,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588034443
    },
    {
        "content": "<p>Ah, I see that at least as of late July there were some issues: <a href=\"https://github.com/statebox/idris-ct/issues/6#issuecomment-515981734\" title=\"https://github.com/statebox/idris-ct/issues/6#issuecomment-515981734\">https://github.com/statebox/idris-ct/issues/6#issuecomment-515981734</a> </p>\n<blockquote>\n<p>\"Adding unitCoherence to MonoidalCategory.SymmetricMonoidalCategory causes the compiler to crash with Segmentation fault (core dumped).\"</p>\n</blockquote>",
        "id": 195491710,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588034671
    },
    {
        "content": "<p>I'm currently building idris-ct. Is it normal for it to take more than 5 or 10 minutes? Never built with Nix before.</p>",
        "id": 195500933,
        "sender_full_name": "Christian Williams",
        "timestamp": 1588048630
    },
    {
        "content": "<p>Okay, I assumed that the nix-build command would build the files in the current directory, so I didn't pass it an argument. It seems like it's just building tons of stuff... ah wait, it finally got to idris-ct. Lots of requirements, I guess.</p>",
        "id": 195501355,
        "sender_full_name": "Christian Williams",
        "timestamp": 1588049176
    },
    {
        "content": "<blockquote>\n<p>Type checking ./Discrete/DiscreteFunctor.lidr<br>\nType checking ./Unit/UnitCategory.lidr<br>\nType checking ./Comma/OverCategory.lidr<br>\nType checking ./Comma/UnderCategory.lidr<br>\nType checking ./Monad/Monad.lidr<br>\n/nix/store/7whxa62xjyfylxhww5w9ppjpsl4x9rim-stdenv-linux/setup: line 1332:   680 Killed                  idris --build idris-ct.ipkg<br>\nbuilder for '/nix/store/k4kyl0ncbx39gq88rvb7bfdnc15a0jpv-idris-idris-ct-dev.drv' failed with exit code 137<br>\nerror: build of '/nix/store/gsks1avjndm1hidlqgpf18ajx059r0zf-idris-ct-doc-dev.drv', '/nix/store/k4kyl0ncbx39gq88rvb7bfdnc15a0jpv-idris-idris-ct-dev.drv' failed</p>\n</blockquote>\n<p>So close. I'll try again tomorrow. (If anyone has advice let me know.)</p>",
        "id": 195501872,
        "sender_full_name": "Christian Williams",
        "timestamp": 1588050159
    },
    {
        "content": "<p>welcome to nix</p>",
        "id": 195521288,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588052781
    },
    {
        "content": "<p>enjoy the deep end</p>",
        "id": 195521292,
        "sender_full_name": "sarahzrf",
        "timestamp": 1588052795
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275899\">Christian Williams</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195500933\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195500933\">said</a>:</p>\n<blockquote>\n<p>I'm currently building idris-ct. Is it normal for it to take more than 5 or 10 minutes? Never built with Nix before.</p>\n</blockquote>\n<p>If you want to build _everything_ it will probably take a couple of hours!</p>",
        "id": 195540892,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588067726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/194561322\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/194561322\">said</a>:</p>\n<blockquote>\n<p>A couple of friends (of mostly programming and some maths background) are planning to read \"Physics, Topology, Logic and Computation:A Rosetta Stone\" and do some poking in Idris to guide our understanding. We plan to look over these overview slides / notes (<a href=\"http://math.ucr.edu/~mike/rosettaslides.pdf\" title=\"http://math.ucr.edu/~mike/rosettaslides.pdf\">http://math.ucr.edu/~mike/rosettaslides.pdf</a>), (<a href=\"http://math.ucr.edu/~mike/rosetta%20slides.txt\" title=\"http://math.ucr.edu/~mike/rosetta%20slides.txt\">http://math.ucr.edu/~mike/rosetta%20slides.txt</a>), read through section 2.4 of the paper, and meet next Saturday at 1:00 (GMT -4) to discuss</p>\n</blockquote>\n<p>This group sounds cool! Is it on again tomorrow? What's been covered so far?</p>",
        "id": 195941122,
        "sender_full_name": "croy",
        "timestamp": 1588321992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"279461\">@croy</span> Yup! We are on for tomorrow at 17 UTC. We plan to start with a 30 min intro to Idris then discuss section 2.6 (closed categories). Last week we took a look at the <a href=\"https://github.com/statebox/idris-ct/\" title=\"https://github.com/statebox/idris-ct/\">statebox idris-ct library</a>, and have made a bit of headway <a href=\"https://github.com/statebox/idris-ct/pull/81\" title=\"https://github.com/statebox/idris-ct/pull/81\">implementing cartesian categories</a>.</p>",
        "id": 195954581,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588334865
    },
    {
        "content": "<p>I may try to join if you want, I'm familiar with idris-ct more or less</p>",
        "id": 195954726,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588334970
    },
    {
        "content": "<p>I could also spread the word in our internal chat, so that you can have some of our devs around if you need help with idris-ct <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 195954750,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588334993
    },
    {
        "content": "<p>Would that be useful?</p>",
        "id": 195954802,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588335008
    },
    {
        "content": "<p>Sure! If there is interest! I'd also be quite happy with some interaction through comments on the pull request</p>",
        "id": 195954927,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588335134
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278318\">@Jake Gillberg</span>  Would joining just to listen-in be okay? I'm playing catch-up  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 195955179,
        "sender_full_name": "a13ph",
        "timestamp": 1588335348
    },
    {
        "content": "<p>Yeah, not a problem! Happy to discuss previous material as well</p>",
        "id": 195955266,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588335415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278318\">@Jake Gillberg</span>  Thanks. <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span>  Wanted to make sure, since some groups are discouraging that, I think.<br>\nRegarding previous material - if I'll think I can ask a coherent question. I'll definitely try, but probably not in the first few sessions. Being on this Zulip is already a lesson in humility <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 195955494,
        "sender_full_name": "a13ph",
        "timestamp": 1588335668
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195954927\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195954927\">said</a>:</p>\n<blockquote>\n<p>Sure! If there is interest! I'd also be quite happy with some interaction through comments on the pull request</p>\n</blockquote>\n<p>Cool! So there's a link or something?</p>",
        "id": 195955851,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588335966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955851\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955851\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195954927\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195954927\">said</a>:</p>\n<blockquote>\n<p>Sure! If there is interest! I'd also be quite happy with some interaction through comments on the pull request</p>\n</blockquote>\n<p>Cool! So there's a link or something?</p>\n</blockquote>\n<p><a href=\"https://github.com/statebox/idris-ct/pull/81\" title=\"https://github.com/statebox/idris-ct/pull/81\">https://github.com/statebox/idris-ct/pull/81</a> . I've highlighted the point at which I am struggling in the comments</p>",
        "id": 195955878,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588336015
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"297940\">a13ph</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955494\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955494\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span>  Thanks. <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span>  Wanted to make sure, since some groups are discouraging that, I think.<br>\nRegarding previous material - if I'll think I can ask a coherent question. I'll definitely try, but probably not in the first few sessions. Being on this Zulip is already a lesson in humility <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>\n</blockquote>\n<p>Agreed! I won't speak for everyone in the group, but I'd definitely call myself a beginner. Feel free to bring those incoherent questions, maybe we can turn them into coherent ones together :)</p>",
        "id": 195956004,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588336130
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955878\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955878\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955851\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195955851\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"278318\">Jake Gillberg</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195954927\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/195954927\">said</a>:</p>\n<blockquote>\n<p>Sure! If there is interest! I'd also be quite happy with some interaction through comments on the pull request</p>\n</blockquote>\n<p>Cool! So there's a link or something?</p>\n</blockquote>\n<p><a href=\"https://github.com/statebox/idris-ct/pull/81\" title=\"https://github.com/statebox/idris-ct/pull/81\">https://github.com/statebox/idris-ct/pull/81</a> . I've highlighted the point at which I am struggling in the comments</p>\n</blockquote>\n<p>I mean, is there a link to the group chat/call?</p>",
        "id": 195956136,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588336249
    },
    {
        "content": "<p>If I have to spread the word to our Devs in case they wanna chime in I got to tell them <em>where</em> they have to chime in xD</p>",
        "id": 195956178,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588336286
    },
    {
        "content": "<blockquote>\n<p>... link to the group chat/call</p>\n</blockquote>\n<p>ah, sure! <a href=\"https://zoom.us/j/6853551826\" title=\"https://zoom.us/j/6853551826\">https://zoom.us/j/6853551826</a> Sat: 17 UTC (starting with 30 min basic Idris intro, then moving on to closed categories and idris-ct</p>",
        "id": 195956328,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588336386
    },
    {
        "content": "<p>A couple of us are in the room now! <a href=\"https://zoom.us/j/6853551826\" title=\"https://zoom.us/j/6853551826\">https://zoom.us/j/6853551826</a></p>",
        "id": 196059708,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588437490
    },
    {
        "content": "<p>Cool!</p>",
        "id": 196060242,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588438325
    },
    {
        "content": "<p>Thanks to whomever gave the Mac Lane suggestion. I've been putting it off, fearing it would be too theoretical with not enough examples. Now that I know it's rich in examples, which I don't need to know all, but only some... Well, that's exactly what I need to grok much of intro CT, I think.</p>",
        "id": 196063504,
        "sender_full_name": "a13ph",
        "timestamp": 1588443009
    },
    {
        "content": "<p>I did! Yes people keep saying that MacLane is not good to learn and I found that to be the most limiting suggestion of my career.</p>",
        "id": 196106417,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588517229
    },
    {
        "content": "<p>Hear hear.</p>",
        "id": 196109028,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1588520940
    },
    {
        "content": "<p>Another important advice: Do not focus too much on MacLane's exercises. They are _notoriously_ difficult. Like, legend is that some of them were open problems when the book came out. So you shouldn't try too hard to solve them, or getting frustrated if you can't. They are not meant to be friendly :D</p>",
        "id": 196113025,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588525974
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276438\">Fabrizio Genovese</span> <a href=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/196113025\" title=\"#narrow/stream/232160-learning.3A-reading.20groups/topic/A.20Rosetta.20Stone/near/196113025\">said</a>:</p>\n<blockquote>\n<p>Another important advice: Do not focus too much on MacLane's exercises. They are _notoriously_ difficult. Like, legend is that some of them were open problems when the book came out. </p>\n</blockquote>\n<p>Do you know which ones?<br>\nI've been working my way through them and: 1) half the material is in them, and 2) they are great.</p>\n<p>I do remember on exercise I got really stuck on, asking to come up with a counter example in presheaf categories, but I put it aside for a few years, and when I picked it up again it was immediate (taking the empty category as a counter-example)</p>",
        "id": 196170604,
        "sender_full_name": "Ohad Kammar",
        "timestamp": 1588593553
    },
    {
        "content": "<p>I'd be interested to know myself; I don't know of any that could be considered open questions at the time of writing the first edition, not even close. However, I do remember one that made me throw up my hands when I first saw it (when I was pretty young)... well, it was from the first edition and I can't find either edition in my home library at the moment, but it had to do with all bracketings of monoidal products of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">n+2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> indeterminates and associativities between them as forming a subdivision of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-sphere. By now enough people know about associahedra that this problem might not seem so difficult anymore (and maybe his formulation was a bit imprecise), but at the time I first read it, it just seemed impossible.</p>",
        "id": 196173257,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1588595271
    },
    {
        "content": "<p>Well, I said \"legend is that\" because this is something that someone (don't remember who) told me during my PhD. I have no way to substantiate this claim. In any case, MacLane exercises are harder compared with other CT books, I thought  this was something worth pointing out <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 196208975,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1588611220
    },
    {
        "content": "<p>Concerning the associator in a monoidal category, what are the source and target categories of the functors that make up the natural isomorphism? I'm still a bit tripped up by this after more thought</p>",
        "id": 196230265,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588621280
    },
    {
        "content": "<p>There's some choice. If you're happy using an unbiased cartesian product of categories, then you can take functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">C</mi><mn>3</mn></msup><mo>→</mo><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb C^3 \\to \\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> mapping <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>↦</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>⊗</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⊗</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">(X, Y, Z) \\mapsto (X \\otimes Y) \\otimes Z</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> and  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>↦</mo><mi>X</mi><mo>⊗</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>⊗</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X, Y, Z) \\mapsto X \\otimes (Y \\otimes Z)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 196231166,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588621721
    },
    {
        "content": "<p>If you want to use a binary cartesian product, then you need to reassociate in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> using the pairing maps.</p>",
        "id": 196231271,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588621775
    },
    {
        "content": "<p>Here <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> is your monoidal category, not the complex numbers.  This should be obvious, but I never ever use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> for anything except the complex numbers, so I momentarily thought Nathanael had gone mad.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 196231719,
        "sender_full_name": "John Baez",
        "timestamp": 1588621961
    },
    {
        "content": "<p>Ah great, unbiased cartesian product of categories looks like the <a href=\"https://ncatlab.org/nlab/show/cartesian+product\" title=\"https://ncatlab.org/nlab/show/cartesian+product\">definition given in nlab</a>. I had only seen the binary version before. What does \"reassociate in Cat\" mean? The functors are endofunctors in cat?</p>",
        "id": 196232464,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588622334
    },
    {
        "content": "<p>You can define the functors instead <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">C</mi><mo>×</mo><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"double-struck\">C</mi><mo>→</mo><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">(\\mathbb C \\times \\mathbb C) \\times \\mathbb C \\to \\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span>, where one is given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo><mo>∘</mo><mo stretchy=\"false\">(</mo><mo>⊗</mo><mo>×</mo><mrow><mi mathvariant=\"normal\">I</mi><mi mathvariant=\"normal\">d</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes \\circ (\\otimes \\times \\mathrm{Id})</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">I</span><span class=\"mord mathrm\">d</span></span><span class=\"mclose\">)</span></span></span></span>, and the other by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo><mo>∘</mo><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">I</mi><mi mathvariant=\"normal\">d</mi></mrow><mo>×</mo><mo>⊗</mo><mo stretchy=\"false\">)</mo><mo>∘</mo><msub><mi>α</mi><mi mathvariant=\"double-struck\">C</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\otimes \\circ (\\mathrm{Id} \\times \\otimes) \\circ \\alpha_{\\mathbb C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">I</span><span class=\"mord mathrm\">d</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">⊗</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33222299999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi mathvariant=\"double-struck\">C</mi></msub><mo>:</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">C</mi><mo>×</mo><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"double-struck\">C</mi><mo>→</mo><mi mathvariant=\"double-struck\">C</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">C</mi><mo>×</mo><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha_{\\mathbb C} : (\\mathbb C \\times \\mathbb C) \\times \\mathbb C \\to \\mathbb C \\times (\\mathbb C \\times \\mathbb C)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33222299999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77222em;vertical-align:-0.08333em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mclose\">)</span></span></span></span> is given by re-pairing, using the universal property of the cartesian product.</p>",
        "id": 196232974,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588622603
    },
    {
        "content": "<p>(Here, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> is the associator in the cartesian-monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span>.)</p>",
        "id": 196233353,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588622788
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∘</mo></mrow><annotation encoding=\"application/x-tex\">\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∘</span></span></span></span> being functor composition? <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi mathvariant=\"double-struck\">C</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_{\\mathbb C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33222299999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the associator? Doesn't that put us right back where we started?</p>",
        "id": 196234166,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588623156
    },
    {
        "content": "<p>Yes, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∘</mo></mrow><annotation encoding=\"application/x-tex\">\\circ</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">∘</span></span></span></span> is functor composition. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> is an associator in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span>, but you don't need to know that to define a monoidal category. You're trying to define the associator in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span>.</p>",
        "id": 196234364,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588623246
    },
    {
        "content": "<p><em>After</em> you've defined a monoidal category, you can show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> happens to be the associator in a large monoidal category, but that's not necessary to define it in the first place.</p>",
        "id": 196234442,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588623285
    },
    {
        "content": "<p>Ah, thanks! This helps a lot! I was misreading <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> as a synonym for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> instead of the product of Categories and Functors. (the name for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> in the idris-ct library that I am looking at is <code>cat</code>)</p>",
        "id": 196234887,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588623557
    },
    {
        "content": "<p>Sorry, I should have been clear about that. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> is any small category here.</p>",
        "id": 196235124,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1588623692
    },
    {
        "content": "<p>This is an example of the \"microcosm principle\".  We need the product in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> to write down the tensor product in a monoidal category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span></span></span></span>:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo><mo>:</mo><mi mathvariant=\"sans-serif\">C</mi><mo>×</mo><mi mathvariant=\"sans-serif\">C</mi><mo>→</mo><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\otimes : \\mathsf{C} \\times \\mathsf{C} \\to \\mathsf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span></span></span></span></p>\n<p>and similarly we need the associator in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> to write down the associator in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span></span></span></span>.</p>\n<p>It keeps on going like this: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span></span></span></span> is symmetric, we need the symmetry in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68611em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">C</span><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">t</span></span></span></span></span> to write down the symmetry in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">C</span></span></span></span></span>, and so on.   \"Little things like to live in similar-shaped big things.\"</p>",
        "id": 196269466,
        "sender_full_name": "John Baez",
        "timestamp": 1588657092
    },
    {
        "content": "<p>Let's meet at the same time (17 UTC this Saturday) ready to discuss chapter 3</p>",
        "id": 196622072,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1588765730
    },
    {
        "content": "<p><a href=\"https://zoom.us/j/6853551826\" title=\"https://zoom.us/j/6853551826\">https://zoom.us/j/6853551826</a> - I'm hanging out in here now if anyone wants to join, but we will get started in ~15 mins</p>",
        "id": 197000439,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1589042757
    },
    {
        "content": "<p>Various links from chat and today's discussion. <br>\nI might annotate how they connect to the topic or came up in discussion later.</p>\n<p>We've discussed this Pull Request before recording<br>\n<a href=\"https://github.com/statebox/idris-ct/pull/83/files\" title=\"https://github.com/statebox/idris-ct/pull/83/files\">https://github.com/statebox/idris-ct/pull/83/files</a></p>\n<p>Comparison of proof assistants <br>\n<a href=\"https://en.wikipedia.org/wiki/Proof_assistant#Comparison\" title=\"https://en.wikipedia.org/wiki/Proof_assistant#Comparison\">https://en.wikipedia.org/wiki/Proof_assistant#Comparison</a></p>\n<p>Blog post by Dan Connoly  about this reading group<br>\n<a href=\"https://www.madmode.com/2020/grok-idris-ct.html\" title=\"https://www.madmode.com/2020/grok-idris-ct.html\">https://www.madmode.com/2020/grok-idris-ct.html</a> </p>\n<p>Sequent calculus in Idris<br>\n<a href=\"https://gitlab.com/jake.gillberg/oplss-2019/-/blob/master/SequentCalculus.idr\" title=\"https://gitlab.com/jake.gillberg/oplss-2019/-/blob/master/SequentCalculus.idr\">https://gitlab.com/jake.gillberg/oplss-2019/-/blob/master/SequentCalculus.idr</a></p>\n<p>Lambda-Calculus and Combinators: An Introduction - <br>\nby J. Roger Hindley, Jonathan P. Seldin<br>\n<a href=\"https://www.researchgate.net/publication/220688772_Introduction_to_Combinators_and_Lambda-Calculus\" title=\"https://www.researchgate.net/publication/220688772_Introduction_to_Combinators_and_Lambda-Calculus\">https://www.researchgate.net/publication/220688772_Introduction_to_Combinators_and_Lambda-Calculus</a></p>\n<p>Computer science metanotation - given in various talks by Guy Steele<br>\n\"It’s Time for a New Old Language\" - <a href=\"https://www.youtube.com/watch?v=7HKbjYqqPPQ\" title=\"https://www.youtube.com/watch?v=7HKbjYqqPPQ\">https://www.youtube.com/watch?v=7HKbjYqqPPQ</a> <br>\nsome old slides - <a href=\"https://groups.csail.mit.edu/mac/users/gjs/6.945/readings/Steele-MIT-April-2017.pdf\" title=\"https://groups.csail.mit.edu/mac/users/gjs/6.945/readings/Steele-MIT-April-2017.pdf\">https://groups.csail.mit.edu/mac/users/gjs/6.945/readings/Steele-MIT-April-2017.pdf</a></p>",
        "id": 197005159,
        "sender_full_name": "a13ph",
        "timestamp": 1589048638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278318\">@Jake Gillberg</span> are we continuing today? we still have Chapter 4 to go through</p>",
        "id": 197791719,
        "sender_full_name": "a13ph",
        "timestamp": 1589629299
    },
    {
        "content": "<p>My attention was diverted elsewhere this week, so I propose we take a week off and finish up the discussion next week. Thoughts?</p>",
        "id": 197796399,
        "sender_full_name": "Jake Gillberg",
        "timestamp": 1589636698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278318\">@Jake Gillberg</span> I am personally okay with this, for myself.<br>\nFor silent others too, seeing how there was no information in advance on whether there will be a session today.</p>",
        "id": 197799072,
        "sender_full_name": "a13ph",
        "timestamp": 1589640627
    },
    {
        "content": "<p>btw, in previous session, we had a discussion on dagger categories vs opposite categories. Here's a topic specifically about that: <a href=\"#narrow/stream/229199-learning.3A-basic.20questions/topic/Dagger.20categories/\">https://categorytheory.zulipchat.com/#narrow/stream/229199-learning.3A-basic.20questions/topic/Dagger.20categories/</a></p>",
        "id": 197800170,
        "sender_full_name": "a13ph",
        "timestamp": 1589642018
    },
    {
        "content": "<p>Chapter 4 for next week sounds good to me</p>",
        "id": 197801703,
        "sender_full_name": "croy",
        "timestamp": 1589644181
    },
    {
        "content": "<p>(and sorry for being one of the silent others)</p>",
        "id": 197802080,
        "sender_full_name": "croy",
        "timestamp": 1589644621
    },
    {
        "content": "<p>I plan to attend next time.</p>",
        "id": 197804733,
        "sender_full_name": "Christian Williams",
        "timestamp": 1589648521
    },
    {
        "content": "<p><del>Did you meet last saturday ? I couldn't attend... And is there a meeting planned this saturday ?</del> Just checked there are only 4 chapters, so I guess the reading group is finished ^^'</p>",
        "id": 198992218,
        "sender_full_name": "Luc Chabassier",
        "timestamp": 1590652356
    }
]