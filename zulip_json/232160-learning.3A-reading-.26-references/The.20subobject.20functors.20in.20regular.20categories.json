[
    {
        "content": "<p>Hey all,<br>\nConsider a well-powered category C and the associated subobject functor Sub: C^{op}-&gt; Set which maps an object to the equivalence class of monomorphism arriving to it. To fish out the subboject classifier, in some cases it suffices to prove that this functor maps colimits in C to limits in Set. </p>\n<p>Let's assume that C is a cocomplete category. For continuity of Sub, it then reduces to checking that the coproducts and the coequalizers are respected. I found something intriguing: In regular categories the subobject functor respects coequalizers, where the pair being coequalized is a kernel pair. I suspect it could be possible that in all regular categories with coequalizers, the functor Sub respects coequalizers, but this has been quite difficult to show.</p>\n<p>I considered using the following meta-theorem in <a href=\"https://www.math.mcgill.ca/barr/papers/embed.pdf\">https://www.math.mcgill.ca/barr/papers/embed.pdf</a>:<br>\nTheorem C. Let X be a small category. Then there is a family {Ut},<br>\niel of exact set-valued functors on X which collectively are faithful and<br>\nreflect finite limits and universal regular epimorphisms.</p>\n<p>This doesn't help in my setting, since even if these functors preserve stable regular epis and jointly reflect them, the family of functors might not preserve the coequalizer the regular epis come with. Maybe there is an upgraded version of this theorem.</p>\n<p>I would appreciate it, if someone could help me solve this problem. Perhaps this is studied in some papers or books. If you have a reference to share, that would be excellent as well.<br>\nThanks</p>",
        "id": 518190168,
        "sender_full_name": "David Forsman",
        "timestamp": 1747273550
    },
    {
        "content": "<p>Just to restate the theorem without the mangled OCR:</p>\n<blockquote>\n<p>Theorem C. Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> be a small category. Then there is a family <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>U</mi><mi>i</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{U_i\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">i\\in I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> of exact set-valued functors on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> which collectively are faithful and reflect finite limits and universal regular epimorphisms.</p>\n</blockquote>",
        "id": 518215106,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1747290165
    },
    {
        "content": "<p>Is your setting a cocomplete regular category? Or just a cocomplete category?</p>",
        "id": 518215202,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1747290210
    },
    {
        "content": "<p>Oh, wait, is it \"regular category with coequalisers\"?</p>",
        "id": 518217672,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1747291228
    },
    {
        "content": "<p>Thanks for correcting the statement. I was able to prove the following:<br>\nLet C be a regular category and consider the subobject functor Sub:C^{op}\\to SET. If h coequlizes its kernel pair (f,g) in C, then Sub(h) is the equalizer of the parallel pair (Sub(f), Sub(g)). </p>\n<p>Here I required nothing else than regularity. For convenience we may assume the existence of coequalizers in C, but so far I haven't needed this assumption. I would like to be able to drop the assumption that (f,g) is a kernel pair. </p>\n<p>The context can be assumed to be a regular category with coequalizers. It by itself is an interesting question which assumptions are really needed for this theorem to go through. Changing the assumption of (f,g) being a kernel pair to a parallel pair having a joint section suffices for my purposes.</p>",
        "id": 518252691,
        "sender_full_name": "David Forsman",
        "timestamp": 1747301661
    },
    {
        "content": "<p>I did some calculations and found out that the subobject functor Sub doesn't map the coequalizers in Ab of abelian groups to equalizers in Set. This Barr-Kock theorem-style property can be seen to fail in Ab by choosing the homomorphisms on integers  $x\\mapsto x, 2x$ and a subgroup M consisting of the integers divisible by 3. The inverse images of M agree along the chosen homomorphisms but M is not saturated with respect to the induced congruence. The subobject functor Sub does however respect reflexive coequalizers in Ab and more generally in R-mod of R-modules for any commutative ring R. By the Freyd-Mitchell embedding theorem of small abelian categories, we have that all abelian categories have this property. (Sub maps reflexive coequalizers in any abelian category to equalizers.)</p>\n<p>If the category C has pullbacks, coproducts and image factorizations, then the condition that the subobject functor Sub:C^{op}\\to SET preserves coproducts reduces to the case that in the possibly large subobject lattices binary intersections commute with small unions. In other words, the subobject lattices are infinitarily distributive.</p>\n<p>The upshot of all this is that if C is a regular locally presentable category, where coproduct inclusions are monic, then C has a subobject classifier if and only if this Barr-Kock-theorem-styled property holds and in the subobject lattices the binary intersection distributes over small unions. I wonder if this result is already known or not.</p>",
        "id": 518736201,
        "sender_full_name": "David Forsman",
        "timestamp": 1747424626
    }
]