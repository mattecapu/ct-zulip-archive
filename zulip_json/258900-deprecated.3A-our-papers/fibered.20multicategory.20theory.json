[
    {
        "content": "<p>Hi everybody,<br>\nI just posted on arxiv (<a href=\"https://arxiv.org/abs/2201.01967\">https://arxiv.org/abs/2201.01967</a>) a paper on generalized multicategories.<br>\nThe idea is that families of arrows in a symmetric multicategory form a category over finite sets.<br>\nFirst, this approach addresses the “families in place of sequences” issue in the definition of a symmetric multicategory, which seems often a more natural (non-skeletal) choice.<br>\nSecond, one can smoothly axiomatize the situation by postulating two kinds of arrows, that is two categories with the same objects, D and M,  over a category I with pullbacks. The arrows of D (which form a fibration in groupoids) play the role of reindexing for objects, while those of M play the role of families of arrows in the multicategory. The key axiom says essentially that one can reindex the arrows of M along pullbacks in I with D-lifted horizontal sides. <br>\nThird, fibered categories arise as a particular case, namely when D is included in M. This allows for a clarification of some classical facts, such as those related to the fact that “adding” a “central monoid” to each object is the free way to turn tensor products into sums. Similarly, the Grothendieck construction/equivalence appears as a manifestation of the equivalence of the two ways of seeing a category as a multicategory, namely as a unary multicategory (which in the fibered context amounts essentially to a pseudofunctor from I to Cat) or as a \"discrete cocone\" (or \"sequential\") multicategory.<br>\nLastly, cartesian multicategeries also fit in this framework. Namely one postulates a covariant reindexing (along commutative triangles in I with a D-lifted top side) which is related to the contravariant reindexing by a sort of Frobenius and Beck-Chevalley conditions (which in the standard case reduce to the classical definition of cartesian multicategory). One can then prove, in this more general setting, the equivalence between the existence of tensor products (that is, representability), the existence of universal products, and the existence of “algebraic products” (as in the well-known case of abelian categories).<br>\nI hope you will have a look at it and I look forward to receiving your feedback!</p>",
        "id": 267288176,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641636759
    },
    {
        "content": "<p>Hi Claudio, I saw your preprint and I was actually interested by your research. Where are you affiliated? Tell us something about you, I could not find much on the internet.</p>",
        "id": 267291701,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1641642215
    },
    {
        "content": "<p>Hi Ivan, <br>\nactually I am a teacher (of mathematics and physics) in a secondary school in Torino (Liceo Gioberti).<br>\nI obtained my phd degree in Milano with prof. Giancarlo Meloni in 1996. Since then I cultivate  the interest in category theory (with some ups and down) . Presently, as you may guess, I am especially interested in multicategories with their unifying role.</p>",
        "id": 267293024,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641644006
    },
    {
        "content": "<p>Very interesting, thanks. If I may give you a suggestion, you could take some time to open a cute github page to have some kind of compact web avatar that gathers info about you and your research, which seems somewhat interesting to me, but a bit sparse (thus it's hard to judge). You would have the opportunity of having your own narrative and presentation of your ideas.</p>",
        "id": 267299527,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1641653744
    },
    {
        "content": "<p>What was your phd thesis about?</p>",
        "id": 267302967,
        "sender_full_name": "fosco",
        "timestamp": 1641658426
    },
    {
        "content": "<p>Still digesting this paper, but I have to say I'm not a fan of calling this a \"fibered multicategory\".  The use of \"fibered category\" for \"functor of categories that is a fibration\" is absolutely standard, and I think lots of people including myself will hear \"fibered multicategory\" and think \"functor of multicategories that is a fibration\".</p>",
        "id": 267303430,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641659071
    },
    {
        "content": "<p>Thank you Ivan for the suggestion. Indeed, even if my published work is all on TAC, and almost all the rest of it is on arxiv, it would be great to have an occasion to present my ideas more extensively.</p>",
        "id": 267304522,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641660682
    },
    {
        "content": "<p>Hi Fosco, my phd thesis was about the use of ultrafilter in logic and topology. The main result, a characterization of exponentiable spaces via ultrafilter convergence, is on TAC (1999).</p>",
        "id": 267304686,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641660949
    },
    {
        "content": "<p>Hi Mike, thank you for the remark. Indeed, this is the reason why the title is \"fibered multicategory theory\" rather than \"fibered multicategories\".<br>\nFor some time I considered using \"d-multicategories\" since they depend on the choice of the fibration d : D -&gt; I, but this doesn't seem a great idea neither. One clear motivation for using \"fibered multicategories\" is that the way they generalize fibered categories is similar to the way multicategeries generalize categories. Any suggestion?</p>",
        "id": 267305389,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641661891
    },
    {
        "content": "<p>What is your motivation for this definition?  Do you have examples of multicategory-like structures that aren't included in standard contexts for generalized multicategories?</p>",
        "id": 267335618,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641702909
    },
    {
        "content": "<p>Well, as I mention in the introduction, the original motivation was to find a good version of the \"fat multicategories\" of Leinster, that is to find a more natural way to deal with the domain of an arrow in a symmetric multicategory, with families in place of sequences.<br>\nThen, it appeared clear that for that purpose one should consider categories over finite set, whose arrows are finite families of arrows, and that in this context the reindexing of arrows along pullbacks was an important aspect. From this, it was a short step to see that that kind of situation could be easily put in a more abstract framework, which also allows for a number of concepts to be effectively defined and developed (such as commuting endomorphisms, cartesian structures etc.).<br>\nThus my motivation was essentially to clarify concepts and constructions which one usually considers in classical multicategories, rather than to capture new instances of multecategory-like structures.<br>\nFurthermore, the fact of having a common generalization of symmetric multicategories and fibered categories also seems to give important insights, as discussed in the paper.<br>\nAnyway, I think that there are also some interesting specific examples, not mentioned in the paper. For instance, it is an obvious step to move from finite sets to arbitrary sets. In the \"standard case\", one should have a version of \"infinitary\" symmetric multicategories (such as those associated to a cartesian monoidal category with arbitrary products). <br>\nMaybe (but I have not thought enough to this) that for instance shifting from Set to Rel as a base, one also could have some interesting generalizations, perhaps related to polycategories.</p>",
        "id": 267367598,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641748585
    },
    {
        "content": "<p>What don't you like about Leinster's definition of fat multicategory?  I think it fits just fine into the standard monad-based context of generalized multicategories, using a monad for \"fat symmetric monoidal categories\".  Cartesian multicategories also fit naturally in that framework using appropriate monads, not requiring any modification of the basic definition.  What exactly is clarified by the fibrational approach?</p>",
        "id": 267368035,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641749195
    },
    {
        "content": "<p>Well, it seems clear to me that the way in which identities are treated and then used to obtain the symmetry structure of the multicategory is rather contrived. Also, the way composition is defined seems to ask for a more thorough consideration of the fibered aspects.</p>",
        "id": 267368781,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641750225
    },
    {
        "content": "<p>I admit I am not an expert of the monad-based approach, so maybe you can clarify the following points to me: 1) what is the monad for fat multicategories? Is it possible to define (in an effective way) concepts such as commuting endomorphisms in that context? 3) what is the monad for cartesian fat symmetric multicategories?  Is it possible to define (in an effective way) concepts such as \"algebraic products\" and to prove the equivalence between universal products and tensor products? Is the relation between enrichment in commutative monoids and cartesian multicategories apparent in that context?</p>",
        "id": 267370012,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641751806
    },
    {
        "content": "<p>Let me also mention, by the way, that a concept that emerges from the proposed common framework for multicategories and fibered categories is that of \"cartesian fibered category\", here meaning a fibered category which (as a fibered multicategory) is cartesian. This is amounts fibration plus a contravariant reindexing of arrows along triangles with a cartesian lifting of their top side, with the compatibility conditions expressed by the Frobenius and Beck-Chevalley laws (see section 3 of the paper). An instance is the family fibration of an abelian (or cmon-enriched) category.</p>",
        "id": 267371657,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641754251
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"345091\">Claudio Pisani</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267368781\">said</a>:</p>\n<blockquote>\n<p>Well, it seems clear to me that the way in which identities are treated and then used to obtain the symmetry structure of the multicategory is rather contrived.</p>\n</blockquote>\n<p>Oh, well, the way Leinster phrases the definition in terms of \"all one-element sets\" is, I agree, a little odd.  But there's an easily equivalent formulation that makes the identities more natural and the symmetry more clear, which is what you get out of the monadic approach.  Namely, you assert that each bijection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">\\phi:X \\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> induces a bijection <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mrow><mi>ϕ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></msub><msub><mo stretchy=\"false\">)</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></msub><mo separator=\"true\">;</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mi>C</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>y</mi></msub><msub><mo stretchy=\"false\">)</mo><mrow><mi>y</mi><mo>∈</mo><mi>Y</mi></mrow></msub><mo separator=\"true\">;</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C((a_{\\phi(x)})_{x\\in X};b) \\cong C((a_{y})_{y\\in Y};b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">((</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ϕ</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1774em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">((</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>, functorially in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span>.  Composition is then equivariant with respect to these actions, and it suffices to have a single identity map for each object indexed by some canonically chosen one-element set.  This is a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>-multicategory for the (pseudo)monad <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">T C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">TC</span></span></span></span> is the category of finite-set-indexed families of objects of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>, with morphisms being indexed by bijections of finite sets and families of morphisms of $$C$.  The algebras of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> are fat symmetric monoidal categories.</p>",
        "id": 267381554,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641768054
    },
    {
        "content": "<p>To get fat cartesian multicategories (\"cartesian\" includes \"symmetric\"), you just replace the bijections between finite sets with functions.</p>",
        "id": 267381613,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641768138
    },
    {
        "content": "<p>(And make sure that you oriented them correctly in the first place, which there's only a 50-50 chance that I did above.)</p>",
        "id": 267381619,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641768158
    },
    {
        "content": "<p>Algebraic products, and their equivalence with universal products and tensor products, are easy to define and prove in ordinary cartesian multicategories, and essentially the same proof works for fat cartesian multicategories.  I think this is folklore, but one place it's written down is Proposition 2.9 of my <a href=\"https://arxiv.org/abs/2106.15042\">LNL polycategories and doctrines of linear logic</a>.</p>",
        "id": 267381693,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641768287
    },
    {
        "content": "<p>I have not encountered your notion of \"commuting endomorphism\" before, and you didn't give any references, but since you say there is a \"usual notion\" for ordinary symmetric multicategories, it should be equally easy to formulate that notion for fat symmetric multicategories.  (I don't really like calling this an \"endomorphism\", either; an endomorphism in a multicategory should be an endomorphism in its underlying category.)</p>",
        "id": 267381783,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641768482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267381693\">said</a>:</p>\n<blockquote>\n<p>Algebraic products, and their equivalence with universal products and tensor products, are easy to define and prove in ordinary cartesian multicategories, and essentially the same proof works for fat cartesian multicategories.  I think this is folklore, but one place it's written down is Proposition 2.9 of my <a href=\"https://arxiv.org/abs/2106.15042\">LNL polycategories and doctrines of linear logic</a>.</p>\n</blockquote>\n<p>Let us assume that we have a monad-based definition of fat muticategories (I need some time to digest your definition; in fact I think I also need some more details). Then I agree that the proof of products = tensors = algebraic products should works in this context as well.<br>\n(By the way, as far as I know, the first published proof is in my 2014 paper on sequential multicategories. Then there is the proof by Garner in the more general context of enriched colimits. The proof in your 2021 paper is also cited in my paper.)<br>\nMy point was another: my definition of cartesian multicategory applies in a more general context, beyond fat cartesian multicategories, and the<br>\nproducts = tensors = algebraic products theorem can be proved in this context in a way which is, in my opinion, rather natural. As already mentioned, in my context, one can consider fibered categories as generalized multicategories, and thus we can consider \"cartesian fibered categories\" where the products = tensors = algebraic products theorem applies.</p>",
        "id": 267463436,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641832575
    },
    {
        "content": "<p>Can you explain in elementary terms what a \"cartesian fibered category\" is?</p>",
        "id": 267465316,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1641833254
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267381783\">said</a>:</p>\n<blockquote>\n<p>I have not encountered your notion of \"commuting endomorphism\" before, and you didn't give any references, but since you say there is a \"usual notion\" for ordinary symmetric multicategories, it should be equally easy to formulate that notion for fat symmetric multicategories.  (I don't really like calling this an \"endomorphism\", either; an endomorphism in a multicategory should be an endomorphism in its underlying category.)</p>\n</blockquote>\n<p>I didn't give any reference because it is the definition which fit in my generalization, and it could not be expressed without the concept of \"special square\" which is at the base of my generalization. <br>\nAs for the name, maybe I should call them commuting endo-operations, but this is a little unwieldy. <br>\nAnyway, also in this case, the point is that the concept of commuting endomorphisms carries over to a more general context.<br>\nFor instance, for the family fibration of a category (considered again as a generalized multicategory in my sense), an endomorphism is a family of endomorphisms and two endomorphisms commute if each endomorphism of one family commutes with each endomorphism of the other one.</p>",
        "id": 267466476,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641833668
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267465316\">said</a>:</p>\n<blockquote>\n<p>Can you explain in elementary terms what a \"cartesian fibered category\" is?</p>\n</blockquote>\n<p>A “cartesian fibered category” consists of:</p>\n<p>1) A fibered category p: M -&gt; I over a category I with pullbacks.</p>\n<p>2) For any arrow a in M, any cartesian arrow b in M with the same domain as a, and any factorization p(a) = g.p(b) in I, the choice of a lifting c of g (with dom c  = cod b and cod c = cod a) satisfying the conditions (a), (b), (c), (d) below.</p>\n<p>If c is as above, we may say that it is the “covariant reindexing” of a along b over g, and we say that (a,b,c) is a “special triangle” (note that we do not require that it commutes in M).</p>\n<p>(a) The special triangles are closed with respect to horizontal composition: if (a,b,c) and (c,d,e) are special, so it is (a,db,e). Note that, implicit in the above data, there is then a discrete op-fibration of special triangles over commutative triangles in I with a cartesian lifting of the “top” side.</p>\n<p>(b) The special triangles are closed with respect to post composition with any arrow in M: if (a,b,c) is special and dom d = cod a = cod c, then (da,b,dc) is also special.</p>\n<p>(c)  Special triangles are closed with respect to pasting with commutative squares in M with horizontal cartesian sides: if (a,b,c) is special and (bd = ek) with k cartesian, then (ad,k,ce) is special.</p>\n<p>(d) Special triangles are stable with respect to contravariant reindexing: if (a,b,c) is special and <br>\n(ha’ = ak) , (hc’ = cl) and (bk = lb’) are squares in M with h,k,l,b’ cartesian, then (a’,b’,c’) is special.</p>\n<p>I admit that the definition appears somewhat involved, but this is essentially the price to pay for an elementary version of it, as you asked for. In brief, as already mentioned elsewhere, one may say that a cartesian structure on a fibered category p:M-&gt;I is a sort covariant reindexing for maps in M, given by a discrete op-fibration (not over I but over a suitable defined category of triangles in I) related to the fibration itself by Frobenius (c) and Beck-Chevalley (d) laws (the latter involving the covariant reindexing triangles and the squares with horizontal cartesian arrows, rather than just cartesian arrows, as contravariant reindexing ) .</p>\n<p>Let us consider the main instance in some detail. Let C be a category enriched in commutative monoids and let p:M-&gt;Set_f be the family fibration associated to C. Then, for any S in Set_f, an object X over S is an S-indexed family x_i of objects of C, and if T is terminal in Set_f, a map a in M over the unique  S-&gt;T is an S-indexed family of concurrent arrows  a_i:x_i -&gt; x in C.<br>\nA cartesian arrow b in M with the same domain over S -&gt; T is an S-indexed family of concurrent isomorphisms  b_i:x_i -&gt; y in C. Now in this case one defines the “covariant reindexing” of a along b using the fact that the hom-sets are commutative monoids, namely it is the sum of the induced arrows in C(y;x). (The simplest case is of course when all the b_i are identities).<br>\nIf T is not terminal, the covariant reindexing easily extends as well.<br>\nNow condition (a) expresses the associativity-unity laws of the monoid C(y;x).<br>\nCondition (b) expresses the fact that post composition with a fixed arrow gives a monoid morphism. <br>\nCondition (c) follows from the fact that pre composition with a fixed arrow gives a monoid morphism. <br>\nLastly condition (d) expresses the fact that covariant reindexing of maps in M over general mappings S-&gt;R (that are families of families of arrows in C) reduces to the reindexing of maps over S-&gt;T with T terminal (that is of each single family).</p>",
        "id": 267500081,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641848938
    },
    {
        "content": "<p>In the following I try to summarize the main points which I wish to stress, and that this thread helped me to clarify (I apologize for the rather long post; of course I am interested in any opinion about it).</p>\n<p>1) Fibered multicategories (in the sense of the paper) subsume both classical symmetric multicategories (in their fat form, in fact also the “infinitary” ones) and fibered categories.<br>\nBoth these subclasses can be naturally characterized among all fibered multicategories.<br>\nThe key axiom in the definition of fibered multicategories p:M-&gt;I concerns a contravariant reindexing of arrows in M along pullbacks in the base category. In the case of fibered categories, this reindexing is given by pullback squares in M with horizontal cartesian sides. </p>\n<p>2) In this generalized context, one can define in an effective way several well-known concepts, such as universal products, representability, (fibered) monoids (and, of course, also monoids in a fibered multicategory) and commuting “endomorphisms” (or better “endo-operations” or “endo-arrows”). For instance, one can prove some Eckmann-Hilton-like properties for commuting endo-arrows. Representability of course reduces in the standard case to the usual concept (namely, to the existence of tensor products), while for fibered categories it reduces to the existence of sums (in the fibered sense).</p>\n<p>3) Cartesian structures on a fibered multicategory can be also naturally defined, resting on a covariant reindexing of arrows, which is related to contravariant one by some kind of Frobenius and Beck-Chevalley laws. In a cartesian fibered multicategory, one can prove the “tensor products = universal products = algebraic products” theorem. (We may say that the equivalence “tensor products = universal products”, when either one of them does exist, is at the origin of the concept itself of cartesian multicategory.)</p>\n<p>4) A “cartesian fibered category” is then a fibered category which (as a fibered multicategory) has a cartesian structure. A relevant instance is given by the family fibration relative to a category enriched in commutative monoids. <br>\nIn this case, the “tensor products = universal products = algebraic products” theorem becomes<br>\nthe “sums = products = biproducts” theorem, which is classical for additive categories.</p>\n<p>5) In the other direction, one can prove that any cartesian fibered category has a fibered monoid structure on its fibered hom-sets.</p>\n<p>6) While one can likely define fat cartesian multicategories in a monad-based context, it seems unlikely that this definition can open new perspectives (such as those mentioned in the points 2), 4) and 5) above).<br>\nOf course, I’m not underestimating the importance of the monad-based approaches, which is amply illustrated in many papers. It is in particular remarkable the number of relevant structures that they are able to capture.<br>\nMy point is rather that the approach proposed here offers new insights which are not otherwise apparent.</p>\n<p>7) For instance, it seems clear to me that, for cartesian multicategories, the simultaneous consideration of a contravariant and of a covariant reindexing offers an important insight. Indeed, the contravariant reindexing (say on the standard base category Set_f) gives not only a way to bijectively reindex the domain of an arrow, but also a way to “duplicate”, “delete” or \"permute\" arrows in a family. This is essential when one considers the composition of a family of arrows into a covariantly reindexed arrow. The somewhat unwieldy “block mapping” rule in the usual definitions of cartesian multicategory becomes in this context the neat Frobenius law.<br>\nIndeed, if you take a closer look to your own definition of cartesian multicategories (in “Categorical logic from a categorical point of view”), yow will note that the operation ∫ (which is required to exist in a “cartesian faithful club”) is nothing but a skeletal version of the pullback operation in Set_f. Thus, after all, you are there implicitly using the Frobenius law (which is your condition (d)). </p>\n<p>This is a reason way your statement “To get fat cartesian multicategories (\"cartesian\" includes \"symmetric\"), you just replace the bijections between finite sets with functions” (which reflects, apparently, a widespread opinion), sounds to me somehow incomplete:<br>\nin order to define symmetric multicategories you need (at least implicitly) the contravariant reindexing (that one really uses pullbacks, albeit just along bijective mappings, is graphically evident in figure 2-H “symmetric multicategory axiom” of Leinster online book), and it is also sufficient; in order to define cartesian multicategories you need both the contravariant and the covariant reindexing. It is proved in my paper that the two reindexing coincide for isomorphisms, as a consequence of the Beck-Chevalley law.</p>\n<p>8) In particular, when dealing with the example of categories enriched in commutative monoids mentioned in point (4) above (see the previous post for details), the Frobenius law corresponds to the fact that precomposition with a fixed arrow gives a monoid morphism. Indeed it states that composing, say, two arrows with a duplicated arrow and then summing these composites, gives the same result as first summing them and then composing with the other arrow: ac+bc = (a+b)c. (Similarly, of course, deleting arrows is related to a0 = 0.)</p>",
        "id": 267593825,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1641913425
    },
    {
        "content": "<p>Thanks for explaining.  I don't really see the advantage of isolating this notion of covariant reindexing; if you want to talk about categories enriched in commutative monoids, why not just do that?</p>",
        "id": 267765005,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1642011594
    },
    {
        "content": "<p>We're probably going to have to agree to disagree; it still seems to me that all the useful generality is contained in the usual monad-based notion of generalized multicategory.</p>",
        "id": 267765142,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1642011650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267765142\">said</a>:</p>\n<blockquote>\n<p>We're probably going to have to agree to disagree</p>\n</blockquote>\n<p>Yes, I agree.<br>\nAnyway, thanks for your interest and your helpful remarks.</p>",
        "id": 267886994,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1642088685
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267765005\">said</a>:</p>\n<blockquote>\n<p>Thanks for explaining.  I don't really see the advantage of isolating this notion of covariant reindexing; </p>\n</blockquote>\n<p>As I said, contravariant reindexing is present (at least implicitly) in the definitions of symmetric and of cartesian multicategories. <br>\nCovariant reindexing is necessary for cartesian multicategories. <br>\nMaking both of them explicit  is essential to really understand and develop cartesian multicategories.</p>",
        "id": 267887751,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1642089037
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267765005\">said</a>:</p>\n<blockquote>\n<p>if you want to talk about categories enriched in commutative monoids, why not just do that?</p>\n</blockquote>\n<p>Well, in my framework categories enriched in commutative monoids are seen as an instance of cartesian multicategories, and the  “tensor products = universal products = algebraic products” theorem becomes the “sums = products = biproducts” theorem.<br>\nThus, I don't think that this abstraction is devoid of contents.<br>\nI don't want just to talk about categories enriched in commutative monoids,  I want to better understand them by abstracting some of their key features. I think we all category theorists are doing something like that.</p>",
        "id": 267889195,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1642089670
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267765142\">said</a>:</p>\n<blockquote>\n<p>it still seems to me that all the useful generality is contained in the usual monad-based notion of generalized multicategory.</p>\n</blockquote>\n<p>I don't think that the monad-based notion can offer any useful insights on most of the issues treated in my paper.<br>\nAnd, after all, what are the most relevant insights offered by the monad-based approach?</p>",
        "id": 267891106,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1642090462
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"345091\">Claudio Pisani</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267887751\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/fibered.20multicategory.20theory/near/267765005\">said</a>:<br>\nAs I said, contravariant reindexing is present (at least implicitly) in the definitions of symmetric and of cartesian multicategories. <br>\nCovariant reindexing is necessary for cartesian multicategories. <br>\nMaking both of them explicit  is essential to really understand and develop cartesian multicategories.</p>\n</blockquote>\n<p>No, I don't agree.  A symmetric multicategory is indexed by the core of FinSet, either covariantly or contravariantly doesn't matter since it's a groupoid.  A cartesian multicategory is indexed either covariantly by FinSet or contravariantly by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">S</mi><mi mathvariant=\"normal\">e</mi><msup><mi mathvariant=\"normal\">t</mi><mrow><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\rm FinSet^{op}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">FinSe</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">op</span></span></span></span></span></span></span></span></span></span></span></span></span>.  You never need to mix covariant and contravariant indexing.</p>",
        "id": 267915309,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1642100737
    },
    {
        "content": "<p>Yet, I insist that the contravariant indexing is then hidden in the monad (or in the monoidal category) itself.<br>\nIndeed, if you make the definition of cartesian multicategory  explicit, you can't avoid  the law <br>\n(which I am copying down from your \"categorical logic\" draft, page 116):</p>\n<p>(gs)(f_1,...,f_n) = (g (f_s1,...,f_sm))(s| (k_1,...,k_n))</p>\n<p>which says:<br>\ncomposing the sequence-family (f_1,...,f_n) with the covariant s-reindexing of g is the same as<br>\ncomposing the contravariant s-reindexing (f_s1,...,f_sm) of that sequence-family with g, <br>\nand then apply the  s| (k1,...,kn) -covariant reindexing to it,<br>\nwhere s| (k1,...,kn) is itself the s-contravariant reindexing (pullback in Set_f) of the k_1,...,k_n (in disguise, a mapping in Set_f).</p>\n<p>This is exactly my \"Frobenius law\"; indeed, if you take a look to diagram (10) on page 18 of my paper it says following:</p>\n<p>if d is a f-covariant reindexing of c, then composing b with d is the same as<br>\nthe f'-covariant reindexing of the composition of the (f,f')-contravariant reindexing of b with c.<br>\nOf course, the correspondence is <br>\n      s &lt;-&gt; f ;   g &lt;-&gt; c ;   (f_1,...,f_n) &lt;-&gt; b ;   (f_s1,...,f_sm) &lt;-&gt; a ;   s| (k1,...,kn) &lt;-&gt; f' <br>\n(in my context, \"fatness\" comes by default, so that the contravariant reindexing of the family (f_1,...,f_n) depends in fact explicitly also on<br>\nthe chosen pullback f' in the base Set_f. </p>\n<p>Thus, the simultaneous consideration of a covariant and a contravariant reindexing seems in fact unavoidable for cartesian multicategories.</p>",
        "id": 268021356,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1642170959
    },
    {
        "content": "<p>I just don't see the benefit of calling that \"indexing\".  The monad perspective reveals it as actually arising from the generalized associativity inherent in a monad, which therefore generalizes to many other monads whose multiplication has nothing to do with indexing.</p>",
        "id": 268030088,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1642174810
    },
    {
        "content": "<p>I think that the point here is that, as we all know, the maximum generality often does not coincide with good or right generality.<br>\nIf one is interested in cartesian multicategories, then one may wish to better understand them by an abstraction which still retains most of their relevant peculiarities. If these peculiarities are all \"hidden\" in the monad, I don't think that one can take a great advantage from that sort of abstraction. <br>\nFor instance, cartesian multicategories are good candidates for embodying many sorted algebraic theories and as such they deserve a serious study. Among them (as I pointed out in my previous paper) \"annular\" theories (= additive categories, whose models are modules over a generalized ring) are characterized as those with a \"central monoid\". <br>\nIn the context of the present paper, the role of annular theories is played by those generalized (in my sense) cartesian multicategories which are in fact ordinary fibrations. Indeed, ordinary fibrations p : M -&gt; I arise  when the \"(re)indexing\" arrows (it seems to me the appropriate term) in D  live already in M, yielding  a similar \"central monoid\" characterization.</p>",
        "id": 268058346,
        "sender_full_name": "Claudio Pisani",
        "timestamp": 1642187346
    }
]