[
    {
        "content": "<p>My coauthor, <a href=\"https://mdimeglio.github.io\">Matthew Di Meglio</a>,  and I have a new preprint out on the arXiv today: <a href=\"https://arxiv.org/abs/2209.01144\">An introduction to enriched cofunctors</a>. <br>\nHere is the abstract: </p>\n<blockquote>\n<p>Cofunctors are a kind of map between categories which lift morphisms along an object assignment. In this paper, we introduce cofunctors between categories enriched in a distributive monoidal category. We define a double category of enriched categories, enriched functors, and enriched cofunctors, whose horizontal and vertical 2-categories have 2-cells given by enriched natural transformations between functors and cofunctors, respectively. Enriched lenses are defined as a compatible enriched functor and enriched cofunctor pair; weighted lenses, which were introduced by Perrone, are precisely lenses enriched in weighted sets. Several other examples are also studied in detail.</p>\n</blockquote>\n<p>Here is a <a href=\"https://twitter.com/8ryceClarke/status/1566714323514294272?s=20&amp;t=PQkqzNIAdV0WaUExQXx6mw\">Twitter thread</a> I wrote on the paper, as well as some talks slides on the topic (<a href=\"https://bryceclarke.github.io/Enriched_lenses.pdf\">here</a> and <a href=\"https://bryceclarke.github.io/Enriched_Lenses_ACT2022.pdf\">here</a>).</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/8ryceClarke/status/1566714323514294272?s=20&amp;t=PQkqzNIAdV0WaUExQXx6mw\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/b498e13ac5aacabae05e0cc18f0c3356fc211497/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313535373730323138333635303438343232352f67326f327942436c5f6e6f726d616c2e6a7067\"></a><p>My paper with Matthew Di Meglio titled \"An introduction to enriched cofunctors\" is now available on the arXiv: <a href=\"https://t.co/WCc9PhsC9X\">https://arxiv.org/abs/2209.01144</a>\nSo what are the highlights? (1/n) <a href=\"https://t.co/gL45XNvn4A\">https://twitter.com/8ryceClarke/status/1566370914035441664</a></p><span>- Bryce Clarke (@8ryceClarke)</span></div></div>",
        "id": 297192027,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1662369526
    },
    {
        "content": "<p>A quick question: in the paper you state that distributivity of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">V</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">V</span></span></span></span> is necessary to define <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">V</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">V</span></span></span></span>-cofunctors, but I noticed that <a href=\"https://twitter.com/8ryceClarke/status/1566724044220678146\">here</a> you suggest distributivity is necessary just to define <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">V</mi><mtext>-</mtext><mrow><mi mathvariant=\"bold\">M</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathcal V\\text-\\mathbf{Mat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">V</span><span class=\"mord text\"><span class=\"mord\">-</span></span><span class=\"mord\"><span class=\"mord mathbf\">Mat</span></span></span></span></span>, from which enriched cofunctors may be extracted. However, if one does not require that composites in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">V</mi><mtext>-</mtext><mrow><mi mathvariant=\"bold\">M</mi><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathcal V\\text-\\mathbf{Mat}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">V</span><span class=\"mord text\"><span class=\"mord\">-</span></span><span class=\"mord\"><span class=\"mord mathbf\">Mat</span></span></span></span></span> exist (e.g. if one uses a multibicategory or virtual double category), then the distributivity requirement no longer holds. Is there any reason one could not define an enriched cofunctor in this setting instead, and drop the distributivity condition?</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/8ryceClarke/status/1566724044220678146\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/b498e13ac5aacabae05e0cc18f0c3356fc211497/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313535373730323138333635303438343232352f67326f327942436c5f6e6f726d616c2e6a7067\"></a><p><a href=\"https://twitter.com/AdrianTMiranda\">@AdrianTMiranda</a> Hi Adrian. Enriched cofunctors *are* a certain kind of monad morphism in the double category of V-matrices. Distributivity is needed to define associativity of composition of V-matrices, which is why is comes up in the definition of enriched cofunctors.</p><span>- Bryce Clarke (@8ryceClarke)</span></div></div>",
        "id": 297210264,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1662377537
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"276092\">@Nathanael Arkor</span>, thanks for your question. The short answer is: I'm not sure. I have a passing familiarity with virtual double categories, but not really enough experience with them to answer your question. Something I can say is that the enriched cofunctors are a special case of so-called <em>retromorphisms</em> between monads in a double category  with companions (defined in Section 5.2 <a href=\"https://bryceclarke.github.io/The_Double_Category_Of_Lenses_Phd_Thesis.pdf\">here</a>). So my guess is that one would need to work with something like a virtual equipment to define monad retromorphisms at that level of generality, and then see what you get when specialising to V-Mat.</p>",
        "id": 297224539,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1662383508
    },
    {
        "content": "<p>I would be very interested in dropping the distributivity condition if it is possible, and I'll definitely think about this some more. If you have any further thoughts, please let me know.</p>",
        "id": 297225401,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1662383832
    },
    {
        "content": "<p><a href=\"/user_uploads/21317/6yw4BBsZMaHfkvSNZ_4912BI/Screen-Shot-2022-09-05-at-3.21.42-pm.png\">Screen-Shot-2022-09-05-at-3.21.42-pm.png</a> <br>\nOkay, some further thought leads me to believe that a virtual equipment is not sufficient, as I need cells whose target is more that a single arrow. In the screenshot,  a monad retromorphism is defined as a (vertical) monad morphism where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is the companion of some horizontal arrow <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111em\"/><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333em\"/><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">f \\colon A \\rightarrow B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.  I don't know how to generalise this definition between monoids in a virtual equipment.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/6yw4BBsZMaHfkvSNZ_4912BI/Screen-Shot-2022-09-05-at-3.21.42-pm.png\" title=\"Screen-Shot-2022-09-05-at-3.21.42-pm.png\"><img src=\"/user_uploads/21317/6yw4BBsZMaHfkvSNZ_4912BI/Screen-Shot-2022-09-05-at-3.21.42-pm.png\"></a></div>",
        "id": 297226955,
        "sender_full_name": "Bryce Clarke",
        "timestamp": 1662384440
    },
    {
        "content": "<p>Ah, I see. I agree it's unclear how to extend <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">M</mi><mi mathvariant=\"bold\">n</mi><mi mathvariant=\"bold\">d</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Mnd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Mnd</span></span></span></span></span> to virtual double categories (in contrast to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">M</mi><mi mathvariant=\"bold\">o</mi><mi mathvariant=\"bold\">d</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Mod}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Mod</span></span></span></span></span> construction). That explains nicely where the difficulty in dropping distributivity lies, thank you.</p>",
        "id": 297238256,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1662389304
    }
]