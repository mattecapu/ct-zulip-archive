[
    {
        "content": "<p>I would like to present to this community our last paper. This is <span aria-label=\"fire\" class=\"emoji emoji-1f525\" role=\"img\" title=\"fire\">:fire:</span> Functorial Semantics for Partial Theories <span aria-label=\"fire\" class=\"emoji emoji-1f525\" role=\"img\" title=\"fire\">:fire:</span> , j/w Loregian, Nester, Sobocinski. I think (well, I hope) many people here might like it .</p>\n<p><a href=\"https://arxiv.org/abs/2011.06644\">https://arxiv.org/abs/2011.06644</a></p>\n<p>The paper is a love story between string diagrammatic reasoning, props, restriction categories, and categories with finite limits. Besides the technical language in which it is written, it provides a graphical framework to represent equational reasoning for algebraic theories where operations are only partially defined. It also provides a complete description of the semantic range of such theories. On a more historical level, it successfully exports the Lawvere-presentation of algebraic theories to partially algebraic theories.</p>",
        "id": 218032725,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1606418827
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"229111\" href=\"/#narrow/stream/229111-general/topic/Functorial.20semantics.20for.20partial.20theories\">#general &gt; Functorial semantics for partial theories</a> by <span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci</span></p>",
        "id": 218042200,
        "sender_full_name": "Notification Bot",
        "timestamp": 1606429232
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span> , thanks for sharing that enlightening paper ! Beside the amazing string diagrammatic reasoning for partial term, I find your presentation and reconstruction of \"classical results\" around Lawvere theories really impressive and easy to follow.</p>\n<p>However, reading the article left me with the following interrogation. I am not sure I understand why Freyd's essentially algebraic theories, the theories induced by Vickers &amp; Palmgren's partial horn logic (or Makkai's FOLDS which I think are also related) do not provide a reasonable notion of syntax. At least I thought (in a rather unprecise/handwavy fashion) that all these approach correspond morally to a simple notion of dependent type theory. </p>\n<p>Or maybe another way to formulate my question is: given a partial theory as you define them in the paper, is there a way to turn it into a total theory were you add as many sorts as you need to describe the partial domains of your operations ?</p>",
        "id": 218118518,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1606501325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276885\">Kenji Maillard</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218118518\">said</a>:</p>\n<blockquote>\n<p>Hi <span class=\"user-mention silent\" data-user-id=\"277318\">Ivan Di Liberti</span> , thanks for sharing that enlightening paper ! Beside the amazing string diagrammatic reasoning for partial term, I find your presentation and reconstruction of \"classical results\" around Lawvere theories really impressive and easy to follow.</p>\n<p>However, reading the article left me with the following interrogation. I am not sure I understand why Freyd's essentially algebraic theories, the theories induced by Vickers &amp; Palmgren's partial horn logic (or Makkai's FOLDS which I think are also related) do not provide a reasonable notion of syntax. At least I thought (in a rather unprecise/handwavy fashion) that all these approach correspond morally to a simple notion of dependent type theory. </p>\n<p>Or maybe another way to formulate my question is: given a partial theory as you define them in the paper, is there a way to turn it into a total theory were you add as many sorts as you need to describe the partial domains of your operations ?</p>\n</blockquote>\n<p>I think that's a very good question, and it's a pity that you can have only my answer. The best part of this paper, in fact, is that each author has his own understanding and point of view on this story.</p>\n<p>That said, my point of view is the following. When you look at the history of algebraic theories, especially in parallel with the theory of clones, the connection between the categorical specification of syntax and the most traditional understanding of equational theories is neat and even very natural. I would not dare to say the same for finite limit theories.</p>\n<p>You can produce some type theory out of a finite limit theory (of course), but then what you lose is the \"equationality\" of this story. We wanted something that could acknowledge that essentially algebraic theories are truly close to algebraic theories, something talking about equations and identities between terms. </p>\n<p>The string calculus that we propose shows that essentially algebraic theories are monoidal theories after all, which is what we truly wanted. The fact that finite limits can capture these very special monoidal theories is a theorem, more than a definition, from my point of view.</p>\n<p>Of course, this is very much open to debate, and one can find finite limit theories good enough, I could not complain. In that case, our contribution would be to enrich the debate about syntactical presentations of finite limit theories. Ain't that cool? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 218123344,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1606505634
    },
    {
        "content": "<p>Am I right to think that by \"equationality\" you refer to equations between two terms/string diagrams/pieces of \"raw\" syntax, by opposition to equations between \"well-formed\" terms subject to side conditions and/or presuppositions ? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> <br>\nIf that's so it remind me a bit the usual debate between intrisically well-formed/typed syntax vs raw terms.</p>\n<p>Any way I am mostly asking because I'm interested in the next steps, and how it could impact neighbouring fields <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <br>\nIn particular I wonder if other kinds of \"algebraic\" effects could be treated in a similar fashion (through a reconstruction with a suitable weakening of the comonoid structure) ; it looks like it should naturally connect with the works of Furhmann but also with various ideas coming from linear logic (that in the presence of \"effects\" the structural operations of duplication/erasure cease to be natural and might not exist at all on arbitrary computations).</p>",
        "id": 218127542,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1606509436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276885\">Kenji Maillard</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218127542\">said</a>:</p>\n<blockquote>\n<p>Am I right to think that by \"equationality\" you refer to equations between two terms/string diagrams/pieces of \"raw\" syntax, by opposition to equations between \"well-formed\" terms subject to side conditions and/or presuppositions ? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> <br>\nIf that's so it remind me a bit the usual debate between intrisically well-formed/typed syntax vs raw terms.</p>\n<p>Any way I am mostly asking because I'm interested in the next steps, and how it could impact neighbouring fields <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <br>\nIn particular I wonder if other kinds of \"algebraic\" effects could be treated in a similar fashion (through a reconstruction with a suitable weakening of the comonoid structure) ; it looks like it should naturally connect with the works of Furhmann but also with various ideas coming from linear logic (that in the presence of \"effects\" the structural operations of duplication/erasure cease to be natural and might not exist at all on arbitrary computations).</p>\n</blockquote>\n<p>Yes you are right.</p>\n<p>Coming to applications to linear logic, don't overestimate my knowledge of maths! I would love to see such applications, but I can't provide them at the moment. If you have something more precise in mind, maybe you could suggest something to read.</p>",
        "id": 218131304,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1606513466
    },
    {
        "content": "<blockquote>\n<p>I think that's a very good question, and it's a pity that you can have only my answer. The best part of this paper, in fact, is that each author has his own understanding and point of view on this story.</p>\n</blockquote>\n<p>To prove that this is true, I will add \"my\" version of the story, that in the end is the story of a partial failure, because this approach hasn't been developed yet, due to its intrinsic greater difficulty.</p>\n<p>To my eye, the Great History of Functorial Semantics is that there are equivalences between</p>\n<ol>\n<li>The category of Lawvere theories, i.e. cartesian props</li>\n<li>The category of finitary monads on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\sf Set</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span></li>\n<li>The category of monoidal promonads on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">F</mi><mi mathvariant=\"sans-serif\">i</mi><msup><mi mathvariant=\"sans-serif\">n</mi><mtext>op</mtext></msup></mrow><annotation encoding=\"application/x-tex\">\\sf Fin^\\text{op}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">F</span><span class=\"mord mathsf\">i</span><span class=\"mord\"><span class=\"mord mathsf\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">op</span></span></span></span></span></span></span></span></span></span></span></span></span>, (the free category with products over the point)</li>\n<li>The category of cocontinuous, convolution preserving monads on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mrow><mi mathvariant=\"sans-serif\">F</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">n</mi></mrow><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[{\\sf Fin},{\\sf Set}]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">F</span><span class=\"mord mathsf\">i</span><span class=\"mord mathsf\">n</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span><span class=\"mclose\">]</span></span></span></span></li>\n<li>The category of clones (cartesian operads), i.e. functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"sans-serif\">F</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">n</mi></mrow><mtext>op</mtext></msup><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">{\\sf Fin}^\\text{op} \\to {\\sf Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">F</span><span class=\"mord mathsf\">i</span><span class=\"mord mathsf\">n</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.748732em;\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">op</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span></span> that are monoids w.r.t. the substitution product</li>\n</ol>\n<p>Most of these equivalences are shown using the fact that an equivalence of categories <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mrow><mi mathvariant=\"sans-serif\">F</mi><mi mathvariant=\"sans-serif\">i</mi><mi mathvariant=\"sans-serif\">n</mi></mrow><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo stretchy=\"false\">]</mo><mo>≅</mo><mo stretchy=\"false\">[</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo separator=\"true\">,</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><msub><mo stretchy=\"false\">]</mo><mrow><mo>&lt;</mo><mi>ω</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">[{\\sf Fin},{\\sf Set}]\\cong [{\\sf Set},{\\sf Set}]_{&lt;\\omega}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">F</span><span class=\"mord mathsf\">i</span><span class=\"mord mathsf\">n</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.22737em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17737em;\"><span></span></span></span></span></span></span></span></span></span> (RHS: finitary endofunctors) is monoidal if on the LHS you put the substitution product (the one for which \"operads are monoids\").</p>\n<p>This pentacle of equivalences is the highest possible sense in which \"a theory is a monoid\"; now, partial theories in our paper capture very well item 1 of the list; albeit in a different 2-category: what about items 2,3,4,5? </p>\n<p>Too tired to tell you now, wait for tomorrow!</p>",
        "id": 218132936,
        "sender_full_name": "fosco",
        "timestamp": 1606515337
    },
    {
        "content": "<p>If you're generous with what you consider separate concepts, you can also add \"relative monads on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">F</mi><mo>↪</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb F \\hookrightarrow \\mathsf{Set}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69989em;vertical-align:-0.011em;\"></span><span class=\"mord mathbb\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">S</span><span class=\"mord mathsf\">e</span><span class=\"mord mathsf\">t</span></span></span></span></span>\", and distinguish abstract clones and cartesian operads (since they are technically presented via different operations).</p>",
        "id": 218133124,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606515512
    },
    {
        "content": "<p>(Both of which are also essentially \"monoids\" in an appropriate sense.)</p>",
        "id": 218133169,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606515596
    },
    {
        "content": "<p>It's interesting that your pentacle doesn't even include the traditional approach, namely <a href=\"https://en.wikipedia.org/wiki/Variety_(universal_algebra)#Definition\">varieties</a>.  I suppose one can argue these are so close to Lawvere theories (only more presentation-dependent) that they're not worth a separate entry.  But culturally they are very distinct.</p>",
        "id": 218134407,
        "sender_full_name": "John Baez",
        "timestamp": 1606517111
    },
    {
        "content": "<p>I’m not willing to argue that the other ways to specify an essentially algebraic theory are “not syntax”, but I can offer my perspective on our approach.</p>\n<p>I think for me the remarkable thing is that from the string diagrammatic/monoidal theory perspective the move from (cartesian) algebraic theories to essentially algebraic theories feels like a natural thing to do <em>in the syntax</em>, as well as in the semantics (where we move from finite products to finite limits).</p>",
        "id": 218134430,
        "sender_full_name": "Chad Nester",
        "timestamp": 1606517154
    },
    {
        "content": "<p>I also find the presentations of these theories in terms of discrete cartesian restriction categories a lot more intuitive than the alternatives, but I don’t really know how many people agree with me here  <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 218134622,
        "sender_full_name": "Chad Nester",
        "timestamp": 1606517385
    },
    {
        "content": "<p>If I may offer my thoughts on the topic: I think there is an important distinction to be drawn here between concrete syntax (e.g. term calculi or graphical calculi) and abstract syntax (i.e. categorical models). While there are various essentially-equivalent notions of concrete syntax for essentially algebraic theories (partial Horn logic, dependent type theories with dependent sums, etc.), there has previously been no abstract syntax in the style of Lawvere. (I should say that finitely complete categories are farther removed from the syntax than one would like, because you lose the structure of the generating sorts.) However, this work actually provides a categorical presentation-free formulation of the abstract syntax of essentially algebraic theories.</p>",
        "id": 218134962,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606517862
    },
    {
        "content": "<p>As for why our approach might be “more syntactic” than others... I think that if we compare the usual method of presenting algebraic theories to most of the ways to present essentially algebraic theories (finite limit sketches, Freyd’s scheme, variations on Freyd’s scheme,...) then the presentations of algebraic  theories are  a clear winner in terms of clarity. For essentially algebraic theories, you need to have a whole bunch of other crap floating around and the situation is usually pretty confusing. With our approach you can present them in terms of generators and equations <em>and nothing else</em>.</p>",
        "id": 218135033,
        "sender_full_name": "Chad Nester",
        "timestamp": 1606517941
    },
    {
        "content": "<p>So, to my eye, there is nothing lacking about the existing concrete syntactic approaches to essentially algebraic theories (though another in the diagrammatic forms of PROPs is certainly welcome), but none of these approaches are abstract; whereas cartesian restriction categories facilitate this abstract syntactic approach that is much cleaner categorically than term or graphical calculi.</p>",
        "id": 218135036,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606517945
    },
    {
        "content": "<p>I would remark that saying this new approach finally gives an equational perspective (i.e. in terms of generators and equations) appears to me misleading, because this is already possible, e.g. through dependent type theories with dependent sums. The PROPs give a new equational perspective, but I do not think that was entirely missing before.</p>",
        "id": 218135120,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606518047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218135120\">said</a>:</p>\n<blockquote>\n<p>I would remark that saying this new approach finally gives an equational perspective (i.e. in terms of generators and equations) appears to me misleading, because this is already possible, e.g. through dependent type theories with dependent sums. The PROPs give a new equational perspective, but I do not think that was missing before.</p>\n</blockquote>\n<p>I think this is a good point. I do agree that type theory should could as syntax.</p>",
        "id": 218135190,
        "sender_full_name": "Chad Nester",
        "timestamp": 1606518129
    },
    {
        "content": "<p>I also share in <span class=\"user-mention\" data-user-id=\"282822\">@fosco</span>'s hope that this perspective might shed light on the monadic perspective :)</p>",
        "id": 218135196,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606518149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218135120\">said</a>:</p>\n<blockquote>\n<p>I would remark that saying this new approach finally gives an equational perspective (i.e. in terms of generators and equations) appears to me misleading, because this is already possible, e.g. through dependent type theories with dependent sums. The PROPs give a new equational perspective, but I do not think that was entirely missing before.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"277318\">@Ivan Di Liberti</span>: please do not take this as a criticism! I don't think this in any way reduces the beauty of the PROP-based approach to the syntax: it is simply that as a type theorist I also find much value in the type theoretic approach :)</p>",
        "id": 218135493,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606518587
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218135493\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218135120\">said</a>:</p>\n<blockquote>\n<p>I would remark that saying this new approach finally gives an equational perspective (i.e. in terms of generators and equations) appears to me misleading, because this is already possible, e.g. through dependent type theories with dependent sums. The PROPs give a new equational perspective, but I do not think that was entirely missing before.</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277318\">Ivan Di Liberti</span>: please do not take this as a criticism! I don't think this in any way reduces the beauty of the PROP-based approach to the syntax: it is simply that as a type theorist I also find much value in the type theoretic approach too :)</p>\n</blockquote>\n<p>I think you would be even entitled to criticise me. A better understanding of what we (all) prove comes from a dialectical process that goes much beyond us and that inevitably passes through intellectual debate. </p>\n<p>Anyway, I agree with your comment, and I even wrote it in mine. A type-theoretical understanding is available. My point (which could be wrong) was that such an understanding is unjust towards the equational point of view on universal algebra.</p>",
        "id": 218135743,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1606518911
    },
    {
        "content": "<p>Yes, I completely agree that this perspective is much closer to the tradition of equational logic and universal algebra than the type theoretic perspective.</p>",
        "id": 218135838,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606519043
    },
    {
        "content": "<p>Thank you everyone for the various insights! It does help getting a firmer point of view on this landscape :).</p>",
        "id": 218155356,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1606553937
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277318\">Ivan Di Liberti</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218131304\">said</a>:</p>\n<blockquote>\n<p>Coming to applications to linear logic, don't overestimate my knowledge of maths! I would love to see such applications, but I can't provide them at the moment. If you have something more precise in mind, maybe you could suggest something to read.</p>\n</blockquote>\n<p>It's not so much applications to linear logic, but rather some common \"take away ideas\" between your work and linear logic-inspired work. For instance, following Benton's work, a model of linear logic consist of an adjunction between a (symmetric) monoidal category and a cartesian monoidal category (plus some more structure). A recipe to build such models is to consider a monoidal category C and its category of co-comutative comonoids (thanks to Fox's theorem): if you can construct the free co-comutative comonoid on an object of C, then you get an appropriate adjunction. These ideas inspired <a href=\"https://guillaume.munch.name/files/ocaml-raii.pdf\">this (unpublished) manuscript</a> and, as I understand it, the key idea is that you have to equip resources (what I would explain as \"effect-context dependent pieces of data\" ?) with their own notion of duplication and erasure (deallocation).</p>\n<p>Now that I'm writing it, it does sound related but maybe not in such a close fashion <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<p>Another question that popped up during the night: do you have an idea if there is some connection to the work of Prakash Panangaden, Radu Mardare and Gordon Plotkin on <a href=\"https://www.cs.mcgill.ca/~prakash/Pubs/lics2016.pdf\">Quantitative algeabraic reasoning</a> ?<br>\nCould we hope for a \"Lawevrian Theory of Everything\" encompassing Lawvere theories, the relational theories that you mention in your paper, the partial theories of your paper, this algebraic quantitative reasoning, as well as other theories yet to be worked out (what happens for state for instance ?).</p>",
        "id": 218156509,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1606556115
    },
    {
        "content": "<p>Yet another question (don't hesitate to say if I'm a bother): What would change to the results in a constructive setting ? Say you consider the category of bishops sets instead of \"classical sets\". I have the impression that the prop induced from the monoidal theory of partial frobenius algebras would then correspond to partial maps with <em>decidable</em> domain of definition.</p>",
        "id": 218160774,
        "sender_full_name": "Kenji Maillard",
        "timestamp": 1606563992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276885\">Kenji Maillard</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218118518\">said</a>:</p>\n<blockquote>\n<p>However, reading the article left me with the following interrogation. I am not sure I understand why Freyd's essentially algebraic theories, the theories induced by Vickers &amp; Palmgren's partial horn logic (or Makkai's FOLDS which I think are also related) do not provide a reasonable notion of syntax. At least I thought (in a rather unprecise/handwavy fashion) that all these approach correspond morally to a simple notion of dependent type theory. </p>\n</blockquote>\n<p>I can see that I'm coming severely late to the discussion, but let me try to defend why we claim that this is the \"right\" syntax for partiality.</p>\n<p>The word \"syntax\" is severely overused and means different things for different people.  E.g. I still don't really understand what mathematicians mean by syntax-semantics dualities...  :) </p>\n<p>Let's zoom out a bit and think about <em>what properties</em> of classical linear syntax made it a powerful formal mathematical notation, especially in algebra, from Fibonacci to the 20th century.</p>\n<p>Classical linear syntax (as abstract syntax in the programming language sense, i.e. as trees, with variables)</p>\n<ul>\n<li>gives a concrete description of the free category with products on a signature, so it is justified by a universal property</li>\n<li>has a recursive definition</li>\n<li>has a corresponding induction principle, referred to in programming language theory as structural induction</li>\n<li>with classical equational reasoning gives a powerful and convenient calculus for everyday use</li>\n</ul>\n<p>There are so many examples of these properties used in maths and CS that it is almost second nature to us. But I think that it's useful to keep in mind that much of what society considers \"maths\" is enabled by the above properties.</p>\n<p>Our string diagrammatic syntax</p>\n<ul>\n<li>gives a concrete description of the free discrete cartesian restriction category on a signature, so it is justified by a universal property</li>\n<li>has a recursive definition</li>\n<li>has a corresponding structural induction principle</li>\n<li>with equational reasoning and string diagram surgery, gives a powerful and convenient calculus.</li>\n</ul>\n<p>I won't go into the details, but I think essentially algebraic theories, finite limit sketches, and type theory all fail one or more of these four points.</p>",
        "id": 218160920,
        "sender_full_name": "Pawel Sobocinski",
        "timestamp": 1606564226
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276885\">Kenji Maillard</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218156509\">said</a>:</p>\n<blockquote>\n<p>Another question that popped up during the night: do you have an idea if there is some connection to the work of Prakash Panangaden, Radu Mardare and Gordon Plotkin on <a href=\"https://www.cs.mcgill.ca/~prakash/Pubs/lics2016.pdf\">Quantitative algeabraic reasoning</a> ?<br>\nCould we hope for a \"Lawevrian Theory of Everything\" encompassing Lawvere theories, the relational theories that you mention in your paper, the partial theories of your paper, this algebraic quantitative reasoning, as well as other theories yet to be worked out (what happens for state for instance ?).</p>\n</blockquote>\n<p>In a <a href=\"https://arxiv.org/abs/2009.10980\">paper with Jiri Rosicky</a>, we introduce nests. Nests are categories with finite limits equipped with a good enough factorization system. We show that Met-enriched nests are perfect to axiomatize continuous universal algebra (and even more). According to some informal conversations that I had with Chad, nests should correspond to (some) range categories, so some interaction is there, and there is a chance to provide a good approach to quantitative algebraic reasoning but this is nothing more than an informal conversation at the moment. Also, the category theory around Met-enriched categories is a bit green and needs to find its maturity.</p>",
        "id": 218161703,
        "sender_full_name": "Ivan Di Liberti",
        "timestamp": 1606565582
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281251\">@Pawel Sobocinski</span>: I do not want to derail this thread, so let me just say that I would be very interested in hearing why you think type theory does not satisfy these four points, in a separate discussion.</p>",
        "id": 218166665,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606574095
    },
    {
        "content": "<p>Well I imagine the answer is that the internal language of a finitely complete category is not intuitively 'equational'.</p>",
        "id": 218167303,
        "sender_full_name": "Fawzi Hreiki",
        "timestamp": 1606575079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341237\">@Fawzi Hreiki</span>: I would prefer not to continue the conversation here, as I imagine the authors would rather reserve this thread for discussion about the paper itself.</p>",
        "id": 218167517,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1606575424
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/258900-practice.3A-our.20papers/topic/Functorial.20semantics.20for.20partial.20theories/near/218166665\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281251\">Pawel Sobocinski</span>: I do not want to derail this thread, so let me just say that I would be very interested in hearing why you think type theory does not satisfy these four points, in a separate discussion.</p>\n</blockquote>\n<p>Sure!</p>",
        "id": 218203045,
        "sender_full_name": "Pawel Sobocinski",
        "timestamp": 1606639606
    }
]