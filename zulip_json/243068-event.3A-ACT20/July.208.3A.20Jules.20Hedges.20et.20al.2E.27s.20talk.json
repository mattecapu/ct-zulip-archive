[
    {
        "content": "<p>Hello all! This is the thread of discussion for the talk of Jules Hedges and Philipp Zahn, \"Open games in practice\".<br>\nDate and time: Wednesday July 8, 12:35 UTC.<br>\nZoom meeting: <a href=\"https://mit.zoom.us/j/7055345747\">https://mit.zoom.us/j/7055345747</a><br>\nYouTube live stream: <a href=\"https://www.youtube.com/watch?v=AaaoUxUx-SQ&amp;list=PLCOXjXDLt3pZDHGYOIqtg1m1lLOURjl1Q\">https://www.youtube.com/watch?v=AaaoUxUx-SQ&amp;list=PLCOXjXDLt3pZDHGYOIqtg1m1lLOURjl1Q</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"AaaoUxUx-SQ\" href=\"https://www.youtube.com/watch?v=AaaoUxUx-SQ&amp;list=PLCOXjXDLt3pZDHGYOIqtg1m1lLOURjl1Q\"><img src=\"https://i.ytimg.com/vi/AaaoUxUx-SQ/default.jpg\"></a></div>",
        "id": 202643767,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1593655813
    },
    {
        "content": "<p>Slides: <a href=\"https://obsoletewallstreet.files.wordpress.com/2020/07/open_games_in_practice.pdf\">https://obsoletewallstreet.files.wordpress.com/2020/07/open_games_in_practice.pdf</a></p>",
        "id": 203255888,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594207352
    },
    {
        "content": "<p>10 minutes!</p>",
        "id": 203260804,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1594211115
    },
    {
        "content": "<p>Hi!</p>",
        "id": 203264102,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213405
    },
    {
        "content": "<p>So, to elaborate on my remark</p>",
        "id": 203264119,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213416
    },
    {
        "content": "<p>I wasn't event talking about automation</p>",
        "id": 203264144,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213438
    },
    {
        "content": "<p>Just inverting the logic</p>",
        "id": 203264204,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213453
    },
    {
        "content": "<p>I was just scanning through the chat when zoom suddenly closed. So if anyone asked a question there, please ask it again here</p>",
        "id": 203264273,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213503
    },
    {
        "content": "<p>Instead of specifying moves and utilities to get a equilibrium-evaluating function, specify desired equilibrium states and get a moves-and-utility evaluating function</p>",
        "id": 203264291,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213520
    },
    {
        "content": "<p>Or if anyone can recover the zoom chat and dump it here?</p>",
        "id": 203264294,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213521
    },
    {
        "content": "<p>Does that make sense?</p>",
        "id": 203264302,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213525
    },
    {
        "content": "<p>Yes, I see. I'm not sure whether this is possible, I need to think about this a bit</p>",
        "id": 203264367,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213552
    },
    {
        "content": "<p>This would be \"compositional mechanism design\" rather than \"compositional game theory\"</p>",
        "id": 203264474,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213589
    },
    {
        "content": "<p>Jules do you have a repository for your DSL?</p>",
        "id": 203264493,
        "sender_full_name": "David Jaz",
        "timestamp": 1594213598
    },
    {
        "content": "<p>Yeah, I guess</p>",
        "id": 203264509,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213610
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264474\">said</a>:</p>\n<blockquote>\n<p>This would be \"compositional mechanism design\" rather than \"compositional game theory\"</p>\n</blockquote>\n<p>I'm not sure the field is big enough to split this hair yet :p</p>",
        "id": 203264529,
        "sender_full_name": "David Jaz",
        "timestamp": 1594213621
    },
    {
        "content": "<p>I'm not really versed in either, so I couldn't tell.how hard it would be</p>",
        "id": 203264552,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277446\">David Jaz</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264493\">said</a>:</p>\n<blockquote>\n<p>Jules do you have a repository for your DSL?</p>\n</blockquote>\n<p>Here: <a href=\"https://github.com/jules-hedges/open-games-hs\">https://github.com/jules-hedges/open-games-hs</a> but the actual syntax I used in the talk isn't written down anywhere yet, so far it exists only in my head. The abstract syntax and its compiler can be found in /src/Preprocessor</p>",
        "id": 203264648,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213689
    },
    {
        "content": "<p>Hi! That was great. Just as a follow-up on Aleks' question on what kinds of things this can tell you: You mentioned that economists really like this vcg auction for the incentives it induces. Is there already a way in which the DSL can show this, and how it's different from a normal auction where the winner pays the price they bid?</p>",
        "id": 203264679,
        "sender_full_name": "Abel Jansma",
        "timestamp": 1594213707
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264648\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"277446\">David Jaz</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264493\">said</a>:</p>\n<blockquote>\n<p>Jules do you have a repository for your DSL?</p>\n</blockquote>\n<p>Here: <a href=\"https://github.com/jules-hedges/open-games-hs\">https://github.com/jules-hedges/open-games-hs</a> but the actual syntax I used in the talk isn't written down anywhere yet, so far it exists only in my head. The abstract syntax and its compiler can be found in /src/Preprocessor</p>\n</blockquote>\n<p>Is this idea to extend arrow do notation with the payout functions?</p>",
        "id": 203264686,
        "sender_full_name": "David Jaz",
        "timestamp": 1594213717
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 203264695,
        "sender_full_name": "David Jaz",
        "timestamp": 1594213727
    },
    {
        "content": "<p>“Code is the best documentation”</p>",
        "id": 203264696,
        "sender_full_name": "Juan Ferrer Meleiro",
        "timestamp": 1594213728
    },
    {
        "content": "<p>And here is the code for the talk specifically (warning: very messy, maybe not fit for human consumption yet): <a href=\"https://github.com/jules-hedges/open-games-hs/blob/permitSale/src/OpenGames/Examples/PermitSale/PermitSale.hs\">https://github.com/jules-hedges/open-games-hs/blob/permitSale/src/OpenGames/Examples/PermitSale/PermitSale.hs</a></p>",
        "id": 203264717,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213742
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277446\">David Jaz</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264686\">said</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>Is this idea to extend arrow do notation with the payout functions?\n</code></pre></div>\n\n\n<p>Yes, I forgot to mention that the syntax is closely based on haskell's arrow-notation, modified to include the contravariant parts</p>",
        "id": 203264853,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"319022\">Abel Jansma</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264679\">said</a>:</p>\n<blockquote>\n<p>Hi! That was great. Just as a follow-up on Aleks' question on what kinds of things this can tell you: You mentioned that economists really like this vcg auction for the incentives it induces. Is there already a way in which the DSL can show this, and how it's different from a normal auction where the winner pays the price they bid?</p>\n</blockquote>\n<p>So my guess is that this kind of thing can't be shown by the representation. I normally think about this in terms of string diagrams, which can draw pictures of games but can't talk about their properties much (the language is very, very incomplete in the logical sense). If you add a 3rd dimension to the diagrams you can make some progress talking about properties of games. I doubt there's a practical way to do that in the textual representation</p>",
        "id": 203265062,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594213970
    },
    {
        "content": "<p>I'm going to have lunch now, if there's any more questions I'll get back to them in a bit</p>",
        "id": 203265452,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594214216
    },
    {
        "content": "<p>Oh, I just remembered I saw Viktor's comment disagreeing with me saying the equilibrium analysis isn't interesting to category theorists. This is true. For example, there's a homotopy theory of Nash equilibria. There's probably a deep rabbit hole hooking that up to open games</p>",
        "id": 203265579,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594214286
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"319022\">Abel Jansma</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264679\">said</a>:</p>\n<blockquote>\n<p>Hi! That was great. Just as a follow-up on Aleks' question on what kinds of things this can tell you: You mentioned that economists really like this vcg auction for the incentives it induces. Is there already a way in which the DSL can show this, and how it's different from a normal auction where the winner pays the price they bid?</p>\n</blockquote>\n<p>Maybe to add some context: Jules was effectively using a second price auction. In the particular situation we are looking at (2 players, just one \"object\" to be auctioned) this is an instantiation of the VCG mechanism. The latter is more general and can be used in different allocation problems (for instance public goods). </p>\n<p>We could have used what you describe, a first price auction. In the scenario we consider, the first price auction can be shown to be \"equivalent\" to the second price auction. The difference is in the bidding strategies. In the second price auction, each player (in equilibrium) bids his private evaluation. In the first price auction you bid less. (Another difference is that VCG can be analyzed with a different notion of equilibrium)</p>",
        "id": 203265792,
        "sender_full_name": "Philipp Zahn",
        "timestamp": 1594214407
    },
    {
        "content": "<p>+1 on the \"compositional mechanism design\" question</p>\n<p>I asked a similar(?) question a few weeks ago on the practice:economics stream, (although it's perhaps even more naive and confused) which I hope it's okay to paste here:</p>\n<p>Hi, does anyone know of work on what might be called \"compositional mechanism design\"? AFAIK, you can't perform arbitrary computations on elicited truth values if the computations have effects, because that would disrupt the mechanism.</p>\n<p>It would be great to be able to elicit truth valuations and treat them like ordinary inputs in programming and string them to outputs without having to worry about agents backpropagating on the program and hijacking it to get the personally desired outcome.</p>",
        "id": 203265929,
        "sender_full_name": "Haskell",
        "timestamp": 1594214497
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203265062\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>So my guess is that this kind of thing can&#39;t be shown by the representation. I normally think about this in terms of string diagrams, which can draw pictures of games but can&#39;t talk about their properties much (the language is very, very incomplete in the logical sense). If you add a 3rd dimension to the diagrams you can make some progress talking about properties of games. I doubt there&#39;s a practical way to do that in the textual representation\n````\n\nRight, that makes sense. Thanks!\n</code></pre></div>\n\n\n</blockquote>",
        "id": 203266273,
        "sender_full_name": "Abel Jansma",
        "timestamp": 1594214660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277670\">Philipp Zahn</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203265792\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"319022\">Abel Jansma</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264679\">said</a>:</p>\n<blockquote>\n<p>Hi! That was great. Just as a follow-up on Aleks' question on what kinds of things this can tell you: You mentioned that economists really like this vcg auction for the incentives it induces. Is there already a way in which the DSL can show this, and how it's different from a normal auction where the winner pays the price they bid?</p>\n</blockquote>\n<p>Maybe to add some context: Jules was effectively using a second price auction. In the particular situation we are looking at (2 players, just one \"object\" to be auctioned) this is an instantiation of the VCG mechanism. The latter is more general and can be used in different allocation problems (for instance public goods). </p>\n<p>We could have used what you describe, a first price auction. In the scenario we consider, the first price auction can be shown to be \"equivalent\" to the second price auction. The difference is in the bidding strategies. In the second price auction, each player (in equilibrium) bids his private evaluation. In the first price auction you bid less. (Another difference is that VCG can be analyzed with a different notion of equilibrium)</p>\n</blockquote>\n<p>Ok that's actually very interesting, to be able to show these equivalences is kind of what I was getting at.</p>",
        "id": 203266770,
        "sender_full_name": "Abel Jansma",
        "timestamp": 1594214906
    },
    {
        "content": "<p>The result is known as \"Revenue equivalence theorem\": a certain class of auctions will produce the same <em>expected</em> revenue. Goes back to Myerson.</p>",
        "id": 203266994,
        "sender_full_name": "Philipp Zahn",
        "timestamp": 1594215031
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"279635\">Haskell</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203265929\">said</a>:</p>\n<blockquote>\n<p>+1 on the \"compositional mechanism design\" question</p>\n<p>I asked a similar(?) question a few weeks ago on the practice:economics stream, (although it's perhaps even more naive and confused) which I hope it's okay to paste here:</p>\n<p>Hi, does anyone know of work on what might be called \"compositional mechanism design\"? AFAIK, you can't perform arbitrary computations on elicited truth values if the computations have effects, because that would disrupt the mechanism.</p>\n<p>It would be great to be able to elicit truth valuations and treat them like ordinary inputs in programming and string them to outputs without having to worry about agents backpropagating on the program and hijacking it to get the personally desired outcome.</p>\n</blockquote>\n<p>I am not aware of something like that. At least not similar to compositional game theory.</p>",
        "id": 203267274,
        "sender_full_name": "Philipp Zahn",
        "timestamp": 1594215191
    },
    {
        "content": "<p>As concrete equilibria do not compose, there are natural barriers to compositional mechanism design where the well-behavedness of composite equilibria would be key I guess</p>",
        "id": 203267517,
        "sender_full_name": "Philipp Zahn",
        "timestamp": 1594215301
    },
    {
        "content": "<p>(I am, of course, restricting myself to what is narrowly defined as mechanism design in economics). It seems like you have something more general/ different in mind.</p>",
        "id": 203267660,
        "sender_full_name": "Philipp Zahn",
        "timestamp": 1594215365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264294\">said</a>:</p>\n<blockquote>\n<p>Or if anyone can recover the zoom chat and dump it here?</p>\n</blockquote>\n<p>Here's the chat, for those who are interested: <a href=\"/user_uploads/21317/qJfunirBC2R2NRtE-clqJ5ac/Wednesday-I.txt\">Wednesday-I.txt</a></p>",
        "id": 203275729,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1594219370
    },
    {
        "content": "<p>04:24:02    David Jaz:  How does this dsl differ from arrow do notation, other than the missing “prop”?<br>\nIt adds the contravariant part. This is to teleological categories as arrow notation is to monoidal categories, where \"teleological categories\" is the thing I invented that have the property that the category of optics is the free one on a monoidal category</p>",
        "id": 203276441,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594219717
    },
    {
        "content": "<p>04:19:26    Juan Meleiro:   From listening to you at previous times, I had the impression you already had a working diagram interpreter<br>\n04:24:10    Viktor Winschel:    Statebox has a text-to-string-diagram rendering code called KD editor which produces string diagrams but also Arrow-Haskell code. This might be a visualisation tool for otherwise textual specification of games. However this code might still lacks (not sure) a covariant arrow one needs for the coutility direction of arrows in open games.<br>\nYes, I had to skip talking about that for time. We also hooked a branch of the Statebox diagram editor (which is implemented in javascript) so it generates haskell code for open games. There are 2 problems with that. One is that I can't hack on it, just because I don't have the code and I don't know javascript anyway. The other is something I wanted to mention but didn't have time. For bigger examples, this text-based notation with named wires starts to actually feel more convenient than string diagrams. You often end up making lots of copies and that can get quite messy in a string diagram with lots of comonoids and braiding. In the textual notation that's implicit, you just refer to the same name multiple times, and behind the scenes the compiler generates all the copy nodes</p>",
        "id": 203277045,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594219999
    },
    {
        "content": "<p>04:32:10    Viktor Winschel:    I doubt that it is true that equilibrium analysis is economics and not interesting for CT. after all we might use algebraic geometry for example for analysing equilibria defined in polynomials. Actually we do that in economics already with homotopy continuation theory in “computational/numerical economics”.<br>\nYes, agreed</p>",
        "id": 203277380,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594220153
    },
    {
        "content": "<p>04:32:36    Elena Di Lavore:    it's not going to be more efficient than a global computation <br>\nThe one possible exception is if you have a lot of pre-computed stuff solutions for your reusable components. And even that I think is unlikely</p>",
        "id": 203277558,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594220225
    },
    {
        "content": "<p>04:36:12    Matthew Di Meglio:  The DSL looks very similar to Haskell do-notation, what do you get in the DSL that you couldn’t get from do-notation? Could this be used as a language for building string diagrams, say for typesetting purposes?<br>\nYes.... I wonder if you could build an Arrow instance in haskell that generates diagrams (obviously using haskell's Diagrams package, which looks extremely nice). Hm, an interesting question</p>",
        "id": 203277759,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594220313
    },
    {
        "content": "<p>small correction re Statebox's kdmoncat  string diagram editor (<a href=\"https://edit.statebox.cloud\">https://edit.statebox.cloud</a>): although it is indeed still closed source, it's written in PureScript rather than Javascript, which, happily, is a more or lesss like a cleaner (and strict) Haskell</p>",
        "id": 203288162,
        "sender_full_name": "Erik Post",
        "timestamp": 1594224912
    },
    {
        "content": "<p>Video here:<br>\n<a href=\"https://www.youtube.com/watch?v=b3aBFUrCpuw&amp;list=PLCOXjXDLt3pYot9VNdLlZqGajHyZUywdI\">https://www.youtube.com/watch?v=b3aBFUrCpuw&amp;list=PLCOXjXDLt3pYot9VNdLlZqGajHyZUywdI</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"b3aBFUrCpuw\" href=\"https://www.youtube.com/watch?v=b3aBFUrCpuw&amp;list=PLCOXjXDLt3pYot9VNdLlZqGajHyZUywdI\"><img src=\"https://i.ytimg.com/vi/b3aBFUrCpuw/default.jpg\"></a></div>",
        "id": 203297956,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1594229736
    },
    {
        "content": "<p>Remembered that I promised a blog post link explaining the shenanigans with the state monad. In case anyone cares, this is it: <a href=\"https://julesh.com/2020/05/17/open-games-with-stateful-payoffs/\">https://julesh.com/2020/05/17/open-games-with-stateful-payoffs/</a> (this is the non-probabilistic version; the probabalistic variant in the talk is the one that was described as future work at the bottom of that post)</p>",
        "id": 203399565,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1594308107
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275989\">Paolo Perrone</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203275729\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264294\">said</a>:</p>\n<blockquote>\n<p>Or if anyone can recover the zoom chat and dump it here?</p>\n</blockquote>\n<p>Here's the chat, for those who are interested: <a href=\"/user_uploads/21317/qJfunirBC2R2NRtE-clqJ5ac/Wednesday-I.txt\">Wednesday-I.txt</a></p>\n</blockquote>\n<p>Are the other zoom chat files somewhere? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 203900542,
        "sender_full_name": "Sophie El Agami",
        "timestamp": 1594769149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"319027\">Sophie El Agami</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203900542\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275989\">Paolo Perrone</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203275729\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/July.208.3A.20Jules.20Hedges.20et.20al.2E's.20talk/near/203264294\">said</a>:</p>\n<blockquote>\n<p>Or if anyone can recover the zoom chat and dump it here?</p>\n</blockquote>\n<p>Here's the chat, for those who are interested: <a href=\"/user_uploads/21317/qJfunirBC2R2NRtE-clqJ5ac/Wednesday-I.txt\">Wednesday-I.txt</a></p>\n</blockquote>\n<p>Are the other zoom chat files somewhere? <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>\n</blockquote>\n<p>I can post them on request.</p>",
        "id": 203907513,
        "sender_full_name": "Paolo Perrone",
        "timestamp": 1594775672
    }
]