[
    {
        "content": "<p>The first of the blog posts from the ACT2020 Adjoint School:</p>\n<ul>\n<li>Elena Di Lavore and Xiaoyan Li, <a href=\"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html\">Linear logic flavoured composition of Petri nets</a>, The n-Category Cafe.</li>\n</ul>",
        "id": 205160216,
        "sender_full_name": "John Baez",
        "timestamp": 1595879213
    },
    {
        "content": "<p>And here's my summary - a series of tweets, which starts here (click to read more):</p>\n<p><a href=\"https://twitter.com/johncarlosbaez/status/1287787675634634761\">https://twitter.com/johncarlosbaez/status/1287787675634634761</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/johncarlosbaez/status/1287787675634634761\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/1224941370885828608/Ktaz9JLB_normal.jpg\"></a><p>Wow!  Di Lavore and Li explain how to make a category of Petri nets that's a model of linear logic!   I consider myself a sort of expert on Petri nets, but I didn't know this stuff:\n\n<a href=\"https://t.co/BuhVVIGeek\">https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html</a>\n\nGreat pictures, too.   Let me summarize a tiny bit.\n\n(1/n) <a href=\"https://t.co/r7HGtnKu0Z\">https://twitter.com/johncarlosbaez/status/1287787675634634761/photo/1</a></p><span>- John Carlos Baez (@johncarlosbaez)</span><div class=\"twitter-image\"><a href=\"https://t.co/r7HGtnKu0Z\"><img src=\"https://pbs.twimg.com/media/Ed8isJiUEAEktFV.jpg:small\"></a></div></div></div>",
        "id": 205160249,
        "sender_full_name": "John Baez",
        "timestamp": 1595879237
    },
    {
        "content": "<p>My main question is whether this can be generalized from \"elementary nets\" to arbitrary Petri nets.</p>",
        "id": 205160285,
        "sender_full_name": "John Baez",
        "timestamp": 1595879256
    },
    {
        "content": "<p>well, yes, it has been generalized to arbitrary Petri nets. the mathematical basis is the paper that Wilmer Leal and Eigil  Rischel were working over,  \"Categorical multirelations, linear logic and Petri nets\" TR from Cambridge <a href=\"http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-225.pdf\">http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-225.pdf</a>. Thanks for the great summary and twitter thread!!</p>",
        "id": 205266981,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1595958006
    },
    {
        "content": "<p>I have two questions:<br>\n1) Are there exponential modalities <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">!</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">!</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">?</mo></mrow><annotation encoding=\"application/x-tex\">?</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">?</span></span></span></span><br>\n2) Is it ever the case that we obtain biproducts? (possibly if the base category has biproducts?)</p>",
        "id": 205273135,
        "sender_full_name": "JS PL (he/him)",
        "timestamp": 1595961210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277105\">JS Pacaud Lemay</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/Linear.20logic.20and.20Petri.20nets/near/205273135\">said</a>:</p>\n<blockquote>\n<p>I have two questions:<br>\n1) Are there exponential modalities <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">!</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">!</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">?</mo></mrow><annotation encoding=\"application/x-tex\">?</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">?</span></span></span></span><br>\n2) Is it ever the case that we obtain biproducts? (possibly if the base category has biproducts?)</p>\n</blockquote>\n<p>1) Yes, there are exponentials <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">!</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">!</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">?</mo></mrow><annotation encoding=\"application/x-tex\">?</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">?</span></span></span></span>. (this was always the goal).<br>\n2) not naturally the case, but if the base category has biproducts,  you probably can have them in dialectica too. <br>\nthe product of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(U,X, \\alpha)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>β</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(V,Y, \\beta)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo>×</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>c</mi><mi>h</mi><mi>o</mi><mi>o</mi><mi>s</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(U\\times V, X+Y, choose)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span>. so if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo>×</mo><mi>X</mi><mo>≅</mo><mi>U</mi><mo>+</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">U\\times X\\cong U+X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> you should end up with a byproduct.<br>\n (for  our Petri nets the base category is Sets, so no biproducts.)</p>",
        "id": 205316518,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1595995761
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"276656\">@Valeria de Paiva</span>.  The blog article didn't say that the work on elementary Petri nets was a \"degeneralization\" of your earlier work on Petri nets.</p>",
        "id": 205386028,
        "sender_full_name": "John Baez",
        "timestamp": 1596043081
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/Linear.20logic.20and.20Petri.20nets/near/205386028\">said</a>:</p>\n<blockquote>\n<p>Thanks, <span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span>.  The blog article didn't say that the work on elementary Petri nets was a \"degeneralization\" of your earlier work on Petri nets.</p>\n</blockquote>\n<p>hey, but it isn't a \"degeneralization\", really!  the original work by Brown and Gurr was for elementary Petri nets. When I joined them I said I thought I knew how to make it work for \"general Petri nets\" and  wrote the \"math version\" of the paper. Then we wrote the applied version jointly, submitted, had it accepted with modifications and then never had the time to do the modifications.  because people were moving house, countries, etc. So I thought this was a good idea for the ACT Summer School, to pick up this old work and see how it stacked against newer work (The comparison is not so easy though).  so the group was divided into  two and Elena and Xiaoyan had the first part, Wilmer and Eigil the second. For the school we all chatted together and they convinced me of how we should proceed. Hopefully it will all work, but of course, the new research is all new, and hence, like all research, it might work. or not.  Hopefully it will!</p>",
        "id": 205387879,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1596043970
    },
    {
        "content": "<p>it's probably only me, but I've tried 4 times to reply to a comment in the n-cafe and four times the gadget destroyed my message and didn't post it (I've tried both chrome and firefox). <br>\nSo hoping <span class=\"user-mention\" data-user-id=\"276777\">@Mike Shulman</span>  will see it here:</p>\n<p>hi Mike,</p>\n<blockquote>\n<p>Does an element of a multiset simply have a number of times that it occurs<br>\nyes, I think so.</p>\n</blockquote>\n<p>As far I am concerned there are no non-monos <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to E\\times B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. The original constructions insist on monos, always. this is why I say the categories are equivalent over Sets.</p>\n<p>Elena wants to generalize it to non-monos  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to E\\times B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, and this is cool. I mentioned to her that this was a suggestion of the late Aurelio Carboni, who was also very fond of spans. I was and still am reluctant, as I think the asymmetry given by the 'lax' condition on morphisms is what makes the dialectica constructive. But we're investigating!</p>",
        "id": 205655617,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1596242564
    },
    {
        "content": "<p>The laxness seems unrelated to the mono-ness to me.  If it's not a mono then the inclusion between subobjects would be replaced just by a map in the slice category.  I would expect that since the categorified Chu construction like Chu(Cat,Set) is interesting, so would a categorified Dialectica construction be.</p>",
        "id": 205655791,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1596242836
    },
    {
        "content": "<p>[Quoting…]<br>\nI beg to differ, the Dialectica construction is already a category, you don't need to categorify it!  <br>\nbut more seriously, sure, you may be right that maps in the slice category can be enough for a construction with the same characteristics. I don't know and this is why we're investigating--but I am skeptical.</p>",
        "id": 205656477,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1596243792
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/stream/243068-ACT-2020/topic/Linear.20logic.20and.20Petri.20nets/near/205655791\">said</a>:</p>\n<blockquote>\n<p>The laxness seems unrelated to the mono-ness to me.  If it's not a mono then the inclusion between subobjects would be replaced just by a map in the slice category.  I would expect that since the categorified Chu construction like Chu(Cat,Set) is interesting, so would a categorified Dialectica construction be.</p>\n</blockquote>\n<p>let me expand on why I am skeptical here. Sets have an initial and a terminal object that do not coincide. if I'm reading the nLab page <a href=\"https://ncatlab.org/nlab/show/span\">https://ncatlab.org/nlab/show/span</a> correctly  Span(Sets) is such that \"Span(Sets)  is evidently equivalent to its opposite category, it follows that to the extent that limits exists they are also colimits and vice versa.\" so it seems to me that the initial and terminal objects here will coincide and this will make hmm, maybe this is wrong, but I assumed this would give me an isomorphism between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi mathvariant=\"normal\">⊥</mi></msup></mrow><annotation encoding=\"application/x-tex\">A^\\bot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊥</span></span></span></span></span></span></span></span></span></span></span>, which is fine for classical linear logic, but not for FILL.</p>",
        "id": 205657465,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1596245401
    },
    {
        "content": "<p>Where did the spans come from?  I didn't hear anything about spans.  I suppose a non-mono <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to E\\times B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> can be considered a span, but in that case you're comparing it to a mono <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to E\\times B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> which is a relation, and the category Rel(Sets) is equivalent to its opposite just like Span(Sets) is.</p>",
        "id": 205706110,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1596331963
    }
]