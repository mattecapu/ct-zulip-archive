[
    {
        "content": "<p>is there a nice moral reason why pseudofunctors into Cat classify just [op]fibrations over their domain rather than arbitrary functors into their domain?</p>",
        "id": 192751675,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585880870
    },
    {
        "content": "<p>lax functors into Prof classify arbitrary functors</p>",
        "id": 192751842,
        "sender_full_name": "Max New",
        "timestamp": 1585881092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> basically, the rules of the pseudofunctor translate into being able to take pullbacks along morphisms in the base in a very concrete way</p>",
        "id": 192753378,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883257
    },
    {
        "content": "<p>actually they have to send identities to identities, max</p>",
        "id": 192753423,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883285
    },
    {
        "content": "<p>iirc</p>",
        "id": 192753432,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883295
    },
    {
        "content": "<p>The main thing that these fibrations are \"for\" is taking these kinds of pullbacks (imho)</p>",
        "id": 192753456,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span> hmmmm, i feel like that's a bit less \"moral\" than i was looking for</p>",
        "id": 192753458,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883340
    },
    {
        "content": "<p>like</p>",
        "id": 192753465,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883351
    },
    {
        "content": "<p>Yeah I thought it might be</p>",
        "id": 192753466,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883353
    },
    {
        "content": "<p>mm</p>",
        "id": 192753468,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883357
    },
    {
        "content": "<p>functions into Set classify functions into the domain</p>",
        "id": 192753474,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883371
    },
    {
        "content": "<p>what's different between sets and categories?</p>",
        "id": 192753478,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883383
    },
    {
        "content": "<p>or maybe the moral is that all functions of sets are fibrations?</p>",
        "id": 192753483,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883398
    },
    {
        "content": "<p>Well sets have no morphisms</p>",
        "id": 192753530,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883414
    },
    {
        "content": "<p>sure they do</p>",
        "id": 192753536,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883426
    },
    {
        "content": "<p>the morphisms are the equalities</p>",
        "id": 192753539,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883430
    },
    {
        "content": "<p>Somehow the \"true\" story is happening higher categorically, and you get these accidents when you truncateb</p>",
        "id": 192753548,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883446
    },
    {
        "content": "<p>What about groupoids?</p>",
        "id": 192753569,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883508
    },
    {
        "content": "<p>what about them?</p>",
        "id": 192753572,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883517
    },
    {
        "content": "<p>Yeah I know I'm not giving you a great intuitive answer tho.</p>",
        "id": 192753615,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883537
    },
    {
        "content": "<p>They're a better higher version of sets, for one. Do they have analogous properties?</p>",
        "id": 192753633,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883595
    },
    {
        "content": "<p>Also I think that from the POV of fibrations, my statement about sets not having morphisms stands</p>",
        "id": 192753634,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883597
    },
    {
        "content": "<p>The same story is true for groupoids</p>",
        "id": 192753640,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883617
    },
    {
        "content": "<p>Does the fact that all their morphisms are invertable make all the functors automatically fibrations?</p>",
        "id": 192753643,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883632
    },
    {
        "content": "<p>Or something like that?</p>",
        "id": 192753688,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883657
    },
    {
        "content": "<p>No. You still need liftings of the morphisms I believe.</p>",
        "id": 192753690,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883667
    },
    {
        "content": "<p>Ah.</p>",
        "id": 192753703,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883698
    },
    {
        "content": "<p>I can't see any reason that invertibility would give you that for free.</p>",
        "id": 192753720,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883705
    },
    {
        "content": "<p>I'm mostly making analogies from the (∞,1) case tho</p>",
        "id": 192753732,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883739
    },
    {
        "content": "<p>Recall that pseudofunctors into groupoids just give you \"categories fibered in groupoids.\"</p>",
        "id": 192753788,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883786
    },
    {
        "content": "<p>Or \"stacks.\"</p>",
        "id": 192753796,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883800
    },
    {
        "content": "<p>we should be talking about pseudofunctors from a groupoid into groupoids classifying a groupoid over the domain</p>",
        "id": 192753809,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883835
    },
    {
        "content": "<p>But there is still this equivalence between pseudofunctors and certain kinds of fibrations.</p>",
        "id": 192753810,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883837
    },
    {
        "content": "<p>Well, I haven't studied enough to recall that. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 192753811,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883837
    },
    {
        "content": "<p>Sorry, different backgrounds.</p>",
        "id": 192753823,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883852
    },
    {
        "content": "<p>I can only throw out random ideas.</p>",
        "id": 192753829,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585883871
    },
    {
        "content": "<p>if you just carry out the standard grothendieck construction on such a pseudofunctor, do you automatically get a groupoid as the domain of the fibration?</p>",
        "id": 192753831,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585883872
    },
    {
        "content": "<p>My guess is yes.</p>",
        "id": 192753877,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883900
    },
    {
        "content": "<p>I believe the analogous thing is true for (∞,1)-groupoids... But I'd have to check.</p>",
        "id": 192753908,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585883968
    },
    {
        "content": "<p>Yeah it's true. Just checked.</p>",
        "id": 192753983,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884044
    },
    {
        "content": "<p>I guess the opposite version of my earlier question is \"what about posets?\"</p>",
        "id": 192754006,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585884082
    },
    {
        "content": "<p>Basically if you've got a fibration whose fibers are groupoids, and whose target is a groupoid, so is the total category.</p>",
        "id": 192754010,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276679\">Jonathan Beardsley</span> <a href=\"#narrow/stream/229111-general/topic/classifying.20fibrations/near/192753788\" title=\"#narrow/stream/229111-general/topic/classifying.20fibrations/near/192753788\">said</a>:</p>\n<blockquote>\n<p>Recall that pseudofunctors into groupoids just give you \"categories fibered in groupoids.\"<br>\nOr \"stacks\"</p>\n</blockquote>\n<p>You can have stacks that are <strong>not</strong> fibred in groupoids. Just saying. The usual category of vector bundles on spaces, over the category of spaces, is a stack, because descent is still effective etc.</p>",
        "id": 192754066,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884146
    },
    {
        "content": "<p>/me hears someone mention specializing a categorical notion to the (0, 1) case</p>",
        "id": 192754088,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884171
    },
    {
        "content": "<p>/me 's eyes start glowing</p>",
        "id": 192754090,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884176
    },
    {
        "content": "<p>functors from a poset to Pos classify fibrations, not arbitrary posets over the domain :)</p>",
        "id": 192754098,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276422\">@David Michael Roberts</span> indeed, in fact I'd generally consider a stack to be just fibered in categories, but I think the classical notion uses groupoids</p>",
        "id": 192754109,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884215
    },
    {
        "content": "<p>Okay, then it seems like sets are weird.</p>",
        "id": 192754115,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585884232
    },
    {
        "content": "<p>well, i dunno tho?</p>",
        "id": 192754138,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884242
    },
    {
        "content": "<p>because my intuition for slice categories in general is like</p>",
        "id": 192754161,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884250
    },
    {
        "content": "<p>C/A is supposed to be the category of A-indexed families of C objects</p>",
        "id": 192754167,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884263
    },
    {
        "content": "<p>have i been wrong?</p>",
        "id": 192754171,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884274
    },
    {
        "content": "<p>i mean, that's the basis for the categorical semantics of dependent types, right?</p>",
        "id": 192754179,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884295
    },
    {
        "content": "<p>Any time you're outside of sets, yes</p>",
        "id": 192754181,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884296
    },
    {
        "content": "<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 192754189,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884304
    },
    {
        "content": "<p>Anything even slightly \"higher\" has to have some suitable notion of parallel transport</p>",
        "id": 192754214,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884327
    },
    {
        "content": "<p>Ok let me try saying this</p>",
        "id": 192754221,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884356
    },
    {
        "content": "<p>hmmmm</p>",
        "id": 192754222,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884359
    },
    {
        "content": "<p>ooh, hold on</p>",
        "id": 192754262,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884368
    },
    {
        "content": "<p>what characterizes something as being \"higher\" is \"collection of them is a higher category\", maybe?</p>",
        "id": 192754277,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884407
    },
    {
        "content": "<p>well, higher, for me, means \"has some notion of n-morphisms for n&gt;0\"</p>",
        "id": 192754287,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884434
    },
    {
        "content": "<p>so what i said is right when C is a (1, 1)-category, just not for n &gt; (1, 1)</p>",
        "id": 192754288,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884437
    },
    {
        "content": "<p>\"not discrete\"</p>",
        "id": 192754289,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884443
    },
    {
        "content": "<p>it's not though, right? for C an ordinary category, you get fibrations</p>",
        "id": 192754296,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884473
    },
    {
        "content": "<p>here's the thing</p>",
        "id": 192754338,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884502
    },
    {
        "content": "<p>i meant if you have a (1, 1)-category C, then taking slices over objects in it is the right thing</p>",
        "id": 192754340,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884507
    },
    {
        "content": "<p>oh like, you're INSIDE of a (1,1)-category?</p>",
        "id": 192754343,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884523
    },
    {
        "content": "<p>but if the objects are categories, then the category is Cat, and that's (2, 2)</p>",
        "id": 192754344,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884524
    },
    {
        "content": "<p>yeah!</p>",
        "id": 192754348,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884526
    },
    {
        "content": "<p>right right</p>",
        "id": 192754351,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884530
    },
    {
        "content": "<p>here gimme a second to say something maybe helpful</p>",
        "id": 192754357,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884539
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 192754360,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884545
    },
    {
        "content": "<p>given any kind of functor out of a category, you need to know what to take the morphisms to</p>",
        "id": 192754364,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884556
    },
    {
        "content": "<p>if you have an arbitrary functor into a category, say E--&gt;B, you have no idea what to take the morphisms to</p>",
        "id": 192754372,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884581
    },
    {
        "content": "<p>in other words, clearly the functor P:B--&gt;Cat should take b to the inverse image of b in E (as a subcategory)</p>",
        "id": 192754430,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884616
    },
    {
        "content": "<p>but given a morphism f:b--&gt;c, there isn't really any clear way to canonically produce a functor from p^{-1}(c) to p^{-1}b</p>",
        "id": 192754454,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884659
    },
    {
        "content": "<p>ah yeah ive thought thru this bit before :)</p>",
        "id": 192754472,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884686
    },
    {
        "content": "<p>and, basically, a fibration is PRECISELY the sort of data you need to choose such functors, AND for them to compose correctly</p>",
        "id": 192754476,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span> \"classical\" as in Giraud's book _Cohomologie Nonabelienne_? Nope, he uses fibred in categories.</p>",
        "id": 192754477,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884692
    },
    {
        "content": "<p>you <em>can</em> produce a profunctor between those fibers tho</p>",
        "id": 192754486,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276422\">@David Michael Roberts</span> okay you're right and also smarter than me</p>",
        "id": 192754487,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884708
    },
    {
        "content": "<p>&amp; then its a fibration if the profunctor is representable</p>",
        "id": 192754494,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585884714
    },
    {
        "content": "<p>Also, there are algebraic stacks (so have a cover by a scheme) that are fibred in categories, too. I can't get people to take me seriously about these, I don't know why.</p>",
        "id": 192754542,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884740
    },
    {
        "content": "<p>And by \"people\" I mean number theorists/algebraic geometers.</p>",
        "id": 192754551,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884754
    },
    {
        "content": "<p>I literally only ever talk about stacks fibered in categories. But when I'm talking to people who I don't know, I try to use the terminology that every algebraic geometer I ever talk to uses.</p>",
        "id": 192754573,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span> not smarter, who knows what that means.</p>",
        "id": 192754651,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884880
    },
    {
        "content": "<p>All right, then I concede in whatever way will make you stop talking about it.</p>",
        "id": 192754666,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585884913
    },
    {
        "content": "<p>I find myself betwixt several fields of mathematics, and so I have weird ideas and focus on stuff none of them particularly grok.</p>",
        "id": 192754677,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884918
    },
    {
        "content": "<p>OK, I'll pipe down :-)</p>",
        "id": 192754689,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1585884934
    },
    {
        "content": "<p>wait shit why is this topic in <a class=\"stream\" data-stream-id=\"229111\" href=\"/#narrow/stream/229111-general\">#general</a> i meant to post it in <a class=\"stream\" data-stream-id=\"229136\" href=\"/#narrow/stream/229136-category-theory\">#category theory</a> <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 192754771,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585885035
    },
    {
        "content": "<p>i was confused about that</p>",
        "id": 192754779,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585885055
    },
    {
        "content": "<p>Not sure if someone already said this, but any functor between groupoids can be replaced by a fibration between groupoids equivalent to the original ones.</p>",
        "id": 192755142,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585885556
    },
    {
        "content": "<p>oh!</p>",
        "id": 192755194,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585885595
    },
    {
        "content": "<p>good to know!</p>",
        "id": 192755197,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585885600
    },
    {
        "content": "<p>i didn't know that, but it makes me think of the usual thing in model categories</p>",
        "id": 192755201,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585885610
    },
    {
        "content": "<p>e.g. how you can replace any map between spaces with a fibration without changing the homotopy type of anything</p>",
        "id": 192755220,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585885633
    },
    {
        "content": "<p>One way of thinking about the original question is that if you take a random functor, you still have fibres, but you aren't guaranteed in general that the stuff that crosses between fibres will arrange themselves into functors between the fibres.</p>",
        "id": 192755524,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886001
    },
    {
        "content": "<p>Yeah I think that's what I was maybe trying to say, but saying poorly.</p>",
        "id": 192755533,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886018
    },
    {
        "content": "<p>The morphisms are really crucial. And if you're just over a set, you don't have to keep track of any of that stuff.</p>",
        "id": 192755568,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886042
    },
    {
        "content": "<p>you just need fibers over objects, which you have.</p>",
        "id": 192755591,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886056
    },
    {
        "content": "<p>hmm</p>",
        "id": 192755603,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886092
    },
    {
        "content": "<p>like, the fact that you don't need \"fibrations\" for sets is, like, an accident</p>",
        "id": 192755614,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886116
    },
    {
        "content": "<p>(for the record, tho, a lot of things are clearer when u recognize that sets do have morphisms)</p>",
        "id": 192755638,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886140
    },
    {
        "content": "<p>but those morphisms have to go to something VERY specific under any kind of functor</p>",
        "id": 192755684,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886165
    },
    {
        "content": "<p>you don't have to choose anything for them</p>",
        "id": 192755687,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886171
    },
    {
        "content": "<p>I think my answer is not maximally \"moral\" as opposed to technical.</p>",
        "id": 192755698,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886204
    },
    {
        "content": "<p>but maybe halfwayish</p>",
        "id": 192755703,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886214
    },
    {
        "content": "<p>i mean, in my mind, the question should be totally reversed</p>",
        "id": 192755707,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886226
    },
    {
        "content": "<p>how?</p>",
        "id": 192755712,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886238
    },
    {
        "content": "<p>i.e. \"how come for reasonable notions of functors into nCat you always get fibrations over the base, but for 0Cat you just get all maps down to the base?\"</p>",
        "id": 192755722,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886261
    },
    {
        "content": "<p>actually i have a take on this</p>",
        "id": 192755769,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886293
    },
    {
        "content": "<p>there's a pathology in the typical approach to thinking about 0Cat, i'd say</p>",
        "id": 192755773,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886304
    },
    {
        "content": "<p>If you do this in HoTT, does it not work anymore?</p>",
        "id": 192755778,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886321
    },
    {
        "content": "<p>if you're paying attention to strictness issues, then really, 0Cat should be the category of set<em>oids</em>, not <em>sets</em></p>",
        "id": 192755781,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886333
    },
    {
        "content": "<p>i.e., sets equipped with equivalence relations</p>",
        "id": 192755786,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886347
    },
    {
        "content": "<p>I'm never really paying attention to strictness issues, unless I absolutely have to.</p>",
        "id": 192755790,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886355
    },
    {
        "content": "<p>same (:</p>",
        "id": 192755792,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886361
    },
    {
        "content": "<p>but we seem to be here!</p>",
        "id": 192755793,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886366
    },
    {
        "content": "<p>I just think about dots and paths in my head.</p>",
        "id": 192755799,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886373
    },
    {
        "content": "<p>But even with setoids, every functor is equivalent to a fibration. The difference here is really a groupoid vs category thing.</p>",
        "id": 192755808,
        "sender_full_name": "Alexander Campbell",
        "timestamp": 1585886400
    },
    {
        "content": "<p>but so: if we use setoids instead of sets, then i bet we get a similar phenomenon to groupoids or in homotopy theory</p>",
        "id": 192755846,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886403
    },
    {
        "content": "<p>Could setoids also be called posetal groupoids <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 192755849,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886405
    },
    {
        "content": "<p>sure :)</p>",
        "id": 192755854,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886411
    },
    {
        "content": "<p>where every map is <em>equivalent</em> to a fibration, but not <em>equal</em> to one if you are willing to be evil</p>",
        "id": 192755861,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886433
    },
    {
        "content": "<p>okay alexander's comment is making me rethink my whole position</p>",
        "id": 192755879,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886483
    },
    {
        "content": "<p>it's also what i was gonna say next ^_^</p>",
        "id": 192755886,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886499
    },
    {
        "content": "<p>Or in HoTT does the same thing happen for groupoids as sets, because every functor being equivalent to a fibration means there's a path between the two?</p>",
        "id": 192755896,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886513
    },
    {
        "content": "<p>Was it Voevodsky that emphasized that we should think of sets:groupoids as posets:categories?</p>",
        "id": 192755940,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886527
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"277270\">@Dan Doel</span> the more category theory i learn the more the idea of doing category theory in hott terrifies me</p>",
        "id": 192755945,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> Yes, I think so.</p>",
        "id": 192755947,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886550
    },
    {
        "content": "<p>someone i talked to at popl told me that some of his work was on the open problem of defining the appropriate notion of a presheaf when working in hott</p>",
        "id": 192755950,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886564
    },
    {
        "content": "<p>iirc</p>",
        "id": 192755952,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886567
    },
    {
        "content": "<p>okay so are we saying that groupoids behave MORE like sets than categories, in this aspect?</p>",
        "id": 192755965,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886596
    },
    {
        "content": "<p>it sounds like it to me</p>",
        "id": 192755968,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886604
    },
    {
        "content": "<p>okay so here's a fact i know</p>",
        "id": 192755970,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886610
    },
    {
        "content": "<p>That's what I was trying to get at.</p>",
        "id": 192755971,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886613
    },
    {
        "content": "<p>which is actually what Dan said a while back</p>",
        "id": 192755975,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886632
    },
    {
        "content": "<p>the only real difference between sets and groupoids i see is that you dont have to replace w/ an equivalent fibration in sets, but i bet that that's an artifact of using sets instead of setoids</p>",
        "id": 192755979,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886636
    },
    {
        "content": "<p>Is it 'evil' to distinguish between the functor on groupoids and the equivalent fibration?</p>",
        "id": 192756022,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886662
    },
    {
        "content": "<p>If so, then I think in HoTT you'd try to make them identical.</p>",
        "id": 192756027,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886677
    },
    {
        "content": "<p>Up to paths.</p>",
        "id": 192756030,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886687
    },
    {
        "content": "<p>i know that \"grothendieck fibration\" is an evil concept</p>",
        "id": 192756033,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886691
    },
    {
        "content": "<p>i think \"street fibration\" or something is the reformed version</p>",
        "id": 192756040,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886705
    },
    {
        "content": "<p>That's right.</p>",
        "id": 192756045,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886713
    },
    {
        "content": "<p>hmmmmm okay... i'm trying to fit this into my backwards framework.... i guess iirc when you do the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-categorical Grothendieck construction stuff, you do indeed get that the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-category of \"fibrations over an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\" is equivalent to the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-slice category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>G</mi><mi>p</mi><msub><mi>d</mi><mi mathvariant=\"normal\">∞</mi></msub><msub><mo stretchy=\"false\">)</mo><mrow><mi mathvariant=\"normal\">/</mi><mi>X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">(Gpd_{\\infty})_{/X}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\">p</span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">/</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 192756076,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886755
    },
    {
        "content": "<p>So this might be the kind of situation that HoTT is intended to clear up. Groupoids act like sets, and categories act like posets. Or something.</p>",
        "id": 192756132,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886787
    },
    {
        "content": "<p>more like sets act like ∞-groupoids</p>",
        "id": 192756155,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585886832
    },
    {
        "content": "<p>I suppose I would like to say that one of the underlying philosophical moves in HoTT is to replace sets with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-groupoids</p>",
        "id": 192756156,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span> then does that equivalence tell you which fibration corresponds to your arbitrary map?</p>",
        "id": 192756158,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585886836
    },
    {
        "content": "<p>Unless it also eliminates the fibration part for categories, too.</p>",
        "id": 192756161,
        "sender_full_name": "Dan Doel",
        "timestamp": 1585886838
    },
    {
        "content": "<p>I think it could if, instead of using the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-categories, you used the Quillen model structures.</p>",
        "id": 192756216,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886894
    },
    {
        "content": "<p>\"Street fibrations\" are the non-evil fibrations: any functor naturally isomorphic to a Grothendieck fibration is a Street fibration, and any functor naturally isomorphic to a Street fibration is again a Street fibration.   </p>\n<p>But almost nobody uses Street fibrations.</p>\n<p>The most pushback I've ever gotten on using the word \"evil\" was from people who complained they weren't being <span aria-label=\"ogre\" class=\"emoji emoji-1f479\" role=\"img\" title=\"ogre\">:ogre:</span> <strong>evil</strong>  <span aria-label=\"ogre\" class=\"emoji emoji-1f479\" role=\"img\" title=\"ogre\">:ogre:</span> for using Grothendieck fibrations.</p>",
        "id": 192756217,
        "sender_full_name": "John Baez",
        "timestamp": 1585886894
    },
    {
        "content": "<p>And replaced the map with a fibration in the correct model structure.</p>",
        "id": 192756236,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585886934
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229111-general/topic/classifying.20fibrations/near/192756217\" title=\"#narrow/stream/229111-general/topic/classifying.20fibrations/near/192756217\">said</a>:</p>\n<blockquote>\n<p>\"Street fibrations\" are the non-evil fibrations: any functor naturally isomorphic to a Grothendieck fibration is a Street fibration, and any functor naturally isomorphic to a Street fibration is again a Street fibration.   </p>\n<p>But almost nobody uses Street fibrations.</p>\n<p>The most pushback I've ever gotten on using the word \"evil\" was from people who complained they weren't being <span aria-label=\"ogre\" class=\"emoji emoji-1f479\" role=\"img\" title=\"ogre\">:ogre:</span> <strong>evil</strong>  <span aria-label=\"ogre\" class=\"emoji emoji-1f479\" role=\"img\" title=\"ogre\">:ogre:</span> for using Grothendieck fibrations.</p>\n</blockquote>\n<p>Me and Liang Ze Wong used Street fibrations in the first draft of our paper on the enriched Grothendieck construction</p>",
        "id": 192756305,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887009
    },
    {
        "content": "<p>because it makes doing enriched fibrations easier in some ways</p>",
        "id": 192756310,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887021
    },
    {
        "content": "<p>b/c you can just work with adjoints between fibers</p>",
        "id": 192756315,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887038
    },
    {
        "content": "<p>I think people have given either a negative or an idk to the question \"are Grothendieck fibrations the fibrations of some model structure?\"</p>",
        "id": 192756319,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span> that sounds nice, why did you change it?</p>",
        "id": 192756352,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887098
    },
    {
        "content": "<p>but it turned out to be unnecessary</p>",
        "id": 192756356,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887106
    },
    {
        "content": "<p>and made the paper a lot longer</p>",
        "id": 192756359,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887109
    },
    {
        "content": "<p>basically we were anxious about picking cartesian lifts in enriched categories</p>",
        "id": 192756409,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887143
    },
    {
        "content": "<p>where you don't have honest sets of morphisms</p>",
        "id": 192756416,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887154
    },
    {
        "content": "<p>Is there a theorem like \"every Street fibration is equivalent to a Grothendieck fibration\"?</p>",
        "id": 192756429,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887173
    },
    {
        "content": "<p>i can't remember how it all worked out in the end, but it turned out you didn't need to worry about this</p>",
        "id": 192756433,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> at least in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmoi this type of thing is true</p>",
        "id": 192756442,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887192
    },
    {
        "content": "<p>Riehl and Verity have some theorem saying that things that should be called \"Cartesian fibrations\" are the same as things that should be called \"Street fibrations.\"</p>",
        "id": 192756450,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887220
    },
    {
        "content": "<p>A Street fibration is a Grothendieck fibration iff it is an isofibration, and you can always replace a functor by an equivalent isofibration (and being a Street fibration is equivalence-invariant).</p>",
        "id": 192756460,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585887240
    },
    {
        "content": "<p>I think I wanted the other direction though, Reid. <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 192756519,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887289
    },
    {
        "content": "<p>∞-cosmoi 🤩</p>",
        "id": 192756526,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887299
    },
    {
        "content": "<p>what's an ∞-cosmos?</p>",
        "id": 192756532,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887306
    },
    {
        "content": "<p>\"a place where one can do <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-category theory\"</p>",
        "id": 192756540,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887323
    },
    {
        "content": "<p>i don't know what i expected</p>",
        "id": 192756543,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887331
    },
    {
        "content": "<p>Do you know the classical notion of a cosmos?</p>",
        "id": 192756546,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887345
    },
    {
        "content": "<p>yeah</p>",
        "id": 192756556,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887350
    },
    {
        "content": "<p>it's a (1, 1)-quantale <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 192756571,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887357
    },
    {
        "content": "<p>Is it an (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>,2)-category?</p>",
        "id": 192756576,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> well one would really need a good model for that type of thing I think, haha</p>",
        "id": 192756622,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887386
    },
    {
        "content": "<p>I don't know about the classical notion of a cosmos <span aria-label=\"looking\" class=\"emoji emoji-1f440\" role=\"img\" title=\"looking\">:looking:</span></p>",
        "id": 192756624,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887388
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/cosmos\" title=\"https://ncatlab.org/nlab/show/cosmos\">https://ncatlab.org/nlab/show/cosmos</a></p>",
        "id": 192756628,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887392
    },
    {
        "content": "<p>something nice enough for enriching over that you don't have to sweat about it, basically</p>",
        "id": 192756634,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887413
    },
    {
        "content": "<p>enough of Set's properties that you use all the time as the enriching category, except maybe not cartesian</p>",
        "id": 192756650,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887460
    },
    {
        "content": "<p>let's regularize our naming conventions, a cosmos should be called a quantos <span aria-label=\"triumph\" class=\"emoji emoji-1f624\" role=\"img\" title=\"triumph\">:triumph:</span></p>",
        "id": 192756696,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887502
    },
    {
        "content": "<p>{space, cosmos} is a nice pair of words.</p>",
        "id": 192756738,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887574
    },
    {
        "content": "<p>if we could replace <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-topos with \"space\" we'd be in good shape</p>",
        "id": 192756745,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887597
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276679\">@Jonathan Beardsley</span>  ok, i shouldve clarified ive only ever rly thought about benabou cosmoi</p>",
        "id": 192756759,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887602
    },
    {
        "content": "<p>are those the ones you have in mind</p>",
        "id": 192756785,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887606
    },
    {
        "content": "<p>nah, more like Street cosmoi</p>",
        "id": 192756796,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887615
    },
    {
        "content": "<p>ah, oof</p>",
        "id": 192756799,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887622
    },
    {
        "content": "<p>If you start with a Street fibration, you can replace it by an isofibration--the new functor is still a Street fibration so now you found an equivalent Grothendieck fibration.</p>",
        "id": 192756801,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585887624
    },
    {
        "content": "<p>/me peeks</p>",
        "id": 192756802,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887625
    },
    {
        "content": "<p>Reid, oh I see.</p>",
        "id": 192756809,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585887642
    },
    {
        "content": "<p>i.e. instead of \"a good thing to enrich over,\" we're talking about a \"good place to do category thoery\"</p>",
        "id": 192756811,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887645
    },
    {
        "content": "<p>A Benabou cosmos is a nice sort of 2-rig, <span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span>.</p>",
        "id": 192756830,
        "sender_full_name": "John Baez",
        "timestamp": 1585887684
    },
    {
        "content": "<p>fibrational cosmos or the 2nd one, jon?</p>",
        "id": 192756835,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887699
    },
    {
        "content": "<p>oh i dunno, i guess <span class=\"user-mention\" data-user-id=\"277432\">@Emily Riehl</span> might know, haha</p>",
        "id": 192756900,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887772
    },
    {
        "content": "<p>I would guess, from the language of the nlab article, that it's the \"fibrational\" definition that caused them to name these structures <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmoi</p>",
        "id": 192756917,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887814
    },
    {
        "content": "<p>ok good night</p>",
        "id": 192756970,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887846
    },
    {
        "content": "<p>Emily Riehl hints at a notion of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmos here: </p>\n<p><a href=\"/user_uploads/21317/NdnFEQXzW5dcfeENjSfgkGon/riehl_topos_3.jpg\" title=\"riehl_topos_3.jpg\">Riehl</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/NdnFEQXzW5dcfeENjSfgkGon/riehl_topos_3.jpg\" title=\"Riehl\"><img src=\"/user_uploads/21317/NdnFEQXzW5dcfeENjSfgkGon/riehl_topos_3.jpg\"></a></div><p>She may have made this into a definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmos somewhere.</p>",
        "id": 192756972,
        "sender_full_name": "John Baez",
        "timestamp": 1585887853
    },
    {
        "content": "<p>:o</p>",
        "id": 192757004,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585887942
    },
    {
        "content": "<p>I mean she has written many papers on the theory of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmoi</p>",
        "id": 192757013,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887958
    },
    {
        "content": "<p>She has definitely made it into a definition.</p>",
        "id": 192757068,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887971
    },
    {
        "content": "<p><a href=\"https://ncatlab.org/nlab/show/infinity-cosmos\" title=\"https://ncatlab.org/nlab/show/infinity-cosmos\">https://ncatlab.org/nlab/show/infinity-cosmos</a></p>",
        "id": 192757074,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585887980
    },
    {
        "content": "<p>crap i forgot i was going to bed</p>",
        "id": 192757088,
        "sender_full_name": "Jonathan Beardsley",
        "timestamp": 1585888011
    },
    {
        "content": "<p>There's even a book in progress now. Riehl-Verity <a href=\"http://www.math.jhu.edu/~eriehl/elements.pdf\" title=\"http://www.math.jhu.edu/~eriehl/elements.pdf\">http://www.math.jhu.edu/~eriehl/elements.pdf</a></p>",
        "id": 192757100,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585888060
    },
    {
        "content": "<p>anyway returning to the title of the topic—</p>",
        "id": 192757491,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585888656
    },
    {
        "content": "<ul>\n<li>seems like groupoidy things generally have morphisms in equivalent to fibrations, which are classified by functors to the containing category</li>\n</ul>",
        "id": 192757550,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585888726
    },
    {
        "content": "<ul>\n<li>was there a consensus on whether i was correct with \"in an arbitrary (1, 1)-category, you <em>should</em> think of objects in a slice as families parameterized by the base, but possibly not for n ≠ (1, 1)\"?</li>\n</ul>",
        "id": 192757585,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585888800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276072\">@sarahzrf</span> I'd say that for a category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> you can think of functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">B\\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> as families of categories parameterised over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>. You just have to think of the collection of all categories as being <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">P</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">f</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Prof}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">P</span><span class=\"mord mathrm\">r</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span>.</p>",
        "id": 192767822,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1585900053
    },
    {
        "content": "<p>ha</p>",
        "id": 192767846,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585900079
    },
    {
        "content": "<p>oh i misread \"the collection of all categories\" as \"all categories\"</p>",
        "id": 192767914,
        "sender_full_name": "sarahzrf",
        "timestamp": 1585900112
    },
    {
        "content": "<p>Yea sorry functors into a category are equivalent to <em>normal</em> lax functors into Prof, meaning identity is preserved up to equivalence which is the same as arbitrary lax functors into Span.</p>",
        "id": 192802120,
        "sender_full_name": "Max New",
        "timestamp": 1585919963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276642\">@Max New</span> What's 'Span' here?</p>",
        "id": 192803467,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1585920573
    },
    {
        "content": "<p>bicategory whose objects are Sets, morphisms are Spans and 2-cells are morphisms of spans. Categories are monoids in that bicategory, which explains the relationship to Prof which is Cats, profunctors and natural transformations</p>",
        "id": 192803726,
        "sender_full_name": "Max New",
        "timestamp": 1585920677
    },
    {
        "content": "<p>(Both Span and Prof can also be naturally extended to double categories)</p>",
        "id": 192803808,
        "sender_full_name": "Max New",
        "timestamp": 1585920713
    },
    {
        "content": "<p>Here is the nlab page about this stuff: <a href=\"https://ncatlab.org/nlab/show/displayed+category\" title=\"https://ncatlab.org/nlab/show/displayed+category\">https://ncatlab.org/nlab/show/displayed+category</a></p>",
        "id": 192803987,
        "sender_full_name": "Max New",
        "timestamp": 1585920781
    },
    {
        "content": "<p>Thanks! I didn't know that. It's nice to be able to drop the 'normal'.</p>",
        "id": 192804782,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1585921153
    },
    {
        "content": "<p>It also has a simple explanation which is that Prof is the result of taking monoids in Span and that construction has a universal property that normal lax functors into Mod(C) are the same as lax functors into C.</p>",
        "id": 192805155,
        "sender_full_name": "Max New",
        "timestamp": 1585921317
    },
    {
        "content": "<p>Can we also drop the 'lax'? I know there's a '<a href=\"https://golem.ph.utexas.edu/category/2018/05/laxification.html\" title=\"https://golem.ph.utexas.edu/category/2018/05/laxification.html\">laxification</a>' functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>↦</mo><mover accent=\"true\"><mi>A</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">A\\mapsto \\hat A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9467699999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">A</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.11110999999999999em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> such that the lax functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> correspond to ordinary functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>A</mi><mo>^</mo></mover><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\hat A\\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9467699999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">A</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.11110999999999999em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. Might there also be a 'right laxification' such that lax functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">B\\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> correspond to ordinary functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>→</mo><mover accent=\"true\"><mi>A</mi><mo>ˇ</mo></mover></mrow><annotation encoding=\"application/x-tex\">B\\to \\check A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8808em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8808em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">A</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.11110999999999999em;\"><span class=\"mord\">ˇ</span></span></span></span></span></span></span></span></span></span>? In other words, is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">x</mi></mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Lax}(-,A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">x</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span></span></span></span> representable?</p>",
        "id": 192806031,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1585921728
    },
    {
        "content": "<p>meaning the inclusion <code>i : Pseudo -&gt; Lax</code> is a left adjoint? Maybe check if it preserves colimits</p>",
        "id": 192811836,
        "sender_full_name": "Max New",
        "timestamp": 1585924181
    },
    {
        "content": "<p>Ah, wait, of course that can't work. If there was a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>-category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mi mathvariant=\"normal\">/</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Cat}/A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mord\">/</span><span class=\"mord mathdefault\">A</span></span></span></span> is the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>-category of ordinary functors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A\\to C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span></span></span></span> then we would have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow><mi mathvariant=\"normal\">/</mi><mn>1</mn><mo>=</mo><mrow><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">C=\\mathrm{Hom}(1,C)=\\mathrm{Cat}/1 = \\mathrm{Cat}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span><span class=\"mord\">/</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">t</span></span></span></span></span>, which we know doesn't work.</p>",
        "id": 192815482,
        "sender_full_name": "Oscar Cunningham",
        "timestamp": 1585925500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/229111-general/topic/classifying.20fibrations/near/192756972\" title=\"#narrow/stream/229111-general/topic/classifying.20fibrations/near/192756972\">said</a>:</p>\n<blockquote>\n<p>Emily Riehl hints at a notion of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmos here: </p>\n<p><a href=\"/user_uploads/21317/NdnFEQXzW5dcfeENjSfgkGon/riehl_topos_3.jpg\" title=\"riehl_topos_3.jpg\">Riehl</a> </p>\n<p>She may have made this into a definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmos somewhere.</p>\n</blockquote>\n<p>Why did she put gamma between 1 &amp; 2 when γ ≈ 0.577?</p>",
        "id": 192982217,
        "sender_full_name": "Mike Stay",
        "timestamp": 1586127139
    },
    {
        "content": "<p>I'm afraid the answer is lost in the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span>-cosmos.</p>",
        "id": 192982275,
        "sender_full_name": "John Baez",
        "timestamp": 1586127291
    },
    {
        "content": "<p>I thought γ was the Golden ratio.</p>",
        "id": 197583944,
        "sender_full_name": "Emily Riehl",
        "timestamp": 1589474830
    },
    {
        "content": "<p>No, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> is the <a href=\"https://en.wikipedia.org/wiki/Euler%E2%80%93Mascheroni_constant\">Euler-Mascheroni constant</a>.  The golden ratio is called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Φ</span></span></span></span> or sometimes <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span></span></span></span> or sometimes even <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">\\tau</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.1132em;\">τ</span></span></span></span>.  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Φ</span></span></span></span> is for the Greek sculptor Phidias.</p>\n<p>I advocate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Φ</span></span></span></span> for the \"big\" golden ration 1.6180339... and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span></span></span></span> for the \"small\" golden ratio 0.6180339....</p>",
        "id": 197597486,
        "sender_full_name": "John Baez",
        "timestamp": 1589480740
    }
]