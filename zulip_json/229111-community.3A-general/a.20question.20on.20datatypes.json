[
    {
        "content": "<p>If A is a datatype, what do -A, 1/A, 1/2 A mean, if anything?</p>",
        "id": 193552784,
        "sender_full_name": "Faré",
        "timestamp": 1586511247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276178\">Faré</span> <a href=\"#narrow/stream/229111-general/topic/Quick.20questions.3F/near/193552784\" title=\"#narrow/stream/229111-general/topic/Quick.20questions.3F/near/193552784\">said</a>:</p>\n<blockquote>\n<p>If A is a datatype, what do -A, 1/A, 1/2 A mean, if anything?</p>\n</blockquote>\n<p>Not standardly, but there's some discussion of it here: <a href=\"https://groups.google.com/forum/#!topic/hott-cafe/jbPtbnnAczY\" title=\"https://groups.google.com/forum/#!topic/hott-cafe/jbPtbnnAczY\">https://groups.google.com/forum/#!topic/hott-cafe/jbPtbnnAczY</a></p>",
        "id": 193553080,
        "sender_full_name": "James Wood",
        "timestamp": 1586511491
    },
    {
        "content": "<p>Maybe they kind of make sense in linear logic?<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">-A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\">A</span></span></span></span> cancels one choice for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>... maybe some weird operation to modify a program by invalidating a possible choice?<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">1/A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord mathdefault\">A</span></span></span></span> cancels <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> in a product, so is like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi mathvariant=\"normal\">⊥</mi></msup></mrow><annotation encoding=\"application/x-tex\">A^\\bot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊥</span></span></span></span></span></span></span></span></span></span></span> in linear logic, indicates that some function/continuation/operator/blah is consuming <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>.</p>",
        "id": 193553220,
        "sender_full_name": "Faré",
        "timestamp": 1586511606
    },
    {
        "content": "<p>Still then, I think it's quite difficult. You don't have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⊸</mo><mi>A</mi><mo>⊗</mo><msup><mi>A</mi><mtext>⊥</mtext></msup></mrow><annotation encoding=\"application/x-tex\">I ⊸ A ⊗ A^⊥</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊸</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊥</span></span></span></span></span></span></span></span></span></span></span>, and you'd probably be missing a similar law for the additive negation.</p>",
        "id": 193553576,
        "sender_full_name": "James Wood",
        "timestamp": 1586511919
    },
    {
        "content": "<p>(Instead, you have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⊸</mo><mi>A</mi><mtext>⅋</mtext><msup><mi>A</mi><mtext>⊥</mtext></msup></mrow><annotation encoding=\"application/x-tex\">I ⊸ A ⅋ A^⊥</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊸</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mord\">⅋</span><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">⊥</span></span></span></span></span></span></span></span></span></span></span>.)</p>",
        "id": 193553623,
        "sender_full_name": "James Wood",
        "timestamp": 1586511962
    },
    {
        "content": "<p>I think I've thought about things like this before, and ended up with tensor and par collapsing. Maybe that'd be acceptable for what you're wanting, but it wasn't for me.</p>",
        "id": 193553745,
        "sender_full_name": "James Wood",
        "timestamp": 1586512064
    },
    {
        "content": "<p>Tensor and Par collapsing essentially gets you a compact closed category, which one can think of as the categorification of abelian groups.</p>",
        "id": 193553875,
        "sender_full_name": "Bob Atkey",
        "timestamp": 1586512157
    },
    {
        "content": "<p>Oh, that's a good point!</p>",
        "id": 193554094,
        "sender_full_name": "James Wood",
        "timestamp": 1586512308
    },
    {
        "content": "<p>Some of these can be made sense of in the context of reversible programming languages, some papers are listed here: <a href=\"https://amr-sabry.luddy.indiana.edu/research/\" title=\"https://amr-sabry.luddy.indiana.edu/research/\">https://amr-sabry.luddy.indiana.edu/research/</a> and a recent draft here: <a href=\"https://arxiv.org/abs/2002.07020\" title=\"https://arxiv.org/abs/2002.07020\">https://arxiv.org/abs/2002.07020</a></p>",
        "id": 193579042,
        "sender_full_name": "vikraman",
        "timestamp": 1586531367
    },
    {
        "content": "<p>Also see Blass's \"7 trees in 1\"</p>",
        "id": 193585134,
        "sender_full_name": "Sam Tenka",
        "timestamp": 1586534361
    }
]