[
    {
        "content": "<p>It looks interesting. I'm writing about CAM this weekend anyway. It overlaps a lot with normalization-by-evaluation, also the normal form is suitable for building a proof search engine.</p>\n<p>But maybe the thing why I came up here is because I wonder how people think about type classes in category theory?</p>",
        "id": 195205091,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1587742305
    },
    {
        "content": "<p>Starting by denotational semantics of type classes, they'd seem to be implicit parameters and relate a lot with modules and abstract datatypes.</p>",
        "id": 195205499,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1587742470
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296269\">Henri Tuhola</span> <a href=\"#narrow/stream/229111-general/topic/Introduce.20Yourself!/near/195205091\" title=\"#narrow/stream/229111-general/topic/Introduce.20Yourself!/near/195205091\">said</a>:</p>\n<blockquote>\n<p>But maybe the thing why I came up here is because I wonder how people think about type classes in category theory?</p>\n</blockquote>\n<p>That'd be a good topic for <a class=\"stream\" data-stream-id=\"229450\" href=\"/#narrow/stream/229450-practice.3A-programming\">#practice: programming</a>.</p>",
        "id": 195205732,
        "sender_full_name": "(=_=)",
        "timestamp": 1587742564
    },
    {
        "content": "<p>I'll try to think of a title for the post. But maybe that's the hard part because if I knew how to title it, then I'd already know the answer to my own question. Maybe I just have to put \"what are typeclasses in category theory?\" or similar.</p>",
        "id": 195206301,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1587742862
    },
    {
        "content": "<p>If polymorphic functions are like natural transformations, and functors are like types, typeclasses are like?</p>",
        "id": 195206506,
        "sender_full_name": "Henri Tuhola",
        "timestamp": 1587742942
    },
    {
        "content": "<p>I started a new topic, <a class=\"stream-topic\" data-stream-id=\"229450\" href=\"/#narrow/stream/229450-practice.3A-programming/topic/type.20classes\">#practice: programming &gt; type classes</a>, for anyone who's interested in continuing this conversation.</p>",
        "id": 195208313,
        "sender_full_name": "(=_=)",
        "timestamp": 1587743750
    },
    {
        "content": "<p>According to this MO thread, the Axiom of Replacement is needed for at least some constructions, such as (cardinally larger) (co-)limits and, as discussed in the comments of the question, also bigger functor categories <br>\n<a href=\"https://mathoverflow.net/questions/41118/axiom-of-replacement-in-category-theory\">https://mathoverflow.net/questions/41118/axiom-of-replacement-in-category-theory</a><br>\nThis makes me wonder about Mac Lane set theory, which has less tools at hand than Z, which has no F (Frannkels Replacement). <br>\nDoes this say some of those constructions are generally not available in those theories (and the corresponding topoi). E.g. if you want to investigate bigger objects in functor categories. Or maybe it does depend on the coding?<br>\n(PS this is not about CS kind of classes per se, but I didn't find a better suited channel.)</p>\n<p>edit: Moved to \"general / Axiom systems\"</p>",
        "id": 199327687,
        "sender_full_name": "Nikolaj Kuntner",
        "timestamp": 1590971359
    },
    {
        "content": "<p>Btw it's super-easy to make up new channels for any topic you want, and probably good to do.  You can even do it retroactively, like now.</p>",
        "id": 199328138,
        "sender_full_name": "John Baez",
        "timestamp": 1590972354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281274\">Nikolaj Kuntner</span> <a href=\"#narrow/stream/229111-general/topic/Type.20classes.20in.20category.20theory/near/199327687\">said</a>:</p>\n<blockquote>\n<p>edit: Moved to \"general / Axiom systems\"</p>\n</blockquote>\n<p>That's <a class=\"stream-topic\" data-stream-id=\"233104\" href=\"/#narrow/stream/233104-theory.3A-logic/topic/Axiom.20systems\">#theory: logic &gt; Axiom systems</a>, for anyone who's confused.</p>",
        "id": 199340496,
        "sender_full_name": "(=_=)",
        "timestamp": 1590992802
    }
]