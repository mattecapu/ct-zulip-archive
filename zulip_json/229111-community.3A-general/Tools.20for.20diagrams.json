[
    {
        "content": "<p>What tools do you use to draw your string diagrams? Some LaTeX package?</p>",
        "id": 191671160,
        "sender_full_name": "Faré",
        "timestamp": 1585083353
    },
    {
        "content": "<p>Are there tools that generate at the same time a diagram and a bunch of Agda or Coq or Idris declarations?</p>",
        "id": 191671297,
        "sender_full_name": "Faré",
        "timestamp": 1585083416
    },
    {
        "content": "<p>Thanks for starting this very important discussion! I generally use TikZ by default, but I would not call that a satisfactory solution. I am currently moving away from that and building web-based renderers that generate SVG, which can then be included in LaTeX reasonably well thanks to Inkscape's converter.</p>",
        "id": 191671664,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1585083603
    },
    {
        "content": "<p>I've used Tikzit. You draw some pictures and it generates the tikz for it.<br>\n<a href=\"https://tikzit.github.io/\" target=\"_blank\" title=\"https://tikzit.github.io/\">https://tikzit.github.io/</a></p>",
        "id": 191671814,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1585083691
    },
    {
        "content": "<p>I've followed Penrose.ink (<a href=\"http://penrose.ink\" target=\"_blank\" title=\"http://penrose.ink\">http://penrose.ink</a>, <a href=\"https://github.com/penrose/penrose\" target=\"_blank\" title=\"https://github.com/penrose/penrose\">https://github.com/penrose/penrose</a>)  for awhile: <a href=\"http://penrose.ink/PenroseIntro2018.pdf\" target=\"_blank\" title=\"http://penrose.ink/PenroseIntro2018.pdf\">http://penrose.ink/PenroseIntro2018.pdf</a>.  It looks very promising.</p>",
        "id": 191671972,
        "sender_full_name": "Grant Roy",
        "timestamp": 1585083784
    },
    {
        "content": "<p>Did you give a look to <a href=\"http://edit.statebox.cloud\" target=\"_blank\" title=\"http://edit.statebox.cloud\">edit.statebox.cloud</a> ? :)</p>",
        "id": 191673563,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585084603
    },
    {
        "content": "<p>It's for string diagrams, you can export the composition tree to JSON and a lot of common symbols like cups, caps, spiders etc are supported.</p>",
        "id": 191673653,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585084660
    },
    {
        "content": "<p>It would be very nice to have a backend to automatically produce tikz code out of these diagrams. We don't have time for it unfortunately, but if someone wants to try and make a PR we'd be glad to help :)</p>",
        "id": 191673774,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585084710
    },
    {
        "content": "<p>is it possible to try without logging in?</p>",
        "id": 191673783,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585084712
    },
    {
        "content": "<p>Registration is totally free and there's no verification required. We implemented it because in the future we want to give the possibility to save diagrams and load them at latter stages</p>",
        "id": 191673854,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585084759
    },
    {
        "content": "<p>So no, at the moment you have to register</p>",
        "id": 191673890,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585084778
    },
    {
        "content": "<p>one thing you could try is allowing users to edit diagrams, and then only prompt them to log in/sign up when they want to save a diagram, which I imagine would decrease the bounce rate</p>",
        "id": 191674040,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585084840
    },
    {
        "content": "<p>(though you've probably already thought about this)</p>",
        "id": 191674061,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585084852
    },
    {
        "content": "<p>As Joe said, lots of people seem to like Tikzit. If you'd rather generate diagrams programmatically than draw them manually, you might check out Catlab. It supports rendering in TikZ and also directly in SVG and other formats:</p>\n<p><a href=\"https://epatters.github.io/Catlab.jl/latest/generated/graphics/tikz_wiring_diagrams/\" target=\"_blank\" title=\"https://epatters.github.io/Catlab.jl/latest/generated/graphics/tikz_wiring_diagrams/\">https://epatters.github.io/Catlab.jl/latest/generated/graphics/tikz_wiring_diagrams/</a><br>\n<a href=\"https://epatters.github.io/Catlab.jl/latest/generated/graphics/composejl_wiring_diagrams/\" target=\"_blank\" title=\"https://epatters.github.io/Catlab.jl/latest/generated/graphics/composejl_wiring_diagrams/\">https://epatters.github.io/Catlab.jl/latest/generated/graphics/composejl_wiring_diagrams/</a></p>\n<p>It's not perfect but it's usable and we're gradually improving it.</p>",
        "id": 191676554,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585086200
    },
    {
        "content": "<p>Regarding interoperation with other tools, Catlab can read/write wiring diagrams from JSON and XML formats. It doesn't talk to Agda et al but a bridge could be added by an interested person. Everything is open source.</p>",
        "id": 191676811,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585086323
    },
    {
        "content": "<p>I believe TikZit is the \"canonical\" answer, in fact I think TikZit v2 was written specifically for writing the book Picturing Quantum Processes with. (And I can't use it because my OS is too out of date, so I have to suffer instead)</p>",
        "id": 191677280,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585086574
    },
    {
        "content": "<p>Personally I can recommend spending a couple of days of quarantine getting cosy with the TikZ manual. You don't have to read all 900 pages to get started</p>",
        "id": 191677437,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585086633
    },
    {
        "content": "<p>Not bad advice, but I think our goal as a community should be to build good enough tools that people do NOT have to read the TikZ manual :)</p>",
        "id": 191677892,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585086849
    },
    {
        "content": "<p>the ideal is never having to write TikZ <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 191677922,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585086881
    },
    {
        "content": "<p>It's a nice ideal to aim for. The reality is quite a lot of my day to day live involves writing TikZ code</p>",
        "id": 191678703,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585087334
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275901\">Jules Hedges</span> <a href=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191677437\" title=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191677437\">said</a>:</p>\n<blockquote>\n<p>Personally I can recommend spending a couple of days of quarantine getting cosy with the TikZ manual. You don't have to read all 900 pages to get started</p>\n</blockquote>\n<p>Second that big time.</p>",
        "id": 191679078,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585087633
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191677922\" title=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191677922\">said</a>:</p>\n<blockquote>\n<p>the ideal is never having to write TikZ <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n</blockquote>\n<p>I don't agree. I spend much of my latex time thinking that if I were better with tikz I'd be superfast. Learning TiKz <strong>WILL</strong> always come in handy in a way or another. It's not a matter of if but a matter of when.</p>",
        "id": 191679173,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585087685
    },
    {
        "content": "<p>if you could generate the same diagrams you want to draw in TikZ automatically, what would be the downside?</p>",
        "id": 191679210,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585087733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191674040\" title=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191674040\">said</a>:</p>\n<blockquote>\n<p>one thing you could try is allowing users to edit diagrams, and then only prompt them to log in/sign up when they want to save a diagram, which I imagine would decrease the bounce rate</p>\n</blockquote>\n<p>Yes. The point is that this tool is used as part of our stack, that is, it is used in the statebox programming language. Incidentally it seems to be also useful for academia, so we are trying to make researchers happy as well. But, being us a company, that's obviously not our primary focus...</p>",
        "id": 191679249,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585087767
    },
    {
        "content": "<p>if you could just plug some equations into Catlab.jl, for instance, and have it give you code to paste into LaTeX, wouldn't that make everything much simpler?</p>",
        "id": 191679250,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585087767
    },
    {
        "content": "<blockquote>\n<p>Yes. The point is that this tool is used as part of our stack, that is, it is used in the statebox programming language. </p>\n</blockquote>\n<p>ah, I see</p>",
        "id": 191679328,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585087810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276092\">Nathanael Arkor</span> <a href=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191679210\" title=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191679210\">said</a>:</p>\n<blockquote>\n<p>if you could generate the same diagrams you want to draw in TikZ automatically, what would be the downside?</p>\n</blockquote>\n<p>No downside, but this kind of solutions will help only up to some point. E.g. we can write something to port statebox string diagrams to tikz. Perfect, but there will come a time when statebox diagrams won't do what you want. And at that point you'll have to get your hands dirty anyway</p>",
        "id": 191679338,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585087832
    },
    {
        "content": "<p>This is a small library of macros begun by Patrick Schultz and David Spivak; it's my favourite way to draw string diagrams so far:<br>\n<a href=\"http://github.com/appliedcategorytheory/TikZWD\" target=\"_blank\" title=\"http://github.com/appliedcategorytheory/TikZWD\">http://github.com/appliedcategorytheory/TikZWD</a></p>",
        "id": 191679358,
        "sender_full_name": "Brendan Fong",
        "timestamp": 1585087853
    },
    {
        "content": "<p>This library is not bad at all indeed. And it's compositional in spirit, which is nice.</p>",
        "id": 191679400,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585087888
    },
    {
        "content": "<p>The downside is that the code is not super easy and it takes quite a long time to understand what's going on if you need to change something, but diving into it is a good investment (even better if you do it in the context of learning TiKz)</p>",
        "id": 191679479,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585087938
    },
    {
        "content": "<blockquote>\n<p>Perfect, but there will come a time when statebox diagrams won't do what you want. And at that point you'll have to get your hands dirty anyway</p>\n</blockquote>\n<p>I think it's true that there will always be <em>some</em> people who need what tools can't offer — but I think you can get the tools to the point where 90% of people don't have to touch TikZ ever, or very rarely</p>",
        "id": 191679494,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585087952
    },
    {
        "content": "<p>(and for the other use cases, a graphical tool like TikZiT will probably suffice)</p>",
        "id": 191679558,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088023
    },
    {
        "content": "<p>But <em>why</em> don't you want to touch tikz ever? I get that it may be inconvenient sometimes, but \"not wanting to learn something\" is a strange goal to set :D</p>",
        "id": 191679664,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088090
    },
    {
        "content": "<p>Surely you already know the answer to that question :) Because some things are simply tedious, and TikZ is one of them.</p>",
        "id": 191679813,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585088178
    },
    {
        "content": "<p>I definitely don't agree, but ok I guess</p>",
        "id": 191679854,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088205
    },
    {
        "content": "<p>Fair enough. I guess I should be grateful that some people really care about typesetting for its own sake, because that benefits everyone else.</p>",
        "id": 191679896,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585088255
    },
    {
        "content": "<p>it's similar to asking why you wouldn't want to learn ALGOL instead of a modern programming language</p>",
        "id": 191679898,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088258
    },
    {
        "content": "<p>you might like to simply out of interest, but there's no point doing it because it's useful</p>",
        "id": 191679924,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088278
    },
    {
        "content": "<p>if you can do everything TikZ can in a simpler and faster way, why would you want to use TikZ, which is quite difficult (even if it is an amazing tool, technically)?</p>",
        "id": 191679998,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088323
    },
    {
        "content": "<p>(maybe an assembly language and a programming language is a better comparison — some people still need to deal with the low-level code, but most people would prefer not to)</p>",
        "id": 191680175,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088438
    },
    {
        "content": "<p>Because you can't. That's my point. learning ALGOL indeed makes sense if there are libraries written only in ALGOL to do some stuff, which would require ages to port. This is why FORTRAN is still used in mathematics. Now, to my knowledge, there is only one way to draw everything you can think of using code in latex, and this is tikz. There aren't any alternatives that are universal as tikz is, so any other tool will only get you far up to some point</p>",
        "id": 191680214,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088458
    },
    {
        "content": "<p>So I guess if you always deal with one particular kind of graphics (e.g. string diagrams) you can use a tool (e.g. TikZit), but if you don't (like in my case I have to use string diagrams, petri nets, graphs, and often mix all of these in the same picture) then TiKz is the only way.</p>",
        "id": 191680290,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088520
    },
    {
        "content": "<p>yes, this is all in a hypothetical world where it <em>is</em> possible to create beautiful diagrams without writing TikZ manually (and predicated on the assumption that there could be better ways to draw diagrams than TikZ)</p>",
        "id": 191680356,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088541
    },
    {
        "content": "<p>we're definitely starting to see tools for drawing string diagrams, petri nets and commutative diagrams</p>",
        "id": 191680379,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088569
    },
    {
        "content": "<p>they're not there yet, but one day...</p>",
        "id": 191680390,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088574
    },
    {
        "content": "<p>We have tools indeed, but let me give a concrete example: <a href=\"https://arxiv.org/pdf/1805.05988.pdf\" target=\"_blank\" title=\"https://arxiv.org/pdf/1805.05988.pdf\">https://arxiv.org/pdf/1805.05988.pdf</a> page 137</p>",
        "id": 191680459,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088627
    },
    {
        "content": "<p>This is the kind of mixed picture I'm talking about, where tools don't help you much.</p>",
        "id": 191680518,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088645
    },
    {
        "content": "<p>I guess that the thing closer to what you want is not a tool, but a nice, decent set of high-level macros for tikz</p>",
        "id": 191680540,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088666
    },
    {
        "content": "<p>That's why I like the library Brendan was referring to. It goes in that direction, albeit being still difficult to use :)</p>",
        "id": 191680589,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088703
    },
    {
        "content": "<p>I guess it would be a nice compromise if learning to use tikz would be as easy as to learn, say, javascript</p>",
        "id": 191680613,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088725
    },
    {
        "content": "<p>I agree that it's likely that sort of diagram will never be supported in such an editor — but I believe most users won't need to draw diagrams like that</p>",
        "id": 191680711,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585088766
    },
    {
        "content": "<p>I hope for them they won't, typesetting it was quite hellish &gt;.&lt;</p>",
        "id": 191680737,
        "sender_full_name": "Fabrizio Genovese",
        "timestamp": 1585088790
    },
    {
        "content": "<p>I use Catlab for wiringdiagrams. it’s really nice. It uses Graphviz or Tikz as a backend to handle the low level rendering details. I’d like it also to make commutative diagrams, but we would need an automated layout algorithm for that.</p>",
        "id": 191692241,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1585098574
    },
    {
        "content": "<p>Thanks for mentioning that. If anyone knows about algorithms for laying out commutative diagrams, I am all ears!</p>\n<p>In general, I think that graph drawing is an interesting algorithmic area with mathematical aspects that are not always appreciated. For example, the problem of drawing a string diagram given its combinatorial description is closely related to the problem of finding an expression, in terms of composition, products, and so on, for it, but the latter problem is purely computer-algebraic.</p>",
        "id": 191693660,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585100256
    },
    {
        "content": "<p>Commutative diagrams have their own strongly geometric flavor. Often you want to draw them a certain way, e.g., the pentagon equation is customarily drawn as a regular pentagon. Is there a general way to know the \"right\" diagram shape from a set of equations, or is that problem hopelessly ill-posed?</p>",
        "id": 191694543,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585101389
    },
    {
        "content": "<p>Presumably, you'd want the symmetries of the diagram be symmetries of the drawing.</p>",
        "id": 191694746,
        "sender_full_name": "Chris Brown",
        "timestamp": 1585101668
    },
    {
        "content": "<p>Yes, I like that idea! I guess you would use the symmetries of the underlying <em>undirected</em> diagram to get the symmetries of the drawing. Could you then use the directionality of the diagram to orient the drawing?</p>\n<p>As a practical note, there is already very effective software to compute the symmetries groups of graphs, directed and undirected.</p>",
        "id": 191695085,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585102123
    },
    {
        "content": "<p>The undirected symmetries are spurious. I'd want to break them on purpose.</p>",
        "id": 191695528,
        "sender_full_name": "Chris Brown",
        "timestamp": 1585102894
    },
    {
        "content": "<p>I'm not sure. Consider the basic commutative square. The symmetry group of the undirected diagram is the symmetry group (including reflections) of a geometric square, the right shape. OTOH, the symmetry group of the directed diagram has only two elements (it is Z2). How do you get the right shape from that data? In general, it seems helpful to use the extra symmetries given by the undirected symmetry group.</p>",
        "id": 191696564,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585104373
    },
    {
        "content": "<p>By the combinatorial description you mean the underlying port graph right?</p>",
        "id": 191777840,
        "sender_full_name": "James Fairbanks",
        "timestamp": 1585155363
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275965\">@Evan Patterson</span> about algorithms for laying out commutative diagrams, that sounds like a very interesting problem! I have been thinking about layout algorithms for string diagrams for a while (which is a different problem, but perhaps things could be reused by Poincaré duality?). Our group (Quantum Group, Oxford) gathers quite a lot of experience in layout algorithms for string diagrams, via the tools we develop: <a href=\"https://homotopy.io/\" title=\"https://homotopy.io/\">https://homotopy.io/</a> does that in 2D and 3D, Quantomatic does force-directed layouts for compact closed categories if I remember correctly…<br>\nUnfortunately all this knowledge is rarely published - because it's really about computer graphics, not category theory, so it is hard to motivate people to write these things up. How could we promote this as a valid problem to be spending time on, and therefore, to publish about?</p>",
        "id": 191780053,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1585156208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span>: do you think layout of commutative diagrams would <em>not</em> be handled by general graph layout algorithms?</p>",
        "id": 191780409,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585156333
    },
    {
        "content": "<p>I would have imagined it could probably be done quite effectively with some additional constraints, like a bias towards directing the graph towards the bottom left</p>",
        "id": 191780451,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585156357
    },
    {
        "content": "<p>(though I imagine more sophisticated commutative diagrams, such as those involving 2-cells or similar would probably <em>not</em> be covered by the existing graph layout literature)</p>",
        "id": 191780521,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585156396
    },
    {
        "content": "<p>Sounds like a good idea! So those algorithms would be specifically to lay out planar graphs, or rather planar maps - graphs with a given embedding in the plane, right? Because you need to preserve the faces (the commuting squares), it's a bit different from a simple directed graph layout, I feel.</p>",
        "id": 191780789,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1585156505
    },
    {
        "content": "<p>Am amateur, occasional maths blogger, enthusiast, software architect and entrepreneur.</p>",
        "id": 191780829,
        "sender_full_name": "Refurio Anachro",
        "timestamp": 1585156523
    },
    {
        "content": "<p>I wonder if anyone has tried reusing existing algorithms for that - if the input format is convenient to work with, it could be a very useful thing to have, I guess.</p>",
        "id": 191781027,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1585156596
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span>: yes, you're right — specifically planar graphs</p>",
        "id": 191781033,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585156599
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275927\">James Fairbanks</span> <a href=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191777840\" title=\"#narrow/stream/229111-general/topic/Tools.20for.20diagrams/near/191777840\">said</a>:</p>\n<blockquote>\n<p>By the combinatorial description you mean the underlying port graph right?</p>\n</blockquote>\n<p>That's right. I was trying to be careful to distinguish between string diagrams as drawings versus string diagrams as graph-like things.</p>",
        "id": 191781967,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585157006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span>, admittedly I haven't tried drawing commutative diagrams with standard graph layout algorithms, say in Graphviz, but my guess is that won't produce the \"right\" shapes, like you say.</p>",
        "id": 191782256,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585157126
    },
    {
        "content": "<p>It is cool that you have a forced-directed layout for compact closed categories! I didn't know that. Does it work well?</p>",
        "id": 191782430,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585157193
    },
    {
        "content": "<p>Sorry for posting my intro to the worng thread. So new.</p>",
        "id": 191782780,
        "sender_full_name": "Refurio Anachro",
        "timestamp": 1585157343
    },
    {
        "content": "<p>In Catlab, we don't have that, but I did implement a totally different layout algorithm for string diagrams. It is adapted from ideas in the literature on series-parallel digraphs. Basically, you start with full diagram and you repeatedly apply certain moves, mainly series reduction, parallel reduction, and transitive reduction, until the diagram is reduced to a single box. If you keep track of the moves, you end up with a hierarchical decomposition of the diagram into composition, products, and identities.</p>",
        "id": 191783109,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585157481
    },
    {
        "content": "<p>@Evan Patterson it does a good job for this sort of diagrams if I remember correctly, but I am not actually sure what is the underlying algorithm - we can ask Alex Kissinger if he shows up. You can get a sense of what it does here: <a href=\"https://quantomatic.github.io/\" title=\"https://quantomatic.github.io/\">https://quantomatic.github.io/</a> (just search for \"relax\" in that page) (sorry, my turn to post in the wrong place)</p>",
        "id": 191783162,
        "sender_full_name": "Antonin Delpeuch",
        "timestamp": 1585157509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"276320\">@Antonin Delpeuch</span>: if you post in the wrong place, you can move your post by editing it and changing the topic to the one you intended to post in</p>",
        "id": 191783710,
        "sender_full_name": "Nathanael Arkor",
        "timestamp": 1585157698
    },
    {
        "content": "<p>To your point about publishing, the algorithm in Catlab has not been properly documented, nor have I proved that it actually works! In fact there are a lot of subtleties. At some point it would be a good project to carefully work all this out and record it. If anyone is interested in doing this, I'd be happy to work with them on it.</p>",
        "id": 191783930,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585157771
    },
    {
        "content": "<p>Perhaps one way to encourage such work is to give people familiar venues in which to publish it. My understanding is that the ACT conference is receptive to such things.</p>",
        "id": 191784362,
        "sender_full_name": "Evan Patterson",
        "timestamp": 1585157932
    },
    {
        "content": "<p>Proposal to move this thread into <a class=\"stream\" data-stream-id=\"229125\" href=\"/#narrow/stream/229125-software\">#software</a></p>",
        "id": 191786550,
        "sender_full_name": "Jules Hedges",
        "timestamp": 1585158813
    }
]