[
    {
        "content": "<p>Bit of a silly question, but does anyone have a name they prefer other than \"category\" for those categories that are more mathematical objects in their own right, rather than a way to organise all objects of a certain type? Things like finite \"shape\" categories, or preorders viewed as categories, or the delooping of a group/monoid.</p>\n<p>It seems that when you have a category <em>of</em> mathematical objects, the morphisms often generalise the notion of \"function\" or \"homomorphism\". When you have a category <em>as</em> a mathematical object itself, I think of morphisms generalising the notion of \"path\", like the fundamental groupoid. I just don't have a good name for \"graphs with paths\"...</p>",
        "id": 541490312,
        "sender_full_name": "Ruby Khondaker (she/her)",
        "timestamp": 1758814634
    },
    {
        "content": "<p>Aside: I don't love the name \"concrete category\" for categories that have a faithful Set valued functor.</p>\n<p>The implicit \"abstract category\" for everything else would end up applying to stuff I think of as very concrete.</p>\n<p>(I like your question)</p>",
        "id": 541492914,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1758815284
    },
    {
        "content": "<p>I've actually had a blog post planned for... I guess years now... about exactly this. Categories tend to come in three \"sizes\", which I've been personally calling</p>\n<ol>\n<li>combinatorial</li>\n<li>petit (small)</li>\n<li>gros (large)</li>\n</ol>\n<p>but I'm open to changing the name of (1), since there's other things already called combinatorial categories (I just don't know anything about them). Maybe I'll work on finally writing that post after I finish this grant application</p>",
        "id": 541499282,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758817117
    },
    {
        "content": "<p>The rough idea is that there's lots of (very small!) categories which you think of as a \"mathematical object in its own right\". Groups/monoids as 1-object categories, posets, lattices, finite diagram categories like the walking arrow (or more general quivers), and in enriched settings you can get other things like this too. Usually these categories are \"combinatorial\" in nature in that they're very small and presented by some controlled amount of data. These are the categories that you singled out</p>",
        "id": 541499768,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758817296
    },
    {
        "content": "<p>There's also middling categories, which aren't combinatorial, but they're <em>controlled</em> by a combinatorial amount of data. So for instance, you might have a presheaf topos on a combinatorial category. This is a big category with all sorts of limits and colimits, and is profitably thought of as a \"universe\" in which other objects live. But those objects are all controlled by whatever combinatorial category you're taking presheaves on. These are roughly the same size as \"petit topoi\", which is where I got the name.</p>",
        "id": 541500170,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758817437
    },
    {
        "content": "<p>Then there's the biggest categories, which might be controlled by a non-combinatorial amount of data! Think of something like sheaves on the \"big zariski site\" or QCoh(-) viewed as a stack. The \"gros topoi\" often fit into this category, which is where I got the name</p>",
        "id": 541500500,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758817547
    },
    {
        "content": "<p>I’m very much looking forward to that blog post! Not planning to scoop you or anything, don’t worry :P</p>",
        "id": 541500809,
        "sender_full_name": "Ruby Khondaker (she/her)",
        "timestamp": 1758817660
    },
    {
        "content": "<p>Obviously this isn't perfect -- the topological topos is presented by a small amount of data (essentially just the continuous endomorphisms of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo>∪</mo><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N} \\cup \\{\\infty\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">∞</span><span class=\"mclose\">}</span></span></span></span>) but its objects are profitably thought of as spaces in their own right, which <em>can be</em> a feature of petit topoi (identifying an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Sh</mtext><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Sh}(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Sh</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> with an etale space over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, for instance) but which is often a feature of \"gros topoi\" instead. In some sense I think this is because the topological topos is a kind of approximation to the condensed topos, which <em>is</em> properly a gros topos in the above sense (seeing as it's sheaves on the whole category of compact hausdorff spaces)</p>",
        "id": 541500982,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758817732
    },
    {
        "content": "<p>We're far from the first people to have made this observation, haha. I don't really think there's anything to scoop</p>",
        "id": 541501065,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758817767
    },
    {
        "content": "<p>Two distinctions that already exist, with names, are</p>\n<ol>\n<li><a href=\"https://ncatlab.org/nlab/show/small%20category\">[[small category]]</a> / <a href=\"https://ncatlab.org/nlab/show/large%20category\">[[large category]]</a> / \"very-large category\" (i.e. category in the third universe)</li>\n<li><a href=\"https://ncatlab.org/nlab/show/strict%20category\">[[strict category]]</a> / non-strict category (in HoTT, <a href=\"https://ncatlab.org/nlab/show/univalent%20category\">[[univalent category]]</a>)</li>\n</ol>\n<p>Ruby and Chris, can you explain how your proposed distinctions compare to these?</p>",
        "id": 541507689,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758820150
    },
    {
        "content": "<p>Well, for one the distinction I've noticed has nothing to do with universe level (at least as far as I know, I'm far from an expert). For instance, I would consider something like \"the poset of ordinals, viewed as a category\" to be combinatorial, even though it lives one universe level up.</p>\n<p>I think the distinction between strict and univalent is closer to what I have in mind, and I was actually planning to talk about that in the post</p>",
        "id": 541508291,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758820369
    },
    {
        "content": "<p>I think the distinction between ‘combinatorial’ and ‘petit’ that Chris is suggesting  is something like the distinction between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable and locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable / <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-accessible (for some regular cardinal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>).</p>",
        "id": 541515051,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1758822841
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278546\">Chris Grossack (she/they)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541508291\">said</a>:</p>\n<blockquote>\n<p>I think the distinction between strict and univalent is closer to what I have in mind, and I was actually planning to talk about that in the post</p>\n</blockquote>\n<p>Makes sense.  Is it the same?</p>",
        "id": 541522983,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758825516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460737\">Nathan Corbyn</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541515051\">said</a>:</p>\n<blockquote>\n<p>I think the distinction between ‘combinatorial’ and ‘petit’ that Chris is suggesting  is something like the distinction between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable and locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable / <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-accessible (for some regular cardinal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>).</p>\n</blockquote>\n<p>Note that in classical set-theoretic foundations, at least, since Cat is locally (finitely) presentable, every object of it is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable for some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>.  So \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable for some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>\" is really just the same as \"small\".</p>\n<p>Chris, would you consider a non-locally-presentable large univalent category, like topological spaces, to be 'petit' or 'gros'?</p>",
        "id": 541523170,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758825597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541523170\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"460737\">Nathan Corbyn</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541515051\">said</a>:</p>\n<blockquote>\n<p>I think the distinction between ‘combinatorial’ and ‘petit’ that Chris is suggesting  is something like the distinction between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable and locally <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable / <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-accessible (for some regular cardinal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>).</p>\n</blockquote>\n<p>Note that in classical set-theoretic foundations, at least, since Cat is locally (finitely) presentable, every object of it is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable for some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>.  So \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>-presentable for some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>\" is really just the same as \"small\".</p>\n</blockquote>\n<p>Sorry, I’m aware of this, I meant to suggest one use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> as a parameter one fixes  to draw a line</p>",
        "id": 541525273,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1758826343
    },
    {
        "content": "<p>Hmm, that seems pretty arbitrary.</p>",
        "id": 541528156,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758827349
    },
    {
        "content": "<blockquote>\n<p>It seems that when you have a category <em>of</em> mathematical objects, the morphisms often generalise the notion of \"function\" or \"homomorphism\". When you have a category <em>as</em> a mathematical object itself, I think of morphisms generalising the notion of \"path\", like the fundamental groupoid.</p>\n</blockquote>\n<p>I believe <span class=\"user-mention\" data-user-id=\"275932\">@Matteo Capucci (he/him)</span> proposed the distinction \"morphism\" / \"arrow\"; they stop being synonyms, and a \"morphism\" is for categories of your first kind, while \"arrow\" for the second kind. It makes <em>some</em> sense to me: in a single-object category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">BM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">BM</span></span></span></span>, for some monoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, I am more inclined to think of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mo><mover><mo><mo>→</mo></mo><mi>m</mi></mover></mo><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">* \\overset m\\to *</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9683em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9683em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span> as an abstract edge than a homomorphism; but then, at the end of the day, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∗</mo><mo><mover><mo><mo>→</mo></mo><mi>m</mi></mover></mo><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">* \\overset m\\to *</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9683em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9683em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span> is exactly equivalent, by Yoneda-Cayley, to the concrete function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>→</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M\\to M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> multiplying by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> on the left.</p>",
        "id": 541528551,
        "sender_full_name": "fosco",
        "timestamp": 1758827479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541492914\">said</a>:</p>\n<blockquote>\n<p>Aside: I don't love the name \"concrete category\" for categories that have a faithful Set valued functor.</p>\n<p>The implicit \"abstract category\" for everything else would end up applying to stuff I think of as very concrete.</p>\n<p>(I like your question)</p>\n</blockquote>\n<p>I like the word \"concrete\"! I also like concrete categories, and I think non-concrete ones deserve more attention... I'm curious to know where your gut-feeling comes from. What do you think, for example, of Freyd's (non)concreteness results?</p>",
        "id": 541528966,
        "sender_full_name": "fosco",
        "timestamp": 1758827664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541528156\">said</a>:</p>\n<blockquote>\n<p>Hmm, that seems pretty arbitrary.</p>\n</blockquote>\n<p>I agree but I’m not sure one can do much better while still retaining Chris’ assertion that a ‘petit’ category should be ‘controlled by a combinatorial amount of data’. The important question here, to me, is  ‘what constitutes a combinatorial amount of data?’. The answer, I think, depends on one’s tolerance for infinities in combinatorial presentations and this can be made precise by working up to a fixed regular cardinal.</p>",
        "id": 541529447,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1758827897
    },
    {
        "content": "<p>I don't know if this is not the distinction that Ruby is making in her original post, but I actually think it's pedagogically worse to name the non-technical distinction between like a finite poset as a category compared to vector spaces and linear maps as a category.  Technical distinctions like the ones mentioned are great obviously, but the attitude that some categories are combinatorial gizmos and others are universes of gizmos I think should remain strictly an attitude, and one that can change regarding the same category depending on the scenario. For instance think about this chain of categories: the symmetric group on n letters, the symmetric groupoid (just the coproduct of the finite symmetric groups),  FinBij of finite sets and bijections, FinSet of finite sets and functions, and Set. When did it switch attitudes? The answer can change if you're thinking about props for instance. One of the fundamental insights of category theory is to think of all these as the same sort of thing.</p>",
        "id": 541529905,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1758828105
    },
    {
        "content": "<p>That's a nice continuum.</p>",
        "id": 541530180,
        "sender_full_name": "Kevin Carlson",
        "timestamp": 1758828226
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> I can definitely see your point - maybe it would be better for me to just verbalise these different perspectives one can take on a category, rather than trying to separate them further with actual different words?</p>",
        "id": 541531197,
        "sender_full_name": "Ruby Khondaker (she/her)",
        "timestamp": 1758828600
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541522983\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"278546\">Chris Grossack (she/they)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541508291\">said</a>:</p>\n<blockquote>\n<p>I think the distinction between strict and univalent is closer to what I have in mind, and I was actually planning to talk about that in the post</p>\n</blockquote>\n<p>Makes sense.  Is it the same?</p>\n</blockquote>\n<p>I'm not sure... I haven't written the blog post yet, so I haven't been forced to think through precisely what I mean.</p>\n<p>Thinking about it now, though, there's actually a LOT of phenomena I have in mind, which will probably be difficult to put into a single framework.</p>\n<p>There's definitely a size distinction between \"big\" categories. Again, something like a petit topos vs a gros topos. Or between a \"petit stack\" as a geometric object (representing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mi mathvariant=\"normal\">/</mi><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">X/G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">G</span></span></span></span> by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>-equivariant sheaves on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>) versus a \"gros stack\" (something like QCoh as a stack itself)</p>\n<p>There's also obviously a size distinction between these \"combinatorial\" type categories, which are objects in their own right, and categories which are \"universes of discourse\" in which other objects live.</p>\n<p>One idea that I was planning to explore is how you can go \"up a size\" by taking some kind of (co)completion, and \"down a size\" by restricting to some kind of \"small objects\". So for instance, you can go back and forth between a Lex category (I don't know if I want that to be \"combinatorial\" or not yet) and the presentable category it presents. Or very concretely, from \"finite dimensional vector spaces\" to \"all vector spaces\" and back by ind-completion.</p>\n<p>I probably don't want to call \"finite dimensional vector spaces\" combinatorial, but I definitely want he category of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>-many objects with matrices as arrows to be combinatorial. This lends more support to the idea that \"combinatorial\" might just mean \"strict\".</p>\n<p>But it's tricky because I'm not sure that I want to put something like \"the theory of rings\", modeled by finitely presented <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span>-algebras and matrices of polynomials as maps, in the same \"size\" category as \"the walking arrow\"...</p>\n<p>Anyways, thanks for making me think harder about all this. Maybe I really <em>will</em> try to figure out my thoughts and write a blog post</p>",
        "id": 541533598,
        "sender_full_name": "Chris Grossack (she/they)",
        "timestamp": 1758829517
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275914\">Joe Moeller</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541529905\">said</a>:</p>\n<blockquote>\n<p>For instance think about this chain of categories: the symmetric group on n letters, the symmetric groupoid (just the coproduct of the finite symmetric groups),  FinBij of finite sets and bijections, FinSet of finite sets and functions, and Set. When did it switch attitudes?</p>\n</blockquote>\n<p>The heap paradox in category theory! Lovely!</p>",
        "id": 541534891,
        "sender_full_name": "fosco",
        "timestamp": 1758830037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275914\">@Joe Moeller</span> makes a very good point, which is that these things are hard to distinguish mathematically and the difference is often impalpable.<br>\nHowever, I believe this to be largely an indequacy of our definitions and our shared conception of the matter, rather than a fundamental issue of this distinction. Indeed, I personally find the '(directed) univalent category vs precategory' mathematical distinction quite convincing: do the morphisms you consider come from the underlying structure of your objects (<em>univalent categories</em>, or just 'categories'---think of what the word means!) or did you come up with them independently (<em>precategories</em> in UF terminology, I like calling them <em>operads</em> or <em>diagrams</em>).<br>\nNow surely one can take a univalent cat and 'forget the univalence' and remain with a 'purely algebraic' shadow, and vice versa one can realize a diagram is in fact reflecting an underlying structural notion. So IMO Joe's puzzle has no univocal resolution (except maybe for Set, which is univalent par excellence), and really depends how each object is conjured into consideration.</p>",
        "id": 541534910,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1758830044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278546\">Chris Grossack (she/they)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541499282\">said</a>:</p>\n<blockquote>\n<p>I'm open to changing the name of (1), since there's other things already called combinatorial categories (I just don't know anything about them).</p>\n</blockquote>\n<p>I don't particularly like \"combinatorial\" because of the clash and because there is nothing really related to \"combinatorics\" in the categories called like that. I think there is an attitude of category theorists to call \"combinatorial\" what is obtained from gluing together data that is explicit, concrete, and finite in some sense. But probably this doesn't capture in full the nature of a word we kind of absorbed without a precise definition... </p>\n<p>I would call them \"graphic\" or something similar. They tend to arise from graphs, after all. An extremely nice example of a \"middling\" category is the category of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mi mathvariant=\"bold\">e</mi><mi mathvariant=\"bold\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\bf Set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6861em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Set</span></span></span></span></span>-actions of the free monoid on two symbols. René Guitart calls it the category of \"autographic sets\", and has done a lot of work on it.</p>",
        "id": 541535782,
        "sender_full_name": "fosco",
        "timestamp": 1758830398
    },
    {
        "content": "<p>I'm excited we are having this conversation because I'd love category theory to take this distinction more seriously. It creeps up all the time, and silently make many things more difficult then they need be.<br>\nFor instance, univalent categories are <em>gaunt</em>, ie every iso is an equality, by definition---this is a form of structural identity principle if you will. This makes life <em>much</em> easier, of course, because now you can treat coherence as just equalities. (Of course then you move coherence issues to the equality types, hence the foundations, but that's a more appropriate place for them to live IMO).<br>\nIn general univalent categories have a much more geometric flavour, in the style of quasicategories, where structure 'happens to work'. Rather, diagrams need to be <em>made</em> to work, because there is no structural layer to borrow structure from. They have a much more algebraic flavour IMO.</p>",
        "id": 541535829,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1758830411
    },
    {
        "content": "<p>One very cool fact about the topos of autographs, besides its name, is that if you call the generators of the monoid \"s\" and \"t\", an autographic set is just a graph where the sets of edges and vertices coincide, and every edge has a source and a target, and every source has a source and a target, and every target has a source and a target... etc. Now, what is an edge who is its own source and target? It's some sort of monstrous self-similar widget like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>:</mo><mi>x</mi><mo>→</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x : x\\to x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>.</p>",
        "id": 541536451,
        "sender_full_name": "fosco",
        "timestamp": 1758830656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541535829\">said</a>:</p>\n<blockquote>\n<p>univalent categories are <em>gaunt</em></p>\n</blockquote>\n<p>I don't think that's a good way to phrase it.  The original meaning of \"gaunt category\" was in set-theoretic foundations, where \"every iso is an equality\" implies that there are no nontrivial automorphisms, and that's part of what the word \"gaunt\" is intended to suggest.  I don't think the adjective \"gaunt\" should be used in a univalent context where the same phrase \"every iso is an equality\" means something very different.</p>\n<p><em>Edit:</em> In particular, univalent categories are <em>not</em> significantly \"easier\" than non-univalent ones as far as coherence is concerned.  Isomorphisms are indeed equalities, but in a univalent theory there can be more than one equality between two things, so you still need to ask for coherence axioms about those equalities.</p>",
        "id": 541538375,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758831567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541534910\">said</a>:</p>\n<blockquote>\n<p><em>precategories</em> in UF terminology, I like calling them <em>operads</em> or <em>diagrams</em></p>\n</blockquote>\n<p>Aren't <a href=\"https://ncatlab.org/nlab/show/operads\">[[operads]]</a> and <a href=\"https://ncatlab.org/nlab/show/diagrams\">[[diagrams]]</a> both something very different?</p>",
        "id": 541538879,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758831800
    },
    {
        "content": "<p>In general, I want to second Joe's point: while this sort of conversation can be fun to have and even useful, I think it's dangerous to invest too much significance in distinctions that have no precise mathematical meaning.  This isn't just about category theory.  Supposedly Poincare said \"Mathematics is the art of giving the same name to different things\".  If we have several different kinds of things that can all be described by the formal definition of \"category\", that's <em>great</em>: it means that if I prove a theorem having one kind of category in mind, as long as my proof only uses the formal definition of category, it can be applied by someone else to another kind of category.</p>",
        "id": 541543702,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758833953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282822\">fosco</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541528966\">said</a>:</p>\n<blockquote>\n<p>I like the word \"concrete\"! I also like concrete categories, and I think non-concrete ones deserve more attention... I'm curious to know where your gut-feeling comes from. What do you think, for example, of Freyd's (non)concreteness results?</p>\n</blockquote>\n<p>I reversed my opinion on the terminology while answering this question.</p>\n<p>I left my pre-enlightened rant behind a spoiler if you're still curious. A lot of it is sorting out what I think about the words \"abstract\" and \"concrete\". After doing so, I now think \"category as a mathematical object\" vs \"categories of mathematical objects\" are much better phrases:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>-------------- The rant --------------</p>\n<p>My understanding was a concrete category can typically be interpreted as a category of \"Sets with structure\", having \"<em>something</em>morphisms\" preserving those structures.</p>\n<p>I had two (possibly misguided) misgivings with reserving \"concrete\" for this.</p>\n<p>Misgiving one - two rigmaroles which implement the same function, usually have additional structure on top of the function they calculate. For example, I'll sometimes think of the Klesli category of the Writer Monad over Set as assigning costs to evaluating functions. The obvious Set functor isn't faithful, because I'm trying to model more of something. Conversely Set is well behaved because of a careful distillation of key concepts.</p>\n<p>Misgiving two - It seems rude to insist a perfectly visualizable category isn't concrete until you assign a set to each of its objects.</p>\n<p>The fundamental groupoid, or the moore path category, of the torus, are eminently visualizable. Now, I think both of these are still concrete categories. Paths on a torus can map to endomorphisms of ℕ×ℕ, or to natural transformations between its homsets (taking the set of paths ending at <code>a</code> to the set of paths ending at <code>b</code> say); but, these aren't \"concretizing\" moves to my mind. They're ways of interpreting the topology of certain surfaces into functions.</p>\n<p>It's like concrete functors can sometimes be thought of as actions, which give a semantics to a \"syntax\". When understood this way, the \"syntax\" probably needs to already be \"concrete\" or \"small\" for this to be a good idea.</p>\n<p>The category of homotopies not being concrete is interesting, I think it's an example of \"misgiving one\".</p>\n<p>I want to make a prejudice of mine with this very explicit, I think of concrete math very historically. Hand drawn euclidean geometry, and hand calculated number theory, is where \"concrete math\" came from. Durer has geometric constructions to find intersections of fat tangent lines, etc.</p>\n<p>The development of the idea of a function, was a critical step in removing the need to draw.<br>\nFurther, it made incredible operations that couldn't be drawn possible - like the Dirichlet function. Modern axiom systems use functions everywhere. We live in our modern abstract paradise <em>because of Set</em>.</p>\n<p>I'm probably getting hung up on how words are used. If I'm being charitable, the intended read seems to be something like a category is \"abstract\" the way an \"abstract syntax tree\" is abstract. We say it's concrete when this can be given an interpretation in Set. Or maybe instead we mean a concrete category is <em>more concrete</em> than Set. Like the category of topological spaces. These aren't ridiculous conventions, actual syntax usually being defined as initial makes it \"more abstract\" in a very important sense.</p>\n<p>But a big part of the excitement of category theory for me, was the possibility that I could do high powered math by drawing pictures and diagrams. My emotional impulse and prejudice is to call those drawings, and not specific functors from them, \"concrete\".</p>\n<p>It's like I want something that's easy to manipulate in my hands and mind (\"concrete\") but as widely applicable as possible (\"abstract\").</p>\n<p>(If there are any misconceptions in the above, or a key angle I'm missing, I'm open to criticisms and comments)</p>\n</div></div>\n<p>Typing all of that brought to mind a nice way to think about this terminology.</p>\n<p>A drawing of nothing is \"abstract\" a drawing of a person is \"figurative\". So one could say a drawing becomes concrete when you can interpret it as a representation of something else. Which is analogous to a category having a \"faithful\" Set valued functor. The arrows stand for more then themselves, they represent something else.</p>",
        "id": 541564717,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1758847219
    },
    {
        "content": "<p>When we do category theory, don't we spend a lot of time studying categories like Set, Grp, Top, and so on?  And doesn't that make those categories \"mathematical objects\"?</p>\n<p>It's nothing new for a \"mathematical object\" to \"contain\" other mathematical objects.  Surely <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mn>2</mn></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.1328em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9072em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.8672em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.08em\" viewBox=\"0 0 400000 1080\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1328em;\"><span></span></span></span></span></span></span></span></span> is a mathematical object, but so is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> which contains it.</p>",
        "id": 541567667,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758849489
    },
    {
        "content": "<p>I think \"of mathematical objects\" vs \"as a mathematical object\" communicates the attitude towards how one thinks about a category better than the words \"concrete\" and \"abstract\".</p>\n<p>The first phrase makes me think \"sets with functions\" the second phrase makes me think \"dots with arrows\". Whereas I'm consistently confused by the terms \"concrete\" and \"abstract\" when they're not definitions - maybe that's just me.</p>\n<p>Yours and Joe's deeper point that mathematically they're all just categories makes immediate sense to me; I need to think more about it. I don't mean to refute that by commenting on what writing I think is easier to understand.</p>",
        "id": 541577445,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1758857866
    },
    {
        "content": "<p>I first learned this distinction from Reihl, but rereading what she said, maybe I misunderstood her point.</p>\n<p>Like you said, she notes an exact definition for a category is what makes it possible to treat categories like dots and arrows; and it's important you're always able to do so.</p>\n<blockquote>\n<p>Upon first acquaintance, the primary role played by the notion of a category might appear to be taxonomic: vector spaces and linear maps define one category, manifolds and smooth functions define another. But a category, as defined in 1.1.1, is also a mathematical object in its own right, and as with any mathematical definition, this one is worthy of further consideration. Applying a mathematician’s gaze to the definition of a category, the following observation quickly materializes. If we visualize the morphisms in a category as arrows pointing from their domain object to their codomain object, we might imagine simultaneously reversing the directions of every arrow.</p>\n</blockquote>",
        "id": 541586491,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1758864410
    },
    {
        "content": "<p>I guess to help myself I'll consider a non categorical example. It is of course useful to understand why ℝ³ is a vector space and to learn how to visualize linear algebra theorems in ℝ³, but the whole point of putting all that work into understanding this case is so you can use the same understanding for vector space structures on function spaces. Making a name for when a vector space \"is really\" a space of vectors is maybe missing the point.</p>",
        "id": 541589280,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1758866322
    },
    {
        "content": "<p>Right: a \"vector\" is by definition an element of some vector space, so every vector space is a space of vectors.  (-:</p>",
        "id": 541592967,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758868425
    },
    {
        "content": "<p>Although the precise strict/univalent distinction may also be close to what you have in mind.  The objects of a strict category form a set, so they are like dots or numbers.  The objects of a univalent category form a 1-type, so they are like sets or groups.</p>",
        "id": 541593177,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1758868495
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541538375\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541535829\">said</a>:</p>\n<blockquote>\n<p>univalent categories are <em>gaunt</em></p>\n</blockquote>\n<p>I don't think that's a good way to phrase it.  The original meaning of \"gaunt category\" was in set-theoretic foundations, where \"every iso is an equality\" implies that there are no nontrivial automorphisms, and that's part of what the word \"gaunt\" is intended to suggest.  I don't think the adjective \"gaunt\" should be used in a univalent context where the same phrase \"every iso is an equality\" means something very different.</p>\n</blockquote>\n<p>Yeah I agree, in fact I use univalent. But I believe it helps with intuition, it did for me at least.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541538375\">said</a>:</p>\n<blockquote>\n<p><em>Edit:</em> In particular, univalent categories are <em>not</em> significantly \"easier\" than non-univalent ones as far as coherence is concerned.  Isomorphisms are indeed equalities, but in a univalent theory there can be more than one equality between two things, so you still need to ask for coherence axioms about those equalities.</p>\n</blockquote>\n<p>Indeed</p>",
        "id": 541595349,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1758869465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276777\">Mike Shulman</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541538879\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"275932\">Matteo Capucci (he/him)</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541534910\">said</a>:</p>\n<blockquote>\n<p><em>precategories</em> in UF terminology, I like calling them <em>operads</em> or <em>diagrams</em></p>\n</blockquote>\n<p>Aren't <a href=\"https://ncatlab.org/nlab/show/operads\">[[operads]]</a> and <a href=\"https://ncatlab.org/nlab/show/diagrams\">[[diagrams]]</a> both something very different?</p>\n</blockquote>\n<p>I'm stretching terminology of course. (Colored) operads with only unary arrows are categories 'of arrows', and to me they have a clearer 'algebraic' character. Diagrams evoke the combinatorial flavor Chris also mentioned.</p>",
        "id": 541595630,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1758869626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277352\">Alex Kreitzberg</span> <a href=\"#narrow/channel/229111-community.3A-general/topic/Categories.20as.20Mathematical.20Objects/near/541492914\">said</a>:</p>\n<blockquote>\n<p>Aside: I don't love the name \"concrete category\" for categories that have a faithful Set valued functor.</p>\n</blockquote>\n<p>The name is heart-broken that you don't love it.   <span aria-label=\"broken heart\" class=\"emoji emoji-1f494\" role=\"img\" title=\"broken heart\">:broken_heart:</span> </p>\n<p>Seriously, it's worth noting that \"concreteness\" is best considered not a property but a <em>structure</em>: the same category can have several different (non-isomorphic) faithful functors to Set.    It's not very helpful to know merely that such a functor <em>exists</em> - that would be the <em>property</em> of concreteness, which you seem to be talking about.  It's much more useful to actually <em>choose</em> one.</p>\n<p><strong>Puzzle.</strong>  Show that the category <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><annotation encoding=\"application/x-tex\">\\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span> can be made into a concrete category in a nontrivial way, meaning that we can find a faithful functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>:</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">S</mi><mi mathvariant=\"sans-serif\">e</mi><mi mathvariant=\"sans-serif\">t</mi></mrow></mrow><annotation encoding=\"application/x-tex\">F : \\mathsf{Set} \\to \\mathsf{Set}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">Set</span></span></span></span></span> that is not naturally isomorphic to the identity functor.</p>",
        "id": 541616313,
        "sender_full_name": "John Baez",
        "timestamp": 1758876642
    },
    {
        "content": "<p>A lot of topics clicking for me, lets see if I can organize them briefly. </p>\n<p><em>Puzzle solution</em>: The List Monad makes <strong>Set</strong> into a concrete category in a nontrivial way. It's faithful because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\">≠</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) \\neq f(y)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> implies <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\">≠</mo><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[f]([x]) \\neq [f]([y])</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">]</span><span class=\"mopen\">([</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">])</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">]</span><span class=\"mopen\">([</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">])</span></span></span></span>. It's nontrivial because there is no natural transformation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>:</mo><mtext>List</mtext><mo>→</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha : \\text{List} \\rightarrow I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">List</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>∘</mo><mi>η</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\alpha \\circ \\eta = 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>. If there were, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span> would be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>head</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{head}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">head</span></span></span></span></span>, the map which returns the first element of a list, because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>head</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{head}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">head</span></span></span></span></span> is a retract of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>η</mi></mrow><annotation encoding=\"application/x-tex\">\\eta</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span></span></span></span>. However this fails, because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>head</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{head}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">head</span></span></span></span></span> is undefined on empty lists.</p>\n<p>Note, I see my analogy of concrete categories with \"figurative\" drawings as consistent with this. You can have one drawing with multiple valid interpretations:</p>\n<p><a href=\"/user_uploads/21317/bS3z0VlHiJKE6HEg-HJ0y0lo/Bunny_Duck.png\">Bunny_Duck.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/bS3z0VlHiJKE6HEg-HJ0y0lo/Bunny_Duck.png\" title=\"Bunny_Duck.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"855x747\" src=\"/user_uploads/thumbnail/21317/bS3z0VlHiJKE6HEg-HJ0y0lo/Bunny_Duck.png/840x560.webp\"></a></div><p>The lines in the top left of the image could be interpreted as either a mouth, or an ear.</p>\n<p>Thank you for the puzzle, it solidified your point well.</p>\n<p>I want to, very briefly, try againt at explaining my trouble with the words \"concrete\" and \"abstract\". I think it mostly has to do with \"size\".</p>\n<p>An \"even number\" could be any one element of an infinite set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mo>…</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{2, 4, 6, \\ldots\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mclose\">}</span></span></span></span>. A \"concrete\" example of an even number, like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>, is a single member of the set. So making our number \"concrete\" decreased the size of what we were considering.</p>\n<p>An \"abstract group\", or the walking arrow, are abstract like an \"abstract syntax tree\". You can instantiate them by giving a functor from them into <strong>Set</strong>, any Functor will do, but the <em>concrete</em> functors are important. These are generalizations of group actions, or models of theories.</p>\n<p>In this later case you could have a finite thing, the walking arrow, be mapped to something with potentially infinite data, an arbitrary function in <strong>Set</strong>. This didn't feel \"concrete\" to me at all, because a finite thing was changed into a possibly infinite thing.</p>\n<p>However, if you think of concrete categories as singling out a particular functor from a categories worth of choices, then the terminology makes sense. Now that I understand this aspect of concrete categories better, I'm happier.</p>\n<p>Note I'm not alone in confusing \"Abstract syntax\" with \"Concrete\". There was an entire abstract art movement with this confusion as its premise <a href=\"https://www.moma.org/collection/terms/concrete-art#:~:text=Similar%20to%20but%20distinct%20from,movement%20in%20the%20later%201930s.\">Concrete art</a></p>\n<p>\"Nothing is more concrete, more real, than a line, a color, a plane.\" - Theo van Doesburg</p>\n<p>I'm excited to think more about the strict/univalent distinction, and maybe that's more on topic.</p>\n<p>A category of paths between points on a plane is generally strict, because we think of any two points as being equal in at most one way right? If I internalize categories in Top, I could even imagine these points and paths having topologies.</p>\n<p>But this way of using topology <em>is distinct from</em> working with univalent categories. The objects of a univalent category \"can be equal in more than one way\", and so form a groupoid which has the topological structure of a homotopy 1-type. A prototypical example of this is <strong>Set</strong>. So, although the objects don't superficially form a simple space like a donut on a first impression, the data is nevertheless homotopical.</p>\n<p>I think there's a way I want to think about categories as spaces, that I'm getting confused with a really common way to think about categories as spaces. Thank you for talking about these definitions, I think I understand their relationships and properties much better.</p>",
        "id": 541706173,
        "sender_full_name": "Alex Kreitzberg",
        "timestamp": 1758903864
    }
]