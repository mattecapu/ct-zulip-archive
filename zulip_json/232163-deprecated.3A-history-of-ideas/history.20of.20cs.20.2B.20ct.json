[
    {
        "content": "<p>CT was obviously developed in the context of algebraic topology. When did people start to realize that it could be used to think about computation?</p>",
        "id": 193209859,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1586275205
    },
    {
        "content": "<p>I don't have a definitive answer, but the relationship between computation and topology goes pretty far back. Like, Scott's \"Continuous Lattices\" is already talking about topological models of the lambda calculus in 1972, it seems.</p>",
        "id": 193212065,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586276056
    },
    {
        "content": "<p>I would guess the topological connection leads to the categorical one.</p>",
        "id": 193212571,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586276249
    },
    {
        "content": "<p>I quite liked this recent survey paper <a href=\"https://arxiv.org/abs/2001.05778\" title=\"https://arxiv.org/abs/2001.05778\">https://arxiv.org/abs/2001.05778</a></p>",
        "id": 193222045,
        "sender_full_name": "Chad Nester",
        "timestamp": 1586280733
    },
    {
        "content": "<p>It doesn't include absolutely everything, but then nothing can.</p>",
        "id": 193222124,
        "sender_full_name": "Chad Nester",
        "timestamp": 1586280773
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276114\">Chad Nester</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193222045\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193222045\">said</a>:</p>\n<blockquote>\n<p>I quite liked this recent survey paper <a href=\"https://arxiv.org/abs/2001.05778\" title=\"https://arxiv.org/abs/2001.05778\">https://arxiv.org/abs/2001.05778</a></p>\n</blockquote>\n<p>That's a nice history. I'm not sure why I didn't think of Lambek, who made the connection between logic and category theory in three volumes of <em>Deductive Systems and Categories</em>, starting from 1968.</p>",
        "id": 193223480,
        "sender_full_name": "(=_=)",
        "timestamp": 1586281537
    },
    {
        "content": "<p>The idea, according to Hofstra and Scott, was to use proof theory to reformulate the problem solved by the coherence theorems in category theory, and then apply cut-elimination.</p>",
        "id": 193224179,
        "sender_full_name": "(=_=)",
        "timestamp": 1586281881
    },
    {
        "content": "<p>Oh yeah, I suppose it could have been via logic, too. The correspondence between programming and logic goes back way further.</p>",
        "id": 193227465,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586283605
    },
    {
        "content": "<p>Essentially to the beginning of the notions we use for talking about computing; they grew out of logic.</p>",
        "id": 193227585,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586283666
    },
    {
        "content": "<p>Or it could have been topos theory, which came out of Grothendieck's application of category theory to reformulate algebraic geometry. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 193227657,
        "sender_full_name": "(=_=)",
        "timestamp": 1586283693
    },
    {
        "content": "<p>It might be hard to tell, if people were talking about categories and logic in 1968. It sounds like it was all happening around the same time.</p>",
        "id": 193228127,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586283906
    },
    {
        "content": "<p>According to Wadler's 1992 paper on <em>The Essence of Functional Programming</em>, John Reynolds was \"the first to apply category theory to  language design\", with his 1980 paper on using category theory for \"implicit conversion\" (aka type coercion). <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>\n<p>Who knew CT could be used for evil?</p>",
        "id": 193228261,
        "sender_full_name": "(=_=)",
        "timestamp": 1586283968
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"277270\">Dan Doel</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193228127\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193228127\">said</a>:</p>\n<blockquote>\n<p>It might be hard to tell, if people were talking about categories and logic in 1968.</p>\n</blockquote>\n<p>Does 1969 count?</p>\n<ul>\n<li>Bill Lawvere, <a href=\"https://ncatlab.org/nlab/show/Adjointness+in+Foundations\" title=\"https://ncatlab.org/nlab/show/Adjointness+in+Foundations\">Adjointness in foundations</a>, <em>Dialectica</em> <strong>23</strong> (1969), 281-296.</li>\n</ul>\n<p>This is where he showed that quantifiers were adjoints to substitution.</p>",
        "id": 193228446,
        "sender_full_name": "John Baez",
        "timestamp": 1586284081
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention silent\" data-user-id=\"276642\">Max New</span>, my first thumbs down... <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 193228828,
        "sender_full_name": "(=_=)",
        "timestamp": 1586284268
    },
    {
        "content": "<p>Joseph Goguen was a big early proponent of category theory applications to programming languages, he wrote \"A Categorical Manifesto\" in 1991. This paper that he collaborated on is the one that's probably most famous: <a href=\"https://dl.acm.org/doi/10.1145/321992.321997\" title=\"https://dl.acm.org/doi/10.1145/321992.321997\">https://dl.acm.org/doi/10.1145/321992.321997</a></p>",
        "id": 193228848,
        "sender_full_name": "Max New",
        "timestamp": 1586284277
    },
    {
        "content": "<p>It's a ridiculous assertion that 1980 was the first time that category theory was applied to programming language design</p>",
        "id": 193228903,
        "sender_full_name": "Max New",
        "timestamp": 1586284308
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276642\">Max New</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193228903\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193228903\">said</a>:</p>\n<blockquote>\n<p>It's a ridiculous assertion that 1980 was the first time that category theory was applied to programming language design</p>\n</blockquote>\n<p>Take it up with Philip Wadler. I'm quoting his paper. Clearly he didn't seem to be aware of Goguen's work.</p>",
        "id": 193229016,
        "sender_full_name": "(=_=)",
        "timestamp": 1586284355
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span>  I mean it might be hard to say whether the logic connection or the topology connection had more influence on applying categories to computer science, since the dates when people would be thinking about them are so close.</p>",
        "id": 193229039,
        "sender_full_name": "Dan Doel",
        "timestamp": 1586284370
    },
    {
        "content": "<p>If you read Dana Scott's semantics work from the 70s, he explicitly says he was communicating with Lawvere and by 1980 he wrote a paper that fully embraces the categorical approach</p>",
        "id": 193229155,
        "sender_full_name": "Max New",
        "timestamp": 1586284439
    },
    {
        "content": "<p>\"Relating Theories of the Lambda-calculus\"</p>",
        "id": 193229451,
        "sender_full_name": "Max New",
        "timestamp": 1586284576
    },
    {
        "content": "<p>It looks like it's fair to say that <em>Categories for the Working Mathematician</em> seemed to have really kicked things off when it came out in 1971, although I'm wondering now how much influence universal algebra might have had on computation.</p>",
        "id": 193230082,
        "sender_full_name": "(=_=)",
        "timestamp": 1586284899
    },
    {
        "content": "<p>If you read that Goguen-Thatcher-Wagner-Wright 1977 paper I linked above they go over some CS history and it looks like universal algebra was definitely somewhat popular/influential</p>",
        "id": 193230495,
        "sender_full_name": "Max New",
        "timestamp": 1586285096
    },
    {
        "content": "<p>Here's a link to that paper by Scott I found it in the library a few years ago and scanned it: <a href=\"http://maxsnew.com/docs/scott80.pdf\" title=\"http://maxsnew.com/docs/scott80.pdf\">http://maxsnew.com/docs/scott80.pdf</a></p>",
        "id": 193241954,
        "sender_full_name": "Max New",
        "timestamp": 1586290664
    },
    {
        "content": "<p>Also relevant, Lambek's work on coherence theorems for categories. He reduced it to proof theory, and so uncovered the relationship between the two. In the 70s he realized the close connection between lambda calculi and CCC. The rest is history.<br>\nBtw I think he was the first on this path. Here's the first paper of his on this theme:</p>\n<ul>\n<li>J. Lambek. Deductive systems and categories I. J. Math. Syst. Theory, 1968</li>\n</ul>",
        "id": 193248881,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586293831
    },
    {
        "content": "<p>(This is explored in length in \"Aspects of categorical recursion theory\", by Hofstra and Scott)</p>",
        "id": 193249019,
        "sender_full_name": "Matteo Capucci (he/him)",
        "timestamp": 1586293877
    },
    {
        "content": "<p>The Deductive Systems and Categories papers are hugely important in my opinion. I would prefer to say, instead of reducing coherence theorems to proof theory, that he adapted and expanded proof theory to the proof-relevant context of closed categories. At any rate, I found his account much more intuitive and easier to understand than Kelly and Mac Lane's Coherence in Closed Categories (which may have been written partly to explain what Lambek was up to).</p>",
        "id": 193250898,
        "sender_full_name": "Todd Trimble",
        "timestamp": 1586294952
    },
    {
        "content": "<p>A nice little historical perspective on the development of coalgebras (or CT in general) in CS can be found in page 4 of Jacobs' \"Introduction to Coalgebra\", which is available <a href=\"http://www.cs.ru.nl/B.Jacobs/CLG/JacobsCoalgebraIntro.pdf\" title=\"http://www.cs.ru.nl/B.Jacobs/CLG/JacobsCoalgebraIntro.pdf\">online</a>. <span class=\"user-mention\" data-user-id=\"276642\">@Max New</span>  Goguen indeed looks like he played an instrumental role in initial developments. Aczel's non-well founded sets was also seminal, although it probably can't be considered CT. And a question for people who know better: can Dana Scott's work on domain theory be considered categorical?</p>",
        "id": 193255747,
        "sender_full_name": "Stelios Tsampas",
        "timestamp": 1586298247
    },
    {
        "content": "<p>Close to the ADJ group, there was Calvin Elgot, who wrote on algebraic theories and program schemes, including a IBM report in 1970.  He also wrote a book on \"recursiveness\" with Eilenberg.</p>",
        "id": 193257901,
        "sender_full_name": "Exequiel Rivas",
        "timestamp": 1586299950
    },
    {
        "content": "<p>Scott's work was not originally explicitly category theoretic but domain theory eventually became tied very explicitly to category theory with Wand's paper Fixed point solutions in order enriched categories and the more famous follow-up Smyrh-Plotkin's \"category theoretic solutions of recursive domain equations\"</p>",
        "id": 193264924,
        "sender_full_name": "Max New",
        "timestamp": 1586305869
    },
    {
        "content": "<p>Smyth*</p>",
        "id": 193264933,
        "sender_full_name": "Max New",
        "timestamp": 1586305881
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276317\">Exequiel Rivas</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193257901\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193257901\">said</a>:</p>\n<blockquote>\n<p>Close to the ADJ group, there was Calvin Elgot, who wrote on algebraic theories and program schemes, including a IBM report in 1970.  He also wrote a book on \"recursiveness\" with Eilenberg.</p>\n</blockquote>\n<p>I stumbled upon the Eilenberg-Elgot book and Michael Arbib's <a href=\"https://projecteuclid.org/euclid.bams/1183532928\" title=\"https://projecteuclid.org/euclid.bams/1183532928\">review</a>. Maybe I've only just skimmed it, but he came across as not being a fan of the book. Here's how he conclude the review:</p>\n<blockquote>\n<p>\"The motivation that might allow the computer theorist to see better how to make the transition back and forth between programs and algebraic theory is completely lacking. But the algebra is<br>\nelegant and polished, and one hopes that one day Eilenberg and Elgot will give us the book promised in their preface.\"</p>\n</blockquote>\n<p>Was it really that bad?</p>",
        "id": 193272783,
        "sender_full_name": "(=_=)",
        "timestamp": 1586317172
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275900\">Stelios Tsampas</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193255747\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193255747\">said</a>:</p>\n<blockquote>\n<p>A nice little historical perspective on the development of coalgebras (or CT in general) in CS can be found in page 4 of Jacobs' \"Introduction to Coalgebra\", which is available <a href=\"http://www.cs.ru.nl/B.Jacobs/CLG/JacobsCoalgebraIntro.pdf\" title=\"http://www.cs.ru.nl/B.Jacobs/CLG/JacobsCoalgebraIntro.pdf\">online</a>. </p>\n</blockquote>\n<p>Thanks for the pointer.</p>\n<blockquote>\n<p>Goguen indeed looks like he played an instrumental role in initial developments.</p>\n</blockquote>\n<p>So did Arbib, which makes that review of Eilenberg-Elgot very interesting.</p>\n<blockquote>\n<p>Aczel's non-well founded sets was also seminal, although it probably can't be considered CT. </p>\n</blockquote>\n<p>Hmm...:</p>\n<blockquote>\n<p>\"Aczel formed a next crucial step with his special set theory that allows infinitely descending ∈-chains, because it used coalgebraic terminology right from the beginning. The development of this theory was motivated by the desire to provide meaning to concurrent processes with potentially infinite behaviour in Milner’s calculus of communicating systems (CCS).\"</p>\n</blockquote>",
        "id": 193273347,
        "sender_full_name": "(=_=)",
        "timestamp": 1586318015
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275914\">Joe Moeller</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193209859\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193209859\">said</a>:</p>\n<blockquote>\n<p>CT was obviously developed in the context of algebraic topology. When did people start to realize that it could be used to think about computation?</p>\n</blockquote>\n<p>I'll have to find the source, perhaps Maclane's bio, but he saw connections to computation pretty much right away.</p>",
        "id": 193784281,
        "sender_full_name": "Harley Eades III",
        "timestamp": 1586792272
    },
    {
        "content": "<p>We shouldn't forget that Eilenberg quit working on algebraic topology and wrote his enormous 451-page book <em><a href=\"https://www.amazon.com/Automata-languages-machines-Applied-Mathematics/dp/0122340019\" title=\"https://www.amazon.com/Automata-languages-machines-Applied-Mathematics/dp/0122340019\">Automata, Languages and Machines</a></em> using category theory.  It came out in 1974.   From what I hear, everyone thought he was nuts for quitting algebraic topology.</p>",
        "id": 193792685,
        "sender_full_name": "John Baez",
        "timestamp": 1586796753
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276317\">Exequiel Rivas</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193257901\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193257901\">said</a>:</p>\n<blockquote>\n<p>Close to the ADJ group, there was Calvin Elgot, who wrote on algebraic theories and program schemes, including a IBM report in 1970.  He also wrote a book on \"recursiveness\" with Eilenberg.</p>\n</blockquote>",
        "id": 193793683,
        "sender_full_name": "(=_=)",
        "timestamp": 1586797354
    },
    {
        "content": "<p>Eilenberg and Elgot wrote <em>Recursiveness</em> in 1970. Michael Arbib <a href=\"https://www.ams.org/journals/bull/1971-77-04/S0002-9904-1971-12735-0/S0002-9904-1971-12735-0.pdf\" title=\"https://www.ams.org/journals/bull/1971-77-04/S0002-9904-1971-12735-0/S0002-9904-1971-12735-0.pdf\">reviewed it</a> and concluded:</p>\n<blockquote>\n<p>\"The motivation that might allow the computer theorist to see better how to make the transition back and forth between programs and algebraic theory is completely lacking. But the algebra is elegant and polished, and one hopes that one day Eilenberg and Elgot will give us the book promised in their preface.\"</p>\n</blockquote>\n<p>He didn't sound all that impressed, but he built on their work.</p>",
        "id": 193793908,
        "sender_full_name": "(=_=)",
        "timestamp": 1586797472
    },
    {
        "content": "<p>\"Motivation that might allow computer scientists to see better...\" - sounds like he was hoping for Eilenberg and Elgot to write a book for <em>people</em>, rather than for god.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 193805329,
        "sender_full_name": "John Baez",
        "timestamp": 1586803441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193805329\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193805329\">said</a>:</p>\n<blockquote>\n<p>\"Motivation that might allow computer scientists to see better...\" - sounds like he was hoping for Eilenberg and Elgot to write a book for <em>people</em>, rather than for god.  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>\n</blockquote>\n<p>I think Arbib ended up rolling his sleeves and writing some of that book himself. Quite a bit of his work seems to build upon what I think would have been in Eilenberg and Elgot.</p>",
        "id": 193845423,
        "sender_full_name": "(=_=)",
        "timestamp": 1586832187
    },
    {
        "content": "<p>One of his books was <em><a href=\"https://link.springer.com/book/10.1007/978-1-4612-4962-7\" title=\"https://link.springer.com/book/10.1007/978-1-4612-4962-7\">Algebraic Approaches to Program Semantics</a></em>, written in 1986 with Ernest Manes. Gambino and Kock pointed out in <em>Polynomial functors and polynomial monads</em> that polynomial functors in program semantics first appeared there.</p>",
        "id": 193845904,
        "sender_full_name": "(=_=)",
        "timestamp": 1586832926
    },
    {
        "content": "<p>Arbib has also written a lot on control theory and computational neuroscience. I've seen a few computational neuroscientists on here, so that's exciting.</p>",
        "id": 193846006,
        "sender_full_name": "(=_=)",
        "timestamp": 1586833124
    },
    {
        "content": "<p>Is there an interest for a neuroscience stream? I would really like to discuss some ideas on neuroscience, cognitive science and category theory.</p>",
        "id": 193886325,
        "sender_full_name": "Johannes Drever",
        "timestamp": 1586865960
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"275946\">@Johannes Drever</span>  <strong>Neurodynamics of Personality</strong> is a great book applying systems science to the brain.</p>",
        "id": 193906846,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586874967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275946\">Johannes Drever</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193886325\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193886325\">said</a>:</p>\n<blockquote>\n<p>Is there an interest for a neuroscience stream? I would really like to discuss some ideas on neuroscience, cognitive science and category theory.</p>\n</blockquote>\n<p>Sure, I'm all for it. <span class=\"user-mention silent\" data-user-id=\"275956\">Duncan Mortimer</span>  and <span class=\"user-mention silent\" data-user-id=\"277554\">Toby Smithe</span> have also indicated their interest in neuroscience in their introductions.</p>",
        "id": 193912085,
        "sender_full_name": "(=_=)",
        "timestamp": 1586877029
    },
    {
        "content": "<p>Howdy <span class=\"user-mention\" data-user-id=\"276424\">@Rongmin Lu</span>  <span class=\"user-mention\" data-user-id=\"275946\">@Johannes Drever</span> <span class=\"user-mention\" data-user-id=\"275956\">@Duncan Mortimer</span> <span class=\"user-mention\" data-user-id=\"277554\">@Toby Smithe</span>  do we have anything more than interest in neuroscience? I think the idea of category theory and neuroscience is cool, but I'd love to see some results first before I get too attached.</p>",
        "id": 193925037,
        "sender_full_name": "Daniel Geisler",
        "timestamp": 1586882553
    },
    {
        "content": "<p>I am of course in favour of discussions although I don't have concrete results to present yet. I probably also won't be able to dedicate as much time as I would like to this forum for a while. That being said, I have a number of ideas &amp; projects I'm working on (as alluded to in my intro) and I intend to discuss them here (and elsewhere) with you all before long. So if a neuro stream appears, I'll pay attention and do my best to contribute when I can.</p>",
        "id": 193927879,
        "sender_full_name": "Toby Smithe",
        "timestamp": 1586883929
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"275946\">@Johannes Drever</span>, for creating the <a class=\"stream\" data-stream-id=\"233925\" href=\"/#narrow/stream/233925-neuroscience\">#neuroscience</a> stream.</p>",
        "id": 193983345,
        "sender_full_name": "(=_=)",
        "timestamp": 1586924151
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> [said](<a href=\"#narrow/stream/232163-learning.3A-\" title=\"#narrow/stream/232163-learning.3A-\">https://categorytheory.zulipchat.com/#narrow/stream/232163-learning.3A-</a><br>\n```That's a nice history. I'm not sure why I didn't think of Lambek, who made the connection between logic and category theory in three volumes of <em>Deductive Systems and Categories</em>, starting from 1968.</p>\n<div class=\"codehilite\"><pre><span></span>Well, the Lambek calculus first appeared in 1958 and it was already connecting algebra and (the  computation of) language.\n</pre></div>",
        "id": 194557218,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1587233850
    },
    {
        "content": "<p>Wrt mutual influences between Scott and Lawvere: The 1971 paper by Dana Scott \"Continuous Lattices\" credits Lawvere for suggesting that the limit construction of  the solution of the famous domain equation (see Thm 4.4 and the proof on page 31) is, in modern parlance, the initial algebra and final coalgebra of an endofunctor.</p>",
        "id": 194883393,
        "sender_full_name": "Alexander Kurz",
        "timestamp": 1587523537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/194557218\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/194557218\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> [said](<a href=\"#narrow/stream/232163-learning.3A-\" title=\"#narrow/stream/232163-learning.3A-\">https://categorytheory.zulipchat.com/#narrow/stream/232163-learning.3A-</a><br>\n```That's a nice history. I'm not sure why I didn't think of Lambek, who made the connection between logic and category theory in three volumes of <em>Deductive Systems and Categories</em>, starting from 1968.</p>\n<div class=\"codehilite\"><pre><span></span>Well, the Lambek calculus first appeared in 1958 and it was already connecting algebra and (the  computation of) language.\n`````\n\n=============================\n(I don&#39;t know how to add this &quot;outside&quot; the quote from Valeria!)\n\nFWIW: Lambek and Lawvere were both in Z\\&#39;urich in 1965-66, as were Mike Barr and Marta Bunge -- Mike told me that that was the year that reoriented Jim&#39;s research to category theory (and was probably what prompted Jim to bring both Mike and Marta to McGill soon after).\n</pre></div>\n\n\n</blockquote>",
        "id": 195479390,
        "sender_full_name": "Robert Seely",
        "timestamp": 1588024026
    },
    {
        "content": "<p>To quote things, you start with three left quotes and then write </p>\n<p>quote</p>\n<p>(with no intervening space).</p>",
        "id": 195485723,
        "sender_full_name": "John Baez",
        "timestamp": 1588028728
    },
    {
        "content": "<p>You end with three left quotes.</p>",
        "id": 195485736,
        "sender_full_name": "John Baez",
        "timestamp": 1588028742
    },
    {
        "content": "<p>Or just press the <code>&gt;</code> key when the message you want to reply to has the focus (blue rectangle).</p>",
        "id": 195487421,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588030316
    },
    {
        "content": "<p>i just checked the u of oregon library (we don't have access to the summit system during the covid-19 shelter-in-place order) and none of the three volumes are shown (author/title search). does anyone [here] have access?</p>",
        "id": 195489777,
        "sender_full_name": "eric brunner",
        "timestamp": 1588032586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276755\">Robert Seely</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/195479390\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/195479390\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/194557218\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/194557218\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193223480\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193223480\">said</a>:</p>\n<blockquote>\n<p>That's a nice history. I'm not sure why I didn't think of Lambek, who made the connection between logic and category theory in three volumes of <em>Deductive Systems and Categories</em>, starting from 1968.</p>\n</blockquote>\n<p>Well, the Lambek calculus first appeared in 1958 and it was already connecting algebra and (the  computation of) language.</p>\n</blockquote>\n<p>=============================<br>\n(I don't know how to add this \"outside\" the quote from Valeria!)</p>\n<p>FWIW: Lambek and Lawvere were both in Z\\'urich in 1965-66, as were Mike Barr and Marta Bunge -- Mike told me that that was the year that reoriented Jim's research to category theory (and was probably what prompted Jim to bring both Mike and Marta to McGill soon after).</p>\n</blockquote>\n<p>That's interesting! Formatting fixed as well.</p>",
        "id": 195490021,
        "sender_full_name": "(=_=)",
        "timestamp": 1588032831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/195485723\" title=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/195485723\">said</a>:</p>\n<blockquote>\n<p>To quote things, you start with three left quotes and then write </p>\n<p>quote</p>\n<p>(with no intervening space).</p>\n</blockquote>\n<p>Zulip has an autocomplete feature that interferes with this. When the cursor encounters three left quotes preceding it, the autocomplete pops up a dialog for you to fill in the \"quote\" bit, but it also eats up some text if you let it autocomplete for you under certain circumstances. So that happened when Valeria quoted my comment, and then that got quoted as well, compounding the syntax error.</p>",
        "id": 195490201,
        "sender_full_name": "(=_=)",
        "timestamp": 1588033008
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/193792685\">said</a>:</p>\n<blockquote>\n<p>We shouldn't forget that Eilenberg quit working on algebraic topology and wrote his enormous 451-page book <em><a href=\"https://www.amazon.com/Automata-languages-machines-Applied-Mathematics/dp/0122340019\">Automata, Languages and Machines</a></em> using category theory.  It came out in 1974.   From what I hear, everyone thought he was nuts for quitting algebraic topology.</p>\n</blockquote>\n<p>I spent some time trying to figure out what shifted Eilenberg, not just to change the field, but to change it from a place where he built a mountain, to this work which is basically a misunderstanding of what computation is about. Imagining that computation will benefit from wrestling state machines into algebraic signatures. So now if you look around you, Eilenberg's simplicial this and singular that is in everything (including things that he wouldn't dreamt of) while the whole work on automata is of no consequence whatsoever. He didn't notice complexity, he didn't notice programming, he didn't notice algorithmic information. There were lots of exciting math threads, but he wasn't looking for them.   I know that he didn't like how things were getting \"complicated for their own sake\". Is that why he went into an area where he thought he would find simplicity?</p>",
        "id": 197910625,
        "sender_full_name": "dusko",
        "timestamp": 1589794620
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/197910625\">said</a>:</p>\n<blockquote>\n<p>I spent some time trying to figure out what shifted Eilenberg, not just to change the field, but to change it from a place where he built a mountain, to this work which is basically a misunderstanding of what computation is about. Imagining that computation will benefit from wrestling state machines into algebraic signatures. So now if you look around you, Eilenberg's simplicial this and singular that is in everything (including things that he wouldn't dreamt of) while the whole work on automata is of no consequence whatsoever. </p>\n</blockquote>\n<p>For a work of no consequence, Eilenberg's 1974 book on <em>Automata, Languages and Machines</em> sure got a whole truckload of citations.</p>\n<p><a href=\"/user_uploads/21317/lc7o-CG1xHWF69LZbT86Zh_z/noconseq.png\">The book of no consequence</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/lc7o-CG1xHWF69LZbT86Zh_z/noconseq.png\" title=\"The book of no consequence\"><img src=\"/user_uploads/21317/lc7o-CG1xHWF69LZbT86Zh_z/noconseq.png\"></a></div>",
        "id": 197941106,
        "sender_full_name": "(=_=)",
        "timestamp": 1589811539
    },
    {
        "content": "<p>Anyway, thanks for leading me to find out that Eilenberg invented the <a href=\"https://en.wikipedia.org/wiki/X-machine\">X-machine</a>, which has led to applications in software specification and <a href=\"https://en.wikipedia.org/wiki/X-Machine_Testing\">testing</a>.</p>\n<p>The book (1976 version?) also gave a corrected version of a proof of Zeiger of the holonomy decomposition in <a href=\"https://en.wikipedia.org/wiki/Krohn–Rhodes_theory\">Krohn-Rhodes theory</a>, the latter of which established a link between finite automata and finite semigroups. </p>\n<p>Not bad for a book of no consequence.</p>",
        "id": 197942090,
        "sender_full_name": "(=_=)",
        "timestamp": 1589812001
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"294557\">@dusko</span> - Did you succeed in finding any historical information that would shed light on why Eilenberg quit working on algebraic topology and started work on finite state machines?</p>",
        "id": 197996679,
        "sender_full_name": "John Baez",
        "timestamp": 1589836607
    },
    {
        "content": "<p>I'm no Eilenberg, but I understand the impulse to get away from a subject that lots of smart people are piling on to and switching to something few people are thinking about.  That's why I quit working on n-categories and started thinking about applications of categories to electrical circuits and chemistry.</p>",
        "id": 197996930,
        "sender_full_name": "John Baez",
        "timestamp": 1589836772
    },
    {
        "content": "<p>Eilenberg was also an expert on Indian art and devoted more and more time to collecting that in his later years, I've heard.</p>",
        "id": 197997235,
        "sender_full_name": "John Baez",
        "timestamp": 1589836960
    },
    {
        "content": "<p>Anyway, if you're working away on some obscure corner of mathematics and all of a sudden it catches on, it can be really annoying.  You can either work harder and harder to stay ahead of the pack, or sink from being a pioneer to being just one of the crowd, or become an\"organizer\" who runs conferences, has grad students, and serves as a kind of social hub.... or you can <em>get out</em>.</p>",
        "id": 197998585,
        "sender_full_name": "John Baez",
        "timestamp": 1589837773
    },
    {
        "content": "<p>I feel some people work to make the field a hot topic. Do you think some of them delude themselves would actually be disappointed if things would go \"well\"? <br>\nMy old adviser worked in something close to IKKT matrix models and at one point he complained that apart from some Japanese folks, nobody would really be thinking much about their work, or aid developing it. I have to say that I found the whole situation pretty sad and it was one of the reasons I went to the DLR (\"NASA\" in Germany) after my more academic work.</p>",
        "id": 197999218,
        "sender_full_name": "Nikolaj Kuntner",
        "timestamp": 1589838193
    },
    {
        "content": "<p>Some people want to make their field a hot topic.  Some ride a field to fame when it becomes hot, and don't much mind working harder to stay at the forefront, or becoming an \"organizer\" of the sort I mentioned: somehow who plays a socially central role in the field even if they're not having the most original ideas.</p>",
        "id": 198000071,
        "sender_full_name": "John Baez",
        "timestamp": 1589838748
    },
    {
        "content": "<p>Other people like to think about many things and don't like how staying \"important\" requires more and more energy as a field becomes \"hot\", leaving less time for free exploration.</p>",
        "id": 198000153,
        "sender_full_name": "John Baez",
        "timestamp": 1589838817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/197941106\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/197910625\">said</a>:</p>\n<blockquote>\n<p>I spent some time trying to figure out what shifted Eilenberg, not just to change the field, but to change it from a place where he built a mountain, to this work which is basically a misunderstanding of what computation is about. Imagining that computation will benefit from wrestling state machines into algebraic signatures. So now if you look around you, Eilenberg's simplicial this and singular that is in everything (including things that he wouldn't dreamt of) while the whole work on automata is of no consequence whatsoever. </p>\n</blockquote>\n<p>For a work of no consequence, Eilenberg's 1974 book on <em>Automata, Languages and Machines</em> sure got a whole truckload of citations.</p>\n<p><a href=\"/user_uploads/21317/lc7o-CG1xHWF69LZbT86Zh_z/noconseq.png\">The book of no consequence</a></p>\n</blockquote>\n<p>People cite a lot in CS. 5000 citations in almost 50 years is not a lot. Hopcroft and Ullman's automata book is at 20,000. Milners CCS which is some 20 years younger is at 12,000. It probably woulnd't be fair to bring up algorithmics book. But I don't suppose you really want to conflate conceptual consequences of a theory with how many people like it. Almost any book, say, about model checking has more than 50,000 citations. Not textbooks.</p>\n<p>If you see anything of conceptual consequence in Eilenberg's approach to automata, whether it became popular or not, I will listen. I even did my best to read the manuscript of vol 3, which is somewhere on the web...</p>",
        "id": 198024477,
        "sender_full_name": "dusko",
        "timestamp": 1589867421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"275920\">John Baez</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/197996679\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> - Did you succeed in finding any historical information that would shed light on why Eilenberg quit working on algebraic topology and started work on finite state machines?</p>\n</blockquote>\n<p>I am not good at finding historic information, but I talked to Eilenberg a bit back in Como and in Louvain-la-Neuve; or more precisely, he talked to me, apparently because I physically reminded him of Grothendieck. I was trying to understand his motivations from those conversatins. I have been trying to connect the dots for many years. He was annoyed with how things were going in every possible abstract direction. MacLane was very annoyed that mathematicians were publishing papers in CS, in what seemed like shallow problems. One hypothesis that I have is that Eilenberg was trying to make CS into a decent part of algebra. The influence of Lawvere's very simplistic but spectacularly consequential observations were also a confusing influence. It seemed like everything should be expressed in very simple axioms, orelse it will explode in SGA style... But this is just my impression. </p>\n<p>Another hypothesis is that hugely successful theories leave people under the impression that all theories must be in that shape. It happened to Einstein. It happened to von Neumann. It takes being a Goedel or a Turing to not be influenced by what worked yesterday, and look at every new problem in a new light.</p>\n<p>Sorry, I am rambling. I cannot say that I understand these things. But they are sort of related with what is it that we do when we do math.</p>",
        "id": 198025181,
        "sender_full_name": "dusko",
        "timestamp": 1589868532
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/198024477\">said</a>:</p>\n<blockquote>\n<p>If you see anything of conceptual consequence in Eilenberg's approach to automata, whether it became popular or not, I will listen. I even did my best to read the manuscript of vol 3, which is somewhere on the web...</p>\n</blockquote>\n<p>I listed a couple <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/197942090\">here</a>. The <a href=\"https://scholar.google.com/scholar?cites=11264201658547053084\">works</a> that cited his book include works in control theory, combinatorics and semigroup theory.</p>\n<p>I mean, it's probably of no \"conceptual\" consequence, compared to categories, but it's still surprising to me that his work found applications in software testing.</p>",
        "id": 198030378,
        "sender_full_name": "(=_=)",
        "timestamp": 1589873573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"294557\">@dusko</span> - Interesting.  I also think that what famous people do for their \"second act\" will often not be as good as what they did in their first act.  It was, after all, their first act that made them famous.  Sting by himself wasn't as good as The Police, and Paul McCartney's stuff with Wings was not nearly as good as the Beatles.  But they <em>had to</em> cut loose, for reasons like those I mentioned.  If you keep doing the same thing you feel pressured to keep out-doing yourself: \"just the same as before, only better\".   Also, personal frictions may cause teams to break up.  I have no idea if Eilenberg got tired of working with Mac Lane; that might have played a role, or it might have had nothing to do with his change of direction.</p>",
        "id": 198110147,
        "sender_full_name": "John Baez",
        "timestamp": 1589914108
    },
    {
        "content": "<p>Let's be honest, age doesn't help either. And the old days come after the young days.</p>",
        "id": 198123928,
        "sender_full_name": "Nikolaj Kuntner",
        "timestamp": 1589921035
    },
    {
        "content": "<p>It's sorta funny that this is the only topic in this stream.</p>",
        "id": 198256945,
        "sender_full_name": "Joe Moeller",
        "timestamp": 1590008541
    },
    {
        "content": "<p>lol</p>",
        "id": 198258186,
        "sender_full_name": "sarahzrf",
        "timestamp": 1590009249
    },
    {
        "content": "<p>It is a rich topic full of ideas. That should give you an idea of how deep the interaction between CS and CT has been.</p>",
        "id": 198291115,
        "sender_full_name": "(=_=)",
        "timestamp": 1590043408
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281274\">Nikolaj Kuntner</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/198123928\">said</a>:</p>\n<blockquote>\n<p>Let's be honest, age doesn't help either. And the old days come after the young days.</p>\n</blockquote>\n<p>Age definitely helps if you want to become a historian. Math may get harder, but you the stories get better. Schroedinger noticed that aging physicists don't become historians but biologists. In any case, most old people realize that they had spent their life on a wrong science.</p>",
        "id": 198417886,
        "sender_full_name": "dusko",
        "timestamp": 1590136639
    },
    {
        "content": "<p>The wrong science, is that so? <br>\nOf course there's the \"young man's game\" quote, but I always mostly thought it's because people get to get kids and then a lot of time is fixed for that effort.</p>",
        "id": 198428339,
        "sender_full_name": "Nikolaj Kuntner",
        "timestamp": 1590144872
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/198024477\">said</a>:</p>\n<blockquote>\n<p>If you see anything of conceptual consequence in Eilenberg's approach to automata, whether it became popular or not, I will listen. I even did my best to read the manuscript of vol 3, which is somewhere on the web...</p>\n</blockquote>\n<p>This has already been answered previously, but really, I'm wondering if you're asking in good faith. (Though there might be a culture shock: as an undergrad, I learned about syntactic monoids in my theory of computation course, so this stuff always seemed like a classical TCS topic.) I mean, look at the program of any recent edition of LICS or ICALP, and you will find several papers using the tools of algebraic language theory.</p>\n<p>I'm not even going to argue about \"applications to software testing\". This stuff is super interesting as pure math. Do you believe finite group theory is \"of any consequence\", intellectually speaking? Would it still be relevant if there were no applications to e.g. chemistry? If so, then why would finite monoids be fundamentally less worthy than finite groups?</p>",
        "id": 198966664,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1590622191
    },
    {
        "content": "<p>To work on automata instead of complexity theory is not \"to misunderstand what computation is about\", it's just focusing on a field where you can actually prove separation results.</p>",
        "id": 198966794,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1590622287
    },
    {
        "content": "<p>A field where a lot of stuff is computable, too: for instance the decidability of Monadic Second-Order Logic over various infinitary structures is among the most powerful decidability results that exist in the theory of formal verification (but to be fair it doesn't always lead to practically tractable algorithms). Algebraic approaches have something to say about this, for instance they can give a proof of McNaughton's determinization theorem, and the latter is useful to synthesize stream transducers from MSO specifications (the so-called Church synthesis problem - is Alonzo Church also one of those guys whose later work is of no consequence?).</p>",
        "id": 198967494,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1590622895
    },
    {
        "content": "<p>I think the suggestion was more that the work Eilenberg did ended up not having much impact on automata theory. My sense was that it might have, but honestly I don't know the field enough to say! Also, it may be that it should have, but did not, or it may be that it did have such an impact, but only indirectly or... etc.</p>",
        "id": 198967671,
        "sender_full_name": "Gershom",
        "timestamp": 1590623040
    },
    {
        "content": "<p>Well, for example Eilenberg's variety theorem is pretty important in justifying the idea of algebraic language theory: it tells you that well-behaved classes of finite monoids correspond exactly to well-behaved subclasses of regular languages.</p>",
        "id": 198967873,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1590623223
    },
    {
        "content": "<p>I interpreted (perhaps wrongly) <span class=\"user-mention\" data-user-id=\"294557\">@dusko</span> as saying more generally that using algebraic tools in automata theory was not interesting. That is of course a subjective judgment, but at least there are enough people who find that interesting to keep the field active to this day.</p>",
        "id": 198968031,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1590623383
    },
    {
        "content": "<p>I sensed another thing at work: Eilenberg's work in algebraic topology was <em>so incredibly important</em> to mathematics that one might hope his work in computer science would be <em>equally</em> important.  I don't think it's <em>that</em> important.</p>",
        "id": 198968233,
        "sender_full_name": "John Baez",
        "timestamp": 1590623570
    },
    {
        "content": "<p>But I don't think we should be surprised, after someone does something truly amazing, that the next thing they do is less amazing.</p>",
        "id": 198968252,
        "sender_full_name": "John Baez",
        "timestamp": 1590623607
    },
    {
        "content": "<p>In other words, I don't think it requires any special explanation.</p>",
        "id": 198968272,
        "sender_full_name": "John Baez",
        "timestamp": 1590623623
    },
    {
        "content": "<p>OK, that I can agree with <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> It's just the regression towards the mean of a random variable :p</p>",
        "id": 198968365,
        "sender_full_name": "Lê Thành Dũng (Tito) Nguyễn",
        "timestamp": 1590623703
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"278835\">Nguyễn Lê Thành Dũng</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/history.20of.20cs.20.2B.20ct/near/198968031\">said</a>:</p>\n<blockquote>\n<p>I interpreted (perhaps wrongly) <span class=\"user-mention silent\" data-user-id=\"294557\">dusko</span> as saying more generally that using algebraic tools in automata theory was not interesting. That is of course a subjective judgment, but at least there are enough people who find that interesting to keep the field active to this day.</p>\n</blockquote>\n<p>If you were wrong in your interpretation, I don't want to be right. Maybe it was meant as a humorous dig, but I'd go with John by saying that just because Eilenberg struck out with category theory doesn't mean that he should be expected to revolutionise automata theory. And I do think that applications to software testing <em>are</em> significant and often overlooked.</p>",
        "id": 198982705,
        "sender_full_name": "(=_=)",
        "timestamp": 1590641839
    }
]