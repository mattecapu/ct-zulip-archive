[
    {
        "content": "<p>Funny that. (<a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/History.20of.20Ideas.20AMA.3A.20Dusko.20Pavlovic\">referring to Dusko's story</a>) I was trying to do an MPhil in Philosophy in London in the early 1990s without money, so I too had to get into squatting. I was reading Wittgenstein and got through Gareth Evans' \"The Varieties of Reference\" a 500 page or so book on Reference wondering if that would ever come in useful. I was not lucky with the squatting, It ended up being a huge amount of work (there was no internet then btw. I came across a squat 10 years or so ago in Paris, a completely different scene: they were completely connected, with computers, internet, organized events on open source software, and theater to keep the local authority happy, etc...)  So I moved to a coop, which was a lot saner life, around Totenham Hale in the middle of a park, next to a canal, under two high voltage electric wires... After a while I remembered I could program and and got a short job where I earned more than my whole years \"grant\" in a couple of weeks. That's when I also remembered that the reason I had not touched a computer was that if I ever did I would not get away from them. <br>\nIt turned out that 15 years later the work on logic and reference was relevant... as I discovered the semantic web.</p>",
        "id": 198420414,
        "sender_full_name": "Henry Story",
        "timestamp": 1590138510
    },
    {
        "content": "<p>Now I started a PhD a bit by accident trying to build a consortium to build Tim Berners-Lee's Solid platform 4 years or so ago. Now I am finding it hard to find a job. Apparently I am an academic, and I don't have recent work experience. On most interviews I have gone to, they give out basic programming tests... (even though they can check out all my github repositories).</p>",
        "id": 198421020,
        "sender_full_name": "Henry Story",
        "timestamp": 1590139041
    },
    {
        "content": "<p>I think there may be a lot of fear that you may take the manager's job who is trying to employ you. It is tricky situation: you can't really say that you just want the job because you want to earn some money, as they want people to be super-enthusiastic about the job. You can't tell the manager that you don't want his job because there are more interesting things to do, because then that would show you are not super enthusiastic, and 2) that you think the manager has a boring job. <br>\nBut this is getting a bit off topic :-)</p>",
        "id": 198422499,
        "sender_full_name": "Henry Story",
        "timestamp": 1590140170
    },
    {
        "content": "<p>Anyway, that's just some recent experience trying to get work in the UK to supplement my thesis income. I think the US especially California or Massachusets are different. People there actually know what computing is about. In London they know about finance. Paris fashion and politics. And Bavaria where I am now cars and beer.</p>",
        "id": 198423529,
        "sender_full_name": "Henry Story",
        "timestamp": 1590141051
    },
    {
        "content": "<p>Sun Microsystems did a good thing with Java, by setting up Java Certifications. I actually went through that in 2002 or so after having programmed for it for 5 years and learnt a lot doing it. I am surprised there are not more of these industry schemes, to reduce the cost and length of interviews. <br>\nThere is a Scala exercise page with <a href=\"https://www.scala-exercises.org/cats/semigroup\">CATS questions</a></p>",
        "id": 198424759,
        "sender_full_name": "Henry Story",
        "timestamp": 1590142007
    },
    {
        "content": "<p>I suppose I should start by saying that I learnt programming on a DEC2020 at the INSEAD business school where my father was teaching Political Science around 1980. I wanted to solve the Rubik's cube, so I thought I could just ask the computer how it worked. I was told it was not that easy, and so I was shown Basic. My first program had only goto statements, and every time I wanted to change one line of code I had to readjust all the gotos to point to the right lines. So I was really amazed when I discovered Pascal that none of this was needed. That led me to wonder how many better languages there could be out there and I discovered Lisp. </p>\n<p>I went to Paris at one point to the Centre Mondial, that had been set up, where they had Lisp machines, Dec2040s and even the beginning of the internet. Lisp machines were amazing. They had color screens that could be pivoted. But they were very expensive and a few older kids had better reasons to access them. <br>\nAt the time computers were not taught in school so none of what I learnt could be justified academically.<br>\nAlso everything was moving so fast. This became very clear when the Apple Macintosh came out around 1984, which had a color screen, windowing, beautiful fonts (not just a 40x80 character screens if the vt220).<br>\nI think because of exposure to Lisp, I ended up being really attracted to Philosophy. So I took a French Baccalaureate in Philosophy and Maths, where perhaps I should have taken mathematics. I think I read all of Nietzsche in English, German and French and a lot of Camus. My writing and French not being that good, my results were only passable. So I did A levels in the UK in Maths, Physics and Literature, trying to balance the humanities and the sciences. I was very good at mathematics, but I think I was doing it in an overly mechanical manner, so I lost the intuitions, even though I got full grades. </p>\n<p>So I went back to Philosophy for a bachelors at Kings College London. Analytic philosophy was closer to maths but many of the writers were very dull, and so far from the french philosophers we had learnt that it was really difficult to recognize the area. I had a friend who was really interested in Donald Davidson, who build up a philosophy on Traski's Convention T.  </p>\n<p>It was only with David Lewis that I started understanding how all these themes connected up. The emphasis on endless fields of possibilities and how to reason about those logically woke me up. Finally one could tie imagination and logic together.  So I read a large number of his papers.  <br>\nAnother philosopher I came across t the end of the BA was Ruth Garett Millikan \"Language, Thought and Other Biological Categories\", whose evolutionary way of thinking of language, extending Donald Davidson, linking language to the biological, started making sense of Nietzsche's insights, and gave a place to history, which I could not ignore having listened to my father's analysis of European and World politics.</p>\n<p>I tried to do an MPhil but without money it was very difficult. I read a lot of Wittgenstein  and Gareth Evans on Reference - as he had been the star at Birbeck college - he died young. It was weird seeing such a long book just on the theme of reference. At some point I remembered I could program, and found a few jobs which were very well paid. One doing a simulation of Southampton in Visual Basic to find out if people would find it useful to have information at bus stops on when the next bus would come (which seemed obvious to me). </p>\n<p>But I thought I should learn computing a bit more officially (having self taught myself everything up to then) and so I did a one year course at Imperial College. Suddenly I was back in the atmosphere of the Centre Mondial in Paris. A lot of enthusiastic students building fun things. One student showed us Java as it came out in Alpha release, and so I decided to learn Java an OO programming. I wrote a fractal App exercise we had to write in Java. Then I looked for jobs in the UK but none of the job agencies had access to the web and so could not see my app. I heard about the first JavaOne conference in San Francisco, and I got a free ticket as a student. So I flew over and discovered a completely different techno optimistic world. </p>\n<p>I visited Berkley and they told me about the big job fair in San Jose. Instead of the job fair in London with perhaps at most 40 companies, mostly military, the San Jose fair had something between 500 and 1000 companies. I gave them all my CV with a link to the Java Applet, and I got a Job at AltaVista.</p>",
        "id": 198724370,
        "sender_full_name": "Henry Story",
        "timestamp": 1590474622
    },
    {
        "content": "<p>Yes, I think I read a bit about that in Scientific American at the time. But I never got round to really solving the cube that way. <span class=\"user-mention\" data-user-id=\"275920\">@John Baez</span> posted a link to this great Moebius Rubix cube the other day.<br>\n<a href=\"https://twitter.com/i/status/1264383087938465792\">https://twitter.com/i/status/1264383087938465792</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/i/status/1264383087938465792\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/666406258451152896/ROaK4lhC_normal.png\"></a><p>メビウスルービックキューブというものを考案しました。\n権利は放棄しますので誰でも具現化OKです <a href=\"https://t.co/9ZjgM6oDFf\">https://twitter.com/jagarikin/status/1264383087938465792/photo/1</a></p><span>- じゃがりきん (@jagarikin)</span></div></div>",
        "id": 198724487,
        "sender_full_name": "Henry Story",
        "timestamp": 1590474833
    },
    {
        "content": "<p>I was really interested in using the internet to program, so I really wanted to understand Java, as that seemed offered the promise of doing things like agents and also not getting lost in hardware details. So I worked on a user interface for a cloud tagging app to help people using the search engine refine their search. I was trying to get it to work on Windows 3.1 as well as windows 95, unix. We gave up on windows 3.1. </p>\n<p>At some point Louis Monier who had written the crawler and was CTO came in with a project for a translation service. They had code from Systran that had been working on translation since the 1960ies, initially written in assembler macros, then ported to C. There were some scripts to run it with some c and relying heavily on unix. I improved those tested it, and we launched it quickly to see if it was of interest. I named it the BabelFish as an indicator that one should be careful about the quality of the translation. I then spent a lot of time trying to write a more scalable server in Java. It was actually too early to do that at the time. Java 1.2 that came out in 1998 was a big improvement.</p>",
        "id": 198725191,
        "sender_full_name": "Henry Story",
        "timestamp": 1590475635
    },
    {
        "content": "<p>yes, he together with Mike Burrows wrote the initial AltaVista. Mike Burrows wrote the engine itself. I only recently discovered that he was also  famous for <a href=\"https://dl.acm.org/doi/abs/10.1145/155183.155225\">A calculus for access control in distributed systems</a></p>",
        "id": 198725705,
        "sender_full_name": "Henry Story",
        "timestamp": 1590476212
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/History.20of.20Ideas.20AMA.3A.20Henry.20Story/near/198725808\">said</a>:</p>\n<blockquote>\n<p>Oh, I had heard of SYSTRAN, but had no idea it provided the technology for BabelFish. I liked using it FWIW.</p>\n</blockquote>\n<p>I think their name was always there on the page, initially in small, and then larger.<br>\nI ended up meeting Douglas Adams to make sure we could use the name and was happy to  offer him some visibility. In the end I think we added a link to his h2g2 encyclopedia. <br>\n<a href=\"/user_uploads/21317/coRrup-vj7QgG2nE2E9hMxpY/BabelWow1.gif\">BabelWow1.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/21317/coRrup-vj7QgG2nE2E9hMxpY/BabelWow1.gif\" title=\"BabelWow1.gif\"><img src=\"/user_uploads/21317/coRrup-vj7QgG2nE2E9hMxpY/BabelWow1.gif\"></a></div>",
        "id": 198730889,
        "sender_full_name": "Henry Story",
        "timestamp": 1590480035
    },
    {
        "content": "<p>I learned a lot about OO programming, network programming, parsing, and threading. But really the tools out of the box in Java were not the right ones. To do it correctly I would have needed to learn to program NIO, which allows one thread to open thousands of connections, but is very low level and difficult to use. That is what my colleague did who rewrote the Luis Monier's crawler in C to be much more efficient.  He was known as spiderman.  <br>\nNowadays very scalable servers can be built out of the box using frameworks such as <a href=\"https://akka.io/\">Akka</a> which are actor frameworks that use NIO under the hood. There the tricky thing is learning how to think in terms of actors and message passing. <br>\nAkka builds on <a href=\"https://www.scala-lang.org/\">Scala</a> a language developed by Odersky and which came out of work he did with Wadler on improving collections in Java <a href=\"https://dl.acm.org/doi/abs/10.1145/263699.263715\">see Pizza into Java: translating theory into practice</a>. Scala emerged out of Pizza. It added strong typing and dependent types, allowing a lot of the code to be tested for correctness by the compiler. But those frameworks represents many man years of investment. And I only came to those around 2010.<br>\nI did manage to get the whole BabelFish translation service deployed in Java in the end, using a framework that had done the NIO work. And that allowed us to quadruple the number of translations per day to 2 million a day.<br>\nAh yes, the other thing I learnt the hard way, is the importance of testing, the difficulty of deployment, ...</p>",
        "id": 198731700,
        "sender_full_name": "Henry Story",
        "timestamp": 1590480532
    },
    {
        "content": "<p>At the time I was trying to avoid theory fearing that if I did get involved, I would not have time to build applications. I was hoping the theory and their implementations  of them in tools would be done by others so that I could use them to think of new ways of using the internet.  Indeed just learning how to use the tools,  keeping up with the standards,  learning the different programming styles, etc... is a full time job. <br>\nBut of course I ended up reading theory indirectly, as it gets popularized and simplified for developers.</p>",
        "id": 198733875,
        "sender_full_name": "Henry Story",
        "timestamp": 1590481873
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/History.20of.20Ideas.20AMA.3A.20Henry.20Story/near/198725532\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/History.20of.20Ideas.20AMA.3A.20Henry.20Story/near/198725191\">said</a>:</p>\n<blockquote>\n<p>At some point Louis Monier who had written the crawler and was CTO </p>\n</blockquote>\n<p><a href=\"https://www.linkedin.com/in/louismonier\">This</a> <a href=\"https://en.wikipedia.org/wiki/Louis_Monier\">guy</a>? <span class=\"user-mention silent\" data-user-id=\"276656\">Valeria de Paiva</span> joined Cuil shortly before he left his position as VP of Products there. What a small world!</p>\n</blockquote>\n<p>yes, I know both Louis and Mike Burrows (Mike from Cambridge, Louis from Cuil). a small world indeed.</p>",
        "id": 198798580,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1590516031
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276424\">Rongmin Lu</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/History.20of.20Ideas.20AMA.3A.20Henry.20Story/near/198725960\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"281126\">Henry Story</span> <a href=\"#narrow/stream/232163-learning.3A-history.20of.20ideas/topic/History.20of.20Ideas.20AMA.3A.20Henry.20Story/near/198725705\">said</a>:</p>\n<blockquote>\n<p>Mike Burrows wrote the engine itself. I only recently discovered that he was also  famous for <a href=\"https://dl.acm.org/doi/abs/10.1145/155183.155225\">A calculus for access control in distributed systems</a></p>\n</blockquote>\n<p>Good grief, Abadi and Plotkin were already co-authors back in 1993! They recently wrote <em><a href=\"https://arxiv.org/abs/1911.04523\">A Simple Differentiable Programming Language</a></em>.</p>\n</blockquote>\n<p>small correction @Rongmin Martin Abadi and Gordon Plotkin were already collaborating in 1990:<br>\nA per model of polymorphism and recursive types<br>\nM Abadi, GD Plotkin<br>\n[1990] Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science</p>",
        "id": 198813669,
        "sender_full_name": "Valeria de Paiva",
        "timestamp": 1590523092
    }
]